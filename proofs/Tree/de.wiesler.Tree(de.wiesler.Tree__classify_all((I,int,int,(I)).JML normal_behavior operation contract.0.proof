\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Aug 05 00:14:15 CEST 2022
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , finalFields-finalFields\\:immutable , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../src";

\proofObligation "#Proof Obligation Settings
#Fri Aug 05 00:14:15 CEST 2022
contract=de.wiesler.Tree[de.wiesler.Tree\\:\\:classify_all([I,int,int,[I)].JML normal_behavior operation contract.0
name=de.wiesler.Tree[de.wiesler.Tree\\:\\:classify_all([I,int,int,[I)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "1" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "2" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "3" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "4" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "5" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "6" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "7" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "8" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "9" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))

(autoModeTime "363584")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "translateJavaSubInt" (formula "1") (term "1,0,1,0,1,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "12"))
(rule "notLeft" (formula "2"))
(rule "notLeft" (formula "15"))
(rule "notLeft" (formula "15"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "11"))
(rule "eqSymm" (formula "22") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "20"))
 (builtin "One Step Simplification" (formula "4"))
(rule "replace_known_right" (formula "5") (term "0") (ifseqformula "19"))
 (builtin "One Step Simplification" (formula "5"))
(rule "polySimp_elimSub" (formula "10") (term "1"))
(rule "polySimp_addComm0" (formula "10") (term "1"))
(rule "disjointDefinition" (formula "16"))
 (builtin "One Step Simplification" (formula "16"))
(rule "notLeft" (formula "16"))
(rule "disjointDefinition" (formula "15"))
 (builtin "One Step Simplification" (formula "15"))
(rule "notLeft" (formula "15"))
(rule "eqSymm" (formula "17"))
(rule "disjointDefinition" (formula "14"))
 (builtin "One Step Simplification" (formula "14"))
(rule "notLeft" (formula "14"))
(rule "eqSymm" (formula "16"))
(rule "disjointDefinition" (formula "13"))
 (builtin "One Step Simplification" (formula "13"))
(rule "notLeft" (formula "13"))
(rule "eqSymm" (formula "15"))
(rule "disjointDefinition" (formula "11"))
 (builtin "One Step Simplification" (formula "11"))
(rule "notLeft" (formula "11"))
(rule "disjointDefinition" (formula "11"))
 (builtin "One Step Simplification" (formula "11"))
(rule "notLeft" (formula "11"))
(rule "eqSymm" (formula "13"))
(rule "inEqSimp_commuteLeq" (formula "22") (term "0,1,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,0,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "9"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "8"))
(rule "assignment" (formula "22") (term "1"))
 (builtin "One Step Simplification" (formula "22"))
(rule "methodBodyExpand" (formula "22") (term "1") (newnames "heapBefore_classify_all,savedHeapBefore_classify_all,_beginBefore_classify_all,_endBefore_classify_all,_indicesBefore_classify_all,_valuesBefore_classify_all"))
 (builtin "One Step Simplification" (formula "22"))
(rule "methodCallUnfoldArguments" (formula "22") (term "1"))
(rule "variableDeclarationAssign" (formula "22") (term "1"))
(rule "variableDeclaration" (formula "22") (term "1") (newnames "var"))
(rule "assignment" (formula "22") (term "1"))
 (builtin "One Step Simplification" (formula "22"))
(rule "variableDeclarationAssign" (formula "22") (term "1"))
(rule "variableDeclaration" (formula "22") (term "1") (newnames "var_1"))
(rule "assignment" (formula "22") (term "1"))
 (builtin "One Step Simplification" (formula "22"))
(rule "variableDeclarationAssign" (formula "22") (term "1"))
(rule "variableDeclaration" (formula "22") (term "1") (newnames "var_2"))
(rule "assignment_read_length" (formula "22"))
(branch "Normal Execution (_indices != null)"
    (builtin "One Step Simplification" (formula "22"))
   (rule "variableDeclarationAssign" (formula "22") (term "1"))
   (rule "variableDeclaration" (formula "22") (term "1") (newnames "var_3"))
   (rule "applyEq" (formula "22") (term "0,1,0") (ifseqformula "10"))
   (rule "compound_subtraction_1" (formula "22") (term "1") (inst "#v=x"))
   (rule "variableDeclarationAssign" (formula "22") (term "1"))
   (rule "variableDeclaration" (formula "22") (term "1") (newnames "x"))
   (rule "remove_parentheses_right" (formula "22") (term "1"))
   (rule "compound_shiftleft_2" (formula "22") (term "1") (inst "#v0=x_1") (inst "#v1=x_2"))
   (rule "variableDeclarationAssign" (formula "22") (term "1"))
   (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_1"))
   (rule "assignment" (formula "22") (term "1"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "variableDeclarationAssign" (formula "22") (term "1"))
   (rule "variableDeclaration" (formula "22") (term "1") (newnames "x_2"))
   (rule "assignment_read_attribute_this_final" (formula "22"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "assignmentShiftLeftInt" (formula "22") (term "1"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "assignmentSubtractionInt" (formula "22") (term "1"))
   (branch "Overflow check"
       (builtin "One Step Simplification" (formula "22"))
      (rule "closeTrue" (formula "22"))
   )
   (branch "Usage"
       (builtin "One Step Simplification" (formula "22"))
      (rule "translateJavaSubInt" (formula "22") (term "0,1,0"))
      (rule "polySimp_elimSub" (formula "22") (term "0,1,0"))
      (rule "mul_literals" (formula "22") (term "1,0,1,0"))
      (rule "polySimp_addComm0" (formula "22") (term "0,1,0"))
       (builtin "Use Operation Contract" (formula "22") (newnames "heapBefore_fill,exc_0,heapAfter_fill,anon_heap_fill") (contract "de.wiesler.Functions[de.wiesler.Functions::fill([I,int,int,int)].JML normal_behavior operation contract.0"))
      (branch "Post (fill)"
          (builtin "One Step Simplification" (formula "24"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "translateJavaSubInt" (formula "14") (term "2,1,0,0"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "16"))
         (rule "polySimp_elimSub" (formula "14") (term "2,1,0"))
         (rule "mul_literals" (formula "14") (term "1,2,1,0"))
         (rule "polySimp_addComm1" (formula "14") (term "2,1,0"))
         (rule "polySimp_addComm0" (formula "14") (term "0,2,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
         (rule "blockEmpty" (formula "26") (term "1"))
         (rule "variableDeclarationGhostAssign" (formula "26") (term "1"))
         (rule "variableDeclarationGhost" (formula "26") (term "1") (newnames "exp"))
         (rule "assignment_read_attribute_this_final" (formula "26"))
          (builtin "One Step Simplification" (formula "26"))
         (rule "commute_and" (formula "16") (term "0,0"))
         (rule "for_to_while" (formula "26") (term "1") (inst "#innerLabel=_label0") (inst "#outerLabel=_label1"))
         (rule "variableDeclarationAssign" (formula "26") (term "1"))
         (rule "variableDeclaration" (formula "26") (term "1") (newnames "d"))
         (rule "compound_shiftleft_2" (formula "26") (term "1") (inst "#v0=x") (inst "#v1=x_1"))
         (rule "variableDeclarationAssign" (formula "26") (term "1"))
         (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_3"))
         (rule "assignment" (formula "26") (term "1"))
          (builtin "One Step Simplification" (formula "26"))
         (rule "variableDeclarationAssign" (formula "26") (term "1"))
         (rule "variableDeclaration" (formula "26") (term "1") (newnames "x_4"))
         (rule "assignment_read_attribute_this_final" (formula "26"))
          (builtin "One Step Simplification" (formula "26"))
         (rule "assignmentShiftLeftInt" (formula "26") (term "1"))
          (builtin "One Step Simplification" (formula "26"))
         (rule "arrayLengthIsAShort" (formula "10") (term "0"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "true_left" (formula "10"))
         (rule "arrayLengthNotNegative" (formula "10") (term "0"))
         (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
         (rule "loopScopeInvDia" (formula "27") (term "1") (newnames "exp_0,d_0,o,f") (inst "anon_heap_LOOP=anon_heap_LOOP_0") (inst "anon_savedHeap_LOOP=anon_savedHeap_LOOP_0") (inst "anon_permissions_LOOP=anon_permissions_LOOP_0") (inst "#heapBefore_LOOP=h") (inst "#savedHeapBefore_LOOP=h_1") (inst "#permissionsBefore_LOOP=h_2") (inst "#variant=x") (inst "#x=x_1"))
         (branch "Invariant Initially Valid"
            (rule "andRight" (formula "27"))
            (branch "Case 1"
               (rule "andRight" (formula "27"))
               (branch "Case 1"
                  (rule "andRight" (formula "27"))
                  (branch "Case 1"
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "translateJavaSubInt" (formula "27") (term "1,1,1,0"))
                     (rule "translateJavaSubInt" (formula "27") (term "0,0,1,0"))
                     (rule "allRight" (formula "27") (inst "sk=i_0"))
                     (rule "impRight" (formula "27"))
                     (rule "andLeft" (formula "1"))
                     (rule "polySimp_elimSub" (formula "29") (term "0,0"))
                     (rule "mul_literals" (formula "29") (term "1,0,0"))
                     (rule "polySimp_elimSub" (formula "29") (term "1,1"))
                     (rule "mul_literals" (formula "29") (term "1,1,1"))
                     (rule "polySimp_addComm0" (formula "29") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "29") (term "1,1"))
                     (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulAssoc" (formula "19") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "1"))
                     (rule "inEqSimp_commuteLeq" (formula "29") (term "0"))
                     (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "13"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                     (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1"))
                     (rule "polySimp_elimOne" (formula "12") (term "1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "0,1,0,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                     (rule "mul_literals" (formula "2") (term "0,0,1"))
                     (rule "pullOutSelect" (formula "28") (term "0,1") (inst "selectSK=arr_0"))
                     (rule "applyEq" (formula "29") (term "0,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")) (ifInst ""  (formula "8")))
                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
                     (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0"))
                     (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "29") (term "0,0") (ifseqformula "1"))
                     (rule "applyEqReverse" (formula "29") (term "0,1") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                     (rule "times_zero_1" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                     (rule "add_literals" (formula "11") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0"))
                     (rule "qeq_literals" (formula "11") (term "0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "nnf_imp2or" (formula "18") (term "0"))
                     (rule "nnf_notAnd" (formula "18") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "18") (term "1,0,0"))
                     (rule "times_zero_1" (formula "18") (term "1,0,0,1,0,0"))
                     (rule "add_zero_right" (formula "18") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                     (rule "mul_literals" (formula "18") (term "1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "18") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "0,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "18") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,0,0"))
                     (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "13"))
                      (builtin "One Step Simplification" (formula "13"))
                     (rule "translateJavaSubInt" (formula "13") (term "3,0,1"))
                     (rule "andLeft" (formula "13"))
                     (rule "andLeft" (formula "13"))
                     (rule "andLeft" (formula "13"))
                     (rule "andLeft" (formula "13"))
                     (rule "andLeft" (formula "15"))
                     (rule "andLeft" (formula "13"))
                     (rule "andLeft" (formula "13"))
                     (rule "andLeft" (formula "15"))
                     (rule "notLeft" (formula "13"))
                     (rule "notLeft" (formula "13"))
                     (rule "polySimp_elimSub" (formula "19") (term "3,0"))
                     (rule "mul_literals" (formula "19") (term "1,3,0"))
                     (rule "polySimp_addComm0" (formula "19") (term "3,0"))
                     (rule "inEqSimp_commuteLeq" (formula "18"))
                     (rule "inEqSimp_commuteLeq" (formula "16"))
                     (rule "inEqSimp_commuteLeq" (formula "17"))
                     (rule "inEqSimp_commuteLeq" (formula "13"))
                     (rule "applyEq" (formula "35") (term "1,1,1") (ifseqformula "15"))
                     (rule "applyEq" (formula "17") (term "1") (ifseqformula "15"))
                     (rule "applyEq" (formula "19") (term "1,3,0") (ifseqformula "15"))
                     (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                     (rule "applyEq" (formula "18") (term "1") (ifseqformula "15"))
                     (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "19") (term "0"))
                     (rule "replace_known_right" (formula "19") (term "0,0,0") (ifseqformula "25"))
                      (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "4")) (ifInst ""  (formula "20")))
                     (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "20") (term "0") (inst "j=j") (inst "i=i"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                     (rule "nnf_imp2or" (formula "20") (term "0"))
                     (rule "nnf_notAnd" (formula "20") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                     (rule "mul_literals" (formula "20") (term "1,0,0,0"))
                     (rule "nnf_imp2or" (formula "20") (term "0,1,0"))
                     (rule "nnf_notAnd" (formula "20") (term "0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,1,0"))
                     (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "19") (term "0") (inst "i=i"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "translateJavaAddInt" (formula "19") (term "0,2,1,1,0"))
                     (rule "translateJavaSubInt" (formula "19") (term "1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "19") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "19") (term "1,1,1,0,0"))
                     (rule "polySimp_addComm0" (formula "19") (term "0,2,1,1,0"))
                     (rule "polySimp_addComm1" (formula "19") (term "1,1,0,0"))
                     (rule "add_literals" (formula "19") (term "0,1,1,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "19") (term "1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                     (rule "nnf_imp2or" (formula "19") (term "0"))
                     (rule "nnf_notAnd" (formula "19") (term "0,0"))
                     (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                     (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                     (rule "commute_or" (formula "24") (term "0,0"))
                     (rule "commute_and" (formula "36"))
                     (rule "inEqSimp_and_antiSymm0" (formula "36"))
                     (rule "commute_or" (formula "20") (term "0,0,1,0"))
                     (rule "arrayLengthNotNegative" (formula "11") (term "0"))
                     (rule "arrayLengthIsAShort" (formula "12") (term "0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                     (rule "arrayLengthIsAShort" (formula "20") (term "0"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "true_left" (formula "20"))
                     (rule "all_pull_out3" (formula "22") (term "0"))
                     (rule "shift_paren_or" (formula "22") (term "0,0"))
                     (rule "shift_paren_or" (formula "22") (term "0,0,0"))
                     (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                     (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "true_left" (formula "19"))
                     (rule "allLeft" (formula "27") (inst "t=i_0"))
                     (rule "replaceKnownSelect_taclet0000010_0" (formula "27") (term "0,1"))
                     (rule "replaceKnownAuxiliaryConstant_taclet0000010_1" (formula "27") (term "0,1"))
                     (rule "replace_known_right" (formula "27") (term "1") (ifseqformula "40"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "27") (term "0,0"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "3"))
                     (rule "andLeft" (formula "27"))
                     (rule "inEqSimp_homoInEq1" (formula "27"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "0,1,0"))
                     (rule "mul_literals" (formula "27") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                     (rule "add_literals" (formula "27") (term "1,1,0"))
                     (rule "times_zero_1" (formula "27") (term "1,0"))
                     (rule "add_zero_right" (formula "27") (term "0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0"))
                     (rule "polySimp_addComm0" (formula "27") (term "0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "27") (term "0"))
                     (rule "add_literals" (formula "27") (term "1,1,0"))
                     (rule "times_zero_1" (formula "27") (term "1,0"))
                     (rule "add_zero_right" (formula "27") (term "0"))
                     (rule "leq_literals" (formula "27"))
                     (rule "closeFalse" (formula "27"))
                  )
                  (branch "Case 2"
                     (rule "andRight" (formula "27"))
                     (branch "Case 1"
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "inEqSimp_leqRight" (formula "27"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulAssoc" (formula "18") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "18") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1"))
                        (rule "polySimp_elimOne" (formula "11") (term "1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "0,1,0,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,0,1,0,0,0"))
                        (rule "nnf_imp2or" (formula "17") (term "0"))
                        (rule "nnf_notAnd" (formula "17") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                        (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                        (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "0,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "17") (term "0,0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "17") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,0,0"))
                        (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "12"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "translateJavaSubInt" (formula "12") (term "3,0,1"))
                        (rule "andLeft" (formula "12"))
                        (rule "andLeft" (formula "12"))
                        (rule "andLeft" (formula "12"))
                        (rule "andLeft" (formula "12"))
                        (rule "andLeft" (formula "14"))
                        (rule "andLeft" (formula "12"))
                        (rule "andLeft" (formula "13"))
                        (rule "andLeft" (formula "12"))
                        (rule "notLeft" (formula "12"))
                        (rule "notLeft" (formula "12"))
                        (rule "polySimp_elimSub" (formula "18") (term "3,0"))
                        (rule "mul_literals" (formula "18") (term "1,3,0"))
                        (rule "polySimp_addComm0" (formula "18") (term "3,0"))
                        (rule "inEqSimp_commuteLeq" (formula "17"))
                        (rule "inEqSimp_commuteLeq" (formula "15"))
                        (rule "inEqSimp_commuteLeq" (formula "16"))
                        (rule "inEqSimp_commuteLeq" (formula "12"))
                        (rule "applyEq" (formula "18") (term "1,3,0") (ifseqformula "14"))
                        (rule "applyEq" (formula "17") (term "1") (ifseqformula "14"))
                        (rule "applyEq" (formula "15") (term "0") (ifseqformula "14"))
                        (rule "applyEq" (formula "16") (term "1") (ifseqformula "14"))
                        (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "1"))
                        (rule "leq_literals" (formula "13") (term "0"))
                         (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "12"))
                        (rule "qeq_literals" (formula "1") (term "0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "inEqSimp_leqRight" (formula "27"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "qeq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "closeTrue" (formula "27"))
               )
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "27"))
               (rule "translateJavaSubInt" (formula "27") (term "0,0,0,1,0"))
               (rule "translateJavaSubInt" (formula "27") (term "0,2,0,1,0,1,0"))
               (rule "translateJavaAddInt" (formula "27") (term "0,2,1,1,0,1,0"))
               (rule "translateJavaSubInt" (formula "27") (term "1,0,1,1,0"))
               (rule "translateJavaAddInt" (formula "27") (term "0,2,0,1,1,1,0"))
               (rule "allRight" (formula "27") (inst "sk=i_0"))
               (rule "impRight" (formula "27"))
               (rule "andLeft" (formula "1"))
               (rule "polySimp_elimSub" (formula "29") (term "1,0,1"))
               (rule "mul_literals" (formula "29") (term "1,1,0,1"))
               (rule "polySimp_elimSub" (formula "29") (term "0,0,0"))
               (rule "polySimp_elimSub" (formula "29") (term "0,2,0,1,0"))
               (rule "polySimp_homoEq" (formula "29") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
               (rule "polySimp_addComm0" (formula "29") (term "1,0,1"))
               (rule "polySimp_addComm0" (formula "29") (term "0,2,0,1,0"))
               (rule "polySimp_addComm0" (formula "29") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
               (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "29") (term "0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
               (rule "polySimp_mulAssoc" (formula "19") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "29") (term "1,1"))
               (rule "inEqSimp_commuteLeq" (formula "1"))
               (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "13"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0"))
               (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
               (rule "polySimp_addComm1" (formula "2") (term "0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
               (rule "polySimp_sepNegMonomial" (formula "29") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "29") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "29") (term "0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "12"))
               (rule "polySimp_mulLiterals" (formula "12") (term "1"))
               (rule "polySimp_elimOne" (formula "12") (term "1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "0,1,0,0,0"))
               (rule "mul_literals" (formula "18") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "28") (term "1,1,0"))
               (rule "mul_literals" (formula "28") (term "0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0"))
               (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1"))
               (rule "polySimp_rightDist" (formula "2") (term "1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
               (rule "polySimp_rightDist" (formula "2") (term "0,1"))
               (rule "mul_literals" (formula "2") (term "0,0,1"))
               (rule "pullOutSelect" (formula "28") (term "0,0,1") (inst "selectSK=arr_0"))
               (rule "applyEq" (formula "29") (term "1,0,2,0,1,0") (ifseqformula "1"))
               (rule "applyEq" (formula "29") (term "0,0,0") (ifseqformula "1"))
               (rule "applyEq" (formula "29") (term "0,2,0,1,1") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "26")) (ifInst ""  (formula "8")))
               (rule "polySimp_homoEq" (formula "29") (term "0,1"))
               (rule "polySimp_homoEq" (formula "29") (term "0,0"))
               (rule "polySimp_addComm0" (formula "29") (term "0,2,0,1,0"))
               (rule "polySimp_addComm1" (formula "29") (term "0,0,1"))
               (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
               (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
               (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0"))
               (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "2"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "29") (term "0,1,0,0,0,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "29") (term "0,1,0,0,0,1") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "29") (term "0,0,2,0,1,0") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "29") (term "0,2,0,1,1") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "28") (term "0,0,1"))
               (rule "polySimp_addComm0" (formula "28") (term "0,2,0,1,0"))
               (rule "polySimp_sepNegMonomial" (formula "28") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "28") (term "0,0,0"))
               (rule "polySimp_sepNegMonomial" (formula "28") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "28") (term "0,0,1"))
               (rule "polySimp_elimOne" (formula "28") (term "0,0,1"))
               (rule "pullOutSelect" (formula "28") (term "1,1,1") (inst "selectSK=arr_1"))
               (rule "applyEq" (formula "29") (term "1,1,1,0") (ifseqformula "1"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")) (ifInst ""  (formula "7")))
               (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "21"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "applyEqReverse" (formula "29") (term "1,1,1") (ifseqformula "1"))
               (rule "applyEqReverse" (formula "29") (term "1,1,1,0") (ifseqformula "1"))
               (rule "hideAuxiliaryEq" (formula "1"))
               (rule "pullOutSelect" (formula "28") (term "0,1,1") (inst "selectSK=arr_2"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "17"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "24"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_commuteGeq" (formula "29") (term "1,1"))
               (rule "pullOutSelect" (formula "29") (term "0,1,0") (inst "selectSK=arr_3"))
               (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "18"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
               (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "25"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_homoInEq0" (formula "30") (term "1,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "30") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "30") (term "1,1,0"))
               (rule "mul_literals" (formula "30") (term "0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0"))
               (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0"))
               (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
               (rule "mul_literals" (formula "3") (term "0,0"))
               (rule "add_zero_left" (formula "3") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1"))
               (rule "polySimp_rightDist" (formula "3") (term "1"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
               (rule "mul_literals" (formula "3") (term "0,1"))
               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
               (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "3"))
               (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
               (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
               (rule "add_literals" (formula "13") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "13") (term "1,0,0"))
               (rule "add_literals" (formula "13") (term "0,0"))
               (rule "qeq_literals" (formula "13") (term "0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "nnf_imp2or" (formula "20") (term "0"))
               (rule "nnf_notAnd" (formula "20") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
               (rule "polySimp_rightDist" (formula "20") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,0,0,0,0"))
               (rule "mul_literals" (formula "20") (term "0,0,1,0,0,0,0,0"))
               (rule "polySimp_elimOne" (formula "20") (term "1,0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0,0"))
               (rule "add_literals" (formula "20") (term "0,0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "20") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
               (rule "times_zero_1" (formula "20") (term "1,0,0,1,0,0"))
               (rule "add_zero_right" (formula "20") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
               (rule "mul_literals" (formula "20") (term "1,1,0,0"))
               (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "15"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "translateJavaSubInt" (formula "15") (term "3,0,1"))
               (rule "andLeft" (formula "15"))
               (rule "andLeft" (formula "15"))
               (rule "andLeft" (formula "15"))
               (rule "andLeft" (formula "15"))
               (rule "andLeft" (formula "17"))
               (rule "andLeft" (formula "15"))
               (rule "andLeft" (formula "16"))
               (rule "andLeft" (formula "15"))
               (rule "notLeft" (formula "15"))
               (rule "notLeft" (formula "15"))
               (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "27"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "27"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_elimSub" (formula "21") (term "3,0"))
               (rule "mul_literals" (formula "21") (term "1,3,0"))
               (rule "polySimp_addComm0" (formula "21") (term "3,0"))
               (rule "ifthenelse_negated" (formula "2") (term "0"))
               (rule "ifthenelse_negated" (formula "1") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "20"))
               (rule "inEqSimp_commuteLeq" (formula "19"))
               (rule "inEqSimp_commuteLeq" (formula "18"))
               (rule "inEqSimp_commuteLeq" (formula "15"))
               (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
               (rule "applyEq" (formula "20") (term "1") (ifseqformula "17"))
               (rule "applyEq" (formula "21") (term "1,3,0") (ifseqformula "17"))
               (rule "applyEq" (formula "19") (term "1") (ifseqformula "17"))
               (rule "applyEq" (formula "38") (term "1,1,0,1") (ifseqformula "17"))
               (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "22"))
               (rule "true_left" (formula "22"))
               (rule "commute_or" (formula "37") (term "0"))
               (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "21") (term "0"))
               (rule "replace_known_left" (formula "21") (term "0,1") (ifseqformula "22"))
                (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "27")) (ifInst ""  (formula "6")))
               (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "22") (term "0") (inst "i=i") (inst "j=j"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "22") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0"))
               (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
               (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
               (rule "nnf_imp2or" (formula "22") (term "0"))
               (rule "nnf_notAnd" (formula "22") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0"))
               (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0"))
               (rule "mul_literals" (formula "22") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
               (rule "mul_literals" (formula "22") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0"))
               (rule "nnf_imp2or" (formula "22") (term "0,1,0"))
               (rule "nnf_notAnd" (formula "22") (term "0,0,1,0"))
               (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,1,0"))
               (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,1,0"))
               (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,1,0"))
               (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1,0"))
               (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1,0"))
               (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1,0"))
               (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1,0"))
               (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "21") (term "0") (inst "i=i"))
                (builtin "One Step Simplification" (formula "21"))
               (rule "translateJavaAddInt" (formula "21") (term "0,2,1,1,0"))
               (rule "translateJavaSubInt" (formula "21") (term "1,1,0,0"))
               (rule "polySimp_elimSub" (formula "21") (term "1,1,0,0"))
               (rule "mul_literals" (formula "21") (term "1,1,1,0,0"))
               (rule "polySimp_addComm0" (formula "21") (term "0,2,1,1,0"))
               (rule "polySimp_addComm1" (formula "21") (term "1,1,0,0"))
               (rule "add_literals" (formula "21") (term "0,1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "21") (term "1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
               (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
               (rule "nnf_imp2or" (formula "21") (term "0"))
               (rule "nnf_notAnd" (formula "21") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "21") (term "0,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
               (rule "times_zero_1" (formula "21") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "21") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
               (rule "mul_literals" (formula "21") (term "1,0,0,0"))
               (rule "commute_or" (formula "26") (term "0,0"))
               (rule "commute_or" (formula "38") (term "1"))
               (rule "arrayLengthIsAShort" (formula "14") (term "0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "arrayLengthNotNegative" (formula "14") (term "0"))
               (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
               (rule "inEqSimp_sepPosMonomial1" (formula "14"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1"))
               (rule "polySimp_elimOne" (formula "14") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "3"))
               (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
               (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
               (rule "add_literals" (formula "14") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "14") (term "1,0,0"))
               (rule "add_zero_right" (formula "14") (term "0,0"))
               (rule "qeq_literals" (formula "14") (term "0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "arrayLengthNotNegative" (formula "13") (term "0"))
               (rule "arrayLengthIsAShort" (formula "14") (term "0"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "true_left" (formula "14"))
               (rule "commute_or" (formula "23") (term "0,0,1,0"))
               (rule "ifthenelse_split" (formula "2") (term "0"))
               (branch "self.sorted_splitters.<created> = TRUE TRUE"
                  (rule "applyEqReverse" (formula "40") (term "1,0,1") (ifseqformula "3"))
                  (rule "hideAuxiliaryEq" (formula "3"))
                  (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "39") (term "1,1,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "inEqSimp_commuteLeq" (formula "38") (term "0,1"))
                  (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                  (rule "commute_or" (formula "38") (term "1"))
                  (rule "commute_or" (formula "38") (term "0"))
                  (rule "arrayLengthNotNegative" (formula "20") (term "0"))
                  (rule "arrayLengthIsAShort" (formula "21") (term "0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "arrayLengthIsAShort" (formula "19") (term "0"))
                   (builtin "One Step Simplification" (formula "19"))
                  (rule "true_left" (formula "19"))
                  (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                  (rule "commute_and" (formula "40"))
                  (rule "all_pull_out3" (formula "24") (term "0"))
                  (rule "shift_paren_or" (formula "24") (term "0,0"))
                  (rule "shift_paren_or" (formula "24") (term "0,0,0"))
                  (rule "allLeft" (formula "28") (inst "t=i_0"))
                  (rule "replaceKnownSelect_taclet10010_0" (formula "28") (term "0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet10010_1" (formula "28") (term "0,1"))
                  (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0") (ifseqformula "3"))
                  (rule "qeq_literals" (formula "28") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "inEqSimp_contradInEq0" (formula "28") (term "0") (ifseqformula "4"))
                  (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "0,1,0,0,0"))
                  (rule "mul_literals" (formula "28") (term "0,0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,0,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "28") (term "1,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                  (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "28") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                  (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "28") (term "0,0,0"))
                  (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                  (rule "add_literals" (formula "28") (term "0,0,0"))
                  (rule "leq_literals" (formula "28") (term "0,0"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "replace_known_left" (formula "41") (term "0,0") (ifseqformula "28"))
                   (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "28")))
                  (rule "closeTrue" (formula "41"))
               )
               (branch "self.sorted_splitters.<created> = TRUE FALSE"
                  (rule "applyEqReverse" (formula "40") (term "1,0,1") (ifseqformula "2"))
                  (rule "hideAuxiliaryEq" (formula "2"))
                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "27"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "applyEqReverse" (formula "39") (term "1,1,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "inEqSimp_commuteLeq" (formula "38") (term "0,1"))
                  (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "38") (term "0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                  (rule "commute_or" (formula "38") (term "1"))
                  (rule "commute_or" (formula "38") (term "0"))
                  (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                  (rule "arrayLengthIsAShort" (formula "20") (term "0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "true_left" (formula "20"))
                  (rule "arrayLengthIsAShort" (formula "18") (term "0"))
                   (builtin "One Step Simplification" (formula "18"))
                  (rule "true_left" (formula "18"))
                  (rule "arrayLengthNotNegative" (formula "18") (term "0"))
                  (rule "commute_and" (formula "40"))
                  (rule "all_pull_out3" (formula "23") (term "0"))
                  (rule "shift_paren_or" (formula "23") (term "0,0"))
                  (rule "shift_paren_or" (formula "23") (term "0,0,0"))
                  (rule "allLeft" (formula "27") (inst "t=i_0"))
                  (rule "replaceKnownSelect_taclet10010_0" (formula "27") (term "0,1"))
                  (rule "replaceKnownAuxiliaryConstant_taclet10010_1" (formula "27") (term "0,1"))
                  (rule "inEqSimp_contradInEq0" (formula "27") (term "1,0") (ifseqformula "3"))
                  (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "27") (term "0,0,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "27") (term "1,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0"))
                  (rule "add_literals" (formula "27") (term "1,1,0,0,1,0"))
                  (rule "times_zero_1" (formula "27") (term "1,0,0,1,0"))
                  (rule "add_zero_right" (formula "27") (term "0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "27") (term "0,0,0,1,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "27") (term "0,0,1,0"))
                  (rule "add_literals" (formula "27") (term "1,1,0,0,1,0"))
                  (rule "times_zero_1" (formula "27") (term "1,0,0,1,0"))
                  (rule "add_zero_right" (formula "27") (term "0,0,1,0"))
                  (rule "leq_literals" (formula "27") (term "0,1,0"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "2"))
                  (rule "qeq_literals" (formula "27") (term "0,0"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "replace_known_left" (formula "41") (term "0,0") (ifseqformula "27"))
                   (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "27")))
                  (rule "closeTrue" (formula "41"))
               )
            )
         )
         (branch "Invariant Preserved and Used"
             (builtin "One Step Simplification" (formula "28"))
            (rule "translateJavaAddInt" (formula "28") (term "0,2,1,1,0,1,0,1,0"))
            (rule "translateJavaAddInt" (formula "28") (term "0,2,0,1,1,1,0,1,0"))
            (rule "translateJavaSubInt" (formula "28") (term "1,0,1,1,0,1,0"))
            (rule "translateJavaSubInt" (formula "28") (term "0,2,0,1,0,1,0,1,0"))
            (rule "translateJavaAddInt" (formula "28") (term "0,2,0,1,1,1,0,1,0,0,1,1,0,1,1"))
            (rule "translateJavaSubInt" (formula "28") (term "1,0,1,1,0,1,0,0,1,1,0,1,1"))
            (rule "translateJavaAddInt" (formula "28") (term "0,2,1,1,0,1,0,1,0,0,1,1,0,1,1"))
            (rule "translateJavaSubInt" (formula "28") (term "0,2,0,1,0,1,0,1,0,0,1,1,0,1,1"))
            (rule "translateJavaSubInt" (formula "28") (term "0,0,0,1,0,1,0"))
            (rule "translateJavaSubInt" (formula "28") (term "0,0,0,1,0,1,0,0,1,1,0,1,1"))
            (rule "translateJavaSubInt" (formula "28") (term "1,1,1,0,0,0,0,0,0,1,1,0,1,1"))
            (rule "translateJavaSubInt" (formula "28") (term "0,0,1,0,0,0,0,0,0,1,1,0,1,1"))
            (rule "translateJavaSubInt" (formula "28") (term "1,1,1,0,0,0,0,0"))
            (rule "translateJavaSubInt" (formula "28") (term "0,0,1,0,0,0,0,0"))
            (rule "impRight" (formula "28"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "2"))
            (rule "eqSymm" (formula "33") (term "1,0,0,1,0,1,1,0,1"))
            (rule "eqSymm" (formula "33") (term "1,0,0,0,1,1,0,1"))
            (rule "eqSymm" (formula "4"))
            (rule "polySimp_elimSub" (formula "33") (term "1,1,1,0,0,0,0,0,0,1,1,0,1"))
            (rule "mul_literals" (formula "33") (term "1,1,1,1,0,0,0,0,0,0,1,1,0,1"))
            (rule "polySimp_elimSub" (formula "33") (term "0,0,1,0,0,0,0,0,0,1,1,0,1"))
            (rule "mul_literals" (formula "33") (term "1,0,0,1,0,0,0,0,0,0,1,1,0,1"))
            (rule "polySimp_elimSub" (formula "33") (term "0,0,0,1,0,1,0,0,1,1,0,1"))
            (rule "polySimp_elimSub" (formula "33") (term "0,2,0,1,0,1,0,1,0,0,1,1,0,1"))
            (rule "polySimp_elimSub" (formula "33") (term "1,0,1,1,0,1,0,0,1,1,0,1"))
            (rule "mul_literals" (formula "33") (term "1,1,0,1,1,0,1,0,0,1,1,0,1"))
            (rule "polySimp_elimSub" (formula "5") (term "0,0,0,1,0"))
            (rule "polySimp_elimSub" (formula "5") (term "0,2,0,1,0,1,0"))
            (rule "polySimp_elimSub" (formula "5") (term "1,0,1,1,0"))
            (rule "mul_literals" (formula "5") (term "1,1,0,1,1,0"))
            (rule "polySimp_elimSub" (formula "1") (term "1,1,1,0"))
            (rule "mul_literals" (formula "1") (term "1,1,1,1,0"))
            (rule "polySimp_elimSub" (formula "1") (term "0,0,1,0"))
            (rule "mul_literals" (formula "1") (term "1,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "33") (term "1,1,1,0,0,0,0,0,0,1,1,0,1"))
            (rule "polySimp_addComm0" (formula "33") (term "0,0,1,0,0,0,0,0,0,1,1,0,1"))
            (rule "polySimp_addComm0" (formula "33") (term "0,0,0,1,0,1,0,0,1,1,0,1"))
            (rule "polySimp_addComm0" (formula "33") (term "0,2,0,1,0,1,0,1,0,0,1,1,0,1"))
            (rule "polySimp_addComm0" (formula "33") (term "1,0,1,1,0,1,0,0,1,1,0,1"))
            (rule "polySimp_addComm0" (formula "5") (term "0,0,0,1,0"))
            (rule "polySimp_addComm0" (formula "5") (term "0,2,0,1,0,1,0"))
            (rule "polySimp_addComm0" (formula "5") (term "1,0,1,1,0"))
            (rule "polySimp_addComm0" (formula "1") (term "1,1,1,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "33") (term "1,1,1,0,1,0,0,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "33") (term "0,1,0,0,0,0,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,1,0,0,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "33") (term "1,1,0,0,0,0,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,0,0,0,0,0,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "5") (term "1,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "2"))
            (rule "inEqSimp_commuteLeq" (formula "3"))
            (rule "inEqSimp_commuteLeq" (formula "33") (term "0,1,0,0,0,0,0,0,1,1,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "1") (term "0,1,0"))
            (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_5"))
            (rule "applyEq" (formula "1") (term "1,1,0,0") (ifseqformula "17"))
            (rule "applyEq" (formula "5") (term "1,1,0,0") (ifseqformula "17"))
            (rule "commute_or" (formula "5") (term "0,1,0"))
            (rule "commute_and" (formula "1") (term "0,0"))
            (rule "commute_and" (formula "5") (term "0,0"))
            (rule "commute_and" (formula "5") (term "1,0"))
            (rule "ifElseUnfold" (formula "33") (term "1") (inst "#boolv=x_6"))
            (rule "variableDeclaration" (formula "33") (term "1") (newnames "x_6"))
            (rule "greater_than_comparison_simple" (formula "33") (term "1"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "arrayLengthNotNegative" (formula "17") (term "0"))
            (rule "arrayLengthIsAShort" (formula "15") (term "0"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "true_left" (formula "15"))
            (rule "arrayLengthIsAShort" (formula "18") (term "0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "true_left" (formula "18"))
            (rule "arrayLengthNotNegative" (formula "15") (term "0"))
            (rule "ifElseSplit" (formula "35"))
            (branch "if x_6 true"
                (builtin "Block Contract (Internal)" (formula "36") (newnames "exc_1,heap_Before_BLOCK,savedHeap_Before_BLOCK,o,f"))
               (branch "Validity"
                   (builtin "One Step Simplification" (formula "1"))
                   (builtin "One Step Simplification" (formula "37"))
                   (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "13")) (ifInst ""  (formula "10")) (ifInst ""  (formula "36")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1") (ifseqformula "24"))
                  (rule "translateJavaMulInt" (formula "37") (term "0,1,0,0,1"))
                  (rule "translateJavaDivInt" (formula "37") (term "0,0,1,0,0,1"))
                  (rule "andLeft" (formula "27"))
                  (rule "eqSymm" (formula "38") (term "0,0,1,0,1"))
                  (rule "replace_known_left" (formula "28") (term "0,0") (ifseqformula "9"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "true_left" (formula "28"))
                  (rule "variableDeclarationAssign" (formula "37") (term "1"))
                  (rule "variableDeclaration" (formula "37") (term "1") (newnames "exc_1_1"))
                  (rule "assignment" (formula "37") (term "1"))
                   (builtin "One Step Simplification" (formula "37"))
                  (rule "emptyStatement" (formula "37") (term "1"))
                  (rule "emptyStatement" (formula "37") (term "1"))
                  (rule "tryEmpty" (formula "37") (term "1"))
                  (rule "blockEmptyLabel" (formula "37") (term "1"))
                  (rule "blockEmpty" (formula "37") (term "1"))
                  (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                  (rule "methodCallEmpty" (formula "36") (term "1"))
                  (rule "emptyModality" (formula "36") (term "1"))
                  (rule "andRight" (formula "36"))
                  (branch "Case 1"
                     (rule "andRight" (formula "36"))
                     (branch
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "closeTrue" (formula "36"))
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "shiftLeftSplitTwo" (formula "5") (term "0") (userinteraction))
                        (rule "polySimp_homoEq" (formula "7") (term "1,1,1,0"))
                        (rule "polySimp_elimSub" (formula "5") (term "1,0,0,1"))
                        (rule "mul_literals" (formula "5") (term "1,1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,1,1,0"))
                        (rule "polySimp_addComm0" (formula "5") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0,1,1,1,0"))
                        (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,1,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,1,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "7") (term "0,1,0,1,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,1,1,1,0"))
                        (rule "inEqSimp_gtToGeq" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulAssoc" (formula "26") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "5") (term "0,0"))
                        (rule "applyEqRigid" (formula "5") (term "1,1") (ifseqformula "6"))
                        (rule "polySimp_sepNegMonomial" (formula "7") (term "1,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0,1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "7") (term "0,1,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1"))
                        (rule "polySimp_elimOne" (formula "19") (term "1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0,0"))
                        (rule "mul_literals" (formula "7") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0,0"))
                        (rule "mul_literals" (formula "2") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "7") (term "0,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "7") (term "1,1,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,0,1,0,0,0"))
                        (rule "nnf_imp2or" (formula "2") (term "0"))
                        (rule "nnf_imp2or" (formula "7") (term "0"))
                        (rule "nnf_imp2or" (formula "25") (term "0"))
                        (rule "nnf_notAnd" (formula "2") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "2") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "2") (term "0,0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "2") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "2") (term "1,0,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "2") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0"))
                        (rule "mul_literals" (formula "2") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "7") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "7") (term "0,0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "7") (term "1,0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "7") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0"))
                        (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                        (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                        (rule "nnf_notAnd" (formula "25") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "25") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "25") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
                        (rule "mul_literals" (formula "25") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                        (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                        (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "20"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "translateJavaSubInt" (formula "20") (term "3,0,1"))
                        (rule "andLeft" (formula "20"))
                        (rule "andLeft" (formula "20"))
                        (rule "andLeft" (formula "20"))
                        (rule "andLeft" (formula "20"))
                        (rule "andLeft" (formula "22"))
                        (rule "andLeft" (formula "20"))
                        (rule "andLeft" (formula "20"))
                        (rule "andLeft" (formula "22"))
                        (rule "notLeft" (formula "20"))
                        (rule "notLeft" (formula "20"))
                        (rule "polySimp_elimSub" (formula "26") (term "3,0"))
                        (rule "mul_literals" (formula "26") (term "1,3,0"))
                        (rule "polySimp_addComm0" (formula "26") (term "3,0"))
                        (rule "inEqSimp_commuteLeq" (formula "25"))
                        (rule "inEqSimp_commuteLeq" (formula "24"))
                        (rule "inEqSimp_commuteLeq" (formula "23"))
                        (rule "inEqSimp_commuteLeq" (formula "20"))
                        (rule "applyEq" (formula "2") (term "1,1,1,1,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "26") (term "1,3,0") (ifseqformula "22"))
                        (rule "applyEq" (formula "25") (term "1") (ifseqformula "22"))
                        (rule "applyEq" (formula "23") (term "0") (ifseqformula "22"))
                        (rule "applyEq" (formula "24") (term "1") (ifseqformula "22"))
                        (rule "applyEq" (formula "7") (term "1,1,0,0,1,0") (ifseqformula "22"))
                        (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "21"))
                        (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "4") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "6") (term "1,0") (ifseqformula "4"))
                        (rule "leq_literals" (formula "6") (term "0,1,0"))
                         (builtin "One Step Simplification" (formula "6"))
                        (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "28"))
                        (rule "true_left" (formula "28"))
                        (rule "commute_or" (formula "8") (term "1,1,0"))
                        (rule "commute_or" (formula "2") (term "0,0"))
                        (rule "commute_or" (formula "8") (term "0,0"))
                        (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "27") (term "0") (inst "i=i") (inst "j=j"))
                         (builtin "One Step Simplification" (formula "27"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1,0"))
                        (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                        (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0,1,0"))
                        (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                        (rule "nnf_imp2or" (formula "27") (term "0"))
                        (rule "nnf_notAnd" (formula "27") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                        (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                        (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                        (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                        (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                        (rule "nnf_imp2or" (formula "27") (term "0,1,0"))
                        (rule "nnf_notAnd" (formula "27") (term "0,0,1,0"))
                        (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,1,0"))
                        (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1,0"))
                        (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,0"))
                        (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1,0"))
                        (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,0"))
                        (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,1,0"))
                        (rule "mul_literals" (formula "27") (term "0,1,0,0,0,1,0"))
                        (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,1,0"))
                        (rule "commute_or" (formula "31") (term "0,0"))
                        (rule "jdiv_axiom" (formula "44") (term "0,0"))
                        (rule "eqSymm" (formula "1"))
                        (rule "inEqSimp_subsumption1" (formula "1") (term "0,0") (ifseqformula "2"))
                        (rule "leq_literals" (formula "1") (term "0,0,0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "eqSymm" (formula "1"))
                        (rule "applyEqRigid" (formula "45") (term "0,0") (ifseqformula "1"))
                        (rule "cnf_rightDist" (formula "3") (term "0"))
                        (rule "distr_forallAnd" (formula "3"))
                        (rule "andLeft" (formula "3"))
                        (rule "cnf_rightDist" (formula "10") (term "0"))
                        (rule "distr_forallAnd" (formula "10"))
                        (rule "andLeft" (formula "10"))
                        (rule "commute_or" (formula "4") (term "0"))
                        (rule "commute_or_2" (formula "11") (term "0"))
                        (rule "shift_paren_or" (formula "10") (term "0"))
                        (rule "commute_or" (formula "11") (term "0,0"))
                        (rule "commute_or" (formula "30") (term "0,0,1,0"))
                        (rule "all_pull_out3" (formula "30") (term "0"))
                        (rule "shift_paren_or" (formula "30") (term "0,0"))
                        (rule "shift_paren_or" (formula "30") (term "0,0,0"))
                        (rule "div_axiom" (formula "1") (term "1") (inst "quotient=quotient_0"))
                        (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                        (rule "qeq_literals" (formula "1") (term "0,1,1"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "equal_literals" (formula "1") (term "0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "andLeft" (formula "1"))
                        (rule "polySimp_addComm1" (formula "3") (term "1"))
                        (rule "add_literals" (formula "3") (term "0,1"))
                        (rule "inEqSimp_commuteLeq" (formula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                        (rule "applyEqRigid" (formula "50") (term "0,0") (ifseqformula "1"))
                        (rule "eqSymm" (formula "50"))
                        (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "inEqSimp_strengthen1" (formula "2") (ifseqformula "50"))
                        (rule "inEqSimp_contradEq7" (formula "50") (ifseqformula "2"))
                        (rule "polySimp_mulAssoc" (formula "50") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "50") (term "0,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "50") (term "0,0"))
                        (rule "add_literals" (formula "50") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "50") (term "1,0,0"))
                        (rule "add_zero_right" (formula "50") (term "0,0"))
                        (rule "leq_literals" (formula "50") (term "0"))
                         (builtin "One Step Simplification" (formula "50"))
                        (rule "false_right" (formula "50"))
                        (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "3"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq0" (formula "4"))
                        (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,0"))
                        (rule "times_zero_1" (formula "4") (term "0"))
                        (rule "qeq_literals" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "5"))
                        (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                        (rule "mul_literals" (formula "5") (term "0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0"))
                        (rule "add_literals" (formula "5") (term "0,0"))
                        (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "6") (term "1,1,1,0") (ifseqformula "2"))
                        (rule "polySimp_addAssoc" (formula "6") (term "1,1,0"))
                        (rule "add_literals" (formula "6") (term "0,1,1,0"))
                        (rule "add_zero_left" (formula "6") (term "1,1,0"))
                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                        (rule "inEqSimp_homoInEq1" (formula "3"))
                        (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                        (rule "add_literals" (formula "3") (term "1,0"))
                        (rule "times_zero_1" (formula "3") (term "0"))
                        (rule "leq_literals" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "applyEqRigid" (formula "1") (term "0,0") (ifseqformula "2"))
                        (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "2"))
                        (rule "applyEq" (formula "13") (term "0,0,0,2,0,1,0") (ifseqformula "2"))
                        (rule "polySimp_mulComm0" (formula "13") (term "0,0,2,0,1,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "0,0,2,0,1,0"))
                        (rule "mul_literals" (formula "13") (term "0,0,0,2,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,2,0,1,0"))
                        (rule "applyEq" (formula "13") (term "1,1,1,0,0") (ifseqformula "2"))
                        (rule "polySimp_addAssoc" (formula "13") (term "1,1,0,0"))
                        (rule "add_literals" (formula "13") (term "0,1,1,0,0"))
                        (rule "add_zero_left" (formula "13") (term "1,1,0,0"))
                        (rule "applyEq" (formula "11") (term "1") (ifseqformula "2"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "elimGcdEq" (formula "10") (term "1") (inst "elimGcdRightDiv=add(Z(0(#)), quotient_0)") (inst "elimGcdLeftDiv=javaShiftLeftInt(Z(1(#)), add(Z(neglit(1(#))), exp_0))") (inst "elimGcd=Z(2(#))"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "add_zero_left" (formula "10") (term "1,1,1,1"))
                        (rule "mul_literals" (formula "10") (term "0,1,0,1,0,1"))
                        (rule "add_zero_left" (formula "10") (term "1,1,0,1,0,1"))
                        (rule "mul_literals" (formula "10") (term "0,1,0,0,1,1"))
                        (rule "mul_literals" (formula "10") (term "0,1,0,0,0,1"))
                        (rule "add_zero_left" (formula "10") (term "1,1,0,0,1,1"))
                        (rule "add_zero_left" (formula "10") (term "1,1,0,0,0,1"))
                        (rule "add_literals" (formula "10") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,1,0,1"))
                        (rule "add_literals" (formula "10") (term "1,1,0,1,0,1"))
                        (rule "times_zero_1" (formula "10") (term "1,0,1,0,1"))
                        (rule "add_literals" (formula "10") (term "0,1,0,1"))
                        (rule "qeq_literals" (formula "10") (term "1,0,1"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,1,1"))
                        (rule "add_literals" (formula "10") (term "1,1,0,0,1,1"))
                        (rule "times_zero_1" (formula "10") (term "1,0,0,1,1"))
                        (rule "add_literals" (formula "10") (term "0,0,1,1"))
                        (rule "equal_literals" (formula "10") (term "0,1,1"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1"))
                        (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0,1"))
                        (rule "add_literals" (formula "10") (term "1,1,0,0,1"))
                        (rule "times_zero_1" (formula "10") (term "1,0,0,1"))
                        (rule "add_zero_right" (formula "10") (term "0,0,1"))
                        (rule "leq_literals" (formula "10") (term "0,1"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "notLeft" (formula "10"))
                        (rule "inEqSimp_geqRight" (formula "37"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "1"))
                        (rule "leq_literals" (formula "9") (term "0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "elimGcdGeq_antec" (formula "5") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(#))"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,1,0"))
                        (rule "leq_literals" (formula "5") (term "0,0"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "mul_literals" (formula "5") (term "1,0,0,0,0,0"))
                        (rule "polySimp_addLiterals" (formula "5") (term "0,0,0,0"))
                        (rule "add_literals" (formula "5") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                        (rule "add_literals" (formula "5") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "5") (term "1,0,0"))
                        (rule "add_zero_right" (formula "5") (term "0,0"))
                        (rule "leq_literals" (formula "5") (term "0"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "polyDiv_pullOut" (formula "2") (term "0") (inst "polyDivCoeff=quotient_0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,2,0"))
                        (rule "equal_literals" (formula "2") (term "0,0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "polySimp_homoEq" (formula "2"))
                        (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,1,0"))
                        (rule "add_literals" (formula "2") (term "1,1,0,0,0,1,0"))
                        (rule "times_zero_1" (formula "2") (term "1,0,0,0,1,0"))
                        (rule "add_literals" (formula "2") (term "0,0,0,1,0"))
                        (rule "div_literals" (formula "2") (term "0,0,1,0"))
                        (rule "add_zero_left" (formula "2") (term "0,1,0"))
                        (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,0"))
                        (rule "times_zero_1" (formula "2") (term "0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "inEqSimp_antiSymm" (formula "7") (ifseqformula "1"))
                        (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "7"))
                        (rule "leq_literals" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "applyEqRigid" (formula "8") (term "1") (ifseqformula "6"))
                        (rule "applyEqRigid" (formula "7") (term "0") (ifseqformula "6"))
                        (rule "qeq_literals" (formula "7"))
                        (rule "true_left" (formula "7"))
                        (rule "applyEq" (formula "8") (term "1,0") (ifseqformula "6"))
                        (rule "translateJavaShiftLeftIntZero" (formula "8") (term "0"))
                        (rule "polySimp_homoEq" (formula "8"))
                        (rule "mul_literals" (formula "8") (term "1,0"))
                        (rule "polySimp_addComm1" (formula "8") (term "0"))
                        (rule "add_literals" (formula "8") (term "0,0"))
                        (rule "add_zero_left" (formula "8") (term "0"))
                        (rule "applyEqRigid" (formula "2") (term "1,0,0") (ifseqformula "8"))
                        (rule "add_zero_right" (formula "2") (term "0,0"))
                        (rule "jdiv_axiom_inline" (formula "2") (term "0"))
                        (rule "mul_literals" (formula "2") (term "0,0,2,0"))
                        (rule "div_literals" (formula "2") (term "1,0"))
                        (rule "qeq_literals" (formula "2") (term "0,0"))
                         (builtin "One Step Simplification" (formula "2"))
                        (rule "eqSymm" (formula "2"))
                        (rule "applyEqRigid" (formula "4") (term "1,1,0") (ifseqformula "8"))
                        (rule "applyEqRigid" (formula "1") (term "1,1") (ifseqformula "8"))
                        (rule "add_literals" (formula "1") (term "1"))
                        (rule "applyEq" (formula "10") (term "1,1,0,0") (ifseqformula "8"))
                        (rule "applyEqRigid" (formula "8") (term "0,0") (ifseqformula "2"))
                        (rule "times_zero_2" (formula "8") (term "0"))
                         (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "applyEqRigid" (formula "3") (term "0") (ifseqformula "2"))
                        (rule "qeq_literals" (formula "3"))
                        (rule "closeFalse" (formula "3"))
                     )
                  )
                  (branch
                      (builtin "One Step Simplification" (formula "36"))
                     (rule "closeTrue" (formula "36"))
                  )
               )
               (branch "Precondition"
                  (rule "andRight" (formula "36"))
                  (branch
                     (rule "andRight" (formula "36"))
                     (branch
                         (builtin "One Step Simplification" (formula "1"))
                         (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "13")))
                        (rule "closeTrue" (formula "36"))
                     )
                     (branch
                         (builtin "One Step Simplification" (formula "1"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "wellFormedAnon" (formula "36"))
                        (rule "wellFormedAnonEQ" (formula "36") (term "0") (ifseqformula "24"))
                        (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "7"))
                         (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "8")) (ifInst ""  (formula "23")))
                        (rule "closeTrue" (formula "36"))
                     )
                  )
                  (branch
                     (rule "andRight" (formula "36"))
                     (branch
                        (rule "andRight" (formula "36"))
                        (branch
                            (builtin "One Step Simplification" (formula "1"))
                            (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "35")))
                           (rule "closeTrue" (formula "36"))
                        )
                        (branch
                            (builtin "One Step Simplification" (formula "1"))
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0") (ifseqformula "24"))
                           (rule "orRight" (formula "36"))
                           (rule "orRight" (formula "36"))
                           (rule "close" (formula "36") (ifseqformula "9"))
                        )
                     )
                     (branch
                         (builtin "One Step Simplification" (formula "1"))
                         (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "10")))
                        (rule "closeTrue" (formula "36"))
                     )
                  )
               )
               (branch "Usage"
                   (builtin "One Step Simplification" (formula "1"))
                   (builtin "One Step Simplification" (formula "37"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1,1") (ifseqformula "24"))
                  (rule "translateJavaMulInt" (formula "27") (term "0,1,0"))
                  (rule "translateJavaDivInt" (formula "27") (term "0,0,1,0"))
                  (rule "andLeft" (formula "27"))
                  (rule "andLeft" (formula "27"))
                  (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "27"))
                   (builtin "One Step Simplification" (formula "29"))
                  (rule "true_left" (formula "29"))
                  (rule "newSym_eq" (formula "28") (inst "l=l_0") (inst "newSymDef=mul(d_0, Z(0(#)))"))
                  (rule "times_zero_1" (formula "28") (term "1,1"))
                  (rule "add_zero_right" (formula "28") (term "1"))
                  (rule "applyEqRigid" (formula "29") (term "0,0") (ifseqformula "28"))
                  (rule "eqSymm" (formula "29"))
                  (rule "applyEqRigid" (formula "28") (term "0,0") (ifseqformula "29"))
                  (rule "applyEqRigid" (formula "39") (term "0,1,1,0,0,1,0") (ifseqformula "29"))
                  (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "29"))
                  (rule "applyEq" (formula "2") (term "1,1,0,1,0") (ifseqformula "29"))
                  (rule "applyEq" (formula "19") (term "0") (ifseqformula "20"))
                  (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "28"))
                  (rule "applyEqRigid" (formula "6") (term "0,0,0,1,1,1,0") (ifseqformula "28"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0,0,1,1,1,0"))
                  (rule "applyEqRigid" (formula "6") (term "0,0,0,2,0,0,1,1,0") (ifseqformula "28"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0,0,2,0,0,1,1,0"))
                  (rule "elim_double_block_2" (formula "38") (term "1"))
                  (rule "ifUnfold" (formula "38") (term "1") (inst "#boolv=x_6"))
                  (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_7"))
                  (rule "inequality_comparison_simple" (formula "38") (term "1"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "replace_known_left" (formula "38") (term "0,0,1,0") (ifseqformula "26"))
                   (builtin "One Step Simplification" (formula "38"))
                  (rule "ifSplit" (formula "38"))
                  (branch "if x_7 true"
                      (builtin "One Step Simplification" (formula "39"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "if x_7 false"
                      (builtin "One Step Simplification" (formula "39"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "blockEmpty" (formula "38") (term "1"))
                     (rule "compound_assignment_op_div" (formula "38") (term "1"))
                     (rule "compound_int_cast_expression" (formula "38") (term "1") (inst "#v=x_6"))
                     (rule "variableDeclarationAssign" (formula "38") (term "1"))
                     (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_8"))
                     (rule "remove_parentheses_right" (formula "38") (term "1"))
                     (rule "compound_division_2" (formula "38") (term "1") (inst "#v1=x_10") (inst "#v0=x_9"))
                     (rule "variableDeclarationAssign" (formula "38") (term "1"))
                     (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_9"))
                     (rule "assignment" (formula "38") (term "1"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "variableDeclarationAssign" (formula "38") (term "1"))
                     (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_10"))
                     (rule "remove_parentheses_right" (formula "38") (term "1"))
                     (rule "assignment" (formula "38") (term "1"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "assignmentDivisionInt" (formula "38"))
                     (branch "Case 1"
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "translateJavaDivInt" (formula "38") (term "0,1,0"))
                        (rule "applyEq" (formula "38") (term "0,1,0") (ifseqformula "27"))
                        (rule "widening_identity_cast_5" (formula "38") (term "1"))
                        (rule "assignment" (formula "38") (term "1"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "for_to_while" (formula "38") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
                        (rule "variableDeclarationAssign" (formula "38") (term "1"))
                        (rule "variableDeclaration" (formula "38") (term "1") (newnames "j"))
                        (rule "assignment" (formula "38") (term "1"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "elim_double_block_3" (formula "38") (term "1"))
                        (rule "loopScopeInvDia" (formula "38") (term "1") (newnames "j_0,o,f") (inst "#x=x_7") (inst "#variant=x_6") (inst "#permissionsBefore_LOOP=h_2") (inst "#savedHeapBefore_LOOP=h_1") (inst "#heapBefore_LOOP=h") (inst "anon_permissions_LOOP=anon_permissions_LOOP_1") (inst "anon_savedHeap_LOOP=anon_savedHeap_LOOP_1") (inst "anon_heap_LOOP=anon_heap_LOOP_1"))
                        (branch "Invariant Initially Valid"
                           (rule "andRight" (formula "38"))
                           (branch "Case 1"
                              (rule "andRight" (formula "38"))
                              (branch
                                 (rule "andRight" (formula "38"))
                                 (branch
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "leq_literals" (formula "38"))
                                    (rule "closeTrue" (formula "38"))
                                 )
                                 (branch
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "polySimp_homoEq" (formula "6") (term "1,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,1,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,1,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,1,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,1,1,1,0"))
                                    (rule "inEqSimp_leqRight" (formula "38"))
                                    (rule "add_zero_right" (formula "1") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "26") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1,0,0"))
                                    (rule "add_literals" (formula "2") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                                    (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "20"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                    (rule "polySimp_sepNegMonomial" (formula "7") (term "1,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "0,1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "0,1,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                    (rule "polySimp_mulLiterals" (formula "19") (term "1"))
                                    (rule "polySimp_elimOne" (formula "19") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "mul_literals" (formula "2") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,1,1,0"))
                                    (rule "mul_literals" (formula "7") (term "0,1,0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1,0,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "7") (term "0,0,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "1"))
                                    (rule "andLeft" (formula "16"))
                                    (rule "inEqSimp_homoInEq1" (formula "16"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                    (rule "mul_literals" (formula "16") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                    (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                                    (rule "add_literals" (formula "16") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "16") (term "1,0"))
                                    (rule "add_zero_right" (formula "16") (term "0"))
                                    (rule "leq_literals" (formula "16"))
                                    (rule "closeFalse" (formula "16"))
                                 )
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "38"))
                                 (rule "translateJavaSubInt" (formula "38") (term "0,2,0,1,1,0,1,0"))
                                 (rule "translateJavaSubInt" (formula "38") (term "0,0,0,0,1,0"))
                                 (rule "translateJavaAddInt" (formula "38") (term "0,2,1,1,1,0,1,0"))
                                 (rule "translateJavaSubInt" (formula "38") (term "1,0,1,1,0"))
                                 (rule "translateJavaAddInt" (formula "38") (term "0,2,0,1,1,1,0"))
                                 (rule "translateJavaSubInt" (formula "38") (term "1,1,0,0,1,0"))
                                 (rule "translateJavaSubInt" (formula "38") (term "0,0,1,0,1,0"))
                                 (rule "translateJavaMulInt" (formula "38") (term "1,0,2,0,1,1,0,1,0"))
                                 (rule "translateJavaMulInt" (formula "38") (term "0,0,0,0,0,1,0"))
                                 (rule "translateJavaMulInt" (formula "38") (term "1,0,0,1,0,1,0"))
                                 (rule "allRight" (formula "38") (inst "sk=i_0"))
                                 (rule "impRight" (formula "38"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "polySimp_homoEq" (formula "8") (term "1,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "40") (term "1,0,1"))
                                 (rule "mul_literals" (formula "40") (term "1,1,0,1"))
                                 (rule "polySimp_elimSub" (formula "40") (term "0,0,0,0"))
                                 (rule "mul_literals" (formula "40") (term "1,0,0,0,0"))
                                 (rule "polySimp_elimSub" (formula "40") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "40") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "40") (term "0,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "40") (term "0,2,0,1,1,0"))
                                 (rule "polySimp_homoEq" (formula "40") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "0,1,0,2,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,0,2,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "0,1,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "40") (term "1,0,1"))
                                 (rule "polySimp_addComm0" (formula "40") (term "1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "40") (term "0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "40") (term "0,2,0,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "40") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,1,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,1,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "27") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_gtToGeq" (formula "3"))
                                 (rule "mul_literals" (formula "3") (term "1,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,1,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "40") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "40") (term "1,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "1"))
                                 (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                                 (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "21"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "8") (term "1,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "0,1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "0,1,1,1,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "40") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "40") (term "0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "40") (term "0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "8") (term "0,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "mul_literals" (formula "3") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "26") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "4") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "39") (term "1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "39") (term "1,1,1,0"))
                                 (rule "mul_literals" (formula "39") (term "0,1,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "39") (term "1,1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                 (rule "mul_literals" (formula "2") (term "0,0,1"))
                                 (rule "elimGcdGeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "3") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "leq_literals" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "pullOutSelect" (formula "39") (term "0,1,0,0") (inst "selectSK=arr_0"))
                                 (rule "applyEq" (formula "40") (term "0,2,0,1,1") (ifseqformula "1"))
                                 (rule "applyEq" (formula "40") (term "1,0,2,0,1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "40") (term "0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "40") (term "0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "40") (term "0,0,1") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "40") (term "0,1,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "40") (term "0,2,0,1,1") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "40") (term "1,0,2,0,1,1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "40") (term "0,0,1,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "40") (term "0,0,0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "40") (term "0,0,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "39") (term "1,1,1") (inst "selectSK=arr_1"))
                                 (rule "applyEq" (formula "40") (term "1,1,1,1,0") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")) (ifInst ""  (formula "38")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "25"))
                                 (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "14"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")) (ifInst ""  (formula "14")))
                                 (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "32"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "40") (term "1,1,1") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "40") (term "1,1,1,1,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "pullOutSelect" (formula "39") (term "0,1,1") (inst "selectSK=arr_2"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "25"))
                                 (rule "inEqSimp_commuteGeq" (formula "40") (term "1,1"))
                                 (rule "pullOutSelect" (formula "40") (term "0,1,1,0") (inst "selectSK=arr_3"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "26"))
                                 (rule "inEqSimp_homoInEq0" (formula "41") (term "1,1,0"))
                                 (rule "polySimp_addComm1" (formula "41") (term "0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "41") (term "1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "41") (term "1,1,1,0"))
                                 (rule "mul_literals" (formula "41") (term "0,1,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "41") (term "1,1,1,1,0"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                                 (rule "times_zero_1" (formula "3") (term "0,0"))
                                 (rule "add_zero_left" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                 (rule "mul_literals" (formula "3") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                 (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "20") (term "0,0"))
                                 (rule "qeq_literals" (formula "20") (term "0"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "true_left" (formula "20"))
                                 (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_4"))
                                 (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "27"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "2") (term "0,0,0,0,0") (ifseqformula "37"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_5"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "38"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "nnf_imp2or" (formula "30") (term "0"))
                                 (rule "nnf_imp2or" (formula "13") (term "0"))
                                 (rule "nnf_imp2or" (formula "9") (term "0"))
                                 (rule "nnf_notAnd" (formula "30") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "30") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0,0"))
                                 (rule "mul_literals" (formula "30") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "30") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "30") (term "0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "30") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "30") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "30") (term "0,1,0,0,0"))
                                 (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "26"))
                                 (rule "true_left" (formula "26"))
                                 (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                 (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                 (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "25"))
                                  (builtin "One Step Simplification" (formula "25"))
                                 (rule "translateJavaSubInt" (formula "25") (term "3,0,1"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "andLeft" (formula "26"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "andLeft" (formula "26"))
                                 (rule "andLeft" (formula "25"))
                                 (rule "notLeft" (formula "25"))
                                 (rule "notLeft" (formula "25"))
                                 (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "39"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "39"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "39"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "39"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "polySimp_elimSub" (formula "31") (term "3,0"))
                                 (rule "mul_literals" (formula "31") (term "1,3,0"))
                                 (rule "polySimp_addComm0" (formula "31") (term "3,0"))
                                 (rule "ifthenelse_negated" (formula "2") (term "0"))
                                 (rule "ifthenelse_negated" (formula "3") (term "0"))
                                 (rule "ifthenelse_negated" (formula "4") (term "0"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "30"))
                                 (rule "inEqSimp_commuteLeq" (formula "28"))
                                 (rule "inEqSimp_commuteLeq" (formula "29"))
                                 (rule "inEqSimp_commuteLeq" (formula "25"))
                                 (rule "applyEq" (formula "29") (term "1") (ifseqformula "27"))
                                 (rule "applyEq" (formula "30") (term "1") (ifseqformula "27"))
                                 (rule "applyEq" (formula "50") (term "1,1,1,0,0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "9") (term "1,1,1,1,0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "28") (term "0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "31") (term "1,3,0") (ifseqformula "27"))
                                 (rule "applyEq" (formula "50") (term "1,1,0,1") (ifseqformula "27"))
                                 (rule "applyEq" (formula "13") (term "1,1,0,0,1,0") (ifseqformula "27"))
                                 (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "26"))
                                 (rule "polySimp_mulComm0" (formula "11") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "11") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "0"))
                                 (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "9") (term "0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "9") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                 (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                                 (rule "commute_or" (formula "51") (term "1,0"))
                                 (rule "jdiv_axiom" (formula "38") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "0,0,2,1"))
                                 (rule "eqSymm" (formula "38"))
                                 (rule "applyEqRigid" (formula "38") (term "1") (ifseqformula "39"))
                                 (rule "inEqSimp_subsumption6" (formula "38") (term "0,0") (ifseqformula "8"))
                                 (rule "greater_literals" (formula "38") (term "0,0,0,0"))
                                  (builtin "One Step Simplification" (formula "38"))
                                 (rule "mul_literals" (formula "38") (term "1,0,0,0"))
                                 (rule "leq_literals" (formula "38") (term "0,0,0"))
                                  (builtin "One Step Simplification" (formula "38"))
                                 (rule "polyDiv_pullOut" (formula "38") (term "0") (inst "polyDivCoeff=l_0"))
                                 (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,2,0"))
                                 (rule "equal_literals" (formula "38") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "38"))
                                 (rule "polySimp_homoEq" (formula "38"))
                                 (rule "polySimp_pullOutFactor0" (formula "38") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "38") (term "1,0,0,0,1,0"))
                                 (rule "times_zero_1" (formula "38") (term "0,0,0,1,0"))
                                 (rule "div_literals" (formula "38") (term "0,0,1,0"))
                                 (rule "add_zero_left" (formula "38") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "38") (term "0"))
                                 (rule "add_literals" (formula "38") (term "1,0"))
                                 (rule "times_zero_1" (formula "38") (term "0"))
                                  (builtin "One Step Simplification" (formula "38"))
                                 (rule "true_left" (formula "38"))
                                 (rule "commute_or" (formula "14") (term "1,1,0"))
                                 (rule "commute_or" (formula "36") (term "0,0"))
                                 (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "32") (term "0") (inst "i=i") (inst "j=j_1"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "32") (term "1,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "32") (term "0"))
                                 (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "32") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                                 (rule "mul_literals" (formula "32") (term "1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "32") (term "0,1,0"))
                                 (rule "nnf_notAnd" (formula "32") (term "0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,1,0"))
                                 (rule "commute_or" (formula "14") (term "0,0"))
                                 (rule "commute_or" (formula "51") (term "1"))
                                 (rule "commute_or" (formula "9") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "14") (term "0"))
                                 (rule "distr_forallAnd" (formula "14"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "commute_or_2" (formula "15") (term "0"))
                                 (rule "shift_paren_or" (formula "14") (term "0"))
                                 (rule "commute_or" (formula "15") (term "0,0"))
                                 (rule "cnf_rightDist" (formula "9") (term "0"))
                                 (rule "distr_forallAnd" (formula "9"))
                                 (rule "andLeft" (formula "9"))
                                 (rule "commute_or" (formula "10") (term "0"))
                                 (rule "commute_or" (formula "34") (term "0,0,1,0"))
                                 (rule "ifthenelse_split" (formula "3") (term "0"))
                                 (branch "self.sorted_splitters.<created> = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "52") (term "1,0,1") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "51") (term "1,1,0,1,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "inEqSimp_commuteLeq" (formula "50") (term "0,1"))
                                    (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "50") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0"))
                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,1,0"))
                                    (rule "mul_literals" (formula "50") (term "0,1,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "50") (term "1,1,0,1,0"))
                                    (rule "commute_or" (formula "50") (term "1"))
                                    (rule "commute_or" (formula "50") (term "1,0"))
                                    (rule "arrayLengthIsAShort" (formula "30") (term "0"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "true_left" (formula "30"))
                                    (rule "arrayLengthNotNegative" (formula "30") (term "0"))
                                    (rule "arrayLengthIsAShort" (formula "29") (term "0"))
                                     (builtin "One Step Simplification" (formula "29"))
                                    (rule "true_left" (formula "29"))
                                    (rule "arrayLengthNotNegative" (formula "29") (term "0"))
                                    (rule "all_pull_out3" (formula "33") (term "0"))
                                    (rule "shift_paren_or" (formula "33") (term "0,0"))
                                    (rule "shift_paren_or" (formula "33") (term "0,0,0"))
                                    (rule "allLeft" (formula "37") (inst "t=i_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "37") (term "0,0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "inEqSimp_contradInEq0" (formula "37") (term "0") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "37") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "37") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "37") (term "0,0,0"))
                                    (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "37") (term "0,0,0"))
                                    (rule "leq_literals" (formula "37") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=arr_6"))
                                    (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "35"))
                                     (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "51")) (ifInst ""  (formula "19")))
                                    (rule "polySimp_homoEq" (formula "38"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0"))
                                    (rule "elementOfArrayRangeConcrete" (formula "37") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "4")))
                                    (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0"))
                                    (rule "replace_known_left" (formula "37") (term "0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "applyEqReverse" (formula "38") (term "0,1,0,0") (ifseqformula "37"))
                                    (rule "hideAuxiliaryEq" (formula "37"))
                                    (rule "polySimp_addComm1" (formula "37") (term "0"))
                                    (rule "polySimp_sepNegMonomial" (formula "37"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                    (rule "polySimp_elimOne" (formula "37") (term "0"))
                                    (rule "allLeft" (formula "6") (inst "t=i_0"))
                                    (rule "replaceKnownSelect_taclet10001201010_0" (formula "6") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10001201010_1" (formula "6") (term "0,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "6") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "inEqSimp_contradInEq0" (formula "6") (term "0") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "6") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0,0"))
                                    (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0"))
                                    (rule "leq_literals" (formula "6") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "replace_known_left" (formula "54") (term "0,0,0") (ifseqformula "6"))
                                     (builtin "One Step Simplification" (formula "54"))
                                    (rule "allLeft" (formula "8") (inst "t=i_0"))
                                    (rule "replaceKnownSelect_taclet10001201010_0" (formula "8") (term "0,1"))
                                    (rule "replaceKnownAuxiliaryConstant_taclet10001201010_1" (formula "8") (term "0,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0") (ifseqformula "3"))
                                    (rule "qeq_literals" (formula "8") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "inEqSimp_contradInEq0" (formula "8") (term "0") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "8") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "8") (term "1,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "8") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0,0"))
                                    (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                    (rule "add_literals" (formula "8") (term "0,0,0"))
                                    (rule "leq_literals" (formula "8") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "8"))
                                    (rule "replace_known_left" (formula "55") (term "0,0") (ifseqformula "8"))
                                     (builtin "One Step Simplification" (formula "55"))
                                    (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "8"))
                                    (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                    (rule "mul_literals" (formula "6") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                    (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                    (rule "add_literals" (formula "6") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "6") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                    (rule "polySimp_mulLiterals" (formula "6") (term "1"))
                                    (rule "onlyCreatedObjectsAreReferencedFinal" (formula "52") (term "0") (ifseqformula "18") (ifseqformula "19"))
                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "onlyCreatedObjectsAreReferencedFinal" (formula "53") (term "1") (ifseqformula "19") (ifseqformula "20"))
                                    (rule "replace_known_left" (formula "1") (term "1") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                    (rule "true_left" (formula "1"))
                                    (rule "andRight" (formula "57"))
                                    (branch
                                       (rule "orRight" (formula "57"))
                                       (rule "inEqSimp_leqRight" (formula "58"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_strengthen1" (formula "9") (ifseqformula "58"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "1"))
                                       (rule "add_literals" (formula "9") (term "0,1"))
                                       (rule "add_zero_left" (formula "9") (term "1"))
                                       (rule "inEqSimp_contradEq7" (formula "58") (ifseqformula "9"))
                                       (rule "polySimp_rightDist" (formula "58") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "58") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "58") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "58") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "58") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "58") (term "0,0"))
                                       (rule "add_literals" (formula "58") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "58") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "58") (term "0,0"))
                                       (rule "leq_literals" (formula "58") (term "0"))
                                        (builtin "One Step Simplification" (formula "58"))
                                       (rule "false_right" (formula "58"))
                                       (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "11"))
                                       (rule "polySimp_mulAssoc" (formula "9") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                       (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                       (rule "mul_literals" (formula "9") (term "0,1"))
                                       (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "9"))
                                       (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0"))
                                       (rule "qeq_literals" (formula "8") (term "0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "allLeft" (formula "43") (inst "t=add(mul(l_0, Z(neglit(2(#)))),
    int::select(anon_heap_LOOP_0<<anonHeapFunction>>,
                indices,
                arr(i_0)))"))
                                       (rule "inEqSimp_homoInEq1" (formula "43") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "43") (term "0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "43") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "43") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "43") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "43") (term "0,0") (ifseqformula "9"))
                                       (rule "inEqSimp_homoInEq1" (formula "43") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "43") (term "0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "43") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "43") (term "1,0,0,0,0"))
                                       (rule "add_literals" (formula "43") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "43") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "pullOutSelect" (formula "43") (term "0,1") (inst "selectSK=arr_7"))
                                       (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "40"))
                                        (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "57")) (ifInst ""  (formula "24")))
                                       (rule "polySimp_homoEq" (formula "44") (term "1"))
                                       (rule "polySimp_addComm1" (formula "44") (term "0,1"))
                                       (rule "elementOfArrayRangeConcrete" (formula "43") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "inEqSimp_homoInEq0" (formula "43") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "43") (term "0,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "43") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "43") (term "0,0,0"))
                                       (rule "mul_literals" (formula "43") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "43") (term "0,0,0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "44") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1"))
                                       (rule "mul_literals" (formula "44") (term "0,1,1"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,1,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "43") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0"))
                                       (rule "replace_known_left" (formula "43") (term "0,0,0") (ifseqformula "9"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "commute_or" (formula "44"))
                                       (rule "allLeft" (formula "45") (inst "t=add(begin, i_0)"))
                                       (rule "inEqSimp_homoInEq0" (formula "45") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "45") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "45") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "45") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "45") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "45") (term "0,0,1,0"))
                                       (rule "polySimp_pullOutFactor3" (formula "45") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "45") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "45") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "45") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "45") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "45") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "45") (term "0,1,0"))
                                       (rule "pullOutSelect" (formula "45") (term "0,1") (inst "selectSK=arr_8"))
                                       (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "40"))
                                        (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "59")) (ifInst ""  (formula "24")))
                                       (rule "polySimp_homoEq" (formula "46") (term "1"))
                                       (rule "polySimp_addComm1" (formula "46") (term "0,1"))
                                       (rule "elementOfArrayRangeConcrete" (formula "45") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "45"))
                                       (rule "inEqSimp_homoInEq0" (formula "45") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "1,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "45") (term "1,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "45") (term "0,1,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "45") (term "0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "45") (term "0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor3b" (formula "45") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0,1,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "45") (term "0,0,0"))
                                       (rule "mul_literals" (formula "45") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "45") (term "0,0,0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "46") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "46") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "46") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1"))
                                       (rule "mul_literals" (formula "46") (term "0,1,1"))
                                       (rule "polySimp_elimOne" (formula "46") (term "1,1,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "45") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "45") (term "0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,0,0"))
                                       (rule "allLeft" (formula "17") (inst "t=i_0"))
                                       (rule "replaceKnownSelect_taclet10001201010_2" (formula "17") (term "1,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10001201010_4" (formula "17") (term "1,1"))
                                       (rule "replaceKnownSelect_taclet10001201010_0" (formula "17") (term "0,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10001201010_1" (formula "17") (term "0,1,0"))
                                       (rule "replaceKnownSelect_taclet10001201010_0" (formula "17") (term "0,2,0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10001201010_1" (formula "17") (term "0,2,0,1"))
                                       (rule "replaceKnownSelect_taclet10001201010_5" (formula "17") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet010001201010_11" (formula "17") (term "0,1"))
                                       (rule "inEqSimp_contradInEq0" (formula "17") (term "1,0,0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,0,1,0,0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "17") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
                                       (rule "leq_literals" (formula "17") (term "0,1,0,0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "5"))
                                       (rule "qeq_literals" (formula "17") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "allLeft" (formula "19") (inst "t=i_0"))
                                       (rule "replaceKnownSelect_taclet10001201010_2" (formula "19") (term "1,1,1"))
                                       (rule "replaceKnownSelect_taclet10001201010_0" (formula "19") (term "0,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10001201010_4" (formula "19") (term "1,1,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10001201010_1" (formula "19") (term "0,1,0"))
                                       (rule "replaceKnownSelect_taclet10001201010_0" (formula "19") (term "1,0,2,0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10001201010_1" (formula "19") (term "1,0,2,0,1"))
                                       (rule "replaceKnownSelect_taclet10001201010_6" (formula "19") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet010001201010_12" (formula "19") (term "0,1"))
                                       (rule "inEqSimp_contradEq7" (formula "19") (term "1,0") (ifseqformula "9"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "19") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_contradInEq0" (formula "19") (term "1,0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "19") (term "0,0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "1,0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "19") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "19") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "19") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "19") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "5"))
                                       (rule "qeq_literals" (formula "19") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "19"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_literals" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch
                                       (rule "orRight" (formula "57"))
                                       (rule "inEqSimp_geqRight" (formula "58"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_strengthen0" (formula "11") (ifseqformula "58"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "1"))
                                       (rule "add_literals" (formula "11") (term "0,1"))
                                       (rule "inEqSimp_contradEq3" (formula "58") (ifseqformula "11"))
                                       (rule "polySimp_rightDist" (formula "58") (term "1,0,0"))
                                       (rule "mul_literals" (formula "58") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "58") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "58") (term "0,0,0"))
                                       (rule "add_literals" (formula "58") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "58") (term "0,0"))
                                       (rule "add_literals" (formula "58") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "58") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "58") (term "0,0"))
                                       (rule "qeq_literals" (formula "58") (term "0"))
                                        (builtin "One Step Simplification" (formula "58"))
                                       (rule "false_right" (formula "58"))
                                       (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "11"))
                                       (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                       (rule "mul_literals" (formula "9") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                       (rule "polySimp_addComm1" (formula "9") (term "0,0"))
                                       (rule "add_literals" (formula "9") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                       (rule "polySimp_rightDist" (formula "9") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                       (rule "mul_literals" (formula "9") (term "0,1"))
                                       (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "9"))
                                       (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                       (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0"))
                                       (rule "qeq_literals" (formula "8") (term "0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "allLeft" (formula "43") (inst "t=add(begin, i_0)"))
                                       (rule "inEqSimp_homoInEq0" (formula "43") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "43") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "43") (term "0,0,1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "43") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "43") (term "1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "43") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "43") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "0,1,0"))
                                       (rule "pullOutSelect" (formula "43") (term "0,1") (inst "selectSK=arr_7"))
                                       (rule "simplifySelectOfAnonEQ" (formula "43") (ifseqformula "40"))
                                        (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "57")) (ifInst ""  (formula "24")))
                                       (rule "polySimp_homoEq" (formula "44") (term "1"))
                                       (rule "polySimp_addComm1" (formula "44") (term "0,1"))
                                       (rule "elementOfArrayRangeConcrete" (formula "43") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "inEqSimp_homoInEq0" (formula "43") (term "0,0,0"))
                                       (rule "mul_literals" (formula "43") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "43") (term "0,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "43") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "43") (term "1,0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "43") (term "0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor3b" (formula "43") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,0,1,0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "44") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "44") (term "1,1"))
                                       (rule "mul_literals" (formula "44") (term "0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1"))
                                       (rule "polySimp_elimOne" (formula "44") (term "1,1,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "43") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "43") (term "0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "43") (term "0,1,0,0"))
                                       (rule "allLeft" (formula "45") (inst "t=int::select(anon_heap_LOOP_0<<anonHeapFunction>>,
            indices,
            arr(i_0))"))
                                       (rule "pullOutSelect" (formula "45") (term "0,1") (inst "selectSK=arr_8"))
                                       (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "40"))
                                        (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "59")) (ifInst ""  (formula "24")))
                                       (rule "polySimp_homoEq" (formula "46") (term "1"))
                                       (rule "polySimp_addComm1" (formula "46") (term "0,1"))
                                       (rule "elementOfArrayRangeConcrete" (formula "45") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "45"))
                                       (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "46") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "46") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "46") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1"))
                                       (rule "mul_literals" (formula "46") (term "0,1,1"))
                                       (rule "polySimp_elimOne" (formula "46") (term "1,1,1"))
                                       (rule "commute_or_2" (formula "46"))
                                       (rule "commute_or" (formula "46") (term "0"))
                                       (rule "allLeft" (formula "17") (inst "t=i_0"))
                                       (rule "replaceKnownSelect_taclet10001201010_2" (formula "17") (term "1,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10001201010_4" (formula "17") (term "1,1"))
                                       (rule "replaceKnownSelect_taclet10001201010_0" (formula "17") (term "0,1,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10001201010_1" (formula "17") (term "0,1,0"))
                                       (rule "replaceKnownSelect_taclet10001201010_0" (formula "17") (term "0,2,0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10001201010_1" (formula "17") (term "0,2,0,1"))
                                       (rule "replaceKnownSelect_taclet10001201010_5" (formula "17") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet010001201010_11" (formula "17") (term "0,1"))
                                       (rule "inEqSimp_contradEq3" (formula "17") (term "1,0") (ifseqformula "11"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,1,0"))
                                       (rule "qeq_literals" (formula "17") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_contradInEq0" (formula "17") (term "1,0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "17") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "17") (term "0,0,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "1,0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "17") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "17") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "17") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "17") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_contradInEq0" (formula "17") (term "1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,0,1"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,0,1"))
                                       (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1"))
                                       (rule "add_literals" (formula "17") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "17") (term "1,0,0,1"))
                                       (rule "add_literals" (formula "17") (term "0,0,1"))
                                       (rule "leq_literals" (formula "17") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "17"))
                                       (rule "qeq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "closeFalse" (formula "5"))
                                    )
                                 )
                                 (branch "self.sorted_splitters.<created> = TRUE FALSE"
                                    (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "41"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "40"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "40"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "arrayLengthIsAShort" (formula "31") (term "0"))
                                     (builtin "One Step Simplification" (formula "31"))
                                    (rule "true_left" (formula "31"))
                                    (rule "arrayLengthNotNegative" (formula "31") (term "0"))
                                    (rule "arrayLengthNotNegative" (formula "30") (term "0"))
                                    (rule "arrayLengthIsAShort" (formula "31") (term "0"))
                                     (builtin "One Step Simplification" (formula "31"))
                                    (rule "true_left" (formula "31"))
                                    (rule "all_pull_out3" (formula "34") (term "0"))
                                    (rule "shift_paren_or" (formula "34") (term "0,0"))
                                    (rule "shift_paren_or" (formula "34") (term "0,0,0"))
                                    (rule "allLeft" (formula "38") (inst "t=i_0"))
                                    (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0") (ifseqformula "4"))
                                    (rule "qeq_literals" (formula "38") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "inEqSimp_contradInEq0" (formula "38") (term "0") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0"))
                                    (rule "add_literals" (formula "38") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "38") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "38") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "38") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "38") (term "0,0,0"))
                                    (rule "add_literals" (formula "38") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "38") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "38") (term "0,0,0"))
                                    (rule "leq_literals" (formula "38") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "pullOutSelect" (formula "38") (term "0") (inst "selectSK=arr_6"))
                                    (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "36"))
                                     (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "53")) (ifInst ""  (formula "20")))
                                    (rule "polySimp_homoEq" (formula "39"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0"))
                                    (rule "elementOfArrayRangeConcrete" (formula "38") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "5")))
                                    (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0"))
                                    (rule "replace_known_left" (formula "38") (term "0,0") (ifseqformula "4"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "applyEqReverse" (formula "39") (term "0,1,0,0") (ifseqformula "38"))
                                    (rule "hideAuxiliaryEq" (formula "38"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0"))
                                    (rule "polySimp_sepNegMonomial" (formula "38"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "0"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch " self.sorted_splitters.<created>@anon_heap_fill<<anonHeapFunction>> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "56") (term "1,0,1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "55") (term "1,1,0,1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "inEqSimp_commuteLeq" (formula "54") (term "0,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "54") (term "0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "54") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "54") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,1,0"))
                                       (rule "mul_literals" (formula "54") (term "0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "54") (term "1,1,0,1,0"))
                                       (rule "commute_or" (formula "54") (term "1"))
                                       (rule "commute_or" (formula "54") (term "1,0"))
                                       (rule "allLeft" (formula "7") (inst "t=i_0"))
                                       (rule "replaceKnownSelect_taclet10001201010_0" (formula "7") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10001201010_1" (formula "7") (term "0,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "7") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "inEqSimp_contradInEq0" (formula "7") (term "0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "7") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "7") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_addComm0" (formula "7") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0,0"))
                                       (rule "add_literals" (formula "7") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "7") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "7") (term "0,0,0"))
                                       (rule "leq_literals" (formula "7") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "replace_known_left" (formula "55") (term "1,0,0") (ifseqformula "7"))
                                        (builtin "One Step Simplification" (formula "55"))
                                       (rule "allLeft" (formula "6") (inst "t=i_0"))
                                       (rule "replaceKnownSelect_taclet10001201010_0" (formula "6") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10001201010_1" (formula "6") (term "0,1"))
                                       (rule "inEqSimp_contradInEq0" (formula "6") (term "1,0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "6") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "6") (term "0,0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "6") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "6") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_contradInEq1" (formula "6") (term "0") (ifseqformula "3"))
                                       (rule "qeq_literals" (formula "6") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_left" (formula "56") (term "0,0") (ifseqformula "6"))
                                        (builtin "One Step Simplification" (formula "56"))
                                       (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "8"))
                                       (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "6") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1"))
                                       (rule "onlyCreatedObjectsAreReferencedFinal" (formula "53") (term "0") (ifseqformula "18") (ifseqformula "19"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "48"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferencedFinal" (formula "54") (term "1") (ifseqformula "19") (ifseqformula "20"))
                                       (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "47"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch " self.sorted_splitters.<created>@anon_heap_fill<<anonHeapFunction>> = TRUE FALSE"
                                       (rule "applyEqReverse" (formula "56") (term "1,0,1") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "42"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "55") (term "1,1,0,1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "inEqSimp_commuteLeq" (formula "54") (term "0,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "54") (term "0,1,0"))
                                       (rule "polySimp_addComm1" (formula "54") (term "0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "54") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "54") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,1,0"))
                                       (rule "mul_literals" (formula "54") (term "0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "54") (term "1,1,0,1,0"))
                                       (rule "commute_or" (formula "54") (term "1"))
                                       (rule "commute_or" (formula "54") (term "1,0"))
                                       (rule "allLeft" (formula "6") (inst "t=i_0"))
                                       (rule "replaceKnownSelect_taclet10001201010_0" (formula "6") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10001201010_1" (formula "6") (term "0,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "6") (term "0,0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "6") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_contradInEq0" (formula "6") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "6") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_addComm0" (formula "6") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0"))
                                       (rule "leq_literals" (formula "6") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "replace_known_left" (formula "55") (term "1,0,0") (ifseqformula "6"))
                                        (builtin "One Step Simplification" (formula "55"))
                                       (rule "allLeft" (formula "5") (inst "t=i_0"))
                                       (rule "replaceKnownSelect_taclet10001201010_0" (formula "5") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet10001201010_1" (formula "5") (term "0,1"))
                                       (rule "inEqSimp_contradInEq0" (formula "5") (term "1,0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "5") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "5") (term "0,0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1,0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "5") (term "0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "5") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "5") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "inEqSimp_contradInEq1" (formula "5") (term "0") (ifseqformula "2"))
                                       (rule "qeq_literals" (formula "5") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "replace_known_left" (formula "56") (term "0,0") (ifseqformula "5"))
                                        (builtin "One Step Simplification" (formula "56"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "7"))
                                       (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "5") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                                       (rule "onlyCreatedObjectsAreReferencedFinal" (formula "53") (term "1") (ifseqformula "17") (ifseqformula "18"))
                                       (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "46"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                              )
                           )
                           (branch
                               (builtin "One Step Simplification" (formula "38"))
                              (rule "translateJavaSubInt" (formula "38") (term "1,0,1,1,0"))
                              (rule "translateJavaAddInt" (formula "38") (term "0,2,1,1,1,0,1,0"))
                              (rule "translateJavaSubInt" (formula "38") (term "0,0,0,0,1,0"))
                              (rule "translateJavaAddInt" (formula "38") (term "0,2,0,1,1,1,0"))
                              (rule "translateJavaSubInt" (formula "38") (term "0,2,0,1,1,0,1,0"))
                              (rule "translateJavaSubInt" (formula "38") (term "0,0,1,0,1,0"))
                              (rule "translateJavaSubInt" (formula "38") (term "1,1,0,0,1,0"))
                              (rule "allRight" (formula "38") (inst "sk=i_0"))
                              (rule "impRight" (formula "38"))
                              (rule "andLeft" (formula "1"))
                              (rule "polySimp_homoEq" (formula "8") (term "1,1,1,0"))
                              (rule "polySimp_elimSub" (formula "40") (term "0,0,0,0"))
                              (rule "mul_literals" (formula "40") (term "1,0,0,0,0"))
                              (rule "polySimp_elimSub" (formula "40") (term "1,1,0,0"))
                              (rule "mul_literals" (formula "40") (term "1,1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "40") (term "1,0,1"))
                              (rule "mul_literals" (formula "40") (term "1,1,0,1"))
                              (rule "polySimp_elimSub" (formula "40") (term "0,2,0,1,1,0"))
                              (rule "polySimp_elimSub" (formula "40") (term "0,0,1,0"))
                              (rule "polySimp_homoEq" (formula "40") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "40") (term "0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "40") (term "1,1,0,0"))
                              (rule "polySimp_addComm0" (formula "40") (term "1,0,1"))
                              (rule "polySimp_addComm0" (formula "40") (term "0,2,0,1,1,0"))
                              (rule "polySimp_addComm0" (formula "40") (term "1,1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,0,1,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,1,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,1,1,1,0"))
                              (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0"))
                              (rule "polySimp_mulAssoc" (formula "40") (term "0,1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "40") (term "0,1,0,0,1,0"))
                              (rule "inEqSimp_gtToGeq" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "4") (term "0,1,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0"))
                              (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulAssoc" (formula "27") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "27") (term "0,0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "27") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "27") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0,1,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "times_zero_1" (formula "2") (term "1,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "40") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "40") (term "1,1"))
                              (rule "inEqSimp_commuteLeq" (formula "1"))
                              (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0"))
                              (rule "polySimp_sepNegMonomial" (formula "8") (term "1,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "0,1,1,1,0"))
                              (rule "polySimp_elimOne" (formula "8") (term "0,1,1,1,0"))
                              (rule "polySimp_sepNegMonomial" (formula "40") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "40") (term "0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "40") (term "0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1"))
                              (rule "polySimp_elimOne" (formula "20") (term "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "mul_literals" (formula "3") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,1,1,0"))
                              (rule "mul_literals" (formula "8") (term "0,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,1,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0"))
                              (rule "mul_literals" (formula "8") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0,0"))
                              (rule "mul_literals" (formula "4") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "39") (term "1,1,1,0"))
                              (rule "polySimp_rightDist" (formula "39") (term "1,1,1,0"))
                              (rule "mul_literals" (formula "39") (term "0,1,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,1,0"))
                              (rule "polySimp_elimOne" (formula "39") (term "1,1,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "0,1,0,0,0"))
                              (rule "mul_literals" (formula "26") (term "0,0,1,0,0,0"))
                              (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "1") (term "0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Invariant Preserved and Used"
                            (builtin "One Step Simplification" (formula "39"))
                           (rule "translateJavaSubInt" (formula "39") (term "0,0,1,0,1,0,1,0,0"))
                           (rule "translateJavaAddInt" (formula "39") (term "0,2,1,1,1,0,1,0,1,0"))
                           (rule "translateJavaSubInt" (formula "39") (term "0,0,0,0,1,0,1,0,0"))
                           (rule "translateJavaSubInt" (formula "39") (term "0,0,1,0,1,0,1,0"))
                           (rule "translateJavaSubInt" (formula "39") (term "1,1,0,0,1,0,1,0,0"))
                           (rule "translateJavaSubInt" (formula "39") (term "0,2,0,1,1,0,1,0,1,0"))
                           (rule "translateJavaSubInt" (formula "39") (term "0,1,1,1,0,1,1"))
                           (rule "translateJavaSubInt" (formula "39") (term "0,0,0,0,1,0,1,0,0,1,1,0,1,1"))
                           (rule "translateJavaSubInt" (formula "39") (term "1,1,0,0,1,0,1,0"))
                           (rule "translateJavaSubInt" (formula "39") (term "0,2,0,1,1,0,1,0,1,0,0"))
                           (rule "translateJavaAddInt" (formula "39") (term "0,2,0,1,1,1,0,1,0,0"))
                           (rule "translateJavaSubInt" (formula "39") (term "1,1,0,0,1,0,1,0,0,1,1,0,1,1"))
                           (rule "translateJavaSubInt" (formula "39") (term "0,0,0,0,1,0,1,0"))
                           (rule "translateJavaSubInt" (formula "39") (term "1,0,1,1,0,1,0,0"))
                           (rule "translateJavaAddInt" (formula "39") (term "0,2,1,1,1,0,1,0,1,0,0"))
                           (rule "translateJavaSubInt" (formula "39") (term "0,0,1,0,1,0,1,0,0,1,1,0,1,1"))
                           (rule "translateJavaSubInt" (formula "39") (term "0,2,0,1,1,0,1,0,1,0,0,1,1,0,1,1"))
                           (rule "translateJavaAddInt" (formula "39") (term "0,2,1,1,1,0,1,0,1,0,0,1,1,0,1,1"))
                           (rule "translateJavaSubInt" (formula "39") (term "1,0,1,1,0,1,0,0,1,1,0,1,1"))
                           (rule "translateJavaAddInt" (formula "39") (term "0,2,0,1,1,1,0,1,0,0,1,1,0,1,1"))
                           (rule "translateJavaSubInt" (formula "39") (term "0,0,0,0,1,0,1,0,0,0,1,1,0,1,1"))
                           (rule "translateJavaSubInt" (formula "39") (term "1,1,0,0,1,0,1,0,0,0,1,1,0,1,1"))
                           (rule "translateJavaSubInt" (formula "39") (term "0,0,1,0,1,0,1,0,0,0,1,1,0,1,1"))
                           (rule "translateJavaSubInt" (formula "39") (term "0,2,0,1,1,0,1,0,1,0,0,0,1,1,0,1,1"))
                           (rule "translateJavaAddInt" (formula "39") (term "0,2,1,1,1,0,1,0,1,0,0,0,1,1,0,1,1"))
                           (rule "translateJavaSubInt" (formula "39") (term "1,0,1,1,0,1,0,0,0,1,1,0,1,1"))
                           (rule "translateJavaAddInt" (formula "39") (term "0,2,0,1,1,1,0,1,0,0,0,1,1,0,1,1"))
                           (rule "translateJavaSubInt" (formula "39") (term "0,1,1,0,1"))
                           (rule "translateJavaAddInt" (formula "39") (term "0,2,0,1,1,1,0,1,0"))
                           (rule "translateJavaSubInt" (formula "39") (term "1,0,1,1,0,1,0"))
                           (rule "translateJavaMulInt" (formula "39") (term "1,0,0,1,0,1,0,1,0,0"))
                           (rule "translateJavaMulInt" (formula "39") (term "0,0,0,0,0,1,0,1,0,0"))
                           (rule "translateJavaMulInt" (formula "39") (term "1,0,2,0,1,1,0,1,0,1,0,0"))
                           (rule "translateJavaMulInt" (formula "39") (term "0,0,0,0,0,1,0,1,0,0,0,1,1,0,1,1"))
                           (rule "translateJavaMulInt" (formula "39") (term "1,0,0,1,0,1,0,1,0,0,0,1,1,0,1,1"))
                           (rule "translateJavaMulInt" (formula "39") (term "1,0,2,0,1,1,0,1,0,1,0,0,0,1,1,0,1,1"))
                           (rule "impRight" (formula "39"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "andLeft" (formula "1"))
                           (rule "eqSymm" (formula "43") (term "1,0,0,1,0,1,1,0,1"))
                           (rule "polySimp_elimSub" (formula "43") (term "0,2,0,1,1,0,1,0,1,0,0,0,1,1,0,1"))
                           (rule "polySimp_elimSub" (formula "43") (term "0,0,0,0,1,0,1,0,0,1,1,0,1"))
                           (rule "mul_literals" (formula "43") (term "1,0,0,0,0,1,0,1,0,0,1,1,0,1"))
                           (rule "polySimp_elimSub" (formula "43") (term "1,1,0,0,1,0,1,0,0,1,1,0,1"))
                           (rule "mul_literals" (formula "43") (term "1,1,1,0,0,1,0,1,0,0,1,1,0,1"))
                           (rule "polySimp_elimSub" (formula "43") (term "0,0,1,0,1,0,1,0,0,1,1,0,1"))
                           (rule "polySimp_elimSub" (formula "43") (term "0,2,0,1,1,0,1,0,1,0,0,1,1,0,1"))
                           (rule "polySimp_elimSub" (formula "43") (term "1,0,1,1,0,1,0,0,0,1,1,0,1"))
                           (rule "mul_literals" (formula "43") (term "1,1,0,1,1,0,1,0,0,0,1,1,0,1"))
                           (rule "polySimp_elimSub" (formula "43") (term "0,0,0,0,1,0,1,0,0,0,1,1,0,1"))
                           (rule "mul_literals" (formula "43") (term "1,0,0,0,0,1,0,1,0,0,0,1,1,0,1"))
                           (rule "polySimp_elimSub" (formula "43") (term "0,1,1,0"))
                           (rule "polySimp_elimSub" (formula "43") (term "1,1,0,0,1,0,1,0,0,0,1,1,0,1"))
                           (rule "mul_literals" (formula "43") (term "1,1,1,0,0,1,0,1,0,0,0,1,1,0,1"))
                           (rule "polySimp_elimSub" (formula "43") (term "0,0,1,0,1,0,1,0,0,0,1,1,0,1"))
                           (rule "polySimp_elimSub" (formula "43") (term "0,1,1,1,0,1"))
                           (rule "polySimp_elimSub" (formula "43") (term "1,0,1,1,0,1,0,0,1,1,0,1"))
                           (rule "mul_literals" (formula "43") (term "1,1,0,1,1,0,1,0,0,1,1,0,1"))
                           (rule "polySimp_elimSub" (formula "4") (term "0,2,0,1,1,0,1,0"))
                           (rule "polySimp_elimSub" (formula "4") (term "1,0,1,1,0"))
                           (rule "mul_literals" (formula "4") (term "1,1,0,1,1,0"))
                           (rule "polySimp_elimSub" (formula "4") (term "0,0,0,0,1,0"))
                           (rule "mul_literals" (formula "4") (term "1,0,0,0,0,1,0"))
                           (rule "polySimp_elimSub" (formula "4") (term "1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "4") (term "1,1,1,0,0,1,0"))
                           (rule "polySimp_elimSub" (formula "4") (term "0,0,1,0,1,0"))
                           (rule "polySimp_elimSub" (formula "3") (term "1,0,1,1,0"))
                           (rule "mul_literals" (formula "3") (term "1,1,0,1,1,0"))
                           (rule "polySimp_elimSub" (formula "3") (term "1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "3") (term "1,1,1,0,0,1,0"))
                           (rule "polySimp_elimSub" (formula "3") (term "0,2,0,1,1,0,1,0"))
                           (rule "polySimp_elimSub" (formula "3") (term "0,0,1,0,1,0"))
                           (rule "polySimp_elimSub" (formula "3") (term "0,0,0,0,1,0"))
                           (rule "mul_literals" (formula "3") (term "1,0,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,2,0,1,1,0,1,0,1,0,0,0,1,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,0,2,0,1,1,0,1,0,1,0,0,0,1,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "43") (term "0,0,0,0,0,1,0,1,0,0,0,1,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,0,1,0,1,0,1,0,0,0,1,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1,0,1,0,1,0,0,0,1,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,2,0,1,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,2,0,1,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "3") (term "0,0,0,0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "43") (term "0,0,0,0,1,0,1,0,0,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "43") (term "1,1,0,0,1,0,1,0,0,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "43") (term "0,0,1,0,1,0,1,0,0,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "43") (term "0,2,0,1,1,0,1,0,1,0,0,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "43") (term "1,0,1,1,0,1,0,0,0,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "43") (term "0,1,1,0"))
                           (rule "polySimp_addComm0" (formula "43") (term "1,1,0,0,1,0,1,0,0,0,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "43") (term "0,1,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "43") (term "1,0,1,1,0,1,0,0,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "4") (term "0,2,0,1,1,0,1,0"))
                           (rule "polySimp_addComm0" (formula "4") (term "1,0,1,1,0"))
                           (rule "polySimp_addComm0" (formula "4") (term "0,0,0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "4") (term "1,1,0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "4") (term "0,0,1,0,1,0"))
                           (rule "polySimp_addComm0" (formula "3") (term "1,0,1,1,0"))
                           (rule "polySimp_addComm0" (formula "3") (term "1,1,0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "43") (term "0,2,0,1,1,0,1,0,1,0,0,0,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "43") (term "0,0,0,0,1,0,1,0,0,0,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "43") (term "0,0,1,0,1,0,1,0,0,0,1,1,0,1"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,2,0,1,1,0,1,0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,0,1,0,1,0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "43") (term "1,1,1,0,1,0,0,1,1,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "43") (term "1,1,1,0,1,0,0,0,1,1,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,1,0,0,1,1,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "43") (term "1,0,0,0,0,1,1,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,1,0,0,0,1,1,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,0,0,1,1,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "4") (term "1,1,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "3") (term "1,1,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "2"))
                           (rule "inEqSimp_commuteLeq" (formula "1"))
                           (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,1,0,1,0,0,1,1,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,1,0,1,0,0,0,1,1,0,1"))
                           (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,1,0"))
                           (rule "variableDeclaration" (formula "43") (term "1") (newnames "x_11"))
                           (rule "applyEq" (formula "2") (term "0") (ifseqformula "24"))
                           (rule "inEqSimp_commuteGeq" (formula "2"))
                           (rule "applyEq" (formula "3") (term "1,1,0,0") (ifseqformula "24"))
                           (rule "applyEq" (formula "43") (term "1,0,1,1,0") (ifseqformula "24"))
                           (rule "polySimp_addComm0" (formula "43") (term "0,1,1,0"))
                           (rule "commute_or" (formula "4") (term "1,0,1,0"))
                           (rule "commute_or" (formula "3") (term "1,0,1,0"))
                           (rule "commute_and" (formula "4") (term "0,0"))
                           (rule "commute_and" (formula "3") (term "0,0"))
                           (rule "onlyCreatedObjectsAreReferencedFinal" (formula "34") (term "0") (ifseqformula "13") (ifseqformula "14"))
                           (rule "onlyCreatedObjectsAreReferencedFinal" (formula "37") (term "0") (ifseqformula "14") (ifseqformula "15"))
                           (rule "commute_and_2" (formula "6") (term "1,0"))
                           (rule "commute_and_2" (formula "5") (term "1,0"))
                           (rule "ifElseUnfold" (formula "45") (term "1") (inst "#boolv=x_12"))
                           (rule "variableDeclaration" (formula "45") (term "1") (newnames "x_12"))
                           (rule "compound_less_than_comparison_2" (formula "45") (term "1") (inst "#v1=x_14") (inst "#v0=x_13"))
                           (rule "variableDeclarationAssign" (formula "45") (term "1"))
                           (rule "variableDeclaration" (formula "45") (term "1") (newnames "x_13"))
                           (rule "assignment" (formula "45") (term "1"))
                            (builtin "One Step Simplification" (formula "45"))
                           (rule "variableDeclarationAssign" (formula "45") (term "1"))
                           (rule "variableDeclaration" (formula "45") (term "1") (newnames "x_14"))
                           (rule "assignment_read_length" (formula "45"))
                           (branch "Normal Execution (_indices != null)"
                               (builtin "One Step Simplification" (formula "45"))
                              (rule "applyEq" (formula "45") (term "0,1,0") (ifseqformula "26"))
                              (rule "less_than_comparison_simple" (formula "45") (term "1"))
                               (builtin "One Step Simplification" (formula "45"))
                              (rule "ifElseSplit" (formula "45"))
                              (branch "if x_12 true"
                                  (builtin "One Step Simplification" (formula "46"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "variableDeclarationAssign" (formula "46") (term "1"))
                                 (rule "variableDeclaration" (formula "46") (term "1") (newnames "value"))
                                 (rule "eval_order_array_access5" (formula "46") (term "1") (inst "#v1=x_12") (inst "#ar1=x_arr"))
                                 (rule "variableDeclarationAssign" (formula "46") (term "1"))
                                 (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_arr"))
                                 (rule "assignment" (formula "46") (term "1"))
                                  (builtin "One Step Simplification" (formula "46"))
                                 (rule "variableDeclarationAssign" (formula "46") (term "1"))
                                 (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_15"))
                                 (rule "assignmentAdditionInt" (formula "46") (term "1"))
                                 (branch "Overflow check"
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "closeTrue" (formula "46"))
                                 )
                                 (branch "Usage"
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "translateJavaAddInt" (formula "46") (term "0,1,0"))
                                    (rule "assignment_array2" (formula "46"))
                                    (branch "Normal Execution (x_arr != null)"
                                        (builtin "One Step Simplification" (formula "46"))
                                       (rule "pullOutSelect" (formula "46") (term "0,1,0") (inst "selectSK=arr_0"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "45")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "32"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "20"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfAnon" (formula "1"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")) (ifInst ""  (formula "45")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "32"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "20"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "32"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")) (ifInst ""  (formula "20")))
                                       (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                       (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "39"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "47") (term "0,1,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "variableDeclarationAssign" (formula "46") (term "1"))
                                       (rule "variableDeclaration" (formula "46") (term "1") (newnames "index_1"))
                                       (rule "assignment_array2" (formula "46"))
                                       (branch "Normal Execution (_indices != null)"
                                           (builtin "One Step Simplification" (formula "46"))
                                          (rule "pullOutSelect" (formula "46") (term "0,1,0") (inst "selectSK=arr_1"))
                                          (rule "simplifySelectOfAnon" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "47") (term "0,1,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "eval_order_array_access3" (formula "46") (term "1") (inst "#v1=x_13") (inst "#v2=x_12") (inst "#v0=x_arr"))
                                          (rule "variableDeclarationAssign" (formula "46") (term "1"))
                                          (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_arr_1"))
                                          (rule "assignment" (formula "46") (term "1"))
                                           (builtin "One Step Simplification" (formula "46"))
                                          (rule "variableDeclarationAssign" (formula "46") (term "1"))
                                          (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_16"))
                                          (rule "assignment" (formula "46") (term "1"))
                                           (builtin "One Step Simplification" (formula "46"))
                                          (rule "variableDeclarationAssign" (formula "46") (term "1"))
                                          (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_17"))
                                          (rule "condition" (formula "46") (term "1"))
                                          (rule "ifElseUnfold" (formula "46") (term "1") (inst "#boolv=x_18"))
                                          (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_18"))
                                          (rule "compound_less_than_comparison_1" (formula "46") (term "1") (inst "#v0=x_19"))
                                          (rule "variableDeclarationAssign" (formula "46") (term "1"))
                                          (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_19"))
                                          (rule "eval_order_array_access4" (formula "46") (term "1") (inst "#v0=x_arr_2"))
                                          (rule "variableDeclarationAssign" (formula "46") (term "1"))
                                          (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_arr_2"))
                                          (rule "assignment_read_attribute_this_final" (formula "46"))
                                           (builtin "One Step Simplification" (formula "46"))
                                          (rule "eval_order_array_access5" (formula "46") (term "1") (inst "#v1=x_20") (inst "#ar1=x_arr_3"))
                                          (rule "variableDeclarationAssign" (formula "46") (term "1"))
                                          (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_arr_3"))
                                          (rule "assignment" (formula "46") (term "1"))
                                           (builtin "One Step Simplification" (formula "46"))
                                          (rule "variableDeclarationAssign" (formula "46") (term "1"))
                                          (rule "variableDeclaration" (formula "46") (term "1") (newnames "x_20"))
                                          (rule "assignmentSubtractionInt" (formula "46") (term "1"))
                                          (branch "Overflow check"
                                              (builtin "One Step Simplification" (formula "46"))
                                             (rule "closeTrue" (formula "46"))
                                          )
                                          (branch "Usage"
                                              (builtin "One Step Simplification" (formula "46"))
                                             (rule "translateJavaSubInt" (formula "46") (term "0,1,0"))
                                             (rule "polySimp_elimSub" (formula "46") (term "0,1,0"))
                                             (rule "polySimp_addComm0" (formula "46") (term "0,1,0"))
                                             (rule "assignment_array2" (formula "46"))
                                             (branch "Normal Execution (x_arr_3 != null)"
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "pullOutSelect" (formula "46") (term "0,1,0") (inst "selectSK=arr_2"))
                                                (rule "simplifySelectOfAnon" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "32"))
                                                (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_3"))
                                                (rule "simplifySelectOfAnon" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "33"))
                                                (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_4"))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "44"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "commute_or_2" (formula "3") (term "0,1,0,0"))
                                                (rule "less_than_comparison_simple" (formula "49") (term "1"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "ifElseSplit" (formula "49"))
                                                (branch "if x_18 true"
                                                    (builtin "One Step Simplification" (formula "50"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "assignment" (formula "50") (term "1"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "blockEmpty" (formula "50") (term "1"))
                                                   (rule "assignment_to_primitive_array_component" (formula "50"))
                                                   (branch "Normal Execution (x_arr_1 != null)"
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "blockEmpty" (formula "50") (term "1"))
                                                      (rule "preincrement" (formula "50") (term "1"))
                                                      (rule "compound_int_cast_expression" (formula "50") (term "1") (inst "#v=x_12"))
                                                      (rule "variableDeclarationAssign" (formula "50") (term "1"))
                                                      (rule "variableDeclaration" (formula "50") (term "1") (newnames "x_21"))
                                                      (rule "remove_parentheses_right" (formula "50") (term "1"))
                                                      (rule "assignmentAdditionInt" (formula "50") (term "1"))
                                                      (branch "Overflow check"
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "closeTrue" (formula "50"))
                                                      )
                                                      (branch "Usage"
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "translateJavaAddInt" (formula "50") (term "0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "50") (term "0,1,0"))
                                                         (rule "widening_identity_cast_5" (formula "50") (term "1"))
                                                         (rule "assignment" (formula "50") (term "1"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "blockEmpty" (formula "50") (term "1"))
                                                         (rule "lsContinue" (formula "50") (term "1"))
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "andRight" (formula "50"))
                                                         (branch "Case 1"
                                                            (rule "andRight" (formula "50"))
                                                            (branch "Case 1"
                                                               (rule "andRight" (formula "50"))
                                                               (branch "Case 1"
                                                                  (rule "andRight" (formula "50"))
                                                                  (branch
                                                                     (rule "andRight" (formula "50"))
                                                                     (branch
                                                                        (rule "polySimp_homoEq" (formula "10") (term "1,1,1,0"))
                                                                        (rule "polySimp_homoEq" (formula "18") (term "1,1,1,0"))
                                                                        (rule "polySimp_homoEq" (formula "11") (term "1,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "10") (term "1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "18") (term "1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "11") (term "0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "18") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,1,0"))
                                                                        (rule "inEqSimp_geqRight" (formula "50"))
                                                                        (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                        (rule "add_literals" (formula "1") (term "0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "38") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "38") (term "0,0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "38") (term "0,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "6"))
                                                                        (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "19") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_gtToGeq" (formula "14"))
                                                                        (rule "mul_literals" (formula "14") (term "1,0,0"))
                                                                        (rule "add_literals" (formula "14") (term "0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "11") (term "1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "11") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "11") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "19") (term "1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "19") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "12") (term "1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "12") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "12") (term "0,1,1,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                                        (rule "polySimp_mulLiterals" (formula "31") (term "1"))
                                                                        (rule "polySimp_elimOne" (formula "31") (term "1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                        (rule "mul_literals" (formula "1") (term "1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,0"))
                                                                        (rule "mul_literals" (formula "12") (term "0,1,0,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "12") (term "1,1,0,1,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "19") (term "1,0,1,1,0"))
                                                                        (rule "mul_literals" (formula "19") (term "0,1,0,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "19") (term "1,1,0,1,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,0"))
                                                                        (rule "mul_literals" (formula "11") (term "0,1,0,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "11") (term "1,1,0,1,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                                        (rule "mul_literals" (formula "14") (term "1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                                        (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                                                                        (rule "mul_literals" (formula "6") (term "0,0,1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "15") (term "0,0,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "19") (term "0,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "19") (term "0,0,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "11") (term "0,0,1,0,0,0"))
                                                                        (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "6"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0"))
                                                                        (rule "mul_literals" (formula "10") (term "0,0,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "10") (term "1,0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                                        (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "10") (term "0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "10") (term "0,0"))
                                                                        (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "10") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "10") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "10"))
                                                                        (rule "true_left" (formula "10"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "9"))
                                                                        (rule "qeq_literals" (formula "1") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "closeFalse" (formula "1"))
                                                                     )
                                                                     (branch
                                                                        (rule "polySimp_homoEq" (formula "10") (term "1,1,1,0"))
                                                                        (rule "polySimp_homoEq" (formula "18") (term "1,1,1,0"))
                                                                        (rule "polySimp_homoEq" (formula "11") (term "1,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "10") (term "1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "18") (term "1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "11") (term "0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "18") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,1,0"))
                                                                        (rule "inEqSimp_geqRight" (formula "50"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                        (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                        (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                        (rule "inEqSimp_gtToGeq" (formula "14"))
                                                                        (rule "mul_literals" (formula "14") (term "1,0,0"))
                                                                        (rule "add_literals" (formula "14") (term "0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "6"))
                                                                        (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "19") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "38") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "38") (term "0,0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "38") (term "0,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0"))
                                                                        (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "32"))
                                                                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "11") (term "1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "11") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "11") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "19") (term "1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "19") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "12") (term "1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "12") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "12") (term "0,1,1,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                                        (rule "polySimp_mulLiterals" (formula "31") (term "1"))
                                                                        (rule "polySimp_elimOne" (formula "31") (term "1"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                                        (rule "mul_literals" (formula "14") (term "1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "19") (term "1,0,1,1,0"))
                                                                        (rule "mul_literals" (formula "19") (term "0,1,0,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "19") (term "1,1,0,1,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,0"))
                                                                        (rule "mul_literals" (formula "11") (term "0,1,0,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "11") (term "1,1,0,1,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,0"))
                                                                        (rule "mul_literals" (formula "12") (term "0,1,0,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "12") (term "1,1,0,1,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "15") (term "0,0,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                                        (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                                                                        (rule "mul_literals" (formula "6") (term "0,0,1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "19") (term "0,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "19") (term "0,0,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "11") (term "0,0,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                        (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "6"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0"))
                                                                        (rule "mul_literals" (formula "10") (term "0,0,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "10") (term "1,0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                                        (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "10") (term "0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "10") (term "0,0"))
                                                                        (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "10") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "10") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "10"))
                                                                        (rule "true_left" (formula "10"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "1"))
                                                                        (rule "andLeft" (formula "6"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                        (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                                                                        (rule "mul_literals" (formula "6") (term "0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                                        (rule "add_literals" (formula "6") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "6") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "6") (term "0"))
                                                                        (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                                        (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "6") (term "0"))
                                                                        (rule "add_literals" (formula "6") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "6") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "6") (term "0"))
                                                                        (rule "leq_literals" (formula "6"))
                                                                        (rule "closeFalse" (formula "6"))
                                                                     )
                                                                  )
                                                                  (branch "Case 2"
                                                                     (rule "allRight" (formula "50") (inst "sk=i_0") (userinteraction))
                                                                     (rule "allLeftHide" (formula "10") (inst "t=i_0") (userinteraction))
                                                                     (rule "impRight" (formula "50"))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "polySimp_homoEq" (formula "20") (term "1,1,1,0"))
                                                                     (rule "polySimp_homoEq" (formula "12") (term "1,1,1"))
                                                                     (rule "polySimp_homoEq" (formula "13") (term "1,1,1,0"))
                                                                     (rule "polySimp_homoEq" (formula "52") (term "0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,1"))
                                                                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "20") (term "1,0,1,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,1,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,1,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,1"))
                                                                     (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,1,1,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,1,1,1"))
                                                                     (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1,1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0,1,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0,1,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "52") (term "0,1,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "20") (term "0,1,1,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,1"))
                                                                     (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_gtToGeq" (formula "15"))
                                                                     (rule "mul_literals" (formula "15") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "15") (term "0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "39") (term "0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "39") (term "0,0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "20") (term "0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "20") (term "0,1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0"))
                                                                     (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,1"))
                                                                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,1"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "7"))
                                                                     (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "16") (term "0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "52") (term "1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,1,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "1"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                     (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "33"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                     (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "2"))
                                                                      (builtin "One Step Simplification" (formula "12"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "20") (term "1,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "20") (term "0,1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "20") (term "0,1,1,1,0"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "13") (term "1,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "13") (term "0,1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "13") (term "0,1,1,1,0"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "52") (term "0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "52") (term "0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "52") (term "0,0,1,0"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "12") (term "1,1,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "12") (term "0,1,1,1"))
                                                                     (rule "polySimp_elimOne" (formula "12") (term "0,1,1,1"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                                                     (rule "polySimp_mulLiterals" (formula "32") (term "1"))
                                                                     (rule "polySimp_elimOne" (formula "32") (term "1"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                                     (rule "mul_literals" (formula "15") (term "1"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "20") (term "1,0,1,1,0"))
                                                                     (rule "mul_literals" (formula "20") (term "0,1,0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "20") (term "1,1,0,1,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1,0"))
                                                                     (rule "mul_literals" (formula "13") (term "0,1,0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "13") (term "1,1,0,1,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "51") (term "1,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "51") (term "1,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,1,0"))
                                                                     (rule "mul_literals" (formula "51") (term "0,1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "51") (term "1,1,1,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "38") (term "0,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "38") (term "0,0,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "20") (term "0,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "20") (term "0,0,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                                     (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                                     (rule "polySimp_rightDist" (formula "7") (term "0,1"))
                                                                     (rule "mul_literals" (formula "7") (term "0,0,1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "16") (term "0,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "16") (term "0,0,1,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                                     (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,1"))
                                                                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1"))
                                                                     (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,1"))
                                                                     (rule "mul_literals" (formula "12") (term "0,1,0,1,1"))
                                                                     (rule "polySimp_elimOne" (formula "12") (term "1,1,0,1,1"))
                                                                     (rule "inEqSimp_subsumption0" (formula "12") (term "0") (ifseqformula "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "12") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "12") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "12") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "12") (term "0,0,0"))
                                                                     (rule "qeq_literals" (formula "12") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "12"))
                                                                     (rule "andLeft" (formula "12"))
                                                                     (rule "andLeft" (formula "12"))
                                                                     (rule "andLeft" (formula "12"))
                                                                     (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "7"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0"))
                                                                     (rule "mul_literals" (formula "11") (term "0,0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "11") (term "1,0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                                                                     (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "11") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "11") (term "0,0"))
                                                                     (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "11") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "11") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "11"))
                                                                     (rule "true_left" (formula "11"))
                                                                     (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                                     (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,1,0"))
                                                                     (rule "leq_literals" (formula "17") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "17"))
                                                                     (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                                                     (rule "polySimp_addLiterals" (formula "17") (term "0,0,0,0"))
                                                                     (rule "add_zero_right" (formula "17") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                                                     (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "17") (term "0,0"))
                                                                     (rule "leq_literals" (formula "17") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "17"))
                                                                     (rule "pullOutSelect" (formula "53") (term "0,2,0,1,1") (inst "selectSK=arr_5"))
                                                                     (rule "applyEq" (formula "54") (term "0,0,1,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "54") (term "0,1,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "54") (term "0,0,1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "54") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "54") (term "1,0,2,0,1,1,0") (ifseqformula "1"))
                                                                     (rule "simplifySelectOfStore" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "castDel" (formula "1") (term "1,0"))
                                                                     (rule "polySimp_homoEq" (formula "54") (term "0,1"))
                                                                     (rule "polySimp_addComm1" (formula "54") (term "0,0,1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "54") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "54") (term "0,1,0,0"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "54") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "54") (term "1,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "54") (term "1,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,1"))
                                                                     (rule "mul_literals" (formula "54") (term "0,1,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "54") (term "1,1,0,1"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0"))
                                                                     (rule "mul_literals" (formula "54") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0"))
                                                                     (rule "inEqSimp_contradEq3" (formula "1") (term "0,0") (ifseqformula "2"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                                     (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "13") (term "0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "15") (term "1,0,2,0,0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                                                     (rule "applyEq" (formula "14") (term "0,2,0,1") (ifseqformula "1"))
                                                                     (rule "simplifySelectOfAnon" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "applyEqReverse" (formula "54") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (rule "applyEqReverse" (formula "54") (term "1,1,0,1") (ifseqformula "1"))
                                                                     (rule "applyEqReverse" (formula "54") (term "1,0,2,0,1,1,0") (ifseqformula "1"))
                                                                     (rule "applyEqReverse" (formula "54") (term "0,0,1,0") (ifseqformula "1"))
                                                                     (rule "applyEqReverse" (formula "54") (term "0,2,0,1,1") (ifseqformula "1"))
                                                                     (rule "applyEqReverse" (formula "54") (term "1,1,1,0,0") (ifseqformula "1"))
                                                                     (rule "applyEqReverse" (formula "15") (term "0,1") (ifseqformula "1"))
                                                                     (rule "applyEqReverse" (formula "14") (term "0,0") (ifseqformula "1"))
                                                                     (rule "applyEqReverse" (formula "13") (term "0") (ifseqformula "1"))
                                                                     (rule "applyEqReverse" (formula "15") (term "1,0,2,0,0") (ifseqformula "1"))
                                                                     (rule "applyEqReverse" (formula "12") (term "0") (ifseqformula "1"))
                                                                     (rule "applyEqReverse" (formula "14") (term "0,2,0,1") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "replace_known_left" (formula "53") (term "0,0,0") (ifseqformula "11"))
                                                                      (builtin "One Step Simplification" (formula "53"))
                                                                     (rule "polySimp_homoEq" (formula "53") (term "0,1"))
                                                                     (rule "polySimp_addComm1" (formula "53") (term "0,0,1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "53") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "53") (term "0,0,0"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "53") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "53") (term "1,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "53") (term "1,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,1"))
                                                                     (rule "mul_literals" (formula "53") (term "0,1,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "53") (term "1,1,0,1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "53") (term "1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0"))
                                                                     (rule "mul_literals" (formula "53") (term "0,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0"))
                                                                     (rule "replace_known_left" (formula "53") (term "0,0") (ifseqformula "12"))
                                                                      (builtin "One Step Simplification" (formula "53"))
                                                                     (rule "pullOutSelect" (formula "14") (term "1,1,0") (inst "selectSK=arr_6"))
                                                                     (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "14"))
                                                                     (rule "simplifySelectOfAnon" (formula "14"))
                                                                      (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "46")) (ifInst ""  (formula "52")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "0,0,0,0") (ifseqformula "39"))
                                                                     (rule "replace_known_left" (formula "14") (term "0,0,0,0,0") (ifseqformula "28"))
                                                                      (builtin "One Step Simplification" (formula "14"))
                                                                     (rule "simplifySelectOfAnon" (formula "14"))
                                                                      (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "46")) (ifInst ""  (formula "52")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "0,0,0") (ifseqformula "39"))
                                                                     (rule "replace_known_left" (formula "14") (term "0,0,0,0") (ifseqformula "28"))
                                                                      (builtin "One Step Simplification" (formula "14"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "14") (ifseqformula "39"))
                                                                      (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "52")) (ifInst ""  (formula "28")))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "14") (term "0,0"))
                                                                     (rule "replace_known_right" (formula "14") (term "0,0,0,0") (ifseqformula "46"))
                                                                      (builtin "One Step Simplification" (formula "14"))
                                                                     (rule "applyEqReverse" (formula "15") (term "1,1,0") (ifseqformula "14"))
                                                                     (rule "applyEqReverse" (formula "13") (term "1,1") (ifseqformula "14"))
                                                                     (rule "hideAuxiliaryEq" (formula "14"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "7"))
                                                                     (rule "mul_literals" (formula "10") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "10") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                                     (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                                     (rule "mul_literals" (formula "10") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "10"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "32") (term "0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0"))
                                                                     (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "32") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "32") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "32"))
                                                                     (rule "true_left" (formula "32"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                                                                     (rule "mul_literals" (formula "11") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "11") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                                     (rule "mul_literals" (formula "11") (term "1"))
                                                                     (rule "pullOutSelect" (formula "16") (term "0,0") (inst "selectSK=arr_7"))
                                                                     (rule "simplifySelectOfAnon" (formula "16"))
                                                                      (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "50")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,0,1,0,0") (ifseqformula "40"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                                                     (rule "mul_literals" (formula "17") (term "0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "17") (term "1,1,0"))
                                                                     (rule "pullOutSelect" (formula "15") (term "0,1") (inst "selectSK=arr_8"))
                                                                     (rule "simplifySelectOfAnon" (formula "15"))
                                                                      (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "51")))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,0,1,0,0") (ifseqformula "41"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                                                     (rule "pullOutSelect" (formula "56") (term "0,1,0") (inst "selectSK=arr_9"))
                                                                     (rule "simplifySelectOfStore" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "replaceKnownSelect_taclet10001000100100101201010_17" (formula "1") (term "2,0"))
                                                                     (rule "castDel" (formula "1") (term "1,0"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "52"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "applyEqReverse" (formula "57") (term "0,1,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "56") (term "1,0"))
                                                                     (rule "polySimp_addComm1" (formula "56") (term "0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "56") (term "1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "56") (term "1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0"))
                                                                     (rule "mul_literals" (formula "56") (term "0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0"))
                                                                     (rule "pullOutSelect" (formula "56") (term "1,1,1") (inst "selectSK=arr_10"))
                                                                     (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "1"))
                                                                     (rule "simplifySelectOfStore" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "replaceKnownSelect_taclet10001000100100101201010_13" (formula "1") (term "2,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet10001000100100101201010_16" (formula "1") (term "2,0"))
                                                                     (rule "castDel" (formula "1") (term "1,0"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "49"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "applyEqReverse" (formula "57") (term "1,1,1") (ifseqformula "1"))
                                                                     (rule "applyEqReverse" (formula "57") (term "0,1,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "pullOutSelect" (formula "56") (term "0,1,1") (inst "selectSK=arr_11"))
                                                                     (rule "simplifySelectOfStore" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "replaceKnownSelect_taclet10001000100100101201010_18" (formula "1") (term "2,0"))
                                                                     (rule "castDel" (formula "1") (term "1,0"))
                                                                     (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                     (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "52"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "applyEqReverse" (formula "57") (term "0,1,1") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "inEqSimp_commuteGeq" (formula "56") (term "1,1"))
                                                                     (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "16"))
                                                                      (builtin "One Step Simplification" (formula "56"))
                                                                     (rule "orRight" (formula "56"))
                                                                     (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "57"))
                                                                      (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "56")))
                                                                     (rule "closeFalse" (formula "18"))
                                                                  )
                                                               )
                                                               (branch "Case 2"
                                                                  (rule "allRight" (formula "50") (inst "sk=i_0") (userinteraction))
                                                                  (rule "allLeftHide" (formula "11") (inst "t=i_0") (userinteraction))
                                                                  (rule "impRight" (formula "50"))
                                                                  (rule "andLeft" (formula "1"))
                                                                  (rule "replace_known_left" (formula "13") (term "1,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "polySimp_homoEq" (formula "12") (term "1,1,1,0"))
                                                                  (rule "polySimp_homoEq" (formula "20") (term "1,1,1,0"))
                                                                  (rule "polySimp_homoEq" (formula "52") (term "0,1,0"))
                                                                  (rule "polySimp_homoEq" (formula "13") (term "1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,1,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,1,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "20") (term "1,0,1,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,1,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,1,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "52") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "52") (term "0,0,1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "52") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1,1"))
                                                                  (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0,1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0,1,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "20") (term "0,1,1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "39") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "39") (term "0,0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "7"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "20") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "20") (term "0,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                  (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "16") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "15"))
                                                                  (rule "mul_literals" (formula "15") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "15") (term "0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "52") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                  (rule "add_zero_left" (formula "2") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "2") (term "0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "12") (term "1,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "0,1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "0,1,1,1,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "20") (term "1,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "0,1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "20") (term "0,1,1,1,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "52") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "52") (term "0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "52") (term "0,0,1,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "13") (term "1,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "0,1,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "13") (term "0,1,1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                                                  (rule "polySimp_mulLiterals" (formula "32") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "32") (term "1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "20") (term "1,0,1,1,0"))
                                                                  (rule "mul_literals" (formula "20") (term "0,1,0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "20") (term "1,1,0,1,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                                  (rule "mul_literals" (formula "15") (term "1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,0"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1,0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "1,1,0,1,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "51") (term "1,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "51") (term "1,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,1,0"))
                                                                  (rule "mul_literals" (formula "51") (term "0,1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "51") (term "1,1,1,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "0,0"))
                                                                  (rule "polySimp_elimOne" (formula "13") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,1"))
                                                                  (rule "mul_literals" (formula "13") (term "0,1,0,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "13") (term "1,1,0,1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "38") (term "0,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "38") (term "0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "0,1"))
                                                                  (rule "mul_literals" (formula "7") (term "0,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "20") (term "0,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "20") (term "0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "0,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "16") (term "0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "12") (term "0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "7"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "11") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                                                                  (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "11") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "11") (term "0,0"))
                                                                  (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "11") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "11") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "true_left" (formula "11"))
                                                                  (rule "elimGcdGeq_antec" (formula "14") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                                  (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,1,0"))
                                                                  (rule "leq_literals" (formula "14") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "mul_literals" (formula "14") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "14") (term "0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "14") (term "0,0"))
                                                                  (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "14") (term "0,0"))
                                                                  (rule "leq_literals" (formula "14") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "pullOutSelect" (formula "50") (term "0,2,0,1,1") (inst "selectSK=arr_5"))
                                                                  (rule "applyEq" (formula "51") (term "0,0,1,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "51") (term "1,0,2,0,1,1,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "51") (term "0,0,0,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "51") (term "0,0,1") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "51") (term "0,1,0,0") (ifseqformula "1"))
                                                                  (rule "simplifySelectOfStore" (formula "1"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "castDel" (formula "1") (term "1,0"))
                                                                  (rule "polySimp_homoEq" (formula "51") (term "0,1"))
                                                                  (rule "polySimp_addComm1" (formula "51") (term "0,0,1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "51") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "51") (term "0,1,0,0"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "51") (term "0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "51") (term "1,0,1"))
                                                                  (rule "polySimp_rightDist" (formula "51") (term "1,0,1"))
                                                                  (rule "mul_literals" (formula "51") (term "0,1,0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "51") (term "1,1,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "51") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "51") (term "1,1,0,0"))
                                                                  (rule "mul_literals" (formula "51") (term "0,1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0,0"))
                                                                  (rule "pullOutSelect" (formula "51") (term "1,1,1") (inst "selectSK=arr_6"))
                                                                  (rule "applyEq" (formula "52") (term "1,1,1,1,0") (ifseqformula "1"))
                                                                  (rule "simplifySelectOfStore" (formula "1"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "castDel" (formula "1") (term "1,0"))
                                                                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "44"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEq" (formula "14") (term "1,1,0,1,1") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "14") (term "1,1,1,0,1") (ifseqformula "1"))
                                                                  (rule "simplifySelectOfAnon" (formula "1"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")) (ifInst ""  (formula "50")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "26"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "simplifySelectOfAnon" (formula "1"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")) (ifInst ""  (formula "50")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "37"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "26"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "37"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")) (ifInst ""  (formula "26")))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "44"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "52") (term "1,1,1") (ifseqformula "1"))
                                                                  (rule "applyEqReverse" (formula "14") (term "1,1,1,0,1") (ifseqformula "1"))
                                                                  (rule "applyEqReverse" (formula "14") (term "1,1,0,1,1") (ifseqformula "1"))
                                                                  (rule "applyEqReverse" (formula "52") (term "1,1,1,1,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "pullOutSelect" (formula "13") (term "0,0,1,0,1") (inst "selectSK=arr_7"))
                                                                  (rule "applyEq" (formula "14") (term "0,0,0,0,1") (ifseqformula "13"))
                                                                  (rule "applyEq" (formula "14") (term "0,1,0,0,1") (ifseqformula "13"))
                                                                  (rule "applyEq" (formula "14") (term "0,2,0,1,1,0,1") (ifseqformula "13"))
                                                                  (rule "applyEq" (formula "14") (term "1,0,2,0,0,1,1") (ifseqformula "13"))
                                                                  (rule "applyEq" (formula "14") (term "0,1,1,1") (ifseqformula "13"))
                                                                  (rule "applyEq" (formula "1") (term "2,0") (ifseqformula "13"))
                                                                  (rule "simplifySelectOfAnon" (formula "13"))
                                                                   (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "applyEqReverse" (formula "14") (term "0,0,0,0,1") (ifseqformula "13"))
                                                                  (rule "applyEqReverse" (formula "14") (term "0,1,0,0,1") (ifseqformula "13"))
                                                                  (rule "applyEqReverse" (formula "14") (term "0,2,0,1,1,0,1") (ifseqformula "13"))
                                                                  (rule "applyEqReverse" (formula "14") (term "1,0,2,0,0,1,1") (ifseqformula "13"))
                                                                  (rule "applyEqReverse" (formula "14") (term "0,1,1,1") (ifseqformula "13"))
                                                                  (rule "applyEqReverse" (formula "1") (term "2,0") (ifseqformula "13"))
                                                                  (rule "applyEqReverse" (formula "14") (term "0,0,1,0,1") (ifseqformula "13"))
                                                                  (rule "hideAuxiliaryEq" (formula "13"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "8"))
                                                                  (rule "mul_literals" (formula "11") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "11") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "11"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "30") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0"))
                                                                  (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "30") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "30") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "30"))
                                                                  (rule "true_left" (formula "30"))
                                                                  (rule "pullOutSelect" (formula "51") (term "0,1,1") (inst "selectSK=arr_8"))
                                                                  (rule "simplifySelectOfStore" (formula "1"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "castDel" (formula "1") (term "1,0"))
                                                                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "47"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "simplifySelectOfAnon" (formula "1"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "37"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "52") (term "1,1"))
                                                                  (rule "pullOutSelect" (formula "52") (term "0,1,1,0") (inst "selectSK=arr_9"))
                                                                  (rule "simplifySelectOfStore" (formula "1"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "castDel" (formula "1") (term "1,0"))
                                                                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "48"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "simplifySelectOfAnon" (formula "1"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "38"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "53") (term "1,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "53") (term "0,1,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "1,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "53") (term "1,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,1,0"))
                                                                  (rule "mul_literals" (formula "53") (term "0,1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "53") (term "1,1,1,1,0"))
                                                                  (rule "pullOutSelect" (formula "16") (term "0,1,1,0,1") (inst "selectSK=arr_10"))
                                                                  (rule "simplifySelectOfAnon" (formula "16"))
                                                                   (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "49")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,0,1,0,0") (ifseqformula "39"))
                                                                  (rule "inEqSimp_commuteGeq" (formula "17") (term "1,1,0,1"))
                                                                  (rule "pullOutSelect" (formula "17") (term "0,0,1,1") (inst "selectSK=arr_11"))
                                                                  (rule "simplifySelectOfAnon" (formula "17"))
                                                                   (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "50")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "17") (term "0,0,1,0,0") (ifseqformula "40"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "18") (term "0,1,1"))
                                                                  (rule "polySimp_addComm1" (formula "18") (term "0,0,1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "1,0,1,1"))
                                                                  (rule "mul_literals" (formula "18") (term "0,1,0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "18") (term "1,1,0,1,1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "10"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "5") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                                  (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_12"))
                                                                  (rule "simplifySelectOfAnon" (formula "2"))
                                                                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "52")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "42"))
                                                                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_13"))
                                                                  (rule "simplifySelectOfAnon" (formula "1"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "53")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "43"))
                                                                  (rule "pullOutSelect" (formula "19") (term "2,0") (inst "selectSK=arr_14"))
                                                                  (rule "simplifySelectOfAnon" (formula "19"))
                                                                   (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "54")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "19") (term "0,1,0,0") (ifseqformula "44"))
                                                                  (rule "pullOutSelect" (formula "21") (term "2,0") (inst "selectSK=arr_15"))
                                                                  (rule "simplifySelectOfAnon" (formula "21"))
                                                                   (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "55")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,1,0,0") (ifseqformula "45"))
                                                                  (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_16"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "46"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0,0"))
                                                                  (rule "replace_known_right" (formula "3") (term "0,0,0,0,0") (ifseqformula "56"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_17"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "47"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "57"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "9"))
                                                                  (rule "mul_literals" (formula "8") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "8") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                                  (rule "mul_literals" (formula "8") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                                  (rule "pullOutSelect" (formula "21") (term "2,0") (inst "selectSK=arr_18"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "48"))
                                                                   (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "21") (term "0,0,0"))
                                                                  (rule "replace_known_right" (formula "21") (term "0,0,0,0,0") (ifseqformula "58"))
                                                                   (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "pullOutSelect" (formula "24") (term "2,0") (inst "selectSK=arr_19"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "49"))
                                                                   (builtin "One Step Simplification" (formula "24"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "24") (term "0,0,0"))
                                                                  (rule "replace_known_right" (formula "24") (term "0,0,0,0,0") (ifseqformula "59"))
                                                                   (builtin "One Step Simplification" (formula "24"))
                                                                  (rule "nnf_imp2or" (formula "51") (term "0"))
                                                                  (rule "nnf_imp2or" (formula "34") (term "0"))
                                                                  (rule "nnf_imp2or" (formula "30") (term "0"))
                                                                  (rule "nnf_imp2or" (formula "20") (term "0"))
                                                                  (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "46"))
                                                                   (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "translateJavaSubInt" (formula "46") (term "3,0,1"))
                                                                  (rule "andLeft" (formula "46"))
                                                                  (rule "andLeft" (formula "46"))
                                                                  (rule "andLeft" (formula "46"))
                                                                  (rule "andLeft" (formula "47"))
                                                                  (rule "andLeft" (formula "46"))
                                                                  (rule "andLeft" (formula "46"))
                                                                  (rule "andLeft" (formula "46"))
                                                                  (rule "andLeft" (formula "48"))
                                                                  (rule "notLeft" (formula "47"))
                                                                  (rule "notLeft" (formula "46"))
                                                                  (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "62"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "replace_known_right" (formula "22") (term "0,0,0,0") (ifseqformula "62"))
                                                                   (builtin "One Step Simplification" (formula "22"))
                                                                  (rule "replace_known_right" (formula "21") (term "0,0,0,0") (ifseqformula "62"))
                                                                   (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "62"))
                                                                   (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "62"))
                                                                   (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "62"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "replace_known_right" (formula "23") (term "0,0,0,0") (ifseqformula "62"))
                                                                   (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "62"))
                                                                   (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "replace_known_right" (formula "13") (term "0,0,0,0") (ifseqformula "62"))
                                                                   (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "replace_known_right" (formula "12") (term "0,0,0,0") (ifseqformula "62"))
                                                                   (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "replace_known_right" (formula "25") (term "0,0,0,0") (ifseqformula "62"))
                                                                   (builtin "One Step Simplification" (formula "25"))
                                                                  (rule "replace_known_right" (formula "26") (term "0,0,0,0") (ifseqformula "62"))
                                                                   (builtin "One Step Simplification" (formula "26"))
                                                                  (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "62"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "replace_known_right" (formula "14") (term "0,0,0,0") (ifseqformula "62"))
                                                                   (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "replace_known_right" (formula "24") (term "0,0,0,0") (ifseqformula "62"))
                                                                   (builtin "One Step Simplification" (formula "24"))
                                                                  (rule "replace_known_right" (formula "17") (term "0") (ifseqformula "61"))
                                                                   (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "62"))
                                                                   (builtin "One Step Simplification" (formula "16"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "16"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "15"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                  (rule "hideAuxiliaryEq" (formula "3"))
                                                                  (rule "replace_known_left" (formula "21") (term "0,0,0,0,0") (ifseqformula "14"))
                                                                   (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "applyEqReverse" (formula "25") (term "1,1,1,0,1") (ifseqformula "21"))
                                                                  (rule "hideAuxiliaryEq" (formula "21"))
                                                                  (rule "replace_known_left" (formula "11") (term "0,0,0,0") (ifseqformula "14"))
                                                                   (builtin "One Step Simplification" (formula "11"))
                                                                  (rule "applyEqReverse" (formula "12") (term "2,0") (ifseqformula "11"))
                                                                  (rule "hideAuxiliaryEq" (formula "11"))
                                                                  (rule "replace_known_left" (formula "21") (term "0,0,0,0") (ifseqformula "13"))
                                                                   (builtin "One Step Simplification" (formula "21"))
                                                                  (rule "applyEqReverse" (formula "22") (term "2,0") (ifseqformula "21"))
                                                                  (rule "hideAuxiliaryEq" (formula "21"))
                                                                  (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "13"))
                                                                   (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "applyEqReverse" (formula "11") (term "2,0") (ifseqformula "10"))
                                                                  (rule "hideAuxiliaryEq" (formula "10"))
                                                                  (rule "replace_known_left" (formula "20") (term "0,0,0,0,0") (ifseqformula "12"))
                                                                   (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "applyEqReverse" (formula "21") (term "1,1,0,1,1") (ifseqformula "20"))
                                                                  (rule "hideAuxiliaryEq" (formula "20"))
                                                                  (rule "replace_known_left" (formula "2") (term "0,0,0,0,0") (ifseqformula "12"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "applyEqReverse" (formula "65") (term "1,1,1,1,0") (ifseqformula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "replace_known_left" (formula "9") (term "0,0,0,0,0") (ifseqformula "11"))
                                                                   (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "applyEqReverse" (formula "8") (term "1,1") (ifseqformula "9"))
                                                                  (rule "hideAuxiliaryEq" (formula "9"))
                                                                  (rule "replace_known_left" (formula "17") (term "0,0,0") (ifseqformula "10"))
                                                                   (builtin "One Step Simplification" (formula "17"))
                                                                  (rule "applyEqReverse" (formula "18") (term "1,1,0,1,1") (ifseqformula "17"))
                                                                  (rule "hideAuxiliaryEq" (formula "17"))
                                                                  (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "10"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                                  (rule "hideAuxiliaryEq" (formula "2"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "9"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "61") (term "1,1,1,1,0") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "replace_known_left" (formula "14") (term "0,0,0,0") (ifseqformula "8"))
                                                                   (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "applyEqReverse" (formula "15") (term "1,1,1,0,1") (ifseqformula "14"))
                                                                  (rule "hideAuxiliaryEq" (formula "14"))
                                                                  (rule "replace_known_left" (formula "13") (term "0,0,0") (ifseqformula "8"))
                                                                   (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "applyEqReverse" (formula "14") (term "1,1,1,0,1") (ifseqformula "13"))
                                                                  (rule "hideAuxiliaryEq" (formula "13"))
                                                                  (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "8"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "58") (term "1,1,1") (ifseqformula "1"))
                                                                  (rule "hideAuxiliaryEq" (formula "1"))
                                                                  (rule "polySimp_elimSub" (formula "37") (term "3,0"))
                                                                  (rule "mul_literals" (formula "37") (term "1,3,0"))
                                                                  (rule "polySimp_addComm0" (formula "37") (term "3,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "36"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "34"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "35"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "31"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "12") (term "1,1,0,1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,1"))
                                                                  (rule "polySimp_addComm1" (formula "12") (term "0,0,1,1"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "57") (term "1,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "57") (term "0,1,1,0"))
                                                                  (rule "applyEq" (formula "37") (term "1,3,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "35") (term "1") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "57") (term "0,1,0,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "12") (term "1,1,1,0,0,1") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "36") (term "1") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "11") (term "1,1,1,0,0,1,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "34") (term "0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "57") (term "0,0,1") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "15") (term "1,1,1,1,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "12") (term "1,1,0,1,0,1") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "11") (term "1,1,0,1,0,1,0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "19") (term "1,1,0,0,1,0") (ifseqformula "33"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                  (rule "mul_literals" (formula "5") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,1"))
                                                                  (rule "mul_literals" (formula "12") (term "0,1,0,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "12") (term "1,1,0,1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "57") (term "1,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "57") (term "1,1,1,0"))
                                                                  (rule "mul_literals" (formula "57") (term "0,1,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "57") (term "1,1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "57") (term "1,1,1,1,0"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "32"))
                                                                  (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "17") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                                  (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "39"))
                                                                  (rule "true_left" (formula "39"))
                                                                  (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                                                  (rule "inEqSimp_notGeq" (formula "42") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "42") (term "1,0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "42") (term "0,0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "42") (term "1,1,0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "42") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "42") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "42") (term "0,0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "42") (term "1,0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "42") (term "0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "42") (term "0,1,0,0,0"))
                                                                  (rule "nnf_notAnd" (formula "20") (term "0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "20") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "20") (term "0,1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "20") (term "0,0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "20") (term "1,0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "20") (term "0,0,0,0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "20") (term "0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,0,0"))
                                                                  (rule "inEqSimp_notGeq" (formula "20") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "20") (term "1,0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "20") (term "0,0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "20") (term "1,1,0,0"))
                                                                  (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                                                  (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                                                                  (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "15") (term "0,0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "15") (term "1,0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "15") (term "0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0,0"))
                                                                  (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "11") (term "0,0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "1,0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "11") (term "0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,0,0"))
                                                                  (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                                                                  (rule "jdiv_axiom" (formula "44") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "44") (term "0,0,2,1"))
                                                                  (rule "eqSymm" (formula "44"))
                                                                  (rule "applyEqRigid" (formula "44") (term "1") (ifseqformula "45"))
                                                                  (rule "inEqSimp_subsumption6" (formula "44") (term "0,0") (ifseqformula "14"))
                                                                  (rule "mul_literals" (formula "44") (term "1,1,0,0,0"))
                                                                  (rule "greater_literals" (formula "44") (term "0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "leq_literals" (formula "44") (term "0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "polyDiv_pullOut" (formula "44") (term "0") (inst "polyDivCoeff=l_0"))
                                                                  (rule "equal_literals" (formula "44") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0"))
                                                                  (rule "polySimp_homoEq" (formula "44"))
                                                                  (rule "polySimp_pullOutFactor0" (formula "44") (term "0,0,0,1,0"))
                                                                  (rule "add_literals" (formula "44") (term "1,0,0,0,1,0"))
                                                                  (rule "times_zero_1" (formula "44") (term "0,0,0,1,0"))
                                                                  (rule "div_literals" (formula "44") (term "0,0,1,0"))
                                                                  (rule "add_zero_left" (formula "44") (term "0,1,0"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "44") (term "0"))
                                                                  (rule "add_literals" (formula "44") (term "1,0"))
                                                                  (rule "times_zero_1" (formula "44") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "true_left" (formula "44"))
                                                                  (rule "commute_or" (formula "20") (term "1,1,0"))
                                                                  (rule "commute_or" (formula "11") (term "1,1,0"))
                                                                  (rule "cut_direct" (formula "12") (term "0"))
                                                                  (branch "CUT: j_0 >= 1 + i_0 TRUE"
                                                                      (builtin "One Step Simplification" (formula "13"))
                                                                     (rule "andLeft" (formula "13"))
                                                                     (rule "andLeft" (formula "13"))
                                                                     (rule "andLeft" (formula "13"))
                                                                     (rule "inEqSimp_contradEq7" (formula "1") (term "0,0") (ifseqformula "12"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                                     (rule "leq_literals" (formula "1") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "applyEqReverse" (formula "61") (term "0,0,0,0") (ifseqformula "1"))
                                                                     (rule "applyEqReverse" (formula "61") (term "0,2,1,1,1") (ifseqformula "1"))
                                                                     (rule "applyEqReverse" (formula "61") (term "1,0,2,0,1,1,0") (ifseqformula "1"))
                                                                     (rule "applyEqReverse" (formula "61") (term "1,1,1,0,0") (ifseqformula "1"))
                                                                     (rule "applyEqReverse" (formula "61") (term "1,1,0,1") (ifseqformula "1"))
                                                                     (rule "applyEqReverse" (formula "61") (term "0,0,1,0") (ifseqformula "1"))
                                                                     (rule "hideAuxiliaryEq" (formula "1"))
                                                                     (rule "replace_known_left" (formula "60") (term "0,0,0") (ifseqformula "12"))
                                                                      (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "polySimp_homoEq" (formula "60") (term "0,1"))
                                                                     (rule "polySimp_addComm1" (formula "60") (term "0,0,1"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "60") (term "1,1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "60") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "60") (term "0,0,0"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "60") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "60") (term "1,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "60") (term "1,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,1"))
                                                                     (rule "mul_literals" (formula "60") (term "0,1,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "60") (term "1,1,0,1"))
                                                                     (rule "replace_known_left" (formula "60") (term "1") (ifseqformula "14"))
                                                                      (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "60") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "60") (term "1,0"))
                                                                     (rule "mul_literals" (formula "60") (term "0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "60") (term "1,1,0"))
                                                                     (rule "replace_known_left" (formula "60") (term "0") (ifseqformula "13"))
                                                                      (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "orRight" (formula "60"))
                                                                     (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "61"))
                                                                      (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "60")))
                                                                     (rule "closeFalse" (formula "15"))
                                                                  )
                                                                  (branch "CUT: j_0 >= 1 + i_0 FALSE"
                                                                      (builtin "One Step Simplification" (formula "12"))
                                                                     (rule "true_left" (formula "12"))
                                                                     (rule "inEqSimp_geqRight" (formula "45"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                     (rule "inEqSimp_antiSymm" (formula "5") (ifseqformula "1"))
                                                                     (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "5"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "applyEqReverse" (formula "58") (term "1,1,0,1") (ifseqformula "2"))
                                                                     (rule "applyEqReverse" (formula "58") (term "0,0,0,0") (ifseqformula "2"))
                                                                     (rule "applyEqReverse" (formula "58") (term "1,1,1,0,0") (ifseqformula "2"))
                                                                     (rule "applyEqReverse" (formula "58") (term "0,2,1,1,1") (ifseqformula "2"))
                                                                     (rule "applyEqReverse" (formula "58") (term "0,0,1,0") (ifseqformula "2"))
                                                                     (rule "applyEqReverse" (formula "58") (term "1,0,2,0,1,1,0") (ifseqformula "2"))
                                                                     (rule "hideAuxiliaryEq" (formula "2"))
                                                                     (rule "polySimp_homoEq" (formula "57") (term "0,1"))
                                                                     (rule "polySimp_addComm1" (formula "57") (term "0,0,1"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "57") (term "1,1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "57") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "57") (term "0,1,0,0"))
                                                                     (rule "applyEq" (formula "57") (term "0,2,1,0,2,0,1,1,0") (ifseqformula "4"))
                                                                     (rule "applyEq" (formula "6") (term "1,0,2,1,1") (ifseqformula "4"))
                                                                     (rule "applyEq" (formula "6") (term "0,2,1,0,2,0") (ifseqformula "4"))
                                                                     (rule "replace_known_left" (formula "57") (term "1,1,0") (ifseqformula "6"))
                                                                      (builtin "One Step Simplification" (formula "57"))
                                                                     (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "4"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "5"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                                     (rule "add_literals" (formula "5") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "5") (term "0"))
                                                                     (rule "leq_literals" (formula "5"))
                                                                     (rule "true_left" (formula "5"))
                                                                     (rule "applyEq" (formula "6") (term "0") (ifseqformula "4"))
                                                                     (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "4"))
                                                                     (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "4"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "1"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                                     (rule "add_literals" (formula "1") (term "1,0"))
                                                                     (rule "times_zero_1" (formula "1") (term "0"))
                                                                     (rule "qeq_literals" (formula "1"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "applyEq" (formula "8") (term "1,1,1,0,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "53") (term "0,2,0,0,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "53") (term "0,2,1,0,1,0") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "53") (term "0,2,0,2,0,1,1") (ifseqformula "3"))
                                                                     (rule "applyEq" (formula "53") (term "0,2,1,0,0,1") (ifseqformula "3"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "53") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "53") (term "1,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "53") (term "1,0,1"))
                                                                     (rule "mul_literals" (formula "53") (term "0,1,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "53") (term "1,1,0,1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "53") (term "1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "53") (term "1,1,0"))
                                                                     (rule "mul_literals" (formula "53") (term "0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "53") (term "1,1,1,0"))
                                                                     (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "34") (term "0"))
                                                                     (rule "replace_known_left" (formula "34") (term "1,0") (ifseqformula "18"))
                                                                      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "44")) (ifInst ""  (formula "35")))
                                                                     (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "35") (term "0") (inst "i=i") (inst "j=j_1"))
                                                                      (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                                                                     (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,1,0"))
                                                                     (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,1,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "35") (term "1,0,1,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                                                                     (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,0"))
                                                                     (rule "nnf_imp2or" (formula "35") (term "0"))
                                                                     (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
                                                                     (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "35") (term "0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                                                                     (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                                                                     (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                                                                     (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                                                                     (rule "nnf_imp2or" (formula "35") (term "0,1,0"))
                                                                     (rule "nnf_notAnd" (formula "35") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "35") (term "0,1,0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,1,0"))
                                                                     (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,1,0"))
                                                                     (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,0"))
                                                                     (rule "commute_or" (formula "39") (term "0,0"))
                                                                     (rule "commute_or" (formula "16") (term "0,0"))
                                                                     (rule "commute_or" (formula "11") (term "0,0"))
                                                                     (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "34") (term "0") (inst "i=i"))
                                                                      (builtin "One Step Simplification" (formula "34"))
                                                                     (rule "translateJavaSubInt" (formula "34") (term "1,1,0,0"))
                                                                     (rule "translateJavaAddInt" (formula "34") (term "0,2,1,1,0"))
                                                                     (rule "polySimp_elimSub" (formula "34") (term "1,1,0,0"))
                                                                     (rule "mul_literals" (formula "34") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "34") (term "0,2,1,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "34") (term "1,1,0,0"))
                                                                     (rule "add_literals" (formula "34") (term "0,1,1,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                                                     (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                                                     (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                                                     (rule "nnf_imp2or" (formula "34") (term "0"))
                                                                     (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                                                     (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                                                     (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                                                     (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                                                     (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "34") (term "0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                                                                     (rule "cnf_rightDist" (formula "8") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "8"))
                                                                     (rule "andLeft" (formula "8"))
                                                                     (rule "arrayLengthNotNegative" (formula "34") (term "0"))
                                                                     (rule "arrayLengthIsAShort" (formula "35") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "true_left" (formula "35"))
                                                                     (rule "arrayLengthNotNegative" (formula "33") (term "0"))
                                                                     (rule "arrayLengthIsAShort" (formula "34") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "34"))
                                                                     (rule "true_left" (formula "34"))
                                                                     (rule "commute_or_2" (formula "9") (term "0"))
                                                                     (rule "cnf_rightDist" (formula "17") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "17"))
                                                                     (rule "andLeft" (formula "17"))
                                                                     (rule "cnf_rightDist" (formula "12") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "12"))
                                                                     (rule "andLeft" (formula "12"))
                                                                     (rule "commute_or_2" (formula "19") (term "0"))
                                                                     (rule "commute_or" (formula "40") (term "0,0,1,0"))
                                                                     (rule "commute_or" (formula "13") (term "0"))
                                                                     (rule "commute_or" (formula "9") (term "0,0"))
                                                                     (rule "shift_paren_or" (formula "18") (term "0"))
                                                                     (rule "commute_or" (formula "19") (term "0,0"))
                                                                     (rule "cnf_rightDist" (formula "8") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "8"))
                                                                     (rule "andLeft" (formula "8"))
                                                                     (rule "commute_or_2" (formula "9") (term "0"))
                                                                     (rule "commute_or" (formula "9") (term "0,0"))
                                                                     (rule "cnf_rightDist" (formula "8") (term "0"))
                                                                     (rule "distr_forallAnd" (formula "8"))
                                                                     (rule "andLeft" (formula "8"))
                                                                     (rule "commute_or" (formula "9") (term "0"))
                                                                     (rule "all_pull_out3" (formula "42") (term "0"))
                                                                     (rule "shift_paren_or" (formula "42") (term "0,0"))
                                                                     (rule "shift_paren_or" (formula "42") (term "0,0,0"))
                                                                     (rule "allLeft" (formula "46") (inst "t=i_0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "46") (term "0,0") (ifseqformula "1"))
                                                                     (rule "qeq_literals" (formula "46") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "46"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "46") (term "0") (ifseqformula "2"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "46") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "46") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "46") (term "0,0,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "46") (term "1,0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "46") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "46") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "46") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "46") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "46") (term "0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "46") (term "0,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "46") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "46") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "46") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "46") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "46") (term "0,0,0"))
                                                                     (rule "leq_literals" (formula "46") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "46"))
                                                                     (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=arr_20"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "44"))
                                                                      (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "60")) (ifInst ""  (formula "27")))
                                                                     (rule "polySimp_homoEq" (formula "47"))
                                                                     (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "46") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "2")))
                                                                     (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0"))
                                                                     (rule "replace_known_left" (formula "46") (term "0,0") (ifseqformula "1"))
                                                                      (builtin "One Step Simplification" (formula "46"))
                                                                     (rule "applyEqReverse" (formula "47") (term "0,1,0,0") (ifseqformula "46"))
                                                                     (rule "hideAuxiliaryEq" (formula "46"))
                                                                     (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "46"))
                                                                     (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "46") (term "0"))
                                                                     (rule "allLeft" (formula "14") (inst "t=i_0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0") (ifseqformula "1"))
                                                                     (rule "qeq_literals" (formula "14") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "14"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "14") (term "0") (ifseqformula "2"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "14") (term "0,0,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "14") (term "1,0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "14") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "14") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                                                     (rule "leq_literals" (formula "14") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "14"))
                                                                     (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=arr_21"))
                                                                     (rule "simplifySelectOfAnon" (formula "14"))
                                                                      (builtin "One Step Simplification" (formula "14"))
                                                                     (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "14"))
                                                                     (rule "hideAuxiliaryEq" (formula "14"))
                                                                     (rule "allLeft" (formula "9") (inst "t=i_0"))
                                                                     (rule "replaceKnownSelect_taclet1001000100100101201010_16" (formula "9") (term "0,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet1001000100100101201010_17" (formula "9") (term "0,1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "9") (term "1,1,0,1,0"))
                                                                     (rule "times_zero_1" (formula "9") (term "1,0,1,0"))
                                                                     (rule "add_zero_right" (formula "9") (term "0,1,0"))
                                                                     (rule "qeq_literals" (formula "9") (term "1,0"))
                                                                      (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "9") (term "0") (ifseqformula "2"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "9") (term "0,0,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "9") (term "1,0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "9") (term "0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "9") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "9") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "9") (term "0,0,0"))
                                                                     (rule "leq_literals" (formula "9") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "replace_known_left" (formula "64") (term "1,0") (ifseqformula "9"))
                                                                      (builtin "One Step Simplification" (formula "64"))
                                                                     (rule "allLeft" (formula "8") (inst "t=i_0"))
                                                                     (rule "replaceKnownSelect_taclet1001000100100101201010_16" (formula "8") (term "0,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet1001000100100101201010_17" (formula "8") (term "0,1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "8") (term "1,1,0,1,0"))
                                                                     (rule "times_zero_1" (formula "8") (term "1,0,1,0"))
                                                                     (rule "add_zero_right" (formula "8") (term "0,1,0"))
                                                                     (rule "qeq_literals" (formula "8") (term "1,0"))
                                                                      (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "8") (term "0") (ifseqformula "2"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "8") (term "0,0,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "8") (term "1,0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "8") (term "0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "8") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                                                     (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                                                     (rule "add_zero_right" (formula "8") (term "0,0,0"))
                                                                     (rule "leq_literals" (formula "8") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "10"))
                                                                     (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                                     (rule "add_literals" (formula "8") (term "0,0,0"))
                                                                     (rule "add_zero_left" (formula "8") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                                     (rule "polySimp_mulLiterals" (formula "8") (term "1"))
                                                                     (rule "allLeft" (formula "19") (inst "t=i_0"))
                                                                     (rule "replaceKnownSelect_taclet11001000100100101201010_50" (formula "19") (term "0,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet11001000100100101201010_51" (formula "19") (term "0,1"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "19") (term "1,0") (ifseqformula "2"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "19") (term "0,1,0,0,1,0"))
                                                                     (rule "mul_literals" (formula "19") (term "0,0,1,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "19") (term "1,0,1,0,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "19") (term "0,0,0,1,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                                                                     (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                                                                     (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                                                                     (rule "add_zero_right" (formula "19") (term "0,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "19") (term "0,0,0,1,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "19") (term "0,0,1,0"))
                                                                     (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                                                                     (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                                                                     (rule "add_literals" (formula "19") (term "0,0,1,0"))
                                                                     (rule "leq_literals" (formula "19") (term "0,1,0"))
                                                                      (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "1"))
                                                                     (rule "qeq_literals" (formula "19") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "19"))
                                                                     (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                                                     (rule "mul_literals" (formula "17") (term "0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                                                     (rule "add_literals" (formula "17") (term "0,0,0"))
                                                                     (rule "add_zero_left" (formula "17") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                                     (rule "polySimp_mulLiterals" (formula "17") (term "1"))
                                                                     (rule "allLeft" (formula "46") (inst "t=begin"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "46") (term "1,0"))
                                                                     (rule "polySimp_addComm1" (formula "46") (term "0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "46") (term "1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "46") (term "1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0"))
                                                                     (rule "mul_literals" (formula "46") (term "0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "46") (term "0,0") (ifseqformula "34"))
                                                                     (rule "qeq_literals" (formula "46") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "46"))
                                                                     (rule "allLeft" (formula "47") (inst "t=i_0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "47") (term "1,0"))
                                                                     (rule "polySimp_addComm1" (formula "47") (term "0,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "47") (term "1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "47") (term "1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0"))
                                                                     (rule "mul_literals" (formula "47") (term "0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "47") (term "0,0") (ifseqformula "1"))
                                                                     (rule "qeq_literals" (formula "47") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "47"))
                                                                     (rule "allLeft" (formula "48") (inst "t=add(mul(l_0, Z(neglit(1(#)))),
    int::select(anon_heap_LOOP_1<<anonHeapFunction>>,
                indices,
                arr(i_0)))"))
                                                                     (rule "polySimp_addAssoc" (formula "48") (term "0,2,0,1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "48") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "48") (term "1,0,1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "48") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "48") (term "0,0,1,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "48") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "48") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "48") (term "0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "48") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "48") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "48") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "48") (term "0,0,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "48") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "48") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "48") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "48") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "48") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "48") (term "0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "48") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "48") (term "0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "48") (term "0,0,0"))
                                                                     (rule "allLeft" (formula "55") (inst "t=int::select(anon_heap_LOOP_1<<anonHeapFunction>>,
            indices,
            arr(i_0))"))
                                                                     (rule "pullOutSelect" (formula "55") (term "0,1") (inst "selectSK=arr_22"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "52"))
                                                                      (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "69")) (ifInst ""  (formula "32")))
                                                                     (rule "polySimp_homoEq" (formula "56") (term "1"))
                                                                     (rule "polySimp_addComm1" (formula "56") (term "0,1"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "55") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "55"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "56") (term "1"))
                                                                     (rule "polySimp_mulComm0" (formula "56") (term "1,1"))
                                                                     (rule "polySimp_rightDist" (formula "56") (term "1,1"))
                                                                     (rule "mul_literals" (formula "56") (term "0,1,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1"))
                                                                     (rule "polySimp_elimOne" (formula "56") (term "1,1,1"))
                                                                     (rule "commute_or_2" (formula "56"))
                                                                     (rule "commute_or" (formula "56") (term "0"))
                                                                     (rule "allLeft" (formula "57") (inst "t=add(mul(l_0, Z(neglit(1(#)))),
    int::select(anon_heap_LOOP_1<<anonHeapFunction>>,
                indices,
                arr(i_0)))"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "57") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "57") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "57") (term "0,0,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "57") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "57") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "57") (term "0,0,0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "57") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "57") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "57") (term "1,0,1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "57") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "57") (term "0,0,1,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "57") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "57") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "57") (term "0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "57") (term "0,0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "57") (term "0,0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "57") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "57") (term "0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "57") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "57") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "57") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "57") (term "0,1,0"))
                                                                     (rule "pullOutSelect" (formula "57") (term "0,1") (inst "selectSK=arr_23"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "57") (ifseqformula "52"))
                                                                      (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "71")) (ifInst ""  (formula "32")))
                                                                     (rule "polySimp_homoEq" (formula "58") (term "1"))
                                                                     (rule "polySimp_addComm1" (formula "58") (term "0,1"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "57") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "57"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "57") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "57") (term "1,0,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "57") (term "1,0,1,0,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "57") (term "0,1,0,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "57") (term "0,0,1,0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "57") (term "0,1,0,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "57") (term "0,1,0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "57") (term "0,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "57") (term "0,0,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "57") (term "0,0,0,1,0,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "57") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "57") (term "1,0,0,0,0"))
                                                                     (rule "add_zero_right" (formula "57") (term "0,0,0,0"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "58") (term "1"))
                                                                     (rule "polySimp_mulComm0" (formula "58") (term "1,1"))
                                                                     (rule "polySimp_rightDist" (formula "58") (term "1,1"))
                                                                     (rule "mul_literals" (formula "58") (term "0,1,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "58") (term "1,1,1"))
                                                                     (rule "polySimp_elimOne" (formula "58") (term "1,1,1"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "57") (term "1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "57") (term "0,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "57") (term "0,1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "57") (term "1,0,0,0"))
                                                                     (rule "commute_or" (formula "58") (term "0"))
                                                                     (rule "commute_or_2" (formula "58"))
                                                                     (rule "commute_or" (formula "58") (term "0"))
                                                                     (rule "commute_and" (formula "57") (term "0,0"))
                                                                     (rule "allLeft" (formula "49") (inst "t=int::select(anon_heap_LOOP_1<<anonHeapFunction>>,
            indices,
            arr(i_0))"))
                                                                     (rule "allLeft" (formula "50") (inst "t=add(begin, i_0)"))
                                                                     (rule "polySimp_addAssoc" (formula "50") (term "0,2,0,1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "50") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "50") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "50") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "50") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "50") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "50") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "50") (term "1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "50") (term "1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "50") (term "0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,1,0"))
                                                                     (rule "mul_literals" (formula "50") (term "0,0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "50") (term "1,0,1,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "50") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "50") (term "0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "50") (term "0,0,0"))
                                                                     (rule "allLeft" (formula "61") (inst "t=add(begin, i_0)"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "61") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "61") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "61") (term "0,0,0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "61") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "61") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "61") (term "1,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "61") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "61") (term "0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "61") (term "0,0,1,0"))
                                                                     (rule "polySimp_pullOutFactor3" (formula "61") (term "0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "61") (term "0,0,0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "61") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "61") (term "0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "61") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "61") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "61") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "61") (term "0,1,0"))
                                                                     (rule "pullOutSelect" (formula "61") (term "0,1") (inst "selectSK=arr_24"))
                                                                     (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "54"))
                                                                      (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "75")) (ifInst ""  (formula "32")))
                                                                     (rule "polySimp_homoEq" (formula "62") (term "1"))
                                                                     (rule "polySimp_addComm1" (formula "62") (term "0,1"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "61") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "61"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "61") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "61") (term "1,0,0,0,0"))
                                                                     (rule "add_zero_right" (formula "61") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "61") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "61") (term "1,0,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "61") (term "1,0,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "61") (term "0,1,0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "61") (term "0,1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "61") (term "0,0,1,0,0"))
                                                                     (rule "polySimp_pullOutFactor3b" (formula "61") (term "0,0,0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "61") (term "1,0,0,0,1,0,0"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "62") (term "1"))
                                                                     (rule "polySimp_mulComm0" (formula "62") (term "1,1"))
                                                                     (rule "polySimp_rightDist" (formula "62") (term "1,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1"))
                                                                     (rule "mul_literals" (formula "62") (term "0,1,1"))
                                                                     (rule "polySimp_elimOne" (formula "62") (term "1,1,1"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "61") (term "1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "61") (term "0,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "61") (term "0,1,0,0"))
                                                                     (rule "allLeft" (formula "10") (inst "t=add(begin, i_0)"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "10") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "10") (term "1,0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "10") (term "0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "10") (term "0,0,1,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,1,0"))
                                                                     (rule "add_literals" (formula "10") (term "1,1,0,1,0"))
                                                                     (rule "times_zero_1" (formula "10") (term "1,0,1,0"))
                                                                     (rule "add_zero_right" (formula "10") (term "0,1,0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "10") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "10") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor0" (formula "10") (term "0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "10") (term "1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "10") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "10") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "10") (term "0,0,0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "10") (term "1,0") (ifseqformula "35"))
                                                                     (rule "qeq_literals" (formula "10") (term "0,1,0"))
                                                                      (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "pullOutSelect" (formula "10") (term "0,1") (inst "selectSK=arr_25"))
                                                                     (rule "simplifySelectOfAnon" (formula "10"))
                                                                      (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "applyEqReverse" (formula "11") (term "0,1") (ifseqformula "10"))
                                                                     (rule "hideAuxiliaryEq" (formula "10"))
                                                                     (rule "allLeft" (formula "14") (inst "t=i_0"))
                                                                     (rule "replaceKnownSelect_taclet1001000100100101201010_12" (formula "14") (term "1,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet1001000100100101201010_15" (formula "14") (term "1,1"))
                                                                     (rule "replaceKnownSelect_taclet1001000100100101201010_16" (formula "14") (term "0,1,0"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet1001000100100101201010_17" (formula "14") (term "0,1,0"))
                                                                     (rule "replaceKnownSelect_taclet1001000100100101201010_16" (formula "14") (term "0,2,0,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet1001000100100101201010_17" (formula "14") (term "0,2,0,1"))
                                                                     (rule "replaceKnownSelect_taclet1001000100100101201010_22" (formula "14") (term "0,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet1001000100100101201010_34" (formula "14") (term "0,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet1001000100100101201010_44" (formula "14") (term "0,1"))
                                                                     (rule "replaceKnownAuxiliaryConstant_taclet1001000100100101201010_45" (formula "14") (term "0,1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "14") (term "1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,1,0,0"))
                                                                     (rule "add_literals" (formula "14") (term "1,1,0,1,0,0"))
                                                                     (rule "times_zero_1" (formula "14") (term "1,0,1,0,0"))
                                                                     (rule "add_zero_right" (formula "14") (term "0,1,0,0"))
                                                                     (rule "qeq_literals" (formula "14") (term "1,0,0"))
                                                                      (builtin "One Step Simplification" (formula "14"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "14") (term "0,0") (ifseqformula "2"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "14") (term "0,0,1,0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "14") (term "1,0,1,0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "14") (term "1,1,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "14") (term "1,0,0,0,0"))
                                                                     (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "14") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "14") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "14") (term "1,1,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "14") (term "1,0,0,0,0"))
                                                                     (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                                                     (rule "leq_literals" (formula "14") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "14"))
                                                                     (rule "replace_known_left" (formula "80") (term "1") (ifseqformula "14"))
                                                                      (builtin "One Step Simplification" (formula "80"))
                                                                     (rule "inEqSimp_geqRight" (formula "80"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                     (rule "mul_literals" (formula "1") (term "0,1"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                     (rule "inEqSimp_subsumption0" (formula "63") (term "1") (ifseqformula "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "63") (term "0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,1"))
                                                                     (rule "polySimp_rightDist" (formula "63") (term "1,0,0,1"))
                                                                     (rule "mul_literals" (formula "63") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "63") (term "0,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "63") (term "0,0,0,1"))
                                                                     (rule "add_literals" (formula "63") (term "0,0,0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "63") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "63") (term "1,1,0,0,1"))
                                                                     (rule "times_zero_1" (formula "63") (term "1,0,0,1"))
                                                                     (rule "add_literals" (formula "63") (term "0,0,1"))
                                                                     (rule "qeq_literals" (formula "63") (term "0,1"))
                                                                      (builtin "One Step Simplification" (formula "63"))
                                                                     (rule "true_left" (formula "63"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "62") (term "1,0,0") (ifseqformula "1"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "62") (term "0,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "62") (term "1,0,0,1,0,0"))
                                                                     (rule "mul_literals" (formula "62") (term "0,1,0,0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0,0"))
                                                                     (rule "polySimp_addComm0" (formula "62") (term "0,0,0,1,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "62") (term "0,0,1,0,0"))
                                                                     (rule "add_literals" (formula "62") (term "1,1,0,0,1,0,0"))
                                                                     (rule "times_zero_1" (formula "62") (term "1,0,0,1,0,0"))
                                                                     (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
                                                                     (rule "leq_literals" (formula "62") (term "0,1,0,0"))
                                                                      (builtin "One Step Simplification" (formula "62"))
                                                                     (rule "hideAuxiliaryEq" (formula "62"))
                                                                     (rule "inEqSimp_subsumption0" (formula "51") (term "0,0") (ifseqformula "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "51") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "51") (term "1,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "51") (term "0,0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "51") (term "0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "51") (term "0,0,0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "51") (term "1,1,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "51") (term "1,0,0,0,0"))
                                                                     (rule "add_literals" (formula "51") (term "0,0,0,0"))
                                                                     (rule "qeq_literals" (formula "51") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "51"))
                                                                     (rule "true_left" (formula "51"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                                                                     (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                                                     (rule "add_literals" (formula "10") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "10") (term "0"))
                                                                     (rule "add_literals" (formula "10") (term "1,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                                     (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "20"))
                                                                     (rule "qeq_literals" (formula "10") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "closeFalse" (formula "10"))
                                                                  )
                                                               )
                                                            )
                                                            (branch
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,0,1,1,0,0,0") (ifseqformula "35"))
                                                               (rule "allRight" (formula "50") (inst "sk=f_0"))
                                                               (rule "allRight" (formula "50") (inst "sk=o_0"))
                                                               (rule "orRight" (formula "50"))
                                                               (rule "orRight" (formula "50"))
                                                               (rule "eqSymm" (formula "52"))
                                                               (rule "polySimp_homoEq" (formula "11") (term "1,1,1,0"))
                                                               (rule "polySimp_homoEq" (formula "10") (term "1,1,1,0"))
                                                               (rule "polySimp_homoEq" (formula "18") (term "1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "11") (term "0,1,0,1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1,0,1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "18") (term "1,0,1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,1,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "18") (term "0,1,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "5"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "5") (term "0,1,0,0"))
                                                               (rule "inEqSimp_gtToGeq" (formula "13"))
                                                               (rule "mul_literals" (formula "13") (term "1,0,0"))
                                                               (rule "add_literals" (formula "13") (term "0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "1"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "18") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "18") (term "0,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "14") (term "0,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "37") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0"))
                                                               (rule "polySimp_sepNegMonomial" (formula "11") (term "1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "0,1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "11") (term "0,1,1,1,0"))
                                                               (rule "polySimp_sepNegMonomial" (formula "10") (term "1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "0,1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "0,1,1,1,0"))
                                                               (rule "polySimp_sepNegMonomial" (formula "18") (term "1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "0,1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "18") (term "0,1,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                                               (rule "polySimp_mulLiterals" (formula "30") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "30") (term "1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                               (rule "mul_literals" (formula "13") (term "1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1,0,1,1,0"))
                                                               (rule "mul_literals" (formula "10") (term "0,1,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "1,1,0,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,1,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "11") (term "1,1,0,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "18") (term "1,0,1,1,0"))
                                                               (rule "mul_literals" (formula "18") (term "0,1,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "18") (term "1,1,0,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                                               (rule "mul_literals" (formula "5") (term "0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "18") (term "0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "18") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "14") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "10") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "36") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "5"))
                                                               (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0"))
                                                               (rule "mul_literals" (formula "9") (term "0,0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "9") (term "1,0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                                               (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "9") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "9") (term "0,0"))
                                                               (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "9") (term "0,0"))
                                                               (rule "qeq_literals" (formula "9") (term "0"))
                                                                (builtin "One Step Simplification" (formula "9"))
                                                               (rule "true_left" (formula "9"))
                                                               (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,1,0"))
                                                               (rule "leq_literals" (formula "12") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "12"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                                                               (rule "add_zero_left" (formula "12") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                                               (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "12") (term "0,0"))
                                                               (rule "leq_literals" (formula "12") (term "0"))
                                                                (builtin "One Step Simplification" (formula "12"))
                                                               (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=f_0_0"))
                                                               (rule "simplifySelectOfStore" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "castDel" (formula "1") (term "1,0"))
                                                               (rule "eqSymm" (formula "51"))
                                                               (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                               (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "49"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "simplifySelectOfAnon" (formula "1"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "34"))
                                                               (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "50"))
                                                                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "51")))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                         )
                                                         (branch
                                                            (rule "polySimp_homoEq" (formula "18") (term "1,1,1,0"))
                                                            (rule "polySimp_homoEq" (formula "11") (term "1,1,1,0"))
                                                            (rule "polySimp_homoEq" (formula "10") (term "1,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "0,0"))
                                                            (rule "mul_literals" (formula "50") (term "0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "18") (term "1,0,1,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,1,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "11") (term "0,1,0,1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1,0,1,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1,1,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "18") (term "0,1,1,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,1,0"))
                                                            (rule "precOfInt" (formula "50"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulAssoc" (formula "18") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "18") (term "0,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulAssoc" (formula "37") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_gtToGeq" (formula "13"))
                                                            (rule "mul_literals" (formula "13") (term "1,0,0"))
                                                            (rule "add_literals" (formula "13") (term "0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "14") (term "0,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1,1,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "1"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "5"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                            (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "50") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "50") (term "0,1,0,0,1"))
                                                            (rule "polySimp_mulAssoc" (formula "50") (term "0,0,1,0,0,1"))
                                                            (rule "polySimp_mulComm0" (formula "50") (term "0,0,0,1,0,0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "50") (term "0,0,1,0,0,1"))
                                                            (rule "polySimp_elimOne" (formula "50") (term "0,0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "50") (term "0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "50") (term "0,1"))
                                                            (rule "polySimp_addAssoc" (formula "50") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "50") (term "0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                                            (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "50") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "50") (term "0,0,1"))
                                                            (rule "polySimp_addComm1" (formula "50") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "50") (term "0,0,0,0,1"))
                                                            (rule "add_zero_left" (formula "50") (term "0,0,0,1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "50") (term "0"))
                                                            (rule "times_zero_2" (formula "50") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "50") (term "0,0"))
                                                            (rule "applyEq" (formula "50") (term "1,0,1") (ifseqformula "31"))
                                                            (rule "polySimp_addAssoc" (formula "50") (term "0,1"))
                                                            (rule "polySimp_addComm1" (formula "50") (term "0,0,1"))
                                                            (rule "polySimp_pullOutFactor1" (formula "50") (term "0,0,0,1"))
                                                            (rule "add_literals" (formula "50") (term "1,0,0,0,1"))
                                                            (rule "times_zero_1" (formula "50") (term "0,0,0,1"))
                                                            (rule "add_zero_left" (formula "50") (term "0,0,1"))
                                                            (rule "polySimp_pullOutFactor2" (formula "50") (term "0,1"))
                                                            (rule "add_literals" (formula "50") (term "1,0,1"))
                                                            (rule "times_zero_1" (formula "50") (term "0,1"))
                                                            (rule "leq_literals" (formula "50") (term "1"))
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "inEqSimp_geqRight" (formula "50"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0"))
                                                            (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "32"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "19") (term "1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "0,1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "19") (term "0,1,1,1,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "12") (term "1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "0,1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "0,1,1,1,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "11") (term "1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "0,1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "11") (term "0,1,1,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                            (rule "polySimp_mulLiterals" (formula "31") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "31") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "1,0,1,1,0"))
                                                            (rule "mul_literals" (formula "19") (term "0,1,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "19") (term "1,1,0,1,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,0"))
                                                            (rule "mul_literals" (formula "12") (term "0,1,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "1,1,0,1,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                            (rule "mul_literals" (formula "14") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,0"))
                                                            (rule "mul_literals" (formula "11") (term "0,1,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "11") (term "1,1,0,1,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "19") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "15") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,0"))
                                                            (rule "mul_literals" (formula "11") (term "0,0,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                                                            (rule "mul_literals" (formula "6") (term "0,0,1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "6"))
                                                            (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0"))
                                                            (rule "mul_literals" (formula "10") (term "0,0,1,0,0"))
                                                            (rule "polySimp_elimOne" (formula "10") (term "1,0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                            (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "10") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "10") (term "0,0"))
                                                            (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "10") (term "0,0"))
                                                            (rule "qeq_literals" (formula "10") (term "0"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "true_left" (formula "10"))
                                                            (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "1"))
                                                            (rule "andLeft" (formula "6"))
                                                            (rule "inEqSimp_homoInEq1" (formula "6"))
                                                            (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                                                            (rule "mul_literals" (formula "6") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                                            (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                            (rule "add_literals" (formula "6") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "6") (term "1,0"))
                                                            (rule "add_zero_right" (formula "6") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "6") (term "0"))
                                                            (rule "add_literals" (formula "6") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "6") (term "1,0"))
                                                            (rule "add_zero_right" (formula "6") (term "0"))
                                                            (rule "leq_literals" (formula "6"))
                                                            (rule "closeFalse" (formula "6"))
                                                         )
                                                      )
                                                   )
                                                   (branch "Null Reference (x_arr_1 = null)"
                                                      (rule "false_right" (formula "51"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch "Index Out of Bounds (x_arr_1 != null, but x_16 Out of Bounds!)"
                                                      (rule "false_right" (formula "51"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                                      (rule "polySimp_homoEq" (formula "19") (term "1,1,1,0"))
                                                      (rule "polySimp_homoEq" (formula "12") (term "1,1,1,0"))
                                                      (rule "polySimp_homoEq" (formula "11") (term "1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0,1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,1,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "38") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "38") (term "0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "19") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "14"))
                                                      (rule "mul_literals" (formula "14") (term "1,0,0"))
                                                      (rule "add_literals" (formula "14") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "6"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                      (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "32"))
                                                      (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "19") (term "1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0,1,1,1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "12") (term "1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "0,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "0,1,1,1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "11") (term "1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "0,1,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,1,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "1,1,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,1,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,1,1,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,1,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                      (rule "mul_literals" (formula "14") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                                                      (rule "mul_literals" (formula "6") (term "0,0,1"))
                                                      (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0"))
                                                      (rule "mul_literals" (formula "10") (term "0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                      (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "10") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "10") (term "0,0"))
                                                      (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "10") (term "0,0"))
                                                      (rule "qeq_literals" (formula "10") (term "0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "9"))
                                                      (rule "qeq_literals" (formula "1") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "1"))
                                                      (rule "andLeft" (formula "6"))
                                                      (rule "inEqSimp_homoInEq1" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0"))
                                                      (rule "add_zero_right" (formula "6") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "6") (term "0"))
                                                      (rule "add_literals" (formula "6") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "6") (term "1,0"))
                                                      (rule "add_zero_right" (formula "6") (term "0"))
                                                      (rule "leq_literals" (formula "6"))
                                                      (rule "closeFalse" (formula "6"))
                                                   )
                                                )
                                                (branch "if x_18 false"
                                                    (builtin "One Step Simplification" (formula "50"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "elim_double_block_2" (formula "50") (term "1"))
                                                   (rule "assignmentSubtractionInt" (formula "50") (term "1"))
                                                   (branch "Overflow check"
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "closeTrue" (formula "50"))
                                                   )
                                                   (branch "Usage"
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "translateJavaSubInt" (formula "50") (term "0,1,0"))
                                                      (rule "polySimp_elimSub" (formula "50") (term "0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "50") (term "0,1,0"))
                                                      (rule "blockEmpty" (formula "50") (term "1"))
                                                      (rule "assignment_to_primitive_array_component" (formula "50"))
                                                      (branch "Normal Execution (x_arr_1 != null)"
                                                          (builtin "One Step Simplification" (formula "50"))
                                                         (rule "blockEmpty" (formula "50") (term "1"))
                                                         (rule "preincrement" (formula "50") (term "1"))
                                                         (rule "compound_int_cast_expression" (formula "50") (term "1") (inst "#v=x_12"))
                                                         (rule "variableDeclarationAssign" (formula "50") (term "1"))
                                                         (rule "variableDeclaration" (formula "50") (term "1") (newnames "x_21"))
                                                         (rule "remove_parentheses_right" (formula "50") (term "1"))
                                                         (rule "assignmentAdditionInt" (formula "50") (term "1"))
                                                         (branch "Overflow check"
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "closeTrue" (formula "50"))
                                                         )
                                                         (branch "Usage"
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "translateJavaAddInt" (formula "50") (term "0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "50") (term "0,1,0"))
                                                            (rule "widening_identity_cast_5" (formula "50") (term "1"))
                                                            (rule "assignment" (formula "50") (term "1"))
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "blockEmpty" (formula "50") (term "1"))
                                                            (rule "lsContinue" (formula "50") (term "1"))
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "andRight" (formula "50"))
                                                            (branch "Case 1"
                                                               (rule "andRight" (formula "50"))
                                                               (branch "Case 1"
                                                                  (rule "andRight" (formula "50"))
                                                                  (branch "Case 1"
                                                                     (rule "andRight" (formula "50"))
                                                                     (branch
                                                                        (rule "andRight" (formula "50"))
                                                                        (branch
                                                                           (rule "polySimp_homoEq" (formula "9") (term "1,1,1,0"))
                                                                           (rule "polySimp_homoEq" (formula "17") (term "1,1,1,0"))
                                                                           (rule "polySimp_homoEq" (formula "10") (term "1,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "9") (term "1,0,1,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,1,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,1,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "17") (term "1,0,1,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,1,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,1,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "10") (term "1,0,1,1,1,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,1,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,1,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "10") (term "0,1,0,1,1,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "9") (term "0,1,1,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "17") (term "0,1,1,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1,0"))
                                                                           (rule "inEqSimp_ltRight" (formula "40"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                           (rule "inEqSimp_geqRight" (formula "50"))
                                                                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                           (rule "add_literals" (formula "1") (term "0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "6"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "38") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "38") (term "0,0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "38") (term "0,1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "19") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,1,0"))
                                                                           (rule "inEqSimp_gtToGeq" (formula "14"))
                                                                           (rule "mul_literals" (formula "14") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "14") (term "0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_sepNegMonomial" (formula "11") (term "1,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "11") (term "0,1,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "11") (term "0,1,1,1,0"))
                                                                           (rule "polySimp_sepNegMonomial" (formula "19") (term "1,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "19") (term "0,1,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "19") (term "0,1,1,1,0"))
                                                                           (rule "polySimp_sepNegMonomial" (formula "12") (term "1,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "12") (term "0,1,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "12") (term "0,1,1,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                                           (rule "polySimp_mulLiterals" (formula "31") (term "1"))
                                                                           (rule "polySimp_elimOne" (formula "31") (term "1"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                           (rule "mul_literals" (formula "1") (term "1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "19") (term "1,0,1,1,0"))
                                                                           (rule "mul_literals" (formula "19") (term "0,1,0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "19") (term "1,1,0,1,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,0"))
                                                                           (rule "mul_literals" (formula "12") (term "0,1,0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0,1,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                                           (rule "mul_literals" (formula "14") (term "1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,0"))
                                                                           (rule "mul_literals" (formula "11") (term "0,1,0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "11") (term "1,1,0,1,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                                                                           (rule "mul_literals" (formula "6") (term "0,0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "19") (term "0,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "19") (term "0,0,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "15") (term "0,0,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "11") (term "0,0,1,0,0,0"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "9"))
                                                                           (rule "qeq_literals" (formula "1") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "closeFalse" (formula "1"))
                                                                        )
                                                                        (branch
                                                                           (rule "polySimp_homoEq" (formula "10") (term "1,1,1,0"))
                                                                           (rule "polySimp_homoEq" (formula "9") (term "1,1,1,0"))
                                                                           (rule "polySimp_homoEq" (formula "17") (term "1,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "10") (term "1,0,1,1,1,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,1,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,1,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "10") (term "0,1,0,1,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "9") (term "1,0,1,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,1,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,1,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "17") (term "1,0,1,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,1,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,1,1,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "9") (term "0,1,1,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "17") (term "0,1,1,1,0"))
                                                                           (rule "inEqSimp_ltRight" (formula "40"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                           (rule "inEqSimp_geqRight" (formula "50"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                           (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                           (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "19") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "6"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,0,0,0"))
                                                                           (rule "inEqSimp_gtToGeq" (formula "14"))
                                                                           (rule "mul_literals" (formula "14") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "14") (term "0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "38") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "38") (term "0,0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "38") (term "0,1,0,0,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0"))
                                                                           (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "32"))
                                                                           (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                           (rule "polySimp_sepNegMonomial" (formula "12") (term "1,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "12") (term "0,1,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "12") (term "0,1,1,1,0"))
                                                                           (rule "polySimp_sepNegMonomial" (formula "11") (term "1,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "11") (term "0,1,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "11") (term "0,1,1,1,0"))
                                                                           (rule "polySimp_sepNegMonomial" (formula "19") (term "1,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "19") (term "0,1,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "19") (term "0,1,1,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                                           (rule "polySimp_mulLiterals" (formula "31") (term "1"))
                                                                           (rule "polySimp_elimOne" (formula "31") (term "1"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                                           (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,0"))
                                                                           (rule "mul_literals" (formula "12") (term "0,1,0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0,1,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "19") (term "1,0,1,1,0"))
                                                                           (rule "mul_literals" (formula "19") (term "0,1,0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "19") (term "1,1,0,1,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,0"))
                                                                           (rule "mul_literals" (formula "11") (term "0,1,0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "11") (term "1,1,0,1,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                                           (rule "mul_literals" (formula "14") (term "1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "19") (term "0,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "19") (term "0,0,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                                                                           (rule "mul_literals" (formula "6") (term "0,0,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "15") (term "0,0,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "11") (term "0,0,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                           (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "6"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "10") (term "0,0,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "10") (term "1,0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                                           (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "10") (term "0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor2b" (formula "10") (term "0,0"))
                                                                           (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "10") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "10") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "true_left" (formula "10"))
                                                                           (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "1"))
                                                                           (rule "andLeft" (formula "6"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "6"))
                                                                           (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                                                                           (rule "mul_literals" (formula "6") (term "0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                                           (rule "add_literals" (formula "6") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "6") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "6") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                                                           (rule "polySimp_pullOutFactor2b" (formula "6") (term "0"))
                                                                           (rule "add_literals" (formula "6") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "6") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "6") (term "0"))
                                                                           (rule "leq_literals" (formula "6"))
                                                                           (rule "closeFalse" (formula "6"))
                                                                        )
                                                                     )
                                                                     (branch "Case 2"
                                                                        (rule "allRight" (formula "50") (inst "sk=i_0") (userinteraction))
                                                                        (rule "allLeftHide" (formula "9") (inst "t=i_0") (userinteraction))
                                                                        (rule "impRight" (formula "50"))
                                                                        (rule "andLeft" (formula "1"))
                                                                        (rule "polySimp_homoEq" (formula "11") (term "1,1,1"))
                                                                        (rule "polySimp_homoEq" (formula "19") (term "1,1,1,0"))
                                                                        (rule "polySimp_homoEq" (formula "12") (term "1,1,1,0"))
                                                                        (rule "polySimp_homoEq" (formula "52") (term "0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,1"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,1"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,1,1,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,1,1,1"))
                                                                        (rule "polySimp_rightDist" (formula "19") (term "1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "12") (term "0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "52") (term "1,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "52") (term "0,1,0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,1"))
                                                                        (rule "polySimp_addAssoc" (formula "19") (term "0,1,1,1,0"))
                                                                        (rule "inEqSimp_ltRight" (formula "42"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                        (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "52") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "39") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "39") (term "0,0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "7"))
                                                                        (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,1,0"))
                                                                        (rule "inEqSimp_gtToGeq" (formula "15"))
                                                                        (rule "mul_literals" (formula "15") (term "1,0,0"))
                                                                        (rule "add_literals" (formula "15") (term "0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "16") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,1"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,1"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0"))
                                                                        (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "20") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "20") (term "0,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "52") (term "1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "52") (term "1,0,0,1,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                        (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "12") (term "1,0"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                        (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "33"))
                                                                        (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "3") (term "0,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                        (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                        (rule "replace_known_left" (formula "12") (term "0,0") (ifseqformula "3"))
                                                                         (builtin "One Step Simplification" (formula "12"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "20") (term "1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "20") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "20") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "13") (term "1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "13") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "13") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "52") (term "0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "52") (term "0,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "52") (term "0,0,1,0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "12") (term "1,1,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "12") (term "0,1,1,1"))
                                                                        (rule "polySimp_elimOne" (formula "12") (term "0,1,1,1"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                                                        (rule "polySimp_mulLiterals" (formula "32") (term "1"))
                                                                        (rule "polySimp_elimOne" (formula "32") (term "1"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,1,0"))
                                                                        (rule "mul_literals" (formula "13") (term "0,1,0,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "13") (term "1,1,0,1,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                                        (rule "mul_literals" (formula "15") (term "1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "20") (term "1,0,1,1,0"))
                                                                        (rule "mul_literals" (formula "20") (term "0,1,0,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "20") (term "1,1,0,1,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "51") (term "1,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "51") (term "1,1,1,0"))
                                                                        (rule "mul_literals" (formula "51") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "51") (term "1,1,1,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "38") (term "0,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "38") (term "0,0,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                                        (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "7") (term "0,1"))
                                                                        (rule "mul_literals" (formula "7") (term "0,0,1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "16") (term "0,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "16") (term "0,0,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "20") (term "0,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "20") (term "0,0,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                        (rule "mul_literals" (formula "2") (term "0,1"))
                                                                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                                        (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,1"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1"))
                                                                        (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,1"))
                                                                        (rule "mul_literals" (formula "12") (term "0,1,0,1,1"))
                                                                        (rule "polySimp_elimOne" (formula "12") (term "1,1,0,1,1"))
                                                                        (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "7"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0"))
                                                                        (rule "mul_literals" (formula "11") (term "0,0,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "11") (term "1,0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                                                                        (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "11") (term "0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "11") (term "0,0"))
                                                                        (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "11") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "11") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "11"))
                                                                        (rule "true_left" (formula "11"))
                                                                        (rule "inEqSimp_subsumption0" (formula "11") (term "0") (ifseqformula "2"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "11") (term "0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
                                                                        (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                                                                        (rule "add_zero_right" (formula "11") (term "0,0,0"))
                                                                        (rule "qeq_literals" (formula "11") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "11"))
                                                                        (rule "andLeft" (formula "11"))
                                                                        (rule "andLeft" (formula "11"))
                                                                        (rule "andLeft" (formula "11"))
                                                                        (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                                                                        (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,1,0"))
                                                                        (rule "leq_literals" (formula "17") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "17"))
                                                                        (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                                                        (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                                                        (rule "add_zero_left" (formula "17") (term "0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                                                        (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "17") (term "0,0"))
                                                                        (rule "leq_literals" (formula "17") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "17"))
                                                                        (rule "pullOutSelect" (formula "53") (term "0,2,0,1,1") (inst "selectSK=arr_5"))
                                                                        (rule "applyEq" (formula "54") (term "0,0,1") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "54") (term "1,0,2,0,1,1,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "54") (term "0,0,1,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "54") (term "0,1,0,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "54") (term "0,0,0,0") (ifseqformula "1"))
                                                                        (rule "simplifySelectOfStore" (formula "1"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "castDel" (formula "1") (term "1,0"))
                                                                        (rule "polySimp_homoEq" (formula "54") (term "0,1"))
                                                                        (rule "polySimp_addComm1" (formula "54") (term "0,0,1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "54") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "54") (term "0,1,0,0"))
                                                                        (rule "polySimp_sepPosMonomial" (formula "54") (term "0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "54") (term "1,0,1"))
                                                                        (rule "polySimp_rightDist" (formula "54") (term "1,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,1"))
                                                                        (rule "mul_literals" (formula "54") (term "0,1,0,1"))
                                                                        (rule "polySimp_elimOne" (formula "54") (term "1,1,0,1"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0"))
                                                                        (rule "mul_literals" (formula "54") (term "0,1,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0"))
                                                                        (rule "inEqSimp_contradEq3" (formula "1") (term "0,0") (ifseqformula "3"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                                                        (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                                                        (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                                                        (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                                        (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "applyEq" (formula "15") (term "1,0,2,0,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "13") (term "0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "14") (term "0,2,0,1") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "14") (term "0,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "12") (term "0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "1"))
                                                                        (rule "simplifySelectOfAnon" (formula "1"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "applyEqReverse" (formula "54") (term "0,2,0,1,1") (ifseqformula "1"))
                                                                        (rule "applyEqReverse" (formula "54") (term "1,1,1,0,0") (ifseqformula "1"))
                                                                        (rule "applyEqReverse" (formula "54") (term "1,1,0,1") (ifseqformula "1"))
                                                                        (rule "applyEqReverse" (formula "54") (term "1,0,2,0,1,1,0") (ifseqformula "1"))
                                                                        (rule "applyEqReverse" (formula "54") (term "0,0,0,0") (ifseqformula "1"))
                                                                        (rule "applyEqReverse" (formula "15") (term "1,0,2,0,0") (ifseqformula "1"))
                                                                        (rule "applyEqReverse" (formula "54") (term "0,0,1,0") (ifseqformula "1"))
                                                                        (rule "applyEqReverse" (formula "13") (term "0") (ifseqformula "1"))
                                                                        (rule "applyEqReverse" (formula "14") (term "0,2,0,1") (ifseqformula "1"))
                                                                        (rule "applyEqReverse" (formula "14") (term "0,0") (ifseqformula "1"))
                                                                        (rule "applyEqReverse" (formula "12") (term "0") (ifseqformula "1"))
                                                                        (rule "applyEqReverse" (formula "15") (term "0,1") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "replace_known_left" (formula "53") (term "0,0,0") (ifseqformula "11"))
                                                                         (builtin "One Step Simplification" (formula "53"))
                                                                        (rule "polySimp_homoEq" (formula "53") (term "0,1"))
                                                                        (rule "polySimp_addComm1" (formula "53") (term "0,0,1"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "53") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "53") (term "0,0,0"))
                                                                        (rule "polySimp_sepPosMonomial" (formula "53") (term "0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "53") (term "1,0,1"))
                                                                        (rule "polySimp_rightDist" (formula "53") (term "1,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,1"))
                                                                        (rule "mul_literals" (formula "53") (term "0,1,0,1"))
                                                                        (rule "polySimp_elimOne" (formula "53") (term "1,1,0,1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "53") (term "1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0"))
                                                                        (rule "mul_literals" (formula "53") (term "0,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0"))
                                                                        (rule "replace_known_left" (formula "53") (term "0,0") (ifseqformula "12"))
                                                                         (builtin "One Step Simplification" (formula "53"))
                                                                        (rule "pullOutSelect" (formula "14") (term "1,1,0") (inst "selectSK=arr_6"))
                                                                        (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "14"))
                                                                        (rule "simplifySelectOfAnon" (formula "14"))
                                                                         (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "46")) (ifInst ""  (formula "52")))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "0,0,0,0") (ifseqformula "39"))
                                                                        (rule "replace_known_left" (formula "14") (term "0,0,0,0,0") (ifseqformula "28"))
                                                                         (builtin "One Step Simplification" (formula "14"))
                                                                        (rule "simplifySelectOfAnon" (formula "14"))
                                                                         (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "46")) (ifInst ""  (formula "52")))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "0,0,0") (ifseqformula "39"))
                                                                        (rule "replace_known_left" (formula "14") (term "0,0,0,0") (ifseqformula "28"))
                                                                         (builtin "One Step Simplification" (formula "14"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "14") (ifseqformula "39"))
                                                                         (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "52")) (ifInst ""  (formula "28")))
                                                                        (rule "elementOfArrayRangeConcrete" (formula "14") (term "0,0"))
                                                                        (rule "replace_known_right" (formula "14") (term "0,0,0,0") (ifseqformula "46"))
                                                                         (builtin "One Step Simplification" (formula "14"))
                                                                        (rule "applyEqReverse" (formula "15") (term "1,1,0") (ifseqformula "14"))
                                                                        (rule "applyEqReverse" (formula "13") (term "1,1") (ifseqformula "14"))
                                                                        (rule "hideAuxiliaryEq" (formula "14"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "2"))
                                                                        (rule "times_zero_1" (formula "10") (term "0,0"))
                                                                        (rule "add_zero_left" (formula "10") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                                        (rule "mul_literals" (formula "10") (term "1"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "7"))
                                                                        (rule "mul_literals" (formula "11") (term "0,0"))
                                                                        (rule "add_zero_left" (formula "11") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "11") (term "1"))
                                                                        (rule "mul_literals" (formula "11") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "11") (term "1,1"))
                                                                        (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "11"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "33") (term "0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0"))
                                                                        (rule "add_literals" (formula "33") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "33") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "33") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "33") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "33"))
                                                                        (rule "true_left" (formula "33"))
                                                                        (rule "pullOutSelect" (formula "16") (term "0,0") (inst "selectSK=arr_7"))
                                                                        (rule "simplifySelectOfAnon" (formula "16"))
                                                                         (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "50")))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,0,1,0,0") (ifseqformula "40"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                                                        (rule "mul_literals" (formula "17") (term "0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "17") (term "1,1,0"))
                                                                        (rule "pullOutSelect" (formula "15") (term "0,1") (inst "selectSK=arr_8"))
                                                                        (rule "simplifySelectOfAnon" (formula "15"))
                                                                         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "51")))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,0,1,0,0") (ifseqformula "41"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                                                        (rule "pullOutSelect" (formula "56") (term "0,1,0") (inst "selectSK=arr_9"))
                                                                        (rule "simplifySelectOfStore" (formula "1"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "replaceKnownSelect_taclet100010110100100101201010_17" (formula "1") (term "2,0"))
                                                                        (rule "castDel" (formula "1") (term "1,0"))
                                                                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "52"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "applyEqReverse" (formula "57") (term "0,1,0") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "56") (term "1,0"))
                                                                        (rule "polySimp_addComm1" (formula "56") (term "0,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "56") (term "1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "56") (term "1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0"))
                                                                        (rule "mul_literals" (formula "56") (term "0,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0"))
                                                                        (rule "pullOutSelect" (formula "56") (term "1,1,1") (inst "selectSK=arr_10"))
                                                                        (rule "applyEq" (formula "57") (term "0,1,0") (ifseqformula "1"))
                                                                        (rule "simplifySelectOfStore" (formula "1"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "replaceKnownSelect_taclet100010110100100101201010_13" (formula "1") (term "2,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet100010110100100101201010_16" (formula "1") (term "2,0"))
                                                                        (rule "castDel" (formula "1") (term "1,0"))
                                                                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "49"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "applyEqReverse" (formula "57") (term "1,1,1") (ifseqformula "1"))
                                                                        (rule "applyEqReverse" (formula "57") (term "0,1,0") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "pullOutSelect" (formula "56") (term "0,1,1") (inst "selectSK=arr_11"))
                                                                        (rule "simplifySelectOfStore" (formula "1"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "replaceKnownSelect_taclet100010110100100101201010_18" (formula "1") (term "2,0"))
                                                                        (rule "castDel" (formula "1") (term "1,0"))
                                                                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                        (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "52"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "applyEqReverse" (formula "57") (term "0,1,1") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "56") (term "1,1"))
                                                                        (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "16"))
                                                                         (builtin "One Step Simplification" (formula "56"))
                                                                        (rule "orRight" (formula "56"))
                                                                        (rule "replace_known_right" (formula "18") (term "1") (ifseqformula "56"))
                                                                         (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "57")))
                                                                        (rule "closeFalse" (formula "18"))
                                                                     )
                                                                  )
                                                                  (branch "Case 2"
                                                                     (rule "allRight" (formula "50") (inst "sk=i_0") (userinteraction))
                                                                     (rule "eqTermCut" (formula "50") (term "0,1,0") (inst "s=j_0") (userinteraction))
                                                                     (branch "Assume i_0 = j_0"
                                                                        (rule "impRight" (formula "51"))
                                                                        (rule "andLeft" (formula "1"))
                                                                        (rule "eqSymm" (formula "3"))
                                                                        (rule "polySimp_homoEq" (formula "12") (term "1,1,1,0"))
                                                                        (rule "polySimp_homoEq" (formula "13") (term "1,1,1,0"))
                                                                        (rule "polySimp_homoEq" (formula "20") (term "1,1,1,0"))
                                                                        (rule "polySimp_homoEq" (formula "53") (term "0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "13") (term "0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "20") (term "1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "53") (term "0,1,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "53") (term "0,0,1,0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "53") (term "0,1,0,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "53") (term "0,1,0,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,0"))
                                                                        (rule "inEqSimp_ltRight" (formula "43"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                        (rule "polySimp_addAssoc" (formula "21") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "40") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "40") (term "0,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "21") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "17") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "17") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "17") (term "0,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "21") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "21") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "21") (term "0,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_gtToGeq" (formula "16"))
                                                                        (rule "mul_literals" (formula "16") (term "1,0,0"))
                                                                        (rule "add_literals" (formula "16") (term "0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "13") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "13") (term "0,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "8"))
                                                                        (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "53") (term "1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                        (rule "add_literals" (formula "3") (term "0,0,0"))
                                                                        (rule "add_zero_left" (formula "3") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "3") (term "0"))
                                                                        (rule "applyEqRigid" (formula "3") (term "0,1,0") (ifseqformula "4"))
                                                                        (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                                                        (rule "add_literals" (formula "3") (term "1,0"))
                                                                        (rule "times_zero_1" (formula "3") (term "0"))
                                                                        (rule "leq_literals" (formula "3"))
                                                                        (rule "true_left" (formula "3"))
                                                                        (rule "applyEqRigid" (formula "52") (term "0,2,0,1,0,2,1,0,1,1,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "52") (term "0,2,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "52") (term "0,2,0,1,0,1,1,0") (ifseqformula "3"))
                                                                        (rule "polySimp_addComm1" (formula "52") (term "0,1,1,0"))
                                                                        (rule "applyEq" (formula "5") (term "0,2,1,0,2,1,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "12") (term "1,1,0,0") (ifseqformula "3"))
                                                                        (rule "applyEqRigid" (formula "4") (term "0,2,1,0,2,2,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "52") (term "0,2,1,3,0,0,0,0,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "52") (term "0,2,1,3,0,0,2,0,1,1") (ifseqformula "3"))
                                                                        (rule "applyEqRigid" (formula "6") (term "0,2,1,0,2,1,0") (ifseqformula "3"))
                                                                        (rule "applyEqRigid" (formula "52") (term "0,2,1,3,0,1,1,1") (ifseqformula "3"))
                                                                        (rule "applyEqRigid" (formula "52") (term "0,2,0,0,2,0,1,1") (ifseqformula "3"))
                                                                        (rule "applyEqRigid" (formula "1") (term "1,0,2,0,1,0") (ifseqformula "3"))
                                                                        (rule "applyEqRigid" (formula "7") (term "1,0") (ifseqformula "3"))
                                                                        (rule "applyEqRigid" (formula "52") (term "0,2,0,0,1,1") (ifseqformula "3"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "52") (term "1,1"))
                                                                        (rule "applyEq" (formula "52") (term "0,2,1,3,0,0,1,0,0,1,0") (ifseqformula "3"))
                                                                        (rule "applyEqRigid" (formula "52") (term "0,2,0,0,0,0,0") (ifseqformula "3"))
                                                                        (rule "applyEqRigid" (formula "52") (term "0,2,0,0,1,0,0") (ifseqformula "3"))
                                                                        (rule "applyEqRigid" (formula "52") (term "0,2,1,3,0,0,0,1") (ifseqformula "3"))
                                                                        (rule "applyEqRigid" (formula "4") (term "0,2,1,0,2,1,0") (ifseqformula "3"))
                                                                        (rule "applyEqRigid" (formula "52") (term "0,2,0,0,0,1") (ifseqformula "3"))
                                                                        (rule "applyEqRigid" (formula "52") (term "0,2,1,3,0,0,1,0,0") (ifseqformula "3"))
                                                                        (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "3"))
                                                                        (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "12") (term "0,1,0,0,0,0,0") (ifseqformula "3"))
                                                                        (rule "applyEqRigid" (formula "51") (term "0,2,0,0,1,0,1,1,0") (ifseqformula "3"))
                                                                        (rule "polySimp_addComm1" (formula "51") (term "0,1,1,0"))
                                                                        (rule "applyEq" (formula "51") (term "0,2,1,3,0,1,1,1") (ifseqformula "3"))
                                                                        (rule "applyEqRigid" (formula "51") (term "0,2,0,0,1,1") (ifseqformula "3"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "51") (term "1,1"))
                                                                        (rule "applyEqRigid" (formula "51") (term "0,2,1,3,0,1,0,2,1,0,1,1,0") (ifseqformula "3"))
                                                                        (rule "applyEq" (formula "51") (term "0,2,1,3,0,1,0,1,1,0") (ifseqformula "3"))
                                                                        (rule "polySimp_addComm1" (formula "51") (term "0,1,1,0"))
                                                                        (rule "applyEq" (formula "51") (term "0,2,1,3,0,0,1,0,1,1,0") (ifseqformula "3"))
                                                                        (rule "polySimp_addComm1" (formula "51") (term "0,1,1,0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "11") (term "1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "11") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "11") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "12") (term "1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "12") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "12") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "19") (term "1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "19") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "51") (term "0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "51") (term "0,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "51") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                                        (rule "polySimp_mulLiterals" (formula "31") (term "1"))
                                                                        (rule "polySimp_elimOne" (formula "31") (term "1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "19") (term "1,0,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,1,0"))
                                                                        (rule "mul_literals" (formula "19") (term "0,1,0,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "19") (term "1,1,0,1,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,1,0"))
                                                                        (rule "mul_literals" (formula "11") (term "0,1,0,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "11") (term "1,1,0,1,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                                        (rule "mul_literals" (formula "14") (term "1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,1,0"))
                                                                        (rule "mul_literals" (formula "12") (term "0,1,0,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "12") (term "1,1,0,1,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "15") (term "0,0,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "19") (term "0,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "19") (term "0,0,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "11") (term "0,0,1,0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                                        (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "7") (term "0,1"))
                                                                        (rule "mul_literals" (formula "7") (term "0,0,1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                                        (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "50") (term "1,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "50") (term "1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,1,0"))
                                                                        (rule "mul_literals" (formula "50") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "50") (term "1,1,1,1,0"))
                                                                        (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "7"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0"))
                                                                        (rule "mul_literals" (formula "10") (term "0,0,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "10") (term "1,0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                                        (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "10") (term "0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "10") (term "0,0"))
                                                                        (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "10") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "10") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "10"))
                                                                        (rule "true_left" (formula "10"))
                                                                        (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                                                        (rule "leq_literals" (formula "13") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "13"))
                                                                        (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                                                        (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                                                        (rule "add_zero_left" (formula "13") (term "0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                                                        (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "13") (term "0,0"))
                                                                        (rule "leq_literals" (formula "13") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "13"))
                                                                        (rule "pullOutSelect" (formula "49") (term "0,0,0,0") (inst "selectSK=arr_5"))
                                                                        (rule "applyEq" (formula "50") (term "0,2,0,1,1") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "50") (term "0,1,0,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "50") (term "1,0,2,0,1,1,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "50") (term "0,0,1") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "50") (term "0,0,1,0") (ifseqformula "1"))
                                                                        (rule "simplifySelectOfStore" (formula "1"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "castDel" (formula "1") (term "0"))
                                                                        (rule "applyEqReverse" (formula "50") (term "0,2,0,1,1") (ifseqformula "1"))
                                                                        (rule "applyEqReverse" (formula "50") (term "0,1,0,0") (ifseqformula "1"))
                                                                        (rule "applyEqReverse" (formula "50") (term "0,0,0,0") (ifseqformula "1"))
                                                                        (rule "applyEqReverse" (formula "50") (term "1,0,2,0,1,1,0") (ifseqformula "1"))
                                                                        (rule "applyEqReverse" (formula "50") (term "0,0,1") (ifseqformula "1"))
                                                                        (rule "applyEqReverse" (formula "50") (term "0,0,1,0") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "polySimp_homoEq" (formula "49") (term "0,1"))
                                                                        (rule "polySimp_homoEq" (formula "49") (term "0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1"))
                                                                        (rule "polySimp_mulAssoc" (formula "49") (term "0,1,0,0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "49") (term "0,0,1,0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "49") (term "0,1,0,0,1"))
                                                                        (rule "polySimp_elimOne" (formula "49") (term "0,1,0,0,1"))
                                                                        (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "49") (term "0,1,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "49") (term "0,0,1,0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "49") (term "0,1,0,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "49") (term "0,1,0,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "49") (term "0,2,0,1,1,0"))
                                                                        (rule "polySimp_pullOutFactor3" (formula "49") (term "0,0,2,0,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "49") (term "0,0,2,0,1,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "49") (term "0,0,1"))
                                                                        (rule "polySimp_addComm1" (formula "49") (term "0,0,0,1"))
                                                                        (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0"))
                                                                        (rule "polySimp_pullOutFactor3b" (formula "49") (term "0,0,0,1,0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "49") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "49") (term "1,0,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "49") (term "1,0,1,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "49") (term "0,1,0,1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "49") (term "0,0,1,0,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "49") (term "0,1,0,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "49") (term "0,1,0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "49") (term "0,1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "49") (term "0,0,1,0,0"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "49") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "49") (term "0,1,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "49") (term "0,0,1,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "49") (term "0,1,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "49") (term "0,1,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "49") (term "0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor3b" (formula "49") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "49") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "49") (term "0,0,1"))
                                                                        (rule "polySimp_elimOne" (formula "49") (term "0,0,1"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "49") (term "0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "49") (term "0,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "49") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "49") (term "1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "49") (term "0,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "49") (term "0,1,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "49") (term "0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "49") (term "0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "49") (term "0,0,0,0"))
                                                                        (rule "pullOutSelect" (formula "49") (term "1,1,1") (inst "selectSK=arr_6"))
                                                                        (rule "applyEq" (formula "50") (term "1,1,1,1,0") (ifseqformula "1"))
                                                                        (rule "simplifySelectOfStore" (formula "1"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "castDel" (formula "1") (term "1,0"))
                                                                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "42"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "simplifySelectOfAnon" (formula "1"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")) (ifInst ""  (formula "48")))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "35"))
                                                                        (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "24"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "simplifySelectOfAnon" (formula "1"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")) (ifInst ""  (formula "48")))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "35"))
                                                                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "24"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")) (ifInst ""  (formula "24")))
                                                                        (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                                                        (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "42"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "applyEqReverse" (formula "50") (term "1,1,1") (ifseqformula "1"))
                                                                        (rule "applyEqReverse" (formula "50") (term "1,1,1,1,0") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "7"))
                                                                        (rule "mul_literals" (formula "2") (term "0,0"))
                                                                        (rule "add_zero_left" (formula "2") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                        (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                        (rule "mul_literals" (formula "2") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                                        (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "2"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                                        (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "28") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "28") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "28"))
                                                                        (rule "true_left" (formula "28"))
                                                                        (rule "pullOutSelect" (formula "49") (term "0,1,1") (inst "selectSK=arr_7"))
                                                                        (rule "simplifySelectOfStore" (formula "1"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "castDel" (formula "1") (term "1,0"))
                                                                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "45"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "simplifySelectOfAnon" (formula "1"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "35"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "50") (term "1,1"))
                                                                        (rule "pullOutSelect" (formula "50") (term "0,1,1,0") (inst "selectSK=arr_8"))
                                                                        (rule "simplifySelectOfStore" (formula "1"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "castDel" (formula "1") (term "1,0"))
                                                                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "46"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "simplifySelectOfAnon" (formula "1"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "36"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "51") (term "1,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "51") (term "0,1,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "51") (term "1,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "51") (term "1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,1,0"))
                                                                        (rule "mul_literals" (formula "51") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "51") (term "1,1,1,1,0"))
                                                                        (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_9"))
                                                                        (rule "simplifySelectOfAnon" (formula "2"))
                                                                         (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "47")))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,1,0,0") (ifseqformula "37"))
                                                                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_10"))
                                                                        (rule "simplifySelectOfAnon" (formula "1"))
                                                                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "38"))
                                                                        (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_11"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "39"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0,0"))
                                                                        (rule "replace_known_right" (formula "3") (term "0,0,0,0,0") (ifseqformula "49"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "applyEq" (formula "3") (term "0") (ifseqformula "10"))
                                                                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                        (rule "hideAuxiliaryEq" (formula "3"))
                                                                        (rule "applyEq" (formula "10") (term "0") (ifseqformula "3"))
                                                                        (rule "applyEqReverse" (formula "11") (term "2,0") (ifseqformula "10"))
                                                                        (rule "hideAuxiliaryEq" (formula "10"))
                                                                        (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_12"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                                                                        (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "48"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "nnf_imp2or" (formula "40") (term "0"))
                                                                        (rule "nnf_imp2or" (formula "19") (term "0"))
                                                                        (rule "nnf_imp2or" (formula "23") (term "0"))
                                                                        (rule "nnf_imp2or" (formula "15") (term "0"))
                                                                        (rule "nnf_imp2or" (formula "16") (term "0"))
                                                                        (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "36"))
                                                                        (rule "true_left" (formula "36"))
                                                                        (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "35"))
                                                                         (builtin "One Step Simplification" (formula "35"))
                                                                        (rule "translateJavaSubInt" (formula "35") (term "3,0,1"))
                                                                        (rule "andLeft" (formula "35"))
                                                                        (rule "andLeft" (formula "35"))
                                                                        (rule "andLeft" (formula "35"))
                                                                        (rule "andLeft" (formula "36"))
                                                                        (rule "andLeft" (formula "35"))
                                                                        (rule "andLeft" (formula "35"))
                                                                        (rule "andLeft" (formula "35"))
                                                                        (rule "andLeft" (formula "37"))
                                                                        (rule "notLeft" (formula "35"))
                                                                        (rule "notLeft" (formula "35"))
                                                                        (rule "replace_known_right" (formula "11") (term "0,0,0,0") (ifseqformula "49"))
                                                                         (builtin "One Step Simplification" (formula "11"))
                                                                        (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "49"))
                                                                         (builtin "One Step Simplification" (formula "4"))
                                                                        (rule "replace_known_right" (formula "10") (term "0,0,0,0") (ifseqformula "49"))
                                                                         (builtin "One Step Simplification" (formula "10"))
                                                                        (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "49"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "49"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "49"))
                                                                         (builtin "One Step Simplification" (formula "2"))
                                                                        (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "49"))
                                                                         (builtin "One Step Simplification" (formula "5"))
                                                                        (rule "replace_known_right" (formula "13") (term "0") (ifseqformula "49"))
                                                                         (builtin "One Step Simplification" (formula "13"))
                                                                        (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "50"))
                                                                         (builtin "One Step Simplification" (formula "14"))
                                                                        (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "13"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "applyEqReverse" (formula "60") (term "1,1,1,1,0") (ifseqformula "3"))
                                                                        (rule "hideAuxiliaryEq" (formula "3"))
                                                                        (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "12"))
                                                                         (builtin "One Step Simplification" (formula "9"))
                                                                        (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "9"))
                                                                        (rule "hideAuxiliaryEq" (formula "9"))
                                                                        (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "11"))
                                                                         (builtin "One Step Simplification" (formula "3"))
                                                                        (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                                        (rule "applyEqReverse" (formula "9") (term "2,0") (ifseqformula "3"))
                                                                        (rule "hideAuxiliaryEq" (formula "3"))
                                                                        (rule "replace_known_left" (formula "8") (term "0,0,0,0,0") (ifseqformula "10"))
                                                                         (builtin "One Step Simplification" (formula "8"))
                                                                        (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "8"))
                                                                        (rule "hideAuxiliaryEq" (formula "8"))
                                                                        (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "9"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "8"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "applyEqReverse" (formula "55") (term "1,1,1,1,0") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "7"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "applyEqReverse" (formula "54") (term "1,1,1") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "replace_known_left" (formula "53") (term "1,1") (ifseqformula "1"))
                                                                         (builtin "One Step Simplification" (formula "53"))
                                                                        (rule "polySimp_elimSub" (formula "34") (term "3,0"))
                                                                        (rule "mul_literals" (formula "34") (term "1,3,0"))
                                                                        (rule "polySimp_addComm0" (formula "34") (term "3,0"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "33"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "32"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "31"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "28"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "1"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "53") (term "1,1"))
                                                                        (rule "polySimp_addComm1" (formula "53") (term "0,1,1"))
                                                                        (rule "applyEq" (formula "33") (term "1") (ifseqformula "30"))
                                                                        (rule "applyEq" (formula "8") (term "1,1,1,0,0,1,0") (ifseqformula "30"))
                                                                        (rule "applyEq" (formula "9") (term "1,1,1,0,0,1,0") (ifseqformula "30"))
                                                                        (rule "applyEq" (formula "12") (term "1,1,1,1,0") (ifseqformula "30"))
                                                                        (rule "applyEq" (formula "31") (term "0") (ifseqformula "30"))
                                                                        (rule "applyEq" (formula "32") (term "1") (ifseqformula "30"))
                                                                        (rule "applyEq" (formula "34") (term "1,3,0") (ifseqformula "30"))
                                                                        (rule "applyEq" (formula "53") (term "1,1,1,0") (ifseqformula "30"))
                                                                        (rule "applyEq" (formula "16") (term "1,1,0,0,1,0") (ifseqformula "30"))
                                                                        (rule "applyEq" (formula "9") (term "1,1,0,1,0,1,0") (ifseqformula "30"))
                                                                        (rule "applyEq" (formula "8") (term "1,1,0,1,0,1,0") (ifseqformula "30"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "1,1"))
                                                                        (rule "polySimp_mulComm0" (formula "53") (term "1,1,1"))
                                                                        (rule "polySimp_rightDist" (formula "53") (term "1,1,1"))
                                                                        (rule "mul_literals" (formula "53") (term "0,1,1,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "53") (term "1,1,1,1"))
                                                                        (rule "polySimp_elimOne" (formula "53") (term "1,1,1,1"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "29"))
                                                                        (rule "polySimp_mulComm0" (formula "14") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "14") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                                                        (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                                        (rule "nnf_notAnd" (formula "39") (term "0,0"))
                                                                        (rule "inEqSimp_notLeq" (formula "39") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "39") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "39") (term "0,0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "39") (term "1,0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,0"))
                                                                        (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,0"))
                                                                        (rule "add_zero_left" (formula "39") (term "0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "39") (term "0,1,0,0,0"))
                                                                        (rule "inEqSimp_notGeq" (formula "39") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "39") (term "1,0,0,1,0,0"))
                                                                        (rule "add_literals" (formula "39") (term "0,0,1,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "39") (term "1,1,0,0"))
                                                                        (rule "nnf_notAnd" (formula "12") (term "0,0"))
                                                                        (rule "inEqSimp_notGeq" (formula "12") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "12") (term "1,0,0,1,0,0"))
                                                                        (rule "add_literals" (formula "12") (term "0,0,1,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "12") (term "1,1,0,0"))
                                                                        (rule "inEqSimp_notLeq" (formula "12") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "12") (term "0,0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0,0"))
                                                                        (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,0"))
                                                                        (rule "add_zero_left" (formula "12") (term "0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,0,0"))
                                                                        (rule "nnf_notAnd" (formula "17") (term "0,0"))
                                                                        (rule "inEqSimp_notGeq" (formula "17") (term "1,0,0"))
                                                                        (rule "times_zero_1" (formula "17") (term "1,0,0,1,0,0"))
                                                                        (rule "add_literals" (formula "17") (term "0,0,1,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "17") (term "1,1,0,0"))
                                                                        (rule "inEqSimp_notLeq" (formula "17") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "17") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "17") (term "0,0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "17") (term "1,0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0,0,0"))
                                                                        (rule "add_literals" (formula "17") (term "0,0,0,0,0,0,0"))
                                                                        (rule "add_zero_left" (formula "17") (term "0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,0,0"))
                                                                        (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                                                        (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
                                                                        (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
                                                                        (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "8") (term "0,0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "8") (term "1,0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0"))
                                                                        (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0"))
                                                                        (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0,0"))
                                                                        (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                                                        (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "9") (term "1,0,0,1,0,0"))
                                                                        (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                                                                        (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0"))
                                                                        (rule "add_literals" (formula "9") (term "0,0,0,0,0,0"))
                                                                        (rule "add_zero_left" (formula "9") (term "0,0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "9") (term "1,0,0,0"))
                                                                        (rule "jdiv_axiom" (formula "41") (term "0"))
                                                                        (rule "polySimp_mulLiterals" (formula "41") (term "0,0,2,1"))
                                                                        (rule "eqSymm" (formula "41"))
                                                                        (rule "applyEq" (formula "41") (term "1") (ifseqformula "42"))
                                                                        (rule "inEqSimp_subsumption6" (formula "41") (term "0,0") (ifseqformula "11"))
                                                                        (rule "greater_literals" (formula "41") (term "0,0,0,0"))
                                                                         (builtin "One Step Simplification" (formula "41"))
                                                                        (rule "mul_literals" (formula "41") (term "1,0,0,0"))
                                                                        (rule "leq_literals" (formula "41") (term "0,0,0"))
                                                                         (builtin "One Step Simplification" (formula "41"))
                                                                        (rule "polyDiv_pullOut" (formula "41") (term "0") (inst "polyDivCoeff=l_0"))
                                                                        (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,2,0"))
                                                                        (rule "equal_literals" (formula "41") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "41"))
                                                                        (rule "polySimp_pullOutFactor0" (formula "41") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "41") (term "1,0,0,0"))
                                                                        (rule "times_zero_1" (formula "41") (term "0,0,0"))
                                                                        (rule "div_literals" (formula "41") (term "0,0"))
                                                                        (rule "add_zero_left" (formula "41") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "41"))
                                                                        (rule "true_left" (formula "41"))
                                                                        (rule "commute_or" (formula "17") (term "1,1,0"))
                                                                        (rule "commute_or" (formula "8") (term "1,1,0"))
                                                                        (rule "commute_or" (formula "9") (term "1,1,0"))
                                                                        (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "35") (term "0") (inst "i=i") (inst "j=j_1"))
                                                                         (builtin "One Step Simplification" (formula "35"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,1,0"))
                                                                        (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,1,0"))
                                                                        (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                                                                        (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                                                                        (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,1,0"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "35") (term "1,0,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0"))
                                                                        (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                                                                        (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                                                                        (rule "nnf_imp2or" (formula "35") (term "0"))
                                                                        (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                                                        (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                                                                        (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                                                                        (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                                                                        (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                                                                        (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
                                                                        (rule "mul_literals" (formula "35") (term "1,0,0,0,0,0"))
                                                                        (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                                                                        (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                                                                        (rule "nnf_imp2or" (formula "35") (term "0,1,0"))
                                                                        (rule "nnf_notAnd" (formula "35") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,1,0"))
                                                                        (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,1,0"))
                                                                        (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0"))
                                                                        (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,0"))
                                                                        (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,1,0"))
                                                                        (rule "mul_literals" (formula "35") (term "0,1,0,0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,1,0"))
                                                                        (rule "commute_or" (formula "39") (term "0,0"))
                                                                        (rule "commute_or" (formula "12") (term "0,0"))
                                                                        (rule "commute_or" (formula "17") (term "0,0"))
                                                                        (rule "commute_or" (formula "9") (term "0,0"))
                                                                        (rule "cnf_rightDist" (formula "8") (term "0"))
                                                                        (rule "distr_forallAnd" (formula "8"))
                                                                        (rule "andLeft" (formula "8"))
                                                                        (rule "commute_or_2" (formula "9") (term "0"))
                                                                        (rule "commute_or" (formula "9") (term "0,0"))
                                                                        (rule "cnf_rightDist" (formula "13") (term "0"))
                                                                        (rule "distr_forallAnd" (formula "13"))
                                                                        (rule "andLeft" (formula "13"))
                                                                        (rule "commute_or" (formula "14") (term "0"))
                                                                        (rule "cnf_rightDist" (formula "19") (term "0"))
                                                                        (rule "distr_forallAnd" (formula "19"))
                                                                        (rule "andLeft" (formula "19"))
                                                                        (rule "commute_or_2" (formula "20") (term "0"))
                                                                        (rule "shift_paren_or" (formula "19") (term "0"))
                                                                        (rule "commute_or" (formula "20") (term "0,0"))
                                                                        (rule "cnf_rightDist" (formula "10") (term "0"))
                                                                        (rule "distr_forallAnd" (formula "10"))
                                                                        (rule "andLeft" (formula "10"))
                                                                        (rule "commute_or_2" (formula "11") (term "0"))
                                                                        (rule "commute_or" (formula "11") (term "0,0"))
                                                                        (rule "cnf_rightDist" (formula "8") (term "0"))
                                                                        (rule "distr_forallAnd" (formula "8"))
                                                                        (rule "andLeft" (formula "8"))
                                                                        (rule "commute_or_2" (formula "9") (term "0"))
                                                                        (rule "commute_or" (formula "9") (term "0,0"))
                                                                        (rule "commute_or" (formula "40") (term "0,0,1,0"))
                                                                        (rule "cnf_rightDist" (formula "11") (term "0"))
                                                                        (rule "distr_forallAnd" (formula "11"))
                                                                        (rule "andLeft" (formula "11"))
                                                                        (rule "commute_or_2" (formula "12") (term "0"))
                                                                        (rule "commute_or" (formula "12") (term "0,0"))
                                                                        (rule "cnf_rightDist" (formula "8") (term "0"))
                                                                        (rule "distr_forallAnd" (formula "8"))
                                                                        (rule "andLeft" (formula "8"))
                                                                        (rule "commute_or" (formula "9") (term "0"))
                                                                        (rule "cnf_rightDist" (formula "12") (term "0"))
                                                                        (rule "distr_forallAnd" (formula "12"))
                                                                        (rule "andLeft" (formula "12"))
                                                                        (rule "commute_or" (formula "13") (term "0"))
                                                                        (rule "arrayLengthIsAShort" (formula "42") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "42"))
                                                                        (rule "true_left" (formula "42"))
                                                                        (rule "arrayLengthNotNegative" (formula "42") (term "0"))
                                                                        (rule "arrayLengthNotNegative" (formula "41") (term "0"))
                                                                        (rule "arrayLengthIsAShort" (formula "42") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "42"))
                                                                        (rule "true_left" (formula "42"))
                                                                        (rule "all_pull_out3" (formula "45") (term "0"))
                                                                        (rule "shift_paren_or" (formula "45") (term "0,0"))
                                                                        (rule "shift_paren_or" (formula "45") (term "0,0,0"))
                                                                        (rule "allLeft" (formula "49") (inst "t=i_0"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "49") (term "1,0") (ifseqformula "5"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "49") (term "0,1,0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,0,0,1,0"))
                                                                        (rule "mul_literals" (formula "49") (term "0,0,1,0,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "49") (term "1,0,1,0,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "49") (term "0,0,0,1,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1,0"))
                                                                        (rule "add_literals" (formula "49") (term "1,1,0,0,1,0"))
                                                                        (rule "times_zero_1" (formula "49") (term "1,0,0,1,0"))
                                                                        (rule "add_zero_right" (formula "49") (term "0,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "49") (term "0,0,0,1,0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "49") (term "0,0,1,0"))
                                                                        (rule "add_literals" (formula "49") (term "1,1,0,0,1,0"))
                                                                        (rule "times_zero_1" (formula "49") (term "1,0,0,1,0"))
                                                                        (rule "add_literals" (formula "49") (term "0,0,1,0"))
                                                                        (rule "leq_literals" (formula "49") (term "0,1,0"))
                                                                         (builtin "One Step Simplification" (formula "49"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "49") (term "0") (ifseqformula "3"))
                                                                        (rule "qeq_literals" (formula "49") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "49"))
                                                                        (rule "pullOutSelect" (formula "49") (term "0") (inst "selectSK=arr_13"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "49") (ifseqformula "47"))
                                                                         (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "63")) (ifInst ""  (formula "31")))
                                                                        (rule "polySimp_homoEq" (formula "50"))
                                                                        (rule "polySimp_addComm1" (formula "50") (term "0"))
                                                                        (rule "elementOfArrayRangeConcrete" (formula "49") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "5")))
                                                                        (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0"))
                                                                        (rule "replace_known_left" (formula "49") (term "0,0") (ifseqformula "3"))
                                                                         (builtin "One Step Simplification" (formula "49"))
                                                                        (rule "applyEqReverse" (formula "50") (term "0,1,0,0") (ifseqformula "49"))
                                                                        (rule "hideAuxiliaryEq" (formula "49"))
                                                                        (rule "polySimp_addComm1" (formula "49") (term "0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "49"))
                                                                        (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "49") (term "0"))
                                                                        (rule "allLeft" (formula "18") (inst "t=i_0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "3"))
                                                                        (rule "qeq_literals" (formula "18") (term "0,0,0"))
                                                                         (builtin "One Step Simplification" (formula "18"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "18") (term "0") (ifseqformula "5"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "18") (term "0,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "18") (term "0,0,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "18") (term "1,0,1,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                                                        (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                                                        (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "18") (term "0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "18") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                                                        (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                                                        (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                                                        (rule "leq_literals" (formula "18") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "18"))
                                                                        (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_14"))
                                                                        (rule "simplifySelectOfAnon" (formula "18"))
                                                                         (builtin "One Step Simplification" (formula "18"))
                                                                        (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "18"))
                                                                        (rule "hideAuxiliaryEq" (formula "18"))
                                                                        (rule "allLeft" (formula "20") (inst "t=i_0"))
                                                                        (rule "replaceKnownSelect_taclet010010110100100101201010_35" (formula "20") (term "0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet010010110100100101201010_36" (formula "20") (term "0,1"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "20") (term "1,0") (ifseqformula "5"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "20") (term "0,1,0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0,0,1,0"))
                                                                        (rule "mul_literals" (formula "20") (term "0,0,1,0,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "20") (term "1,0,1,0,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0"))
                                                                        (rule "polySimp_addComm1" (formula "20") (term "0,0,0,1,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                                                        (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                                                        (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                                                        (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0"))
                                                                        (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1,0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "20") (term "0,0,1,0"))
                                                                        (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                                                        (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                                                        (rule "add_literals" (formula "20") (term "0,0,1,0"))
                                                                        (rule "leq_literals" (formula "20") (term "0,1,0"))
                                                                         (builtin "One Step Simplification" (formula "20"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "3"))
                                                                        (rule "qeq_literals" (formula "20") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "20"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "20"))
                                                                        (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "18") (term "0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                                                        (rule "add_literals" (formula "18") (term "0,0,0"))
                                                                        (rule "add_zero_left" (formula "18") (term "0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                        (rule "polySimp_mulLiterals" (formula "18") (term "1"))
                                                                        (rule "allLeft" (formula "9") (inst "t=i_0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "9") (term "1,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "9") (term "1,1,0,1,0"))
                                                                        (rule "times_zero_1" (formula "9") (term "1,0,1,0"))
                                                                        (rule "add_literals" (formula "9") (term "0,1,0"))
                                                                        (rule "qeq_literals" (formula "9") (term "1,0"))
                                                                         (builtin "One Step Simplification" (formula "9"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "9") (term "0") (ifseqformula "5"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "9") (term "0,0,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "9") (term "1,0,1,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                                                                        (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                                                                        (rule "add_zero_right" (formula "9") (term "0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "9") (term "0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "9") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                                                                        (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                                                                        (rule "add_literals" (formula "9") (term "0,0,0"))
                                                                        (rule "leq_literals" (formula "9") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "9"))
                                                                        (rule "pullOutSelect" (formula "9") (term "0") (inst "selectSK=arr_15"))
                                                                        (rule "simplifySelectOfAnon" (formula "9"))
                                                                         (builtin "One Step Simplification" (formula "9"))
                                                                        (rule "applyEqReverse" (formula "10") (term "0") (ifseqformula "9"))
                                                                        (rule "hideAuxiliaryEq" (formula "9"))
                                                                        (rule "allLeft" (formula "8") (inst "t=i_0"))
                                                                        (rule "replaceKnownSelect_taclet010010110100100101201010_37" (formula "8") (term "0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet010010110100100101201010_38" (formula "8") (term "0,1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "8") (term "1,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,1,0"))
                                                                        (rule "add_literals" (formula "8") (term "1,1,0,1,0"))
                                                                        (rule "times_zero_1" (formula "8") (term "1,0,1,0"))
                                                                        (rule "add_literals" (formula "8") (term "0,1,0"))
                                                                        (rule "qeq_literals" (formula "8") (term "1,0"))
                                                                         (builtin "One Step Simplification" (formula "8"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "8") (term "0") (ifseqformula "5"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "8") (term "0,0,1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "8") (term "1,0,1,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                                                        (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                                                        (rule "add_zero_right" (formula "8") (term "0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "8") (term "0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                                                        (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                                                        (rule "add_zero_right" (formula "8") (term "0,0,0"))
                                                                        (rule "leq_literals" (formula "8") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "8"))
                                                                        (rule "replace_known_left" (formula "70") (term "0,0") (ifseqformula "8"))
                                                                         (builtin "One Step Simplification" (formula "70"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "10"))
                                                                        (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                                        (rule "add_literals" (formula "8") (term "0,0,0"))
                                                                        (rule "add_zero_left" (formula "8") (term "0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                                        (rule "polySimp_mulLiterals" (formula "8") (term "1"))
                                                                        (rule "allLeft" (formula "13") (inst "t=i_0"))
                                                                        (rule "replaceKnownSelect_taclet010010110100100101201010_12" (formula "13") (term "1,1,1"))
                                                                        (rule "replaceKnownSelect_taclet010010110100100101201010_37" (formula "13") (term "0,1,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet010010110100100101201010_15" (formula "13") (term "1,1,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet010010110100100101201010_38" (formula "13") (term "0,1,0"))
                                                                        (rule "replaceKnownSelect_taclet010010110100100101201010_37" (formula "13") (term "1,0,2,0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet010010110100100101201010_38" (formula "13") (term "1,0,2,0,1"))
                                                                        (rule "replaceKnownSelect_taclet010010110100100101201010_19" (formula "13") (term "0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet010010110100100101201010_26" (formula "13") (term "0,1"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet010010110100100101201010_31" (formula "13") (term "0,1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,1,0,0"))
                                                                        (rule "add_literals" (formula "13") (term "1,1,0,1,0,0"))
                                                                        (rule "times_zero_1" (formula "13") (term "1,0,1,0,0"))
                                                                        (rule "add_literals" (formula "13") (term "0,1,0,0"))
                                                                        (rule "qeq_literals" (formula "13") (term "1,0,0"))
                                                                         (builtin "One Step Simplification" (formula "13"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "13") (term "0,0") (ifseqformula "5"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "13") (term "0,1,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "13") (term "0,0,1,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "13") (term "1,0,1,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0,0"))
                                                                        (rule "add_literals" (formula "13") (term "1,1,0,0,0,0"))
                                                                        (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
                                                                        (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0"))
                                                                        (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,0,0"))
                                                                        (rule "add_literals" (formula "13") (term "1,1,0,0,0,0"))
                                                                        (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
                                                                        (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                                                                        (rule "leq_literals" (formula "13") (term "0,0,0"))
                                                                         (builtin "One Step Simplification" (formula "13"))
                                                                        (rule "replace_known_left" (formula "71") (term "1") (ifseqformula "13"))
                                                                         (builtin "One Step Simplification" (formula "71"))
                                                                        (rule "inEqSimp_leqRight" (formula "71"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                                                                        (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                                        (rule "add_zero_left" (formula "1") (term "0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                        (rule "polySimp_mulAssoc" (formula "1") (term "0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "0,1"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "11"))
                                                                        (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                                                        (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "1") (term "1,0"))
                                                                        (rule "polySimp_addLiterals" (formula "1") (term "0"))
                                                                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "22"))
                                                                        (rule "qeq_literals" (formula "1") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "closeFalse" (formula "1"))
                                                                     )
                                                                     (branch "Assume i_0 != j_0"
                                                                        (rule "allLeftHide" (formula "11") (inst "t=i_0") (userinteraction))
                                                                        (rule "impRight" (formula "51"))
                                                                        (rule "notLeft" (formula "2"))
                                                                        (rule "andLeft" (formula "1"))
                                                                        (rule "eqSymm" (formula "42"))
                                                                        (rule "replace_known_left" (formula "12") (term "1,0") (ifseqformula "1"))
                                                                         (builtin "One Step Simplification" (formula "12"))
                                                                        (rule "polySimp_homoEq" (formula "11") (term "1,1,1,0"))
                                                                        (rule "polySimp_homoEq" (formula "19") (term "1,1,1,0"))
                                                                        (rule "polySimp_homoEq" (formula "53") (term "0,1,0"))
                                                                        (rule "polySimp_homoEq" (formula "12") (term "1,1,1"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,1"))
                                                                        (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "19") (term "1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,1,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "53") (term "1,0,0,1,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "53") (term "0,1,0,0,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "53") (term "0,0,1,0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "53") (term "0,1,0,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "53") (term "0,1,0,0,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,1"))
                                                                        (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0,1,1,1"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0,1,1,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,1,1,1"))
                                                                        (rule "polySimp_elimOne" (formula "12") (term "0,1,0,1,1,1"))
                                                                        (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,1,0"))
                                                                        (rule "inEqSimp_ltRight" (formula "43"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                        (rule "polySimp_addAssoc" (formula "20") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "53") (term "0,0,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "20") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "7"))
                                                                        (rule "polySimp_rightDist" (formula "7") (term "1,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "39") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "39") (term "0,0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "16") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "20") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulAssoc" (formula "20") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "20") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1"))
                                                                        (rule "inEqSimp_gtToGeq" (formula "15"))
                                                                        (rule "mul_literals" (formula "15") (term "1,0,0"))
                                                                        (rule "add_literals" (formula "15") (term "0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "53") (term "1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,1,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "13") (term "0,1,1"))
                                                                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1,1"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "13") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "13") (term "0,0"))
                                                                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                        (rule "add_literals" (formula "3") (term "0,0,0"))
                                                                        (rule "add_zero_left" (formula "3") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "3") (term "0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "12") (term "1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "12") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "12") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "20") (term "1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "20") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "20") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "53") (term "0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "53") (term "0,0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "53") (term "0,0,1,0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "13") (term "1,1,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "13") (term "0,1,1,1"))
                                                                        (rule "polySimp_elimOne" (formula "13") (term "0,1,1,1"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                                                        (rule "polySimp_mulLiterals" (formula "32") (term "1"))
                                                                        (rule "polySimp_elimOne" (formula "32") (term "1"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "20") (term "1,0,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,1,1,0"))
                                                                        (rule "mul_literals" (formula "20") (term "0,1,0,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "20") (term "1,1,0,1,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,1,0"))
                                                                        (rule "mul_literals" (formula "12") (term "0,1,0,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "12") (term "1,1,0,1,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                                        (rule "mul_literals" (formula "15") (term "1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "52") (term "1,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "52") (term "1,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1,1,0"))
                                                                        (rule "mul_literals" (formula "52") (term "0,1,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "52") (term "1,1,1,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,1,1"))
                                                                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1"))
                                                                        (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,1,1"))
                                                                        (rule "mul_literals" (formula "13") (term "0,1,0,1,1"))
                                                                        (rule "polySimp_elimOne" (formula "13") (term "1,1,0,1,1"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "13") (term "0"))
                                                                        (rule "polySimp_mulLiterals" (formula "13") (term "0,0"))
                                                                        (rule "polySimp_elimOne" (formula "13") (term "0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "12") (term "0,0,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                                        (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "7") (term "0,1"))
                                                                        (rule "mul_literals" (formula "7") (term "0,0,1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "38") (term "0,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "38") (term "0,0,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "16") (term "0,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "16") (term "0,0,1,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "20") (term "0,1,0,0,0"))
                                                                        (rule "mul_literals" (formula "20") (term "0,0,1,0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                                                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                        (rule "inEqSimp_strengthen1" (formula "3") (ifseqformula "42"))
                                                                        (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "3"))
                                                                         (builtin "One Step Simplification" (formula "13"))
                                                                        (rule "andLeft" (formula "13"))
                                                                        (rule "andLeft" (formula "13"))
                                                                        (rule "andLeft" (formula "13"))
                                                                        (rule "inEqSimp_contradEq7" (formula "45") (ifseqformula "3"))
                                                                        (rule "polySimp_mulComm0" (formula "45") (term "1,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0"))
                                                                        (rule "add_literals" (formula "45") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                                                        (rule "add_literals" (formula "45") (term "0,0"))
                                                                        (rule "leq_literals" (formula "45") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "45"))
                                                                        (rule "false_right" (formula "45"))
                                                                        (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "7"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0"))
                                                                        (rule "mul_literals" (formula "11") (term "0,0,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "11") (term "1,0,1,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                                                                        (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "11") (term "0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "11") (term "0,0,0"))
                                                                        (rule "polySimp_pullOutFactor2b" (formula "11") (term "0,0"))
                                                                        (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "11") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "11") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "11"))
                                                                        (rule "true_left" (formula "11"))
                                                                        (rule "elimGcdGeq_antec" (formula "17") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                                        (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0"))
                                                                        (rule "leq_literals" (formula "17") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "17"))
                                                                        (rule "mul_literals" (formula "17") (term "1,0,0,0,0,0"))
                                                                        (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                                                        (rule "add_zero_left" (formula "17") (term "0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor0b" (formula "17") (term "0,0"))
                                                                        (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "17") (term "0,0"))
                                                                        (rule "leq_literals" (formula "17") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "17"))
                                                                        (rule "pullOutSelect" (formula "53") (term "0,2,0,1,1") (inst "selectSK=arr_5"))
                                                                        (rule "applyEq" (formula "54") (term "0,0,1") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "54") (term "0,1,0,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "54") (term "0,0,1,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "54") (term "0,0,0,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "54") (term "1,0,2,0,1,1,0") (ifseqformula "1"))
                                                                        (rule "simplifySelectOfStore" (formula "1"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "castDel" (formula "1") (term "1,0"))
                                                                        (rule "polySimp_homoEq" (formula "54") (term "0,1"))
                                                                        (rule "polySimp_addComm1" (formula "54") (term "0,0,1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "54") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "54") (term "0,1,0,0"))
                                                                        (rule "polySimp_sepPosMonomial" (formula "54") (term "0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "54") (term "1,0,1"))
                                                                        (rule "polySimp_rightDist" (formula "54") (term "1,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,1"))
                                                                        (rule "mul_literals" (formula "54") (term "0,1,0,1"))
                                                                        (rule "polySimp_elimOne" (formula "54") (term "1,1,0,1"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "54") (term "1,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0"))
                                                                        (rule "mul_literals" (formula "54") (term "0,1,1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0"))
                                                                        (rule "inEqSimp_contradEq7" (formula "1") (term "0,0") (ifseqformula "4"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                                                        (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                                                        (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                                                        (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                                        (rule "leq_literals" (formula "1") (term "0,0,0"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "applyEq" (formula "16") (term "0,1") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "15") (term "0,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "16") (term "1,0,2,0,0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "15") (term "0,2,0,1") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "14") (term "0") (ifseqformula "1"))
                                                                        (rule "applyEq" (formula "13") (term "0") (ifseqformula "1"))
                                                                        (rule "simplifySelectOfAnon" (formula "1"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "applyEqReverse" (formula "54") (term "1,0,2,0,1,1,0") (ifseqformula "1"))
                                                                        (rule "applyEqReverse" (formula "54") (term "1,1,0,1") (ifseqformula "1"))
                                                                        (rule "applyEqReverse" (formula "54") (term "1,1,1,0,0") (ifseqformula "1"))
                                                                        (rule "applyEqReverse" (formula "16") (term "0,1") (ifseqformula "1"))
                                                                        (rule "applyEqReverse" (formula "54") (term "0,0,0,0") (ifseqformula "1"))
                                                                        (rule "applyEqReverse" (formula "15") (term "0,0") (ifseqformula "1"))
                                                                        (rule "applyEqReverse" (formula "16") (term "1,0,2,0,0") (ifseqformula "1"))
                                                                        (rule "applyEqReverse" (formula "15") (term "0,2,0,1") (ifseqformula "1"))
                                                                        (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "1"))
                                                                        (rule "applyEqReverse" (formula "54") (term "0,0,1,0") (ifseqformula "1"))
                                                                        (rule "applyEqReverse" (formula "54") (term "0,2,0,1,1") (ifseqformula "1"))
                                                                        (rule "applyEqReverse" (formula "13") (term "0") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "replace_known_left" (formula "53") (term "0,0,0") (ifseqformula "12"))
                                                                         (builtin "One Step Simplification" (formula "53"))
                                                                        (rule "polySimp_homoEq" (formula "53") (term "0,1"))
                                                                        (rule "polySimp_addComm1" (formula "53") (term "0,0,1"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "53") (term "0,0"))
                                                                        (rule "polySimp_addComm1" (formula "53") (term "0,0,0"))
                                                                        (rule "polySimp_sepPosMonomial" (formula "53") (term "0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "53") (term "1,0,1"))
                                                                        (rule "polySimp_rightDist" (formula "53") (term "1,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,1"))
                                                                        (rule "mul_literals" (formula "53") (term "0,1,0,1"))
                                                                        (rule "polySimp_elimOne" (formula "53") (term "1,1,0,1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "53") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "53") (term "1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0"))
                                                                        (rule "mul_literals" (formula "53") (term "0,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0"))
                                                                        (rule "replace_known_left" (formula "53") (term "0,0") (ifseqformula "13"))
                                                                         (builtin "One Step Simplification" (formula "53"))
                                                                        (rule "pullOutSelect" (formula "15") (term "1,1,0") (inst "selectSK=arr_6"))
                                                                        (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "15"))
                                                                        (rule "simplifySelectOfAnon" (formula "15"))
                                                                         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "46")) (ifInst ""  (formula "52")))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,0,0,0") (ifseqformula "39"))
                                                                        (rule "replace_known_left" (formula "15") (term "0,0,0,0,0") (ifseqformula "28"))
                                                                         (builtin "One Step Simplification" (formula "15"))
                                                                        (rule "simplifySelectOfAnon" (formula "15"))
                                                                         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "46")) (ifInst ""  (formula "52")))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,0,0") (ifseqformula "39"))
                                                                        (rule "replace_known_left" (formula "15") (term "0,0,0,0") (ifseqformula "28"))
                                                                         (builtin "One Step Simplification" (formula "15"))
                                                                        (rule "simplifySelectOfAnonEQ" (formula "15") (ifseqformula "39"))
                                                                         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "52")) (ifInst ""  (formula "28")))
                                                                        (rule "elementOfArrayRangeConcrete" (formula "15") (term "0,0"))
                                                                        (rule "replace_known_right" (formula "15") (term "0,0,0,0") (ifseqformula "46"))
                                                                         (builtin "One Step Simplification" (formula "15"))
                                                                        (rule "applyEqReverse" (formula "14") (term "1,1") (ifseqformula "15"))
                                                                        (rule "applyEqReverse" (formula "16") (term "1,1,0") (ifseqformula "15"))
                                                                        (rule "hideAuxiliaryEq" (formula "15"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "7"))
                                                                        (rule "mul_literals" (formula "10") (term "0,0"))
                                                                        (rule "add_zero_left" (formula "10") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                                        (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                                        (rule "mul_literals" (formula "10") (term "0,1"))
                                                                        (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                                        (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "10"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "32") (term "0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0"))
                                                                        (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                                                        (rule "add_zero_right" (formula "32") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "32") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "32"))
                                                                        (rule "true_left" (formula "32"))
                                                                        (rule "pullOutSelect" (formula "16") (term "0,0") (inst "selectSK=arr_7"))
                                                                        (rule "simplifySelectOfAnon" (formula "16"))
                                                                         (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "49")))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "16") (term "0,0,1,0,0") (ifseqformula "39"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "0"))
                                                                        (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                                                        (rule "mul_literals" (formula "17") (term "0,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "17") (term "1,1,0"))
                                                                        (rule "pullOutSelect" (formula "15") (term "0,1") (inst "selectSK=arr_8"))
                                                                        (rule "simplifySelectOfAnon" (formula "15"))
                                                                         (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "50")))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "0,0,1,0,0") (ifseqformula "40"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                                                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "7"))
                                                                        (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                                        (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                        (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                                        (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                        (rule "pullOutSelect" (formula "56") (term "1,1,1,0") (inst "selectSK=arr_9"))
                                                                        (rule "applyEq" (formula "57") (term "1,1,1") (ifseqformula "1"))
                                                                        (rule "simplifySelectOfStore" (formula "1"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "replaceKnownSelect_taclet110010110100100101201010_13" (formula "1") (term "2,0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet110010110100100101201010_16" (formula "1") (term "2,0"))
                                                                        (rule "castDel" (formula "1") (term "1,0"))
                                                                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "49"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "applyEqReverse" (formula "57") (term "1,1,1,0") (ifseqformula "1"))
                                                                        (rule "applyEqReverse" (formula "57") (term "1,1,1") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "pullOutSelect" (formula "56") (term "0,1,0") (inst "selectSK=arr_10"))
                                                                        (rule "simplifySelectOfStore" (formula "1"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "replaceKnownSelect_taclet110010110100100101201010_17" (formula "1") (term "2,0"))
                                                                        (rule "castDel" (formula "1") (term "1,0"))
                                                                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "52"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "applyEqReverse" (formula "57") (term "0,1,0") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "56") (term "1,0"))
                                                                        (rule "polySimp_addComm1" (formula "56") (term "0,1,0"))
                                                                        (rule "inEqSimp_sepPosMonomial1" (formula "56") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "56") (term "1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "56") (term "1,1,0"))
                                                                        (rule "mul_literals" (formula "56") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "56") (term "1,1,1,0"))
                                                                        (rule "pullOutSelect" (formula "56") (term "0,1,1") (inst "selectSK=arr_11"))
                                                                        (rule "simplifySelectOfStore" (formula "1"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "replaceKnownSelect_taclet110010110100100101201010_18" (formula "1") (term "2,0"))
                                                                        (rule "castDel" (formula "1") (term "1,0"))
                                                                        (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                        (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "52"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "applyEqReverse" (formula "57") (term "0,1,1") (ifseqformula "1"))
                                                                        (rule "hideAuxiliaryEq" (formula "1"))
                                                                        (rule "inEqSimp_commuteGeq" (formula "56") (term "1,1"))
                                                                        (rule "replace_known_left" (formula "56") (term "1") (ifseqformula "17"))
                                                                         (builtin "One Step Simplification" (formula "56"))
                                                                        (rule "orRight" (formula "56"))
                                                                        (rule "replace_known_right" (formula "19") (term "1") (ifseqformula "56"))
                                                                         (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "57")))
                                                                        (rule "closeFalse" (formula "19"))
                                                                     )
                                                                  )
                                                               )
                                                               (branch
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,0,1,1,0,0,0") (ifseqformula "34"))
                                                                  (rule "allRight" (formula "50") (inst "sk=f_0"))
                                                                  (rule "allRight" (formula "50") (inst "sk=o_0"))
                                                                  (rule "orRight" (formula "50"))
                                                                  (rule "orRight" (formula "50"))
                                                                  (rule "eqSymm" (formula "52"))
                                                                  (rule "polySimp_homoEq" (formula "9") (term "1,1,1,0"))
                                                                  (rule "polySimp_homoEq" (formula "10") (term "1,1,1,0"))
                                                                  (rule "polySimp_homoEq" (formula "17") (term "1,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1,0,1,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,1,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,1,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1,0,1,1,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,1,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,1,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "10") (term "0,1,0,1,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "17") (term "1,0,1,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,1,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,1,1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0,1,1,1,0"))
                                                                  (rule "inEqSimp_ltRight" (formula "40"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "18") (term "0,1,1,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "37") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "5"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "5") (term "0,1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "18") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "18") (term "0,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "13"))
                                                                  (rule "mul_literals" (formula "13") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "13") (term "0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "10") (term "1,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "0,1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "10") (term "0,1,1,1,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "11") (term "1,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "0,1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "0,1,1,1,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "18") (term "1,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "0,1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "18") (term "0,1,1,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                                                  (rule "polySimp_mulLiterals" (formula "30") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "30") (term "1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,0"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1,0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "1,1,0,1,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "1,0,1,1,0"))
                                                                  (rule "mul_literals" (formula "18") (term "0,1,0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "18") (term "1,1,0,1,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                                  (rule "mul_literals" (formula "13") (term "1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1,0,1,1,0"))
                                                                  (rule "mul_literals" (formula "10") (term "0,1,0,1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "10") (term "1,1,0,1,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "10") (term "0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "36") (term "0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "0,1"))
                                                                  (rule "mul_literals" (formula "5") (term "0,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "18") (term "0,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "18") (term "0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "14") (term "0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "5"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0"))
                                                                  (rule "mul_literals" (formula "9") (term "0,0,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "9") (term "1,0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                                                  (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "9") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "9") (term "0,0"))
                                                                  (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "9") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "9") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "true_left" (formula "9"))
                                                                  (rule "elimGcdGeq_antec" (formula "12") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                                  (rule "leq_literals" (formula "12") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                                                                  (rule "add_zero_left" (formula "12") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
                                                                  (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "12") (term "0,0"))
                                                                  (rule "leq_literals" (formula "12") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "pullOutSelect" (formula "50") (term "1") (inst "selectSK=f_0_0"))
                                                                  (rule "simplifySelectOfAnon" (formula "1"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "34"))
                                                                  (rule "pullOutSelect" (formula "51") (term "0") (inst "selectSK=f_0_1"))
                                                                  (rule "simplifySelectOfStore" (formula "1"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "castDel" (formula "1") (term "1,0"))
                                                                  (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                                  (rule "eqSymm" (formula "1") (term "1,0,0"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "50"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "simplifySelectOfAnon" (formula "1"))
                                                                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "50")))
                                                                  (rule "replaceKnownSelect_taclet1010110100100101201010_9" (formula "1") (term "2,0"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "35"))
                                                                  (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "51"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "applyEqReverse" (formula "52") (term "0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "closeTrue" (formula "52"))
                                                               )
                                                            )
                                                            (branch
                                                               (rule "polySimp_homoEq" (formula "10") (term "1,1,1,0"))
                                                               (rule "polySimp_homoEq" (formula "17") (term "1,1,1,0"))
                                                               (rule "polySimp_homoEq" (formula "9") (term "1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "50") (term "0,0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "50") (term "0,0"))
                                                               (rule "mul_literals" (formula "50") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1,0,1,1,1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "0,1,0,1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "17") (term "1,0,1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0,1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,0,1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0,1,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "17") (term "0,1,1,1,0"))
                                                               (rule "precOfInt" (formula "50"))
                                                               (rule "polySimp_addAssoc" (formula "9") (term "0,1,1,1,0"))
                                                               (rule "inEqSimp_ltRight" (formula "40"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "10") (term "0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_gtToGeq" (formula "13"))
                                                               (rule "mul_literals" (formula "13") (term "1,0,0"))
                                                               (rule "add_literals" (formula "13") (term "0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "14") (term "0,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "5"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "5") (term "0,1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "37") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "37") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "37") (term "0,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "18") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "18") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "50") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,1"))
                                                               (rule "polySimp_rightDist" (formula "50") (term "0,1,0,0,1"))
                                                               (rule "polySimp_mulAssoc" (formula "50") (term "0,0,1,0,0,1"))
                                                               (rule "polySimp_mulComm0" (formula "50") (term "0,0,0,1,0,0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "50") (term "0,0,1,0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "50") (term "0,0,1,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "50") (term "0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,1"))
                                                               (rule "polySimp_addAssoc" (formula "50") (term "0,1"))
                                                               (rule "polySimp_addAssoc" (formula "50") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "50") (term "0,0,0,1"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                                               (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                                               (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                                               (rule "add_zero_right" (formula "50") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "50") (term "0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "50") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "50") (term "0,0,0,0,1"))
                                                               (rule "add_zero_left" (formula "50") (term "0,0,0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "50") (term "0"))
                                                               (rule "times_zero_2" (formula "50") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "50") (term "0,0"))
                                                               (rule "applyEq" (formula "50") (term "1,0,1") (ifseqformula "31"))
                                                               (rule "polySimp_addAssoc" (formula "50") (term "0,1"))
                                                               (rule "polySimp_addComm1" (formula "50") (term "0,0,1"))
                                                               (rule "polySimp_pullOutFactor1" (formula "50") (term "0,0,0,1"))
                                                               (rule "add_literals" (formula "50") (term "1,0,0,0,1"))
                                                               (rule "times_zero_1" (formula "50") (term "0,0,0,1"))
                                                               (rule "add_zero_left" (formula "50") (term "0,0,1"))
                                                               (rule "polySimp_pullOutFactor2" (formula "50") (term "0,1"))
                                                               (rule "add_literals" (formula "50") (term "1,0,1"))
                                                               (rule "times_zero_1" (formula "50") (term "0,1"))
                                                               (rule "leq_literals" (formula "50") (term "1"))
                                                                (builtin "One Step Simplification" (formula "50"))
                                                               (rule "inEqSimp_geqRight" (formula "50"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0,0"))
                                                               (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "32"))
                                                               (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                               (rule "polySimp_sepNegMonomial" (formula "12") (term "1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "0,1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "12") (term "0,1,1,1,0"))
                                                               (rule "polySimp_sepNegMonomial" (formula "19") (term "1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "0,1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "19") (term "0,1,1,1,0"))
                                                               (rule "polySimp_sepNegMonomial" (formula "11") (term "1,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "0,1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "11") (term "0,1,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                               (rule "polySimp_mulLiterals" (formula "31") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "31") (term "1"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,1,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "11") (term "1,1,0,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                               (rule "mul_literals" (formula "14") (term "1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,0"))
                                                               (rule "mul_literals" (formula "12") (term "0,1,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "12") (term "1,1,0,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "19") (term "1,0,1,1,0"))
                                                               (rule "mul_literals" (formula "19") (term "0,1,0,1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "19") (term "1,1,0,1,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "11") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "15") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                                                               (rule "mul_literals" (formula "6") (term "0,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "19") (term "0,1,0,0,0"))
                                                               (rule "mul_literals" (formula "19") (term "0,0,1,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                               (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "1"))
                                                               (rule "andLeft" (formula "6"))
                                                               (rule "inEqSimp_homoInEq1" (formula "6"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                                               (rule "mul_literals" (formula "6") (term "0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                               (rule "add_literals" (formula "6") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "6") (term "1,0"))
                                                               (rule "add_zero_right" (formula "6") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "6") (term "0"))
                                                               (rule "add_literals" (formula "6") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "6") (term "1,0"))
                                                               (rule "add_zero_right" (formula "6") (term "0"))
                                                               (rule "leq_literals" (formula "6"))
                                                               (rule "closeFalse" (formula "6"))
                                                            )
                                                         )
                                                      )
                                                      (branch "Null Reference (x_arr_1 = null)"
                                                         (rule "false_right" (formula "51"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch "Index Out of Bounds (x_arr_1 != null, but x_16 Out of Bounds!)"
                                                         (rule "false_right" (formula "51"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                                         (rule "polySimp_homoEq" (formula "10") (term "1,1,1,0"))
                                                         (rule "polySimp_homoEq" (formula "18") (term "1,1,1,0"))
                                                         (rule "polySimp_homoEq" (formula "11") (term "1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "18") (term "1,0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "0,1,0,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "11") (term "0,1,0,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "10") (term "0,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "18") (term "0,1,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,1,0"))
                                                         (rule "inEqSimp_ltRight" (formula "41"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "38") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "38") (term "0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "6"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "19") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_gtToGeq" (formula "14"))
                                                         (rule "mul_literals" (formula "14") (term "1,0,0"))
                                                         (rule "add_literals" (formula "14") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "2") (term "1"))
                                                         (rule "mul_literals" (formula "2") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                                         (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "32"))
                                                         (rule "inEqSimp_commuteLeq" (formula "2") (term "0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "11") (term "1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "0,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "11") (term "0,1,1,1,0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "19") (term "1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "0,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "19") (term "0,1,1,1,0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "12") (term "1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "0,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "0,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                         (rule "polySimp_mulLiterals" (formula "31") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "31") (term "1"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "19") (term "1,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,1,0"))
                                                         (rule "mul_literals" (formula "19") (term "0,1,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "19") (term "1,1,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,1,0"))
                                                         (rule "mul_literals" (formula "11") (term "0,1,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "11") (term "1,1,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                         (rule "mul_literals" (formula "14") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,1,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,1,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "1,1,0,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "15") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1"))
                                                         (rule "mul_literals" (formula "2") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                                                         (rule "mul_literals" (formula "6") (term "0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "19") (term "0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "19") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,0"))
                                                         (rule "mul_literals" (formula "11") (term "0,0,1,0,0,0"))
                                                         (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0"))
                                                         (rule "mul_literals" (formula "10") (term "0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "10") (term "1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                         (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "10") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "10") (term "0,0"))
                                                         (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "10") (term "0,0"))
                                                         (rule "qeq_literals" (formula "10") (term "0"))
                                                          (builtin "One Step Simplification" (formula "10"))
                                                         (rule "true_left" (formula "10"))
                                                         (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "9"))
                                                         (rule "qeq_literals" (formula "2") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "2"))
                                                         (rule "andLeft" (formula "6"))
                                                         (rule "inEqSimp_homoInEq1" (formula "6"))
                                                         (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
                                                         (rule "mul_literals" (formula "6") (term "0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                         (rule "add_literals" (formula "6") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "6") (term "1,0"))
                                                         (rule "add_zero_right" (formula "6") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "6") (term "0"))
                                                         (rule "add_literals" (formula "6") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "6") (term "1,0"))
                                                         (rule "add_zero_right" (formula "6") (term "0"))
                                                         (rule "leq_literals" (formula "6"))
                                                         (rule "closeFalse" (formula "6"))
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "Null Reference (x_arr_3 = null)"
                                                 (builtin "One Step Simplification" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "false_right" (formula "47"))
                                                (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "polySimp_homoEq" (formula "7") (term "1,1,1,0"))
                                                (rule "polySimp_homoEq" (formula "14") (term "1,1,1,0"))
                                                (rule "polySimp_homoEq" (formula "6") (term "1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,0,1,1,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "0,1,0,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,1,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "7") (term "0,1,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "33") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "33") (term "0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "9"))
                                                (rule "mul_literals" (formula "9") (term "1,0,0"))
                                                (rule "add_literals" (formula "9") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "2"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0"))
                                                (rule "applyEq" (formula "6") (term "1,1,0,0,1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "41") (term "0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "41"))
                                                (rule "applyEq" (formula "14") (term "1,0,1,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "7") (term "1,0,1,1,0,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "39") (term "0") (ifseqformula "1"))
                                                (rule "eqSymm" (formula "39"))
                                                (rule "applyEq" (formula "14") (term "1,1,0,0,1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "40") (term "1") (ifseqformula "1"))
                                                (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "40"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEq" (formula "7") (term "1,1,0,0,1,1,0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "6") (term "1,0,1,1,0,1,0") (ifseqformula "1"))
                                                (rule "polySimp_sepNegMonomial" (formula "7") (term "1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "0,1,1,1,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "14") (term "1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "0,1,1,1,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "6") (term "1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "0,1,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                                (rule "polySimp_mulLiterals" (formula "26") (term "1"))
                                                (rule "polySimp_elimOne" (formula "26") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                (rule "mul_literals" (formula "9") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "0,1,0,0,0"))
                                                (rule "mul_literals" (formula "32") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,0"))
                                                (rule "mul_literals" (formula "10") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,1,1,0"))
                                                (rule "mul_literals" (formula "6") (term "0,1,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "1,1,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,1,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,1,1,0"))
                                                (rule "mul_literals" (formula "7") (term "0,1,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "1,1,0,1,1,0"))
                                                (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "1,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "5") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "5") (term "0,0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "5") (term "0,0"))
                                                (rule "qeq_literals" (formula "5") (term "0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                                                (rule "leq_literals" (formula "8") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "8") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "8") (term "0,0"))
                                                (rule "leq_literals" (formula "8") (term "0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "2"))
                                                (rule "times_zero_1" (formula "4") (term "0,0"))
                                                (rule "add_zero_left" (formula "4") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                (rule "mul_literals" (formula "4") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                                (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "23") (term "0,0"))
                                                (rule "qeq_literals" (formula "23") (term "0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "nnf_imp2or" (formula "31") (term "0"))
                                                (rule "nnf_imp2or" (formula "10") (term "0"))
                                                (rule "nnf_imp2or" (formula "6") (term "0"))
                                                (rule "nnf_imp2or" (formula "14") (term "0"))
                                                (rule "nnf_imp2or" (formula "7") (term "0"))
                                                (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                                (rule "mul_literals" (formula "31") (term "1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "31") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "31") (term "0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "31") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "31") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "1,0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "10") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                                (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "6") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "6") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "6") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "6") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "6") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
                                                (rule "nnf_notAnd" (formula "14") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "14") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "14") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "14") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "7") (term "0,0"))
                                                (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "7") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "7") (term "0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "7") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "1,0,0,0"))
                                                (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                                (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                                                (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "27"))
                                                (rule "true_left" (formula "27"))
                                                (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "26"))
                                                 (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "37")) (ifInst ""  (formula "1")))
                                                (rule "closeFalse" (formula "26"))
                                             )
                                             (branch "Index Out of Bounds (x_arr_3 != null, but x_20 Out of Bounds!)"
                                                 (builtin "One Step Simplification" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "47"))
                                                (rule "instAll" (formula "1") (term "0,2,1,1,0,1") (ifseqformula "7") (userinteraction))
                                                (rule "impLeft" (formula "1") (userinteraction))
                                                (branch "Case 1"
                                                   (rule "false_right" (formula "48"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "38"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "replace_known_left" (formula "39") (term "0") (ifseqformula "2"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "polySimp_homoEq" (formula "7") (term "1,1,1,0"))
                                                   (rule "polySimp_homoEq" (formula "8") (term "1,1,1,0"))
                                                   (rule "polySimp_homoEq" (formula "15") (term "1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "1,0,1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0,1,1,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0,1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "8") (term "0,1,0,1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,0,1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,1,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "7") (term "0,1,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,1,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,1,0"))
                                                   (rule "inEqSimp_geqRight" (formula "39"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0"))
                                                   (rule "add_literals" (formula "1") (term "0"))
                                                   (rule "leq_literals" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "Case 2"
                                                   (rule "false_right" (formula "48"))
                                                   (rule "andLeft" (formula "2"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "notLeft" (formula "3"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "orLeft" (formula "5") (userinteraction))
                                                   (branch " self.sorted_splitters.length <= l_0 * -1 + indices[j_0]@anon_heap_LOOP_1<<anonHeapFunction>>"
                                                      (rule "replaceKnownSelect_taclet00100101201010_4" (formula "1") (term "0"))
                                                      (rule "replaceKnownSelect_taclet00100101201010_4" (formula "2") (term "0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet00100101201010_5" (formula "1") (term "0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet00100101201010_5" (formula "2") (term "0"))
                                                      (rule "replaceKnownSelect_taclet00100101201010_4" (formula "3") (term "0,0"))
                                                      (rule "replaceKnownSelect_taclet0100101201010_0" (formula "3") (term "1,1"))
                                                      (rule "replaceKnownSelect_taclet0100101201010_0" (formula "4") (term "1,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet00100101201010_5" (formula "3") (term "0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0100101201010_3" (formula "3") (term "1,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0100101201010_3" (formula "4") (term "1,0"))
                                                      (rule "replaceKnownSelect_taclet00100101201010_4" (formula "4") (term "1,0,1"))
                                                      (rule "replaceKnownSelect_taclet00100101201010_4" (formula "3") (term "0,2,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet00100101201010_5" (formula "4") (term "1,0,1"))
                                                      (rule "replaceKnownSelect_taclet00100101201010_4" (formula "4") (term "1,0,2,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet00100101201010_5" (formula "3") (term "0,2,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet00100101201010_5" (formula "4") (term "1,0,2,0,0"))
                                                      (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "42"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "polySimp_homoEq" (formula "12") (term "1,1,1,0"))
                                                      (rule "polySimp_homoEq" (formula "19") (term "1,1,1,0"))
                                                      (rule "polySimp_homoEq" (formula "11") (term "1,1,1,0"))
                                                      (rule "polySimp_homoEq" (formula "4") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0,1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "6"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "19") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "14"))
                                                      (rule "mul_literals" (formula "14") (term "1,0,0"))
                                                      (rule "add_literals" (formula "14") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "38") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "38") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,1,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "4") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "5"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "12") (term "1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "0,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "0,1,1,1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "19") (term "1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0,1,1,1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "11") (term "1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "0,1,1,1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "4") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,1,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,1,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,1,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "1,1,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                      (rule "mul_literals" (formula "14") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,1,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                                                      (rule "mul_literals" (formula "6") (term "0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                      (rule "polySimp_mulAssoc" (formula "5") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0,1"))
                                                      (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0"))
                                                      (rule "mul_literals" (formula "10") (term "0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                      (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "10") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "10") (term "0,0"))
                                                      (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                      (rule "add_literals" (formula "10") (term "0,0"))
                                                      (rule "qeq_literals" (formula "10") (term "0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                                      (rule "leq_literals" (formula "13") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                                      (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0"))
                                                      (rule "leq_literals" (formula "13") (term "0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "pullOutSelect" (formula "3") (term "0,1") (inst "selectSK=arr_2"))
                                                      (rule "simplifySelectOfAnon" (formula "3"))
                                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "46")) (ifInst ""  (formula "41")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "35"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "8"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnon" (formula "3"))
                                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "46")) (ifInst ""  (formula "41")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "35"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "41")) (ifInst ""  (formula "8")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                                      (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "46"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "0,1") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "pullOutSelect" (formula "4") (term "0,0") (inst "selectSK=arr_3"))
                                                      (rule "simplifySelectOfAnon" (formula "4"))
                                                       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "46")) (ifInst ""  (formula "41")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,0,0") (ifseqformula "35"))
                                                      (rule "replace_known_left" (formula "4") (term "0,0,0,0,0") (ifseqformula "8"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "simplifySelectOfAnon" (formula "4"))
                                                       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "46")) (ifInst ""  (formula "41")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,0") (ifseqformula "35"))
                                                      (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "8"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "41")) (ifInst ""  (formula "8")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "4") (term "0,0"))
                                                      (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "46"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "7"))
                                                      (rule "times_zero_1" (formula "10") (term "0,0"))
                                                      (rule "add_zero_left" (formula "10") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                                      (rule "mul_literals" (formula "10") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "10"))
                                                      (rule "inEqSimp_homoInEq0" (formula "29") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                                                      (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0"))
                                                      (rule "qeq_literals" (formula "29") (term "0"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "3"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                      (rule "nnf_imp2or" (formula "14") (term "0"))
                                                      (rule "nnf_imp2or" (formula "21") (term "0"))
                                                      (rule "nnf_imp2or" (formula "17") (term "0"))
                                                      (rule "nnf_imp2or" (formula "38") (term "0"))
                                                      (rule "nnf_imp2or" (formula "13") (term "0"))
                                                      (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "33"))
                                                       (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "41")))
                                                      (rule "translateJavaSubInt" (formula "33") (term "3,0,1"))
                                                      (rule "andLeft" (formula "33"))
                                                      (rule "andLeft" (formula "33"))
                                                      (rule "andLeft" (formula "33"))
                                                      (rule "andLeft" (formula "34"))
                                                      (rule "andLeft" (formula "33"))
                                                      (rule "andLeft" (formula "33"))
                                                      (rule "notLeft" (formula "33"))
                                                      (rule "andLeft" (formula "33"))
                                                      (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "47"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "polySimp_elimSub" (formula "39") (term "3,0"))
                                                      (rule "mul_literals" (formula "39") (term "1,3,0"))
                                                      (rule "polySimp_addComm0" (formula "39") (term "3,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "38"))
                                                      (rule "inEqSimp_commuteLeq" (formula "37"))
                                                      (rule "inEqSimp_commuteLeq" (formula "36"))
                                                      (rule "inEqSimp_commuteLeq" (formula "33"))
                                                      (rule "applyEq" (formula "38") (term "1") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "13") (term "1,1,1,0,0,1,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "36") (term "0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "39") (term "1,3,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "14") (term "1,1,1,0,0,1,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "37") (term "1") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "17") (term "1,1,1,1,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "21") (term "1,1,0,0,1,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "13") (term "1,1,0,1,0,1,0") (ifseqformula "35"))
                                                      (rule "applyEq" (formula "14") (term "1,1,0,1,0,1,0") (ifseqformula "35"))
                                                      (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "34"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "19") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "3"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "6"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "39") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "39") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "39") (term "0"))
                                                      (rule "add_literals" (formula "39") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "39") (term "1,0"))
                                                      (rule "add_zero_right" (formula "39") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                                      (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "39") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "39"))
                                                      (rule "qeq_literals" (formula "16") (term "0"))
                                                       (builtin "One Step Simplification" (formula "16"))
                                                      (rule "closeFalse" (formula "16"))
                                                   )
                                                   (branch " l_0 * -1 + indices[j_0]@anon_heap_LOOP_1<<anonHeapFunction>> < 0"
                                                      (rule "replaceKnownSelect_taclet00100101201010_4" (formula "1") (term "0"))
                                                      (rule "replaceKnownSelect_taclet00100101201010_4" (formula "2") (term "0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet00100101201010_5" (formula "1") (term "0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet00100101201010_5" (formula "2") (term "0"))
                                                      (rule "replaceKnownSelect_taclet00100101201010_4" (formula "3") (term "0,0"))
                                                      (rule "replaceKnownSelect_taclet0100101201010_0" (formula "3") (term "1,1"))
                                                      (rule "replaceKnownSelect_taclet0100101201010_0" (formula "4") (term "1,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet00100101201010_5" (formula "3") (term "0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0100101201010_3" (formula "3") (term "1,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0100101201010_3" (formula "4") (term "1,0"))
                                                      (rule "replaceKnownSelect_taclet00100101201010_4" (formula "4") (term "1,0,1"))
                                                      (rule "replaceKnownSelect_taclet00100101201010_4" (formula "3") (term "0,2,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet00100101201010_5" (formula "4") (term "1,0,1"))
                                                      (rule "replaceKnownSelect_taclet00100101201010_4" (formula "4") (term "1,0,2,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet00100101201010_5" (formula "3") (term "0,2,0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet00100101201010_5" (formula "4") (term "1,0,2,0,0"))
                                                      (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "42"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "polySimp_homoEq" (formula "12") (term "1,1,1,0"))
                                                      (rule "polySimp_homoEq" (formula "11") (term "1,1,1,0"))
                                                      (rule "polySimp_homoEq" (formula "19") (term "1,1,1,0"))
                                                      (rule "polySimp_homoEq" (formula "4") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0,1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "6"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "19") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "38") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "38") (term "0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "5"))
                                                      (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "5") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "11") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "14"))
                                                      (rule "mul_literals" (formula "14") (term "1,0,0"))
                                                      (rule "add_literals" (formula "14") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "19") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,1"))
                                                      (rule "inEqSimp_ltToLeq" (formula "4") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "12") (term "1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "0,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "0,1,1,1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "11") (term "1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "0,1,1,1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "19") (term "1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0,1,1,1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "4") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "12") (term "1,0,1,1,0"))
                                                      (rule "mul_literals" (formula "12") (term "0,1,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "12") (term "1,1,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,1,1,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,1,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                      (rule "mul_literals" (formula "14") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,1,1,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,1,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "0,1"))
                                                      (rule "mul_literals" (formula "6") (term "0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                      (rule "mul_literals" (formula "5") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0"))
                                                      (rule "mul_literals" (formula "10") (term "0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                      (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "10") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "10") (term "0,0"))
                                                      (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                      (rule "add_literals" (formula "10") (term "0,0"))
                                                      (rule "qeq_literals" (formula "10") (term "0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "elimGcdGeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                                                      (rule "leq_literals" (formula "13") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                                      (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0"))
                                                      (rule "leq_literals" (formula "13") (term "0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "pullOutSelect" (formula "3") (term "0,1") (inst "selectSK=arr_2"))
                                                      (rule "simplifySelectOfAnon" (formula "3"))
                                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "46")) (ifInst ""  (formula "41")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0,0") (ifseqformula "35"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0,0") (ifseqformula "8"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnon" (formula "3"))
                                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "46")) (ifInst ""  (formula "41")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,0") (ifseqformula "35"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "8"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "41")) (ifInst ""  (formula "8")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                                      (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "46"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "0,1") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "pullOutSelect" (formula "4") (term "0,0") (inst "selectSK=arr_3"))
                                                      (rule "simplifySelectOfAnon" (formula "4"))
                                                       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "46")) (ifInst ""  (formula "41")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,0,0") (ifseqformula "35"))
                                                      (rule "replace_known_left" (formula "4") (term "0,0,0,0,0") (ifseqformula "8"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "simplifySelectOfAnon" (formula "4"))
                                                       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "46")) (ifInst ""  (formula "41")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "4") (term "0,0,0") (ifseqformula "35"))
                                                      (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "8"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "4") (ifseqformula "35"))
                                                       (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "41")) (ifInst ""  (formula "8")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "4") (term "0,0"))
                                                      (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "46"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "0,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "6"))
                                                      (rule "mul_literals" (formula "9") (term "0,0"))
                                                      (rule "add_zero_left" (formula "9") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                                                      (rule "mul_literals" (formula "9") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "9"))
                                                      (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                      (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0"))
                                                      (rule "qeq_literals" (formula "28") (term "0"))
                                                       (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "6"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "2") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor2" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,0"))
                                                      (rule "inEqSimp_invertInEq1" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "mul_literals" (formula "2") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "16"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "Null Reference (_indices = null)"
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Index Out of Bounds (_indices != null, but j Out of Bounds!)"
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")))
                                           (builtin "One Step Simplification" (formula "47"))
                                          (rule "false_right" (formula "47"))
                                          (rule "polySimp_homoEq" (formula "8") (term "1,1,1,0"))
                                          (rule "polySimp_homoEq" (formula "7") (term "1,1,1,0"))
                                          (rule "polySimp_homoEq" (formula "15") (term "1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,0,1,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,1,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "0,1,0,1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,1,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,1,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,1,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "8") (term "0,1,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,1,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "34") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "34") (term "0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "10"))
                                          (rule "mul_literals" (formula "10") (term "1,0,0"))
                                          (rule "add_literals" (formula "10") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0"))
                                          (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "28"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                                          (rule "polySimp_sepNegMonomial" (formula "8") (term "1,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "0,1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "0,1,1,1,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "7") (term "1,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "0,1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "0,1,1,1,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "15") (term "1,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "0,1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "0,1,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "7") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,1,1,0"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,0,1,1,0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "1,1,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,1,1,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "1,1,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                          (rule "mul_literals" (formula "10") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                          (rule "mul_literals" (formula "2") (term "0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "15") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "33") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "5"))
                                          (rule "qeq_literals" (formula "1") (term "0,1"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                                          (rule "mul_literals" (formula "6") (term "0,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "6") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                          (rule "add_literals" (formula "6") (term "0,0"))
                                          (rule "qeq_literals" (formula "6") (term "0"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0"))
                                          (rule "add_zero_right" (formula "2") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                          (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0"))
                                          (rule "add_literals" (formula "2") (term "0"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                    )
                                    (branch "Null Reference (x_arr = null)"
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "Index Out of Bounds (x_arr != null, but x_15 Out of Bounds!)"
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                       (rule "false_right" (formula "47"))
                                       (rule "polySimp_homoEq" (formula "15") (term "1,1,1,0"))
                                       (rule "polySimp_homoEq" (formula "7") (term "1,1,1,0"))
                                       (rule "polySimp_homoEq" (formula "8") (term "1,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,1,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,1,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,1,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,1,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,1,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,1,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,1,1,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0,1,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,1,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "0,1,0,1,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,1,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,1,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                       (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,0,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "10"))
                                       (rule "mul_literals" (formula "10") (term "1,0,0"))
                                       (rule "add_literals" (formula "10") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulAssoc" (formula "34") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "0,1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                       (rule "polySimp_sepNegMonomial" (formula "15") (term "1,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0,1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "0,1,1,1,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "7") (term "1,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "0,1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "0,1,1,1,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "8") (term "1,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "0,1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "0,1,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1"))
                                       (rule "polySimp_elimOne" (formula "27") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,1,1,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "1,1,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                       (rule "mul_literals" (formula "10") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,1,1,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,1,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,1,1,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                       (rule "mul_literals" (formula "2") (term "0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "33") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1,1"))
                                       (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,0,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0"))
                                       (rule "qeq_literals" (formula "6") (term "0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "leq_literals" (formula "9") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                       (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                       (rule "add_literals" (formula "9") (term "0,0"))
                                       (rule "leq_literals" (formula "9") (term "0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "2"))
                                       (rule "mul_literals" (formula "5") (term "0,0"))
                                       (rule "add_zero_left" (formula "5") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1"))
                                       (rule "mul_literals" (formula "5") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq0" (formula "24") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0"))
                                       (rule "qeq_literals" (formula "24") (term "0"))
                                        (builtin "One Step Simplification" (formula "24"))
                                       (rule "true_left" (formula "24"))
                                       (rule "nnf_imp2or" (formula "8") (term "0"))
                                       (rule "nnf_imp2or" (formula "15") (term "0"))
                                       (rule "nnf_imp2or" (formula "11") (term "0"))
                                       (rule "nnf_imp2or" (formula "7") (term "0"))
                                       (rule "nnf_imp2or" (formula "32") (term "0"))
                                       (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "8") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "8") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "8") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                                       (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "15") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                       (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "1,0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "11") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "7") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "7") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "32") (term "1,0,0"))
                                       (rule "times_zero_1" (formula "32") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "32") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0"))
                                       (rule "mul_literals" (formula "32") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "32") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "0,1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "32") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,0,0"))
                                       (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "27"))
                                        (builtin "One Step Simplification" (formula "27"))
                                       (rule "translateJavaSubInt" (formula "27") (term "3,0,1"))
                                       (rule "andLeft" (formula "27"))
                                       (rule "andLeft" (formula "27"))
                                       (rule "andLeft" (formula "27"))
                                       (rule "andLeft" (formula "28"))
                                       (rule "andLeft" (formula "27"))
                                       (rule "andLeft" (formula "27"))
                                       (rule "andLeft" (formula "27"))
                                       (rule "andLeft" (formula "29"))
                                       (rule "notLeft" (formula "28"))
                                       (rule "notLeft" (formula "27"))
                                       (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "42"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "43"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "polySimp_elimSub" (formula "33") (term "3,0"))
                                       (rule "mul_literals" (formula "33") (term "1,3,0"))
                                       (rule "polySimp_addComm0" (formula "33") (term "3,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "32"))
                                       (rule "inEqSimp_commuteLeq" (formula "31"))
                                       (rule "inEqSimp_commuteLeq" (formula "30"))
                                       (rule "inEqSimp_commuteLeq" (formula "27"))
                                       (rule "applyEq" (formula "31") (term "1") (ifseqformula "29"))
                                       (rule "applyEq" (formula "11") (term "1,1,1,1,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "32") (term "1") (ifseqformula "29"))
                                       (rule "applyEq" (formula "7") (term "1,1,1,0,0,1,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "30") (term "0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "33") (term "1,3,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "8") (term "1,1,1,0,0,1,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "7") (term "1,1,0,1,0,1,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "15") (term "1,1,0,0,1,0") (ifseqformula "29"))
                                       (rule "applyEq" (formula "8") (term "1,1,0,1,0,1,0") (ifseqformula "29"))
                                       (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "28"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "13") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "0"))
                                       (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "35"))
                                       (rule "true_left" (formula "35"))
                                       (rule "commute_or" (formula "1"))
                                       (rule "jdiv_axiom" (formula "40") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "0,0,2,1"))
                                       (rule "eqSymm" (formula "40"))
                                       (rule "applyEqRigid" (formula "40") (term "1") (ifseqformula "41"))
                                       (rule "inEqSimp_subsumption6" (formula "40") (term "0,0") (ifseqformula "10"))
                                       (rule "greater_literals" (formula "40") (term "0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "mul_literals" (formula "40") (term "1,0,0,0"))
                                       (rule "leq_literals" (formula "40") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "polyDiv_pullOut" (formula "40") (term "0") (inst "polyDivCoeff=l_0"))
                                       (rule "equal_literals" (formula "40") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0"))
                                       (rule "polySimp_homoEq" (formula "40"))
                                       (rule "polySimp_pullOutFactor0" (formula "40") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "40") (term "1,0,0,0,1,0"))
                                       (rule "times_zero_1" (formula "40") (term "0,0,0,1,0"))
                                       (rule "div_literals" (formula "40") (term "0,0,1,0"))
                                       (rule "add_zero_left" (formula "40") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "40") (term "0"))
                                       (rule "add_literals" (formula "40") (term "1,0"))
                                       (rule "times_zero_1" (formula "40") (term "0"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "true_left" (formula "40"))
                                       (rule "commute_or" (formula "8") (term "0,0"))
                                       (rule "commute_or" (formula "8") (term "1,1,0"))
                                       (rule "commute_or" (formula "16") (term "1,1,0"))
                                       (rule "commute_or" (formula "7") (term "1,1,0"))
                                       (rule "commute_or" (formula "16") (term "0,0"))
                                       (rule "commute_or" (formula "11") (term "0,0"))
                                       (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "34") (term "0") (inst "i=i") (inst "j=j_1"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,1,0"))
                                       (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,0"))
                                       (rule "nnf_imp2or" (formula "34") (term "0"))
                                       (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                                       (rule "add_literals" (formula "34") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                       (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                                       (rule "nnf_imp2or" (formula "34") (term "0,1,0"))
                                       (rule "nnf_notAnd" (formula "34") (term "0,0,1,0"))
                                       (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,1,0"))
                                       (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,0"))
                                       (rule "commute_or" (formula "38") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "8") (term "0"))
                                       (rule "distr_forallAnd" (formula "8"))
                                       (rule "andLeft" (formula "8"))
                                       (rule "cnf_rightDist" (formula "7") (term "0"))
                                       (rule "distr_forallAnd" (formula "7"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "cnf_rightDist" (formula "18") (term "0"))
                                       (rule "distr_forallAnd" (formula "18"))
                                       (rule "andLeft" (formula "18"))
                                       (rule "cnf_rightDist" (formula "13") (term "0"))
                                       (rule "distr_forallAnd" (formula "13"))
                                       (rule "andLeft" (formula "13"))
                                       (rule "commute_or_2" (formula "10") (term "0"))
                                       (rule "commute_or_2" (formula "8") (term "0"))
                                       (rule "commute_or_2" (formula "20") (term "0"))
                                       (rule "commute_or" (formula "14") (term "0"))
                                       (rule "shift_paren_or" (formula "19") (term "0"))
                                       (rule "commute_or" (formula "10") (term "0,0"))
                                       (rule "commute_or" (formula "8") (term "0,0"))
                                       (rule "commute_or" (formula "20") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "9") (term "0"))
                                       (rule "distr_forallAnd" (formula "9"))
                                       (rule "andLeft" (formula "9"))
                                       (rule "commute_or_2" (formula "10") (term "0"))
                                       (rule "commute_or" (formula "10") (term "0,0"))
                                       (rule "cnf_rightDist" (formula "7") (term "0"))
                                       (rule "distr_forallAnd" (formula "7"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "commute_or_2" (formula "8") (term "0"))
                                       (rule "commute_or" (formula "8") (term "0,0"))
                                       (rule "commute_or" (formula "40") (term "0,0,1,0"))
                                       (rule "cnf_rightDist" (formula "10") (term "0"))
                                       (rule "distr_forallAnd" (formula "10"))
                                       (rule "andLeft" (formula "10"))
                                       (rule "commute_or" (formula "11") (term "0"))
                                       (rule "cnf_rightDist" (formula "7") (term "0"))
                                       (rule "distr_forallAnd" (formula "7"))
                                       (rule "andLeft" (formula "7"))
                                       (rule "commute_or" (formula "8") (term "0"))
                                       (rule "arrayLengthNotNegative" (formula "41") (term "0"))
                                       (rule "arrayLengthIsAShort" (formula "42") (term "0"))
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "true_left" (formula "42"))
                                       (rule "arrayLengthNotNegative" (formula "40") (term "0"))
                                       (rule "arrayLengthIsAShort" (formula "41") (term "0"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "true_left" (formula "41"))
                                       (rule "cut_direct" (formula "1") (term "1"))
                                       (branch "CUT: values.length <= begin + j_0 TRUE"
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                          (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "34") (term "1,1"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "0,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "34"))
                                          (rule "andLeft" (formula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0"))
                                          (rule "add_zero_right" (formula "2") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                          (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0"))
                                          (rule "add_zero_right" (formula "2") (term "0"))
                                          (rule "leq_literals" (formula "2"))
                                          (rule "closeFalse" (formula "2"))
                                       )
                                       (branch "CUT: values.length <= begin + j_0 FALSE"
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_leqRight" (formula "52"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                          (rule "mul_literals" (formula "1") (term "0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,0,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "2"))
                                          (rule "times_zero_1" (formula "7") (term "0,0"))
                                          (rule "add_zero_left" (formula "7") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "34"))
                                          (rule "qeq_literals" (formula "7") (term "0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "closeFalse" (formula "7"))
                                       )
                                    )
                                 )
                              )
                              (branch "if x_12 false"
                                  (builtin "One Step Simplification" (formula "46"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "notLeft" (formula "1"))
                                 (rule "blockBreak" (formula "46") (term "1"))
                                 (rule "lsBreak" (formula "46") (term "1"))
                                 (rule "assignment" (formula "46") (term "1"))
                                  (builtin "One Step Simplification" (formula "46"))
                                 (rule "assignmentSubtractionInt" (formula "46") (term "1"))
                                 (branch "Overflow check"
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "closeTrue" (formula "46"))
                                 )
                                 (branch "Usage"
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "translateJavaSubInt" (formula "46") (term "0,1,0"))
                                    (rule "polySimp_elimSub" (formula "46") (term "0,1,0"))
                                    (rule "mul_literals" (formula "46") (term "1,0,1,0"))
                                    (rule "polySimp_addComm0" (formula "46") (term "0,1,0"))
                                    (rule "emptyStatement" (formula "46") (term "1"))
                                    (rule "blockEmpty" (formula "46") (term "1"))
                                    (rule "lsContinue" (formula "46") (term "1"))
                                     (builtin "One Step Simplification" (formula "46"))
                                    (rule "andRight" (formula "46"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "46"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "46"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "46"))
                                             (branch
                                                (rule "andRight" (formula "46"))
                                                (branch
                                                   (rule "allRight" (formula "46") (inst "sk=i_0"))
                                                   (rule "impRight" (formula "46"))
                                                   (rule "andLeft" (formula "1"))
                                                   (rule "polySimp_homoEq" (formula "7") (term "1,1,1,0"))
                                                   (rule "polySimp_homoEq" (formula "8") (term "1,1,1,0"))
                                                   (rule "polySimp_homoEq" (formula "15") (term "1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "1,0,1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0,1,1,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0,1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "8") (term "0,1,0,1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,0,1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,1,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "7") (term "0,1,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,1,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,1,0"))
                                                   (rule "inEqSimp_ltRight" (formula "38"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "16") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "9") (term "0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_gtToGeq" (formula "11"))
                                                   (rule "mul_literals" (formula "11") (term "1,0,0"))
                                                   (rule "add_literals" (formula "11") (term "0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "35") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "35") (term "0,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0"))
                                                   (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "29"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "8") (term "1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "0,1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "8") (term "0,1,1,1,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "9") (term "1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "9") (term "0,1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "9") (term "0,1,1,1,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "16") (term "1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "0,1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "0,1,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "28") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0,1,1,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "9") (term "1,1,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0,1,1,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "8") (term "1,1,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                   (rule "mul_literals" (formula "11") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,0,1,1,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "1,1,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,0,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "12") (term "0,0,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,0,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,0,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                   (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                   (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                                                   (rule "leq_literals" (formula "11") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "11") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                                   (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                   (rule "add_literals" (formula "11") (term "0,0"))
                                                   (rule "leq_literals" (formula "11") (term "0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "pullOutSelect" (formula "47") (term "0,1") (inst "selectSK=arr_0"))
                                                   (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "1"))
                                                   (rule "simplifySelectOfAnon" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqReverse" (formula "48") (term "0,1") (ifseqformula "1"))
                                                   (rule "applyEqReverse" (formula "48") (term "0,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "7"))
                                                   (rule "applyEq" (formula "7") (term "0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "8") (term "0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "8"))
                                                   (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                                                   (rule "add_literals" (formula "8") (term "1,0"))
                                                   (rule "times_zero_1" (formula "8") (term "0"))
                                                   (rule "qeq_literals" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "applyEq" (formula "8") (term "1,1,0,0,0") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "1,0,0,0"))
                                                   (rule "applyEq" (formula "7") (term "1,1,0,0") (ifseqformula "1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                                   (rule "polySimp_mulLiterals" (formula "6") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "6") (term "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "3"))
                                                   (rule "times_zero_1" (formula "2") (term "0,0"))
                                                   (rule "add_zero_left" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                   (rule "mul_literals" (formula "2") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq0" (formula "24") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                                                   (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                   (rule "add_literals" (formula "24") (term "0,0"))
                                                   (rule "qeq_literals" (formula "24") (term "0"))
                                                    (builtin "One Step Simplification" (formula "24"))
                                                   (rule "true_left" (formula "24"))
                                                   (rule "inEqSimp_and_contradInEq0" (formula "7") (term "0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "7") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "1,0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "0,1,0,1,0,0"))
                                                   (rule "mul_literals" (formula "7") (term "0,0,1,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "7") (term "1,0,1,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "7") (term "0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "7") (term "1,1,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "7") (term "1,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "7") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "7") (term "0,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "7") (term "0,0,1,0,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "7") (term "1,1,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "7") (term "1,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "7") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "7") (term "1,0,0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "nnf_imp2or" (formula "14") (term "0"))
                                                   (rule "nnf_imp2or" (formula "10") (term "0"))
                                                   (rule "nnf_imp2or" (formula "31") (term "0"))
                                                   (rule "nnf_imp2or" (formula "7") (term "0"))
                                                   (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "27"))
                                                   (rule "true_left" (formula "27"))
                                                   (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "26"))
                                                    (builtin "One Step Simplification" (formula "26"))
                                                   (rule "translateJavaSubInt" (formula "26") (term "3,0,1"))
                                                   (rule "andLeft" (formula "26"))
                                                   (rule "andLeft" (formula "26"))
                                                   (rule "andLeft" (formula "26"))
                                                   (rule "andLeft" (formula "26"))
                                                   (rule "andLeft" (formula "28"))
                                                   (rule "andLeft" (formula "26"))
                                                   (rule "andLeft" (formula "27"))
                                                   (rule "andLeft" (formula "26"))
                                                   (rule "notLeft" (formula "26"))
                                                   (rule "notLeft" (formula "26"))
                                                   (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "40"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "41"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "polySimp_elimSub" (formula "32") (term "3,0"))
                                                   (rule "mul_literals" (formula "32") (term "1,3,0"))
                                                   (rule "polySimp_addComm0" (formula "32") (term "3,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "31"))
                                                   (rule "inEqSimp_commuteLeq" (formula "30"))
                                                   (rule "inEqSimp_commuteLeq" (formula "29"))
                                                   (rule "inEqSimp_commuteLeq" (formula "26"))
                                                   (rule "applyEq" (formula "51") (term "1,1,1") (ifseqformula "28"))
                                                   (rule "applyEq" (formula "32") (term "1,3,0") (ifseqformula "28"))
                                                   (rule "applyEq" (formula "31") (term "1") (ifseqformula "28"))
                                                   (rule "applyEq" (formula "30") (term "1") (ifseqformula "28"))
                                                   (rule "applyEq" (formula "29") (term "0") (ifseqformula "28"))
                                                   (rule "applyEq" (formula "7") (term "1,1,1,0,0,1,0") (ifseqformula "28"))
                                                   (rule "applyEq" (formula "10") (term "1,1,1,1,0") (ifseqformula "28"))
                                                   (rule "applyEq" (formula "14") (term "1,1,0,0,1,0") (ifseqformula "28"))
                                                   (rule "applyEq" (formula "7") (term "1,1,0,1,0,1,0") (ifseqformula "28"))
                                                   (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "27"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "12") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "0"))
                                                   (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "15") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "0,0,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "15") (term "1,0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "15") (term "0,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "10") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "1,0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "0,1,0,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0"))
                                                   (rule "times_zero_1" (formula "37") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "37") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "7") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "7") (term "0,0,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "7") (term "1,0,1,0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "7") (term "0,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "7") (term "1,0,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                                                   (rule "jdiv_axiom" (formula "39") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "0,0,2,1"))
                                                   (rule "eqSymm" (formula "39"))
                                                   (rule "applyEq" (formula "39") (term "1") (ifseqformula "40"))
                                                   (rule "inEqSimp_subsumption6" (formula "39") (term "0,0") (ifseqformula "9"))
                                                   (rule "mul_literals" (formula "39") (term "1,1,0,0,0"))
                                                   (rule "greater_literals" (formula "39") (term "0,0,0,0"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "leq_literals" (formula "39") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "polyDiv_pullOut" (formula "39") (term "0") (inst "polyDivCoeff=l_0"))
                                                   (rule "equal_literals" (formula "39") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0" (formula "39") (term "0,0,0"))
                                                   (rule "add_literals" (formula "39") (term "1,0,0,0"))
                                                   (rule "times_zero_1" (formula "39") (term "0,0,0"))
                                                   (rule "div_literals" (formula "39") (term "0,0"))
                                                   (rule "add_zero_left" (formula "39") (term "0"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "true_left" (formula "39"))
                                                   (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "33") (term "0"))
                                                   (rule "replace_known_left" (formula "33") (term "0,1") (ifseqformula "34"))
                                                    (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "42")) (ifInst ""  (formula "17")))
                                                   (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "34") (term "0") (inst "i=i") (inst "j=j_1"))
                                                    (builtin "One Step Simplification" (formula "34"))
                                                   (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,1,0"))
                                                   (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                                   (rule "nnf_imp2or" (formula "34") (term "0"))
                                                   (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                                                   (rule "nnf_imp2or" (formula "34") (term "0,1,0"))
                                                   (rule "nnf_notAnd" (formula "34") (term "0,0,1,0"))
                                                   (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,1,0"))
                                                   (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,0"))
                                                   (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "34") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,1,0"))
                                                   (rule "commute_or" (formula "15") (term "1,1,0"))
                                                   (rule "commute_or" (formula "7") (term "1,1,0"))
                                                   (rule "commute_or" (formula "15") (term "0,0"))
                                                   (rule "commute_or" (formula "10") (term "0,0"))
                                                   (rule "commute_or" (formula "38") (term "0,0"))
                                                   (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "33") (term "0") (inst "i=i"))
                                                    (builtin "One Step Simplification" (formula "33"))
                                                   (rule "translateJavaAddInt" (formula "33") (term "0,2,1,1,0"))
                                                   (rule "translateJavaSubInt" (formula "33") (term "1,1,0,0"))
                                                   (rule "polySimp_elimSub" (formula "33") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "33") (term "1,1,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "33") (term "0,2,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "33") (term "1,1,0,0"))
                                                   (rule "add_literals" (formula "33") (term "0,1,1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                                                   (rule "nnf_imp2or" (formula "33") (term "0"))
                                                   (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "33") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                                   (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                                   (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                                   (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                                   (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                                                   (rule "commute_or" (formula "7") (term "0,0"))
                                                   (rule "cnf_rightDist" (formula "15") (term "0"))
                                                   (rule "distr_forallAnd" (formula "15"))
                                                   (rule "andLeft" (formula "15"))
                                                   (rule "commute_or_2" (formula "16") (term "0"))
                                                   (rule "cnf_rightDist" (formula "10") (term "0"))
                                                   (rule "distr_forallAnd" (formula "10"))
                                                   (rule "andLeft" (formula "10"))
                                                   (rule "commute_or" (formula "11") (term "0"))
                                                   (rule "commute_or" (formula "36") (term "0,0,1,0"))
                                                   (rule "shift_paren_or" (formula "16") (term "0"))
                                                   (rule "commute_or" (formula "17") (term "0,0"))
                                                   (rule "cnf_rightDist" (formula "7") (term "0"))
                                                   (rule "distr_forallAnd" (formula "7"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "commute_or_2" (formula "8") (term "0"))
                                                   (rule "commute_or" (formula "8") (term "0,0"))
                                                   (rule "cnf_rightDist" (formula "7") (term "0"))
                                                   (rule "distr_forallAnd" (formula "7"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "commute_or_2" (formula "8") (term "0"))
                                                   (rule "commute_or" (formula "8") (term "0,0"))
                                                   (rule "cnf_rightDist" (formula "7") (term "0"))
                                                   (rule "distr_forallAnd" (formula "7"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "commute_or" (formula "8") (term "0"))
                                                   (rule "arrayLengthNotNegative" (formula "37") (term "0"))
                                                   (rule "arrayLengthIsAShort" (formula "38") (term "0"))
                                                    (builtin "One Step Simplification" (formula "38"))
                                                   (rule "true_left" (formula "38"))
                                                   (rule "arrayLengthNotNegative" (formula "36") (term "0"))
                                                   (rule "arrayLengthIsAShort" (formula "37") (term "0"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "true_left" (formula "37"))
                                                   (rule "all_pull_out3" (formula "41") (term "0"))
                                                   (rule "shift_paren_or" (formula "41") (term "0,0"))
                                                   (rule "shift_paren_or" (formula "41") (term "0,0,0"))
                                                   (rule "allLeft" (formula "45") (inst "t=i_0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "45") (term "1,0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "45") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "45") (term "0,0,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "45") (term "1,0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "45") (term "0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "45") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "45") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "45") (term "0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "45") (term "0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "45") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "45") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "45") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "45") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "45") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "45"))
                                                   (rule "inEqSimp_contradInEq1" (formula "45") (term "0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "45") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "45"))
                                                   (rule "pullOutSelect" (formula "45") (term "0") (inst "selectSK=arr_1"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "45") (ifseqformula "43"))
                                                    (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "59")) (ifInst ""  (formula "26")))
                                                   (rule "polySimp_homoEq" (formula "46"))
                                                   (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                   (rule "elementOfArrayRangeConcrete" (formula "45") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "4")))
                                                   (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0"))
                                                   (rule "replace_known_left" (formula "45") (term "0,0") (ifseqformula "3"))
                                                    (builtin "One Step Simplification" (formula "45"))
                                                   (rule "applyEqReverse" (formula "46") (term "0,1,0,0") (ifseqformula "45"))
                                                   (rule "hideAuxiliaryEq" (formula "45"))
                                                   (rule "polySimp_addComm1" (formula "45") (term "0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "45"))
                                                   (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "45") (term "0"))
                                                   (rule "allLeft" (formula "14") (inst "t=i_0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "14") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "inEqSimp_contradInEq0" (formula "14") (term "0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "14") (term "1,0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0"))
                                                   (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "14") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "14") (term "0,0,0"))
                                                   (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "14") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "14") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=arr_2"))
                                                   (rule "simplifySelectOfAnon" (formula "14"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "14"))
                                                   (rule "hideAuxiliaryEq" (formula "14"))
                                                   (rule "allLeft" (formula "8") (inst "t=i_0"))
                                                   (rule "replaceKnownSelect_taclet00000110101201010_0" (formula "8") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00000110101201010_1" (formula "8") (term "0,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "8") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "inEqSimp_contradInEq0" (formula "8") (term "0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "8") (term "1,0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0"))
                                                   (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "8") (term "0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "8") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0,0"))
                                                   (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "8") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "8") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "8"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "inEqSimp_geqRight" (formula "63"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "allLeft" (formula "15") (inst "t=i_0"))
                                                   (rule "replaceKnownSelect_taclet00000110101201010_4" (formula "15") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00000110101201010_5" (formula "15") (term "0,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "4"))
                                                   (rule "qeq_literals" (formula "15") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "15"))
                                                   (rule "inEqSimp_contradInEq0" (formula "15") (term "0") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "15") (term "0,0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "15") (term "1,0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                                                   (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "15") (term "0,0,0"))
                                                   (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "15") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "15"))
                                                   (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "17"))
                                                   (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                                   (rule "mul_literals" (formula "15") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                                   (rule "add_literals" (formula "15") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "15") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1"))
                                                   (rule "allLeft" (formula "8") (inst "t=i_0"))
                                                   (rule "replaceKnownSelect_taclet00000110101201010_0" (formula "8") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00000110101201010_1" (formula "8") (term "0,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "8") (term "0,0") (ifseqformula "4"))
                                                   (rule "qeq_literals" (formula "8") (term "0,0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "inEqSimp_contradInEq0" (formula "8") (term "0") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "8") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,0,1,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "8") (term "1,0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,0"))
                                                   (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "8") (term "0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "8") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0,0"))
                                                   (rule "add_literals" (formula "8") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "8") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "8") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "8") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "inEqSimp_contradInEq0" (formula "8") (ifseqformula "1"))
                                                   (rule "andLeft" (formula "8"))
                                                   (rule "inEqSimp_homoInEq1" (formula "8"))
                                                   (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                   (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                   (rule "add_literals" (formula "8") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "8") (term "0"))
                                                   (rule "add_literals" (formula "8") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "8") (term "1,0"))
                                                   (rule "add_zero_right" (formula "8") (term "0"))
                                                   (rule "leq_literals" (formula "8"))
                                                   (rule "closeFalse" (formula "8"))
                                                )
                                                (branch
                                                   (rule "andRight" (formula "46"))
                                                   (branch
                                                      (rule "polySimp_homoEq" (formula "6") (term "1,1,1,0"))
                                                      (rule "polySimp_homoEq" (formula "5") (term "1,1,1,0"))
                                                      (rule "polySimp_homoEq" (formula "13") (term "1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,1,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,1,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,0"))
                                                      (rule "inEqSimp_geqRight" (formula "46"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_ltRight" (formula "37"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "0,0"))
                                                      (rule "add_zero_left" (formula "2") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "10"))
                                                      (rule "mul_literals" (formula "10") (term "1,0,0"))
                                                      (rule "add_literals" (formula "10") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "34") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "34") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "8") (term "1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "0,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "0,1,1,1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "7") (term "1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "0,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "0,1,1,1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "15") (term "1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "0,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "0,1,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                      (rule "mul_literals" (formula "10") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,0,1,1,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "1,1,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0,1,1,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,1,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "1,1,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,1,1,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,0,1,0,0,0"))
                                                      (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                      (rule "leq_literals" (formula "10") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                                      (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                      (rule "add_literals" (formula "10") (term "0,0"))
                                                      (rule "leq_literals" (formula "10") (term "0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "2"))
                                                      (rule "applyEqRigid" (formula "2") (term "0") (ifseqformula "12"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "applyEqRigid" (formula "13") (term "1") (ifseqformula "11"))
                                                      (rule "applyEqRigid" (formula "14") (term "1,0") (ifseqformula "11"))
                                                      (rule "translateJavaShiftLeftIntZero" (formula "14") (term "0"))
                                                      (rule "eqSymm" (formula "14"))
                                                      (rule "applyEqRigid" (formula "12") (term "0") (ifseqformula "11"))
                                                      (rule "qeq_literals" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "applyEqRigid" (formula "6") (term "1,1,0,0,0,1,0") (ifseqformula "13"))
                                                      (rule "add_literals" (formula "6") (term "1,0,0,0,1,0"))
                                                      (rule "applyEqRigid" (formula "34") (term "0,0") (ifseqformula "13"))
                                                      (rule "jdiv_axiom_inline" (formula "34") (term "0"))
                                                      (rule "div_literals" (formula "34") (term "1,0"))
                                                      (rule "mul_literals" (formula "34") (term "0,0,2,0"))
                                                      (rule "qeq_literals" (formula "34") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "34"))
                                                      (rule "eqSymm" (formula "34"))
                                                      (rule "applyEq" (formula "10") (term "1,1,0,1,0") (ifseqformula "13"))
                                                      (rule "add_literals" (formula "10") (term "1,0,1,0"))
                                                      (rule "applyEqRigid" (formula "14") (term "1,1,1,1,1,0") (ifseqformula "13"))
                                                      (rule "add_literals" (formula "14") (term "1,1,1,1,0"))
                                                      (rule "applyEq" (formula "6") (term "1,1,1,1,1,0") (ifseqformula "13"))
                                                      (rule "add_literals" (formula "6") (term "1,1,1,1,0"))
                                                      (rule "applyEqRigid" (formula "35") (term "1") (ifseqformula "13"))
                                                      (rule "applyEqRigid" (formula "7") (term "1,1,0,0,0,1,0") (ifseqformula "34"))
                                                      (rule "add_zero_right" (formula "7") (term "1,0,0,0,1,0"))
                                                      (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "34"))
                                                      (rule "qeq_literals" (formula "9"))
                                                      (rule "closeFalse" (formula "9"))
                                                   )
                                                   (branch
                                                      (rule "polySimp_homoEq" (formula "13") (term "1,1,1,0"))
                                                      (rule "polySimp_homoEq" (formula "6") (term "1,1,1,0"))
                                                      (rule "polySimp_homoEq" (formula "5") (term "1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,1,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "6") (term "0,1,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,1,1,1,0"))
                                                      (rule "inEqSimp_geqRight" (formula "46"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "inEqSimp_ltRight" (formula "37"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "11") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_gtToGeq" (formula "10"))
                                                      (rule "mul_literals" (formula "10") (term "1,0,0"))
                                                      (rule "add_literals" (formula "10") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "34") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "34") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "15") (term "1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "0,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "0,1,1,1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "8") (term "1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "0,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "0,1,1,1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "7") (term "1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "0,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "0,1,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                                      (rule "mul_literals" (formula "10") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,1,1,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0,1,1,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,1,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "1,1,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,0,1,1,0"))
                                                      (rule "mul_literals" (formula "8") (term "0,1,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "1,1,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "11") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,0,1,0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "13"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0"))
                                                      (rule "add_literals" (formula "2") (term "0"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "shiftLeftSplitTwo" (formula "12") (term "0") (userinteraction))
                                                (rule "polySimp_homoEq" (formula "6") (term "1,1,1,0"))
                                                (rule "polySimp_elimSub" (formula "12") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "12") (term "1,1,0,0,1"))
                                                (rule "polySimp_homoEq" (formula "5") (term "1,1,1,0"))
                                                (rule "polySimp_homoEq" (formula "14") (term "1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "12") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0,1,1,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "0,1,0,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,1,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0,1,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,1,1,1,0"))
                                                (rule "inEqSimp_ltRight" (formula "37"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                (rule "polySimp_mulAssoc" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_gtToGeq" (formula "9"))
                                                (rule "mul_literals" (formula "9") (term "1,0,0"))
                                                (rule "add_literals" (formula "9") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1,1,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "34") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "34") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0"))
                                                (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "14"))
                                                (rule "polySimp_sepNegMonomial" (formula "7") (term "1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "0,1,1,1,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "6") (term "1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "0,1,1,1,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "15") (term "1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "0,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "0,1,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0,1,1,0"))
                                                (rule "mul_literals" (formula "6") (term "0,1,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "1,1,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,0,1,1,0"))
                                                (rule "mul_literals" (formula "7") (term "0,1,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "1,1,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                (rule "mul_literals" (formula "9") (term "1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                                (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,0,1,1,0"))
                                                (rule "mul_literals" (formula "15") (term "0,1,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "1,1,0,1,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,0"))
                                                (rule "mul_literals" (formula "10") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0"))
                                                (rule "mul_literals" (formula "15") (term "0,0,1,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0,0"))
                                                (rule "mul_literals" (formula "33") (term "0,0,1,0,0,0"))
                                                (rule "elimGcdEq" (formula "13") (term "1") (inst "elimGcdRightDiv=l_0") (inst "elimGcdLeftDiv=javaShiftLeftInt(Z(1(#)), add(Z(neglit(1(#))), exp_0))") (inst "elimGcd=Z(2(#))"))
                                                 (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "46")))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,1,0,1"))
                                                (rule "add_literals" (formula "13") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0,1"))
                                                (rule "polySimp_pullOutFactor0" (formula "13") (term "0,1,0,1"))
                                                (rule "add_literals" (formula "13") (term "1,0,1,0,1"))
                                                (rule "times_zero_1" (formula "13") (term "0,1,0,1"))
                                                (rule "qeq_literals" (formula "13") (term "1,0,1"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                                                (rule "polySimp_pullOutFactor0" (formula "13") (term "0,0,1"))
                                                (rule "add_literals" (formula "13") (term "1,0,0,1"))
                                                (rule "times_zero_1" (formula "13") (term "0,0,1"))
                                                (rule "leq_literals" (formula "13") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "notLeft" (formula "13"))
                                                (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                                (rule "leq_literals" (formula "9") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                                (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
                                                (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "9") (term "0,0"))
                                                (rule "leq_literals" (formula "9") (term "0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "5"))
                                                (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "1,0"))
                                                (rule "times_zero_1" (formula "2") (term "0"))
                                                (rule "leq_literals" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "applyEq" (formula "5") (term "0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "5"))
                                                (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                                                (rule "add_literals" (formula "5") (term "1,0"))
                                                (rule "times_zero_1" (formula "5") (term "0"))
                                                (rule "qeq_literals" (formula "5"))
                                                (rule "true_left" (formula "5"))
                                                (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                                (rule "applyEq" (formula "6") (term "1,1,0,0,0") (ifseqformula "1"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "1,0,0,0"))
                                                (rule "applyEq" (formula "5") (term "1,1,0,0") (ifseqformula "1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1"))
                                                (rule "inEqSimp_and_contradInEq0" (formula "4") (term "0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "4") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "0,1,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,1,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,0,1,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,0,1,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "4") (term "0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,1,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,1,0,0"))
                                                (rule "add_zero_right" (formula "4") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "4") (term "0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,1,0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,1,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,1,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,1,0,0"))
                                                (rule "leq_literals" (formula "4") (term "1,0,0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "nnf_imp2or" (formula "7") (term "0"))
                                                (rule "nnf_imp2or" (formula "11") (term "0"))
                                                (rule "nnf_imp2or" (formula "29") (term "0"))
                                                (rule "nnf_imp2or" (formula "4") (term "0"))
                                                (rule "nnf_notAnd" (formula "7") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "7") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                                (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "7") (term "0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "1,0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "7") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "11") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "11") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "11") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "11") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                                                (rule "mul_literals" (formula "11") (term "1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "11") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "11") (term "0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "11") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "11") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "29") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "29") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "29") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0"))
                                                (rule "mul_literals" (formula "29") (term "1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "29") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "29") (term "0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "29") (term "0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "1,0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "29") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "29") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,0"))
                                                (rule "nnf_notAnd" (formula "4") (term "0,0"))
                                                (rule "inEqSimp_notGeq" (formula "4") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "4") (term "0,0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0"))
                                                (rule "mul_literals" (formula "4") (term "1,1,0,0"))
                                                (rule "inEqSimp_notLeq" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,0,1,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0,0,0,0,0,0"))
                                                (rule "add_zero_left" (formula "4") (term "0,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,0,0"))
                                                (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "24"))
                                                 (builtin "One Step Simplification" (formula "24"))
                                                (rule "translateJavaSubInt" (formula "24") (term "3,0,1"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "andLeft" (formula "24"))
                                                (rule "andLeft" (formula "26"))
                                                (rule "notLeft" (formula "24"))
                                                (rule "notLeft" (formula "24"))
                                                (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "40"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "39"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "polySimp_elimSub" (formula "30") (term "3,0"))
                                                (rule "mul_literals" (formula "30") (term "1,3,0"))
                                                (rule "polySimp_addComm0" (formula "30") (term "3,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "29"))
                                                (rule "inEqSimp_commuteLeq" (formula "27"))
                                                (rule "inEqSimp_commuteLeq" (formula "28"))
                                                (rule "inEqSimp_commuteLeq" (formula "24"))
                                                (rule "applyEq" (formula "29") (term "1") (ifseqformula "26"))
                                                (rule "applyEq" (formula "7") (term "1,1,1,1,0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "4") (term "1,1,1,0,0,1,0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "27") (term "0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "28") (term "1") (ifseqformula "26"))
                                                (rule "applyEq" (formula "30") (term "1,3,0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "11") (term "1,1,0,0,1,0") (ifseqformula "26"))
                                                (rule "applyEq" (formula "4") (term "1,1,0,1,0,1,0") (ifseqformula "26"))
                                                (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "25"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "9") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "42") (term "1") (ifseqformula "9"))
                                                (rule "leq_literals" (formula "42") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "inEqSimp_geqRight" (formula "42"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "1"))
                                                (rule "leq_literals" (formula "10") (term "0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "inEqSimp_antiSymm" (formula "9") (ifseqformula "1"))
                                                (rule "applyEqRigid" (formula "11") (term "1") (ifseqformula "9"))
                                                (rule "applyEq" (formula "52") (term "1,1,0") (ifseqformula "9"))
                                                (rule "add_zero_right" (formula "52") (term "1,0"))
                                                (rule "translateJavaShiftLeftIntConstant" (formula "52") (term "0"))
                                                (rule "applyEq" (formula "1") (term "0") (ifseqformula "9"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "applyEq" (formula "9") (term "0") (ifseqformula "8"))
                                                (rule "qeq_literals" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "applyEqRigid" (formula "10") (term "1,0") (ifseqformula "8"))
                                                (rule "translateJavaShiftLeftIntZero" (formula "10") (term "0"))
                                                (rule "eqSymm" (formula "10"))
                                                (rule "applyEqRigid" (formula "7") (term "1,1,0,1,0") (ifseqformula "10"))
                                                (rule "add_literals" (formula "7") (term "1,0,1,0"))
                                                (rule "applyEqRigid" (formula "37") (term "0,0") (ifseqformula "10"))
                                                (rule "jdiv_axiom_inline" (formula "37") (term "0"))
                                                (rule "qeq_literals" (formula "37") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "div_literals" (formula "37") (term "0"))
                                                (rule "eqSymm" (formula "37"))
                                                (rule "applyEq" (formula "38") (term "1") (ifseqformula "10"))
                                                (rule "applyEqRigid" (formula "11") (term "1,1,1,1,1,0") (ifseqformula "10"))
                                                (rule "add_literals" (formula "11") (term "1,1,1,1,0"))
                                                (rule "applyEq" (formula "10") (term "0,0") (ifseqformula "37"))
                                                (rule "times_zero_2" (formula "10") (term "0"))
                                                (rule "equal_literals" (formula "10"))
                                                (rule "closeFalse" (formula "10"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "allRight" (formula "46") (inst "sk=i_0") (userinteraction))
                                             (rule "impRight" (formula "46") (userinteraction))
                                             (rule "andLeft" (formula "1"))
                                             (rule "polySimp_homoEq" (formula "8") (term "1,1,1,0"))
                                             (rule "polySimp_homoEq" (formula "15") (term "1,1,1,0"))
                                             (rule "polySimp_homoEq" (formula "48") (term "0,0"))
                                             (rule "polySimp_homoEq" (formula "7") (term "1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0,1,1,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,1,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "0,1,0,1,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,1,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "0,1,0,1,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "48") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "0,0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "0,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "48") (term "0,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,1,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,1,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,1,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "0,1,1,1,0"))
                                             (rule "inEqSimp_ltRight" (formula "38"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                             (rule "polySimp_mulAssoc" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "48") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,1,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "9") (term "0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "16") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "0,1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "8") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "0,1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "35") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "35") (term "0,1,0,0,0,0,0"))
                                             (rule "inEqSimp_gtToGeq" (formula "11"))
                                             (rule "mul_literals" (formula "11") (term "1,0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "16") (term "0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "12") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "0,1,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "8") (term "0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0,1,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,0"))
                                             (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "29"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "3") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "9") (term "1,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "0,1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "9") (term "0,1,1,1,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "16") (term "1,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "0,1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "0,1,1,1,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "48") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "0,0,0"))
                                             (rule "polySimp_elimOne" (formula "48") (term "0,0,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "8") (term "1,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "0,1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "0,1,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                             (rule "polySimp_mulLiterals" (formula "28") (term "1"))
                                             (rule "polySimp_elimOne" (formula "28") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,1,1,0"))
                                             (rule "mul_literals" (formula "9") (term "0,1,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "9") (term "1,1,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "9") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                             (rule "mul_literals" (formula "11") (term "1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,1,1,0"))
                                             (rule "mul_literals" (formula "16") (term "0,1,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,1,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,1,1,0"))
                                             (rule "mul_literals" (formula "8") (term "0,1,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "1,1,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,1,0"))
                                             (rule "mul_literals" (formula "47") (term "0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "16") (term "0,1,0,0,0"))
                                             (rule "mul_literals" (formula "16") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0"))
                                             (rule "mul_literals" (formula "8") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "0,1,0,0,0"))
                                             (rule "mul_literals" (formula "34") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,0"))
                                             (rule "mul_literals" (formula "12") (term "0,0,1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                             (rule "mul_literals" (formula "3") (term "0,0,1"))
                                             (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                             (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "11") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "11") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                             (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                             (rule "add_literals" (formula "11") (term "0,0"))
                                             (rule "leq_literals" (formula "11") (term "0"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "pullOutSelect" (formula "47") (term "0,1,1") (inst "selectSK=arr_0"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "33"))
                                             (rule "inEqSimp_commuteGeq" (formula "48") (term "1,1"))
                                             (rule "pullOutSelect" (formula "48") (term "0,0,1") (inst "selectSK=arr_1"))
                                             (rule "applyEq" (formula "2") (term "0,2,2,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "49") (term "1,0,2,0,1,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "49") (term "0,0,0") (ifseqformula "1"))
                                             (rule "applyEq" (formula "2") (term "0,2,1,0") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "49") (term "0,0,1") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "0,2,2,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "49") (term "1,0,2,0,1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "49") (term "0,0,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "2") (term "0,2,1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "pullOutSelect" (formula "48") (term "1,1,1,0") (inst "selectSK=arr_2"))
                                             (rule "applyEq" (formula "49") (term "0,1,1") (ifseqformula "1"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")) (ifInst ""  (formula "47")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0,0") (ifseqformula "34"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0,0,0") (ifseqformula "23"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")) (ifInst ""  (formula "47")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "34"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "23"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")) (ifInst ""  (formula "23")))
                                             (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "41"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "49") (term "1,1,1,0") (ifseqformula "1"))
                                             (rule "applyEqReverse" (formula "49") (term "0,1,1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "8"))
                                             (rule "applyEq" (formula "8") (term "0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq1" (formula "3"))
                                             (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                             (rule "add_literals" (formula "3") (term "1,0"))
                                             (rule "times_zero_1" (formula "3") (term "0"))
                                             (rule "leq_literals" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "applyEq" (formula "9") (term "1,1,0,0") (ifseqformula "2"))
                                             (rule "applyEq" (formula "8") (term "0") (ifseqformula "2"))
                                             (rule "inEqSimp_homoInEq0" (formula "8"))
                                             (rule "polySimp_pullOutFactor1" (formula "8") (term "0"))
                                             (rule "add_literals" (formula "8") (term "1,0"))
                                             (rule "times_zero_1" (formula "8") (term "0"))
                                             (rule "qeq_literals" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "applyEq" (formula "9") (term "1,1,0,0,0") (ifseqformula "2"))
                                             (rule "polySimp_addAssoc" (formula "9") (term "1,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1"))
                                             (rule "polySimp_elimOne" (formula "7") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                                             (rule "mul_literals" (formula "3") (term "0,0"))
                                             (rule "add_zero_left" (formula "3") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1"))
                                             (rule "mul_literals" (formula "3") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "3"))
                                             (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0"))
                                             (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "25") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "25") (term "0,0"))
                                             (rule "qeq_literals" (formula "25") (term "0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_3"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "32"))
                                             (rule "pullOutSelect" (formula "47") (term "0,1,0") (inst "selectSK=arr_4"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "33"))
                                             (rule "inEqSimp_homoInEq0" (formula "48") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "48") (term "0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1,1,0"))
                                             (rule "mul_literals" (formula "48") (term "0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0"))
                                             (rule "pullOutSelect" (formula "2") (term "2,0") (inst "selectSK=arr_5"))
                                             (rule "simplifySelectOfAnonEQ" (formula "2") (ifseqformula "34"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0,0") (ifseqformula "44"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_6"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "35"))
                                             (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_7"))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "36"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "46"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "inEqSimp_and_contradInEq0" (formula "13") (term "0,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "0,1,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,0,1,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "1,0,1,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,1,0,0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,1,0,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,1,0,0"))
                                             (rule "add_zero_right" (formula "13") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "13") (term "0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,1,0,0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,1,0,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,1,0,0"))
                                             (rule "add_zero_right" (formula "13") (term "0,1,0,0"))
                                             (rule "leq_literals" (formula "13") (term "1,0,0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "nnf_imp2or" (formula "20") (term "0"))
                                             (rule "nnf_imp2or" (formula "37") (term "0"))
                                             (rule "nnf_imp2or" (formula "16") (term "0"))
                                             (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "33"))
                                             (rule "true_left" (formula "33"))
                                             (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "32"))
                                              (builtin "One Step Simplification" (formula "32"))
                                             (rule "translateJavaSubInt" (formula "32") (term "3,0,1"))
                                             (rule "andLeft" (formula "32"))
                                             (rule "andLeft" (formula "32"))
                                             (rule "andLeft" (formula "32"))
                                             (rule "andLeft" (formula "32"))
                                             (rule "andLeft" (formula "34"))
                                             (rule "andLeft" (formula "32"))
                                             (rule "andLeft" (formula "33"))
                                             (rule "andLeft" (formula "32"))
                                             (rule "notLeft" (formula "32"))
                                             (rule "notLeft" (formula "32"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "46"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "46"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "replace_known_right" (formula "6") (term "0,0,0,0") (ifseqformula "46"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "46"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "replace_known_right" (formula "4") (term "0,0,0,0") (ifseqformula "46"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_right" (formula "5") (term "0,0,0,0") (ifseqformula "46"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "replace_known_right" (formula "12") (term "0") (ifseqformula "47"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "46"))
                                              (builtin "One Step Simplification" (formula "11"))
                                             (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "10"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "4") (term "0,0,0,0,0") (ifseqformula "9"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "55") (term "1,1,1") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0,0") (ifseqformula "8"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "54") (term "1,1,1,0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "7"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "53") (term "1,1,1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_left" (formula "1") (term "0,0,0,0") (ifseqformula "6"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "52") (term "1,1,1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "polySimp_elimSub" (formula "32") (term "3,0"))
                                             (rule "mul_literals" (formula "32") (term "1,3,0"))
                                             (rule "polySimp_addComm0" (formula "32") (term "3,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "31"))
                                             (rule "inEqSimp_commuteLeq" (formula "29"))
                                             (rule "inEqSimp_commuteLeq" (formula "30"))
                                             (rule "inEqSimp_commuteLeq" (formula "26"))
                                             (rule "inEqSimp_commuteLeq" (formula "51") (term "1,1"))
                                             (rule "inEqSimp_homoInEq1" (formula "51") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "51") (term "0,1,0"))
                                             (rule "applyEq" (formula "10") (term "1,1,1,1,0") (ifseqformula "28"))
                                             (rule "applyEq" (formula "31") (term "1") (ifseqformula "28"))
                                             (rule "applyEq" (formula "32") (term "1,3,0") (ifseqformula "28"))
                                             (rule "applyEq" (formula "30") (term "1") (ifseqformula "28"))
                                             (rule "applyEq" (formula "29") (term "0") (ifseqformula "28"))
                                             (rule "applyEq" (formula "7") (term "1,1,1,0,0,1,0") (ifseqformula "28"))
                                             (rule "applyEq" (formula "14") (term "1,1,0,0,1,0") (ifseqformula "28"))
                                             (rule "applyEq" (formula "7") (term "1,1,0,1,0,1,0") (ifseqformula "28"))
                                             (rule "applyEq" (formula "51") (term "1,1,0,1") (ifseqformula "28"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "51") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "51") (term "1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0"))
                                             (rule "mul_literals" (formula "51") (term "0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0"))
                                             (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "27"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "12") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "0"))
                                             (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "15") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
                                             (rule "mul_literals" (formula "15") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "15") (term "0,0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "1,0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "15") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "15") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "37") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "37") (term "1,0,0"))
                                             (rule "mul_literals" (formula "37") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "37") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1,0,0"))
                                             (rule "mul_literals" (formula "37") (term "1,1,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "37") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "37") (term "0,0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "37") (term "1,0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "37") (term "0,1,0,0,0"))
                                             (rule "nnf_notAnd" (formula "10") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "10") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "1,0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "10") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "10") (term "1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "10") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
                                             (rule "mul_literals" (formula "10") (term "1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "7") (term "0"))
                                             (rule "nnf_notAnd" (formula "7") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "7") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "7") (term "0,0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "7") (term "1,0,1,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "7") (term "0,0,0,0,0,0,0"))
                                             (rule "add_zero_left" (formula "7") (term "0,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "7") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "7") (term "1,0,0,1,0,0"))
                                             (rule "add_literals" (formula "7") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
                                             (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                                             (rule "jdiv_axiom" (formula "39") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "0,0,2,1"))
                                             (rule "eqSymm" (formula "39"))
                                             (rule "applyEqRigid" (formula "39") (term "1") (ifseqformula "40"))
                                             (rule "inEqSimp_subsumption6" (formula "39") (term "0,0") (ifseqformula "9"))
                                             (rule "mul_literals" (formula "39") (term "1,1,0,0,0"))
                                             (rule "greater_literals" (formula "39") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "leq_literals" (formula "39") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "polyDiv_pullOut" (formula "39") (term "0") (inst "polyDivCoeff=l_0"))
                                             (rule "equal_literals" (formula "39") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0"))
                                             (rule "polySimp_pullOutFactor0" (formula "39") (term "0,0,0"))
                                             (rule "add_literals" (formula "39") (term "1,0,0,0"))
                                             (rule "times_zero_1" (formula "39") (term "0,0,0"))
                                             (rule "div_literals" (formula "39") (term "0,0"))
                                             (rule "add_zero_left" (formula "39") (term "0"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "true_left" (formula "39"))
                                             (rule "commute_or" (formula "15") (term "1,1,0"))
                                             (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "33") (term "0"))
                                             (rule "replace_known_left" (formula "33") (term "0,1") (ifseqformula "34"))
                                              (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "42")) (ifInst ""  (formula "17")))
                                             (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "34") (term "0") (inst "i=i") (inst "j=j_1"))
                                              (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "34") (term "0"))
                                             (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                                             (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "34") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                             (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                                             (rule "nnf_imp2or" (formula "34") (term "0,1,0"))
                                             (rule "nnf_notAnd" (formula "34") (term "0,0,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "34") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,1,0"))
                                             (rule "commute_or" (formula "15") (term "0,0"))
                                             (rule "commute_or" (formula "38") (term "0,0"))
                                             (rule "commute_or" (formula "10") (term "0,0"))
                                             (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "33") (term "0") (inst "i=i"))
                                              (builtin "One Step Simplification" (formula "33"))
                                             (rule "translateJavaSubInt" (formula "33") (term "1,1,0,0"))
                                             (rule "translateJavaAddInt" (formula "33") (term "0,2,1,1,0"))
                                             (rule "polySimp_elimSub" (formula "33") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "33") (term "1,1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "33") (term "0,2,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "33") (term "1,1,0,0"))
                                             (rule "add_literals" (formula "33") (term "0,1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "33") (term "0"))
                                             (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0"))
                                             (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0"))
                                             (rule "add_literals" (formula "33") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                             (rule "mul_literals" (formula "33") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                                             (rule "commute_or" (formula "7") (term "1,1,0"))
                                             (rule "commute_or" (formula "7") (term "0,0"))
                                             (rule "cnf_rightDist" (formula "15") (term "0"))
                                             (rule "distr_forallAnd" (formula "15"))
                                             (rule "andLeft" (formula "15"))
                                             (rule "commute_or_2" (formula "16") (term "0"))
                                             (rule "cnf_rightDist" (formula "10") (term "0"))
                                             (rule "distr_forallAnd" (formula "10"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "commute_or" (formula "11") (term "0"))
                                             (rule "commute_or" (formula "36") (term "0,0,1,0"))
                                             (rule "shift_paren_or" (formula "16") (term "0"))
                                             (rule "commute_or" (formula "17") (term "0,0"))
                                             (rule "andRight" (formula "55"))
                                             (branch
                                                (rule "orRight" (formula "55"))
                                                (rule "inEqSimp_leqRight" (formula "56"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                (rule "cnf_rightDist" (formula "8") (term "0"))
                                                (rule "distr_forallAnd" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "commute_or_2" (formula "9") (term "0"))
                                                (rule "commute_or" (formula "9") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "8") (term "0"))
                                                (rule "distr_forallAnd" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "commute_or_2" (formula "9") (term "0"))
                                                (rule "commute_or" (formula "9") (term "0,0"))
                                                (rule "arrayLengthIsAShort" (formula "37") (term "0"))
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "true_left" (formula "37"))
                                                (rule "arrayLengthNotNegative" (formula "37") (term "0"))
                                                (rule "cnf_rightDist" (formula "8") (term "0"))
                                                (rule "distr_forallAnd" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "commute_or" (formula "9") (term "0"))
                                                (rule "arrayLengthNotNegative" (formula "37") (term "0"))
                                                (rule "arrayLengthIsAShort" (formula "38") (term "0"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "true_left" (formula "38"))
                                                (rule "all_pull_out3" (formula "42") (term "0"))
                                                (rule "shift_paren_or" (formula "42") (term "0,0"))
                                                (rule "shift_paren_or" (formula "42") (term "0,0,0"))
                                                (rule "allLeft" (formula "46") (inst "t=i_0"))
                                                (rule "inEqSimp_contradInEq1" (formula "46") (term "0,0") (ifseqformula "4"))
                                                (rule "qeq_literals" (formula "46") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "inEqSimp_contradInEq0" (formula "46") (term "0") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "46") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "46") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "46") (term "0,0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "46") (term "1,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "46") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "46") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,0"))
                                                (rule "add_literals" (formula "46") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "46") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "46") (term "0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "46") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "46") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "46") (term "0,0,0"))
                                                (rule "add_literals" (formula "46") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "46") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "46") (term "0,0,0"))
                                                (rule "leq_literals" (formula "46") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=arr_8"))
                                                (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "44"))
                                                 (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "60")) (ifInst ""  (formula "27")))
                                                (rule "polySimp_homoEq" (formula "47"))
                                                (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                (rule "elementOfArrayRangeConcrete" (formula "46") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "5")))
                                                (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0"))
                                                (rule "replace_known_left" (formula "46") (term "0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "applyEqReverse" (formula "47") (term "0,1,0,0") (ifseqformula "46"))
                                                (rule "hideAuxiliaryEq" (formula "46"))
                                                (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                (rule "polySimp_sepNegMonomial" (formula "46"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                (rule "polySimp_elimOne" (formula "46") (term "0"))
                                                (rule "allLeft" (formula "9") (inst "t=i_0"))
                                                (rule "replaceKnownSelect_taclet100110101201010_1" (formula "9") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100110101201010_2" (formula "9") (term "0,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0") (ifseqformula "4"))
                                                (rule "qeq_literals" (formula "9") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "inEqSimp_contradInEq0" (formula "9") (term "0") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "9") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "9") (term "0,0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "9") (term "1,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "9") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "9") (term "0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "9") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "9") (term "0,0,0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "9") (term "0,0,0"))
                                                (rule "leq_literals" (formula "9") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "allLeft" (formula "8") (inst "t=i_0"))
                                                (rule "replaceKnownSelect_taclet100110101201010_1" (formula "8") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100110101201010_2" (formula "8") (term "0,1"))
                                                (rule "inEqSimp_contradInEq0" (formula "8") (term "1,0") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "8") (term "0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "1,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "8") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "8") (term "0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "8") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "inEqSimp_contradInEq1" (formula "8") (term "0") (ifseqformula "4"))
                                                (rule "qeq_literals" (formula "8") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "inEqSimp_strengthen1" (formula "8") (ifseqformula "64"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "1"))
                                                (rule "add_literals" (formula "8") (term "0,1"))
                                                (rule "add_zero_left" (formula "8") (term "1"))
                                                (rule "inEqSimp_contradEq7" (formula "64") (ifseqformula "8"))
                                                (rule "polySimp_rightDist" (formula "64") (term "1,0,0"))
                                                (rule "mul_literals" (formula "64") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "64") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "64") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0"))
                                                (rule "add_literals" (formula "64") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "64") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "64") (term "0,0"))
                                                (rule "leq_literals" (formula "64") (term "0"))
                                                 (builtin "One Step Simplification" (formula "64"))
                                                (rule "false_right" (formula "64"))
                                                (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "10"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                (rule "mul_literals" (formula "8") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                (rule "allLeft" (formula "18") (inst "t=i_0"))
                                                (rule "inEqSimp_contradInEq0" (formula "18") (term "1,0") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "18") (term "0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "18") (term "0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "18") (term "1,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "18") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "18") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "18") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "18") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "4"))
                                                (rule "qeq_literals" (formula "18") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_9"))
                                                (rule "simplifySelectOfAnon" (formula "18"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "18"))
                                                (rule "hideAuxiliaryEq" (formula "18"))
                                                (rule "allLeft" (formula "17") (inst "t=i_0"))
                                                (rule "replaceKnownSelect_taclet0100110101201010_20" (formula "17") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0100110101201010_21" (formula "17") (term "0,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "4"))
                                                (rule "qeq_literals" (formula "17") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "inEqSimp_contradInEq0" (formula "17") (term "0") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "17") (term "0,0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "17") (term "1,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                                (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "17") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "17") (term "0,0,0"))
                                                (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0,0"))
                                                (rule "leq_literals" (formula "17") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "19"))
                                                (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                                (rule "mul_literals" (formula "17") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "17") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1"))
                                                (rule "allLeft" (formula "53") (inst "t=add(begin, i_0)"))
                                                (rule "inEqSimp_homoInEq1" (formula "53") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "53") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "53") (term "1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "53") (term "0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "53") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "53") (term "0,0,1,0"))
                                                (rule "polySimp_pullOutFactor3" (formula "53") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "53") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "53") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "53") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "53") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "53") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "53") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "53") (term "0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "53") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "53") (term "0,0,0"))
                                                (rule "polySimp_elimOne" (formula "53") (term "0,0,0"))
                                                (rule "pullOutSelect" (formula "53") (term "0,1") (inst "selectSK=arr_10"))
                                                (rule "simplifySelectOfAnonEQ" (formula "53") (ifseqformula "50"))
                                                 (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "67")) (ifInst ""  (formula "33")))
                                                (rule "polySimp_homoEq" (formula "54") (term "1"))
                                                (rule "polySimp_addComm1" (formula "54") (term "0,1"))
                                                (rule "elementOfArrayRangeConcrete" (formula "53") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "inEqSimp_homoInEq0" (formula "53") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "53") (term "1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "53") (term "1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "53") (term "0,1,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "53") (term "0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "53") (term "0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor3b" (formula "53") (term "0,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0,1,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "53") (term "0,0,0"))
                                                (rule "times_zero_2" (formula "53") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "53") (term "0,0,0,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "54") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "54") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "54") (term "1,1"))
                                                (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1"))
                                                (rule "mul_literals" (formula "54") (term "0,1,1"))
                                                (rule "polySimp_elimOne" (formula "54") (term "1,1,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "53") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "53") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "53") (term "0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,0,0"))
                                                (rule "allLeft" (formula "55") (inst "t=add(mul(l_0, Z(neglit(1(#)))),
    int::select(anon_heap_LOOP_1<<anonHeapFunction>>,
                indices,
                arr(i_0)))"))
                                                (rule "inEqSimp_homoInEq1" (formula "55") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "55") (term "1,0,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "55") (term "0,1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "0,0,1,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "55") (term "0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "55") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "55") (term "0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "55") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "55") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "55") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "0,0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "55") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "55") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "55") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "55") (term "0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "55") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "55") (term "0,0,0"))
                                                (rule "polySimp_elimOne" (formula "55") (term "0,0,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "55") (term "0,0") (ifseqformula "9"))
                                                (rule "inEqSimp_homoInEq1" (formula "55") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "55") (term "0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "55") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "55") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "55") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "55") (term "1,0,0,0,0"))
                                                (rule "add_literals" (formula "55") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "55") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "55"))
                                                (rule "pullOutSelect" (formula "55") (term "0,1") (inst "selectSK=arr_11"))
                                                (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "50"))
                                                 (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "69")) (ifInst ""  (formula "33")))
                                                (rule "polySimp_homoEq" (formula "56") (term "1"))
                                                (rule "polySimp_addComm1" (formula "56") (term "0,1"))
                                                (rule "elementOfArrayRangeConcrete" (formula "55") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "55"))
                                                (rule "inEqSimp_homoInEq0" (formula "55") (term "0,0,0"))
                                                (rule "mul_literals" (formula "55") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "55") (term "0,0,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "55") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "55") (term "1,0,1,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "55") (term "0,1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "55") (term "0,0,1,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "55") (term "0,1,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "55") (term "0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "55") (term "0,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "55") (term "0,0,0,1,0,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "56") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "56") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "56") (term "1,1"))
                                                (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1"))
                                                (rule "mul_literals" (formula "56") (term "0,1,1"))
                                                (rule "polySimp_elimOne" (formula "56") (term "1,1,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "55") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "55") (term "1,0,0,0"))
                                                (rule "replace_known_left" (formula "55") (term "0,0,0") (ifseqformula "9"))
                                                 (builtin "One Step Simplification" (formula "55"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "55") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "55") (term "0,0,0"))
                                                (rule "polySimp_elimOne" (formula "55") (term "0,0,0"))
                                                (rule "commute_or" (formula "56"))
                                                (rule "allLeft" (formula "27") (inst "t=i_0"))
                                                (rule "replaceKnownSelect_taclet0100110101201010_20" (formula "27") (term "0,1,0"))
                                                (rule "replaceKnownSelect_taclet100110101201010_4" (formula "27") (term "1,1,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0100110101201010_21" (formula "27") (term "0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100110101201010_6" (formula "27") (term "1,1,1"))
                                                (rule "replaceKnownSelect_taclet0100110101201010_20" (formula "27") (term "1,0,2,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0100110101201010_21" (formula "27") (term "1,0,2,0,1"))
                                                (rule "inEqSimp_contradInEq0" (formula "27") (term "1,0,0") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "27") (term "0,0,1,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "27") (term "0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "27") (term "0,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "27") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "27") (term "1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "27") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "27") (term "0,0,1,0,0"))
                                                (rule "leq_literals" (formula "27") (term "0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0") (ifseqformula "4"))
                                                (rule "qeq_literals" (formula "27") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "pullOutSelect" (formula "27") (term "0,1") (inst "selectSK=arr_12"))
                                                (rule "simplifySelectOfAnon" (formula "27"))
                                                 (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "69")) (ifInst ""  (formula "63")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,0") (ifseqformula "52"))
                                                (rule "replace_known_left" (formula "27") (term "0,0,0,0") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "52"))
                                                 (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "63")) (ifInst ""  (formula "6")))
                                                (rule "elementOfArrayRangeConcrete" (formula "27") (term "0,0"))
                                                (rule "replace_known_right" (formula "27") (term "0,0,0,0") (ifseqformula "69"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "27"))
                                                (rule "hideAuxiliaryEq" (formula "27"))
                                                (rule "allLeft" (formula "14") (inst "t=i_0"))
                                                (rule "replaceKnownSelect_taclet100110101201010_3" (formula "14") (term "1,1,1"))
                                                (rule "replaceKnownSelect_taclet100110101201010_1" (formula "14") (term "0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100110101201010_6" (formula "14") (term "1,1,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100110101201010_2" (formula "14") (term "0,1,0"))
                                                (rule "replaceKnownSelect_taclet100110101201010_1" (formula "14") (term "1,0,2,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100110101201010_2" (formula "14") (term "1,0,2,0,1"))
                                                (rule "replaceKnownSelect_taclet100110101201010_8" (formula "14") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100110101201010_15" (formula "14") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100110101201010_16" (formula "14") (term "0,1"))
                                                (rule "inEqSimp_contradEq7" (formula "14") (term "1,0") (ifseqformula "9"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "14") (term "0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "14") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "inEqSimp_contradInEq0" (formula "14") (term "1,0") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "14") (term "0,0,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "14") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "14") (term "0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "14") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "14") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "14") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0,1"))
                                                (rule "polySimp_addComm0" (formula "14") (term "0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                                                (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "14") (term "0,0,1"))
                                                (rule "leq_literals" (formula "14") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "4"))
                                                (rule "qeq_literals" (formula "14") (term "0"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "closeFalse" (formula "14"))
                                             )
                                             (branch
                                                (rule "orRight" (formula "55"))
                                                (rule "inEqSimp_geqRight" (formula "56"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "cnf_rightDist" (formula "8") (term "0"))
                                                (rule "distr_forallAnd" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "commute_or_2" (formula "9") (term "0"))
                                                (rule "commute_or" (formula "9") (term "0,0"))
                                                (rule "cnf_rightDist" (formula "8") (term "0"))
                                                (rule "distr_forallAnd" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "commute_or_2" (formula "9") (term "0"))
                                                (rule "commute_or" (formula "9") (term "0,0"))
                                                (rule "arrayLengthNotNegative" (formula "37") (term "0"))
                                                (rule "arrayLengthIsAShort" (formula "38") (term "0"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "true_left" (formula "38"))
                                                (rule "cnf_rightDist" (formula "8") (term "0"))
                                                (rule "distr_forallAnd" (formula "8"))
                                                (rule "andLeft" (formula "8"))
                                                (rule "commute_or" (formula "9") (term "0"))
                                                (rule "arrayLengthNotNegative" (formula "37") (term "0"))
                                                (rule "arrayLengthIsAShort" (formula "38") (term "0"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "true_left" (formula "38"))
                                                (rule "all_pull_out3" (formula "42") (term "0"))
                                                (rule "shift_paren_or" (formula "42") (term "0,0"))
                                                (rule "shift_paren_or" (formula "42") (term "0,0,0"))
                                                (rule "allLeft" (formula "46") (inst "t=i_0"))
                                                (rule "inEqSimp_contradInEq1" (formula "46") (term "0,0") (ifseqformula "4"))
                                                (rule "qeq_literals" (formula "46") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "inEqSimp_contradInEq0" (formula "46") (term "0") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "46") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "46") (term "0,1,0,0,0"))
                                                (rule "mul_literals" (formula "46") (term "0,0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "46") (term "1,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "46") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "46") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,0"))
                                                (rule "add_literals" (formula "46") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "46") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "46") (term "0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "46") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "46") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "46") (term "0,0,0"))
                                                (rule "add_literals" (formula "46") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "46") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "46") (term "0,0,0"))
                                                (rule "leq_literals" (formula "46") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=arr_8"))
                                                (rule "simplifySelectOfAnonEQ" (formula "46") (ifseqformula "44"))
                                                 (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "60")) (ifInst ""  (formula "27")))
                                                (rule "polySimp_homoEq" (formula "47"))
                                                (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                (rule "elementOfArrayRangeConcrete" (formula "46") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "5")))
                                                (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0"))
                                                (rule "replace_known_left" (formula "46") (term "0,0") (ifseqformula "4"))
                                                 (builtin "One Step Simplification" (formula "46"))
                                                (rule "applyEqReverse" (formula "47") (term "0,1,0,0") (ifseqformula "46"))
                                                (rule "hideAuxiliaryEq" (formula "46"))
                                                (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                (rule "polySimp_sepNegMonomial" (formula "46"))
                                                (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                (rule "polySimp_elimOne" (formula "46") (term "0"))
                                                (rule "allLeft" (formula "9") (inst "t=i_0"))
                                                (rule "replaceKnownSelect_taclet100110101201010_1" (formula "9") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100110101201010_2" (formula "9") (term "0,1"))
                                                (rule "inEqSimp_contradInEq0" (formula "9") (term "1,0") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "9") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "9") (term "0,0,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "9") (term "1,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "9") (term "0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "9") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "9") (term "0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "9") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "9") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "9") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "9") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "9") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "4"))
                                                (rule "qeq_literals" (formula "9") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "inEqSimp_strengthen0" (formula "9") (ifseqformula "63"))
                                                (rule "polySimp_addAssoc" (formula "9") (term "1"))
                                                (rule "add_literals" (formula "9") (term "0,1"))
                                                (rule "inEqSimp_contradEq3" (formula "63") (ifseqformula "9"))
                                                (rule "polySimp_rightDist" (formula "63") (term "1,0,0"))
                                                (rule "mul_literals" (formula "63") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "63") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "63") (term "0,0,0"))
                                                (rule "add_literals" (formula "63") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "63") (term "0,0"))
                                                (rule "add_literals" (formula "63") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "63") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "63") (term "0,0"))
                                                (rule "qeq_literals" (formula "63") (term "0"))
                                                 (builtin "One Step Simplification" (formula "63"))
                                                (rule "false_right" (formula "63"))
                                                (rule "allLeft" (formula "8") (inst "t=i_0"))
                                                (rule "replaceKnownSelect_taclet100110101201010_1" (formula "8") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100110101201010_2" (formula "8") (term "0,1"))
                                                (rule "inEqSimp_contradInEq0" (formula "8") (term "1,0") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "8") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "8") (term "0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "8") (term "1,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "8") (term "0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "8") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "8") (term "0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "8") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "8") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "8") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "8") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "inEqSimp_contradInEq1" (formula "8") (term "0") (ifseqformula "4"))
                                                (rule "qeq_literals" (formula "8") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "10"))
                                                (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                                                (rule "mul_literals" (formula "8") (term "0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                (rule "polySimp_addComm1" (formula "8") (term "0,0"))
                                                (rule "add_literals" (formula "8") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                                (rule "polySimp_mulComm0" (formula "8") (term "1"))
                                                (rule "polySimp_rightDist" (formula "8") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,1"))
                                                (rule "mul_literals" (formula "8") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "8") (term "1,1"))
                                                (rule "allLeft" (formula "18") (inst "t=i_0"))
                                                (rule "inEqSimp_contradInEq1" (formula "18") (term "0,0") (ifseqformula "4"))
                                                (rule "qeq_literals" (formula "18") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "inEqSimp_contradInEq0" (formula "18") (term "0") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "18") (term "0,1,0,0,0"))
                                                (rule "mul_literals" (formula "18") (term "0,0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "18") (term "1,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                                (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "18") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "18") (term "0,0,0"))
                                                (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "18") (term "0,0,0"))
                                                (rule "leq_literals" (formula "18") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_9"))
                                                (rule "simplifySelectOfAnon" (formula "18"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "18"))
                                                (rule "hideAuxiliaryEq" (formula "18"))
                                                (rule "allLeft" (formula "17") (inst "t=i_0"))
                                                (rule "replaceKnownSelect_taclet1100110101201010_20" (formula "17") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1100110101201010_21" (formula "17") (term "0,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "4"))
                                                (rule "qeq_literals" (formula "17") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "inEqSimp_contradInEq0" (formula "17") (term "0") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "17") (term "0,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,0,1,0,0,0"))
                                                (rule "mul_literals" (formula "17") (term "0,0,1,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "17") (term "1,0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                                (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "17") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "17") (term "0,0,0"))
                                                (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0,0"))
                                                (rule "leq_literals" (formula "17") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "17"))
                                                (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "19"))
                                                (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                                (rule "mul_literals" (formula "17") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "17") (term "0"))
                                                (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                                (rule "add_literals" (formula "17") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "17") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                (rule "polySimp_mulLiterals" (formula "17") (term "1"))
                                                (rule "allLeft" (formula "53") (inst "t=add(begin, i_0)"))
                                                (rule "inEqSimp_homoInEq1" (formula "53") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "53") (term "1,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "53") (term "1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "53") (term "0,1,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "53") (term "0,1,0"))
                                                (rule "polySimp_addComm1" (formula "53") (term "0,0,1,0"))
                                                (rule "polySimp_pullOutFactor3" (formula "53") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "53") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "53") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "53") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "53") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "53") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "53") (term "0,1,0"))
                                                (rule "polySimp_elimOne" (formula "53") (term "0,1,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "53") (term "0,0"))
                                                (rule "polySimp_mulLiterals" (formula "53") (term "0,0,0"))
                                                (rule "polySimp_elimOne" (formula "53") (term "0,0,0"))
                                                (rule "pullOutSelect" (formula "53") (term "0,1") (inst "selectSK=arr_10"))
                                                (rule "simplifySelectOfAnonEQ" (formula "53") (ifseqformula "50"))
                                                 (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "67")) (ifInst ""  (formula "33")))
                                                (rule "polySimp_homoEq" (formula "54") (term "1"))
                                                (rule "polySimp_addComm1" (formula "54") (term "0,1"))
                                                (rule "elementOfArrayRangeConcrete" (formula "53") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "53"))
                                                (rule "inEqSimp_homoInEq0" (formula "53") (term "1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "53") (term "1,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "53") (term "1,0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "53") (term "0,1,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "53") (term "0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "53") (term "0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor3b" (formula "53") (term "0,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0,1,0,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "53") (term "0,0,0"))
                                                (rule "times_zero_2" (formula "53") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "53") (term "0,0,0,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "54") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "54") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "54") (term "1,1"))
                                                (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1"))
                                                (rule "mul_literals" (formula "54") (term "0,1,1"))
                                                (rule "polySimp_elimOne" (formula "54") (term "1,1,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "53") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "53") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "53") (term "0,1,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "53") (term "0,0,0"))
                                                (rule "allLeft" (formula "55") (inst "t=int::select(anon_heap_LOOP_1<<anonHeapFunction>>,
            indices,
            arr(i_0))"))
                                                (rule "pullOutSelect" (formula "55") (term "0,1") (inst "selectSK=arr_11"))
                                                (rule "simplifySelectOfAnonEQ" (formula "55") (ifseqformula "50"))
                                                 (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "69")) (ifInst ""  (formula "33")))
                                                (rule "polySimp_homoEq" (formula "56") (term "1"))
                                                (rule "polySimp_addComm1" (formula "56") (term "0,1"))
                                                (rule "elementOfArrayRangeConcrete" (formula "55") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "55"))
                                                (rule "inEqSimp_commuteLeq" (formula "55") (term "0,0,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "56") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "56") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "56") (term "1,1"))
                                                (rule "polySimp_mulLiterals" (formula "56") (term "1,1,1"))
                                                (rule "mul_literals" (formula "56") (term "0,1,1"))
                                                (rule "polySimp_elimOne" (formula "56") (term "1,1,1"))
                                                (rule "commute_or_2" (formula "56"))
                                                (rule "commute_or" (formula "56") (term "0"))
                                                (rule "allLeft" (formula "27") (inst "t=i_0"))
                                                (rule "replaceKnownSelect_taclet100110101201010_4" (formula "27") (term "1,1,1"))
                                                (rule "replaceKnownSelect_taclet1100110101201010_20" (formula "27") (term "0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100110101201010_6" (formula "27") (term "1,1,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1100110101201010_21" (formula "27") (term "0,1,0"))
                                                (rule "replaceKnownSelect_taclet1100110101201010_20" (formula "27") (term "1,0,2,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1100110101201010_21" (formula "27") (term "1,0,2,0,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0,0") (ifseqformula "4"))
                                                (rule "qeq_literals" (formula "27") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "inEqSimp_contradInEq0" (formula "27") (term "0,0") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "27") (term "0,0,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "27") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                                                (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "27") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "pullOutSelect" (formula "27") (term "0,1") (inst "selectSK=arr_12"))
                                                (rule "simplifySelectOfAnon" (formula "27"))
                                                 (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "69")) (ifInst ""  (formula "63")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,0") (ifseqformula "52"))
                                                (rule "replace_known_left" (formula "27") (term "0,0,0,0") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "52"))
                                                 (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "63")) (ifInst ""  (formula "6")))
                                                (rule "elementOfArrayRangeConcrete" (formula "27") (term "0,0"))
                                                (rule "replace_known_right" (formula "27") (term "0,0,0,0") (ifseqformula "69"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "27"))
                                                (rule "hideAuxiliaryEq" (formula "27"))
                                                (rule "allLeft" (formula "14") (inst "t=i_0"))
                                                (rule "replaceKnownSelect_taclet100110101201010_3" (formula "14") (term "1,1,1"))
                                                (rule "replaceKnownSelect_taclet100110101201010_1" (formula "14") (term "0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100110101201010_6" (formula "14") (term "1,1,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100110101201010_2" (formula "14") (term "0,1,0"))
                                                (rule "replaceKnownSelect_taclet100110101201010_1" (formula "14") (term "1,0,2,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100110101201010_2" (formula "14") (term "1,0,2,0,1"))
                                                (rule "replaceKnownSelect_taclet100110101201010_8" (formula "14") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100110101201010_15" (formula "14") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100110101201010_16" (formula "14") (term "0,1"))
                                                (rule "inEqSimp_contradInEq0" (formula "14") (term "1,0,0") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,0,1,0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,0,1,0,0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "1,0,1,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                                (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "14") (term "1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0"))
                                                (rule "add_zero_right" (formula "14") (term "0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                                                (rule "polySimp_addComm0" (formula "14") (term "0,0,0,1,0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "14") (term "0,0,1,0,0"))
                                                (rule "add_literals" (formula "14") (term "1,1,0,0,1,0,0"))
                                                (rule "times_zero_1" (formula "14") (term "1,0,0,1,0,0"))
                                                (rule "add_literals" (formula "14") (term "0,0,1,0,0"))
                                                (rule "leq_literals" (formula "14") (term "0,1,0,0"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0") (ifseqformula "4"))
                                                (rule "qeq_literals" (formula "14") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "14"))
                                                (rule "allLeft" (formula "49") (inst "t=begin"))
                                                (rule "inEqSimp_homoInEq1" (formula "49") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "49") (term "0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "49") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,1,0"))
                                                (rule "mul_literals" (formula "49") (term "0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "49") (term "0,0") (ifseqformula "37"))
                                                (rule "qeq_literals" (formula "49") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "49"))
                                                (rule "allLeft" (formula "27") (inst "t=i_0"))
                                                (rule "replaceKnownSelect_taclet100110101201010_4" (formula "27") (term "1,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100110101201010_6" (formula "27") (term "1,1"))
                                                (rule "replaceKnownSelect_taclet1100110101201010_20" (formula "27") (term "0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1100110101201010_21" (formula "27") (term "0,1,0"))
                                                (rule "replaceKnownSelect_taclet1100110101201010_20" (formula "27") (term "0,2,0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet1100110101201010_21" (formula "27") (term "0,2,0,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0,0") (ifseqformula "4"))
                                                (rule "qeq_literals" (formula "27") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "inEqSimp_contradInEq0" (formula "27") (term "0,0") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "27") (term "0,1,0,0,0,0"))
                                                (rule "mul_literals" (formula "27") (term "0,0,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "1,0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0"))
                                                (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "27") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                                                (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "27") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "pullOutSelect" (formula "27") (term "0,1") (inst "selectSK=arr_13"))
                                                (rule "simplifySelectOfAnon" (formula "27"))
                                                 (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "72")) (ifInst ""  (formula "66")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,0") (ifseqformula "55"))
                                                (rule "replace_known_left" (formula "27") (term "0,0,0,0") (ifseqformula "6"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "55"))
                                                 (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "66")) (ifInst ""  (formula "6")))
                                                (rule "elementOfArrayRangeConcrete" (formula "27") (term "0,0"))
                                                (rule "replace_known_right" (formula "27") (term "0,0,0,0") (ifseqformula "72"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "applyEqReverse" (formula "28") (term "0,1") (ifseqformula "27"))
                                                (rule "hideAuxiliaryEq" (formula "27"))
                                                (rule "allLeft" (formula "51") (inst "t=i_0"))
                                                (rule "inEqSimp_homoInEq1" (formula "51") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "51") (term "0,1,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "51") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "51") (term "1,1,0"))
                                                (rule "mul_literals" (formula "51") (term "0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "51") (term "1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "51") (term "1,1,1,0"))
                                                (rule "inEqSimp_contradInEq1" (formula "51") (term "0,0") (ifseqformula "4"))
                                                (rule "qeq_literals" (formula "51") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "allLeft" (formula "13") (inst "t=i_0"))
                                                (rule "replaceKnownSelect_taclet100110101201010_3" (formula "13") (term "1,1"))
                                                (rule "replaceKnownSelect_taclet100110101201010_0" (formula "13") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100110101201010_6" (formula "13") (term "1,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100110101201010_14" (formula "13") (term "0,1"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100110101201010_17" (formula "13") (term "0,1"))
                                                (rule "replaceKnownSelect_taclet100110101201010_1" (formula "13") (term "0,1,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet100110101201010_2" (formula "13") (term "0,1,0"))
                                                (rule "inEqSimp_contradEq3" (formula "13") (term "1,0") (ifseqformula "11"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,1,0"))
                                                (rule "qeq_literals" (formula "13") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "inEqSimp_contradInEq0" (formula "13") (term "1,0") (ifseqformula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "13") (term "0,1,0,0,1,0"))
                                                (rule "mul_literals" (formula "13") (term "0,0,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "13") (term "1,0,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "13") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "13") (term "0,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,1,0"))
                                                (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
                                                (rule "add_literals" (formula "13") (term "0,0,1,0"))
                                                (rule "leq_literals" (formula "13") (term "0,1,0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "inEqSimp_contradInEq0" (formula "13") (term "1") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1"))
                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                                                (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1"))
                                                (rule "mul_literals" (formula "13") (term "0,1,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0,0,1"))
                                                (rule "polySimp_addComm0" (formula "13") (term "0,0,0,1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1"))
                                                (rule "add_literals" (formula "13") (term "1,1,0,0,1"))
                                                (rule "times_zero_1" (formula "13") (term "1,0,0,1"))
                                                (rule "add_literals" (formula "13") (term "0,0,1"))
                                                (rule "leq_literals" (formula "13") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "inEqSimp_contradInEq1" (formula "13") (ifseqformula "4"))
                                                (rule "qeq_literals" (formula "13") (term "0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "closeFalse" (formula "13"))
                                             )
                                          )
                                       )
                                       (branch
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "0,1,1,0,0,0") (ifseqformula "30"))
                                          (rule "allRight" (formula "46") (inst "sk=f_0"))
                                          (rule "allRight" (formula "46") (inst "sk=o_0"))
                                          (rule "orRight" (formula "46"))
                                          (rule "orRight" (formula "46"))
                                          (rule "eqSymm" (formula "48"))
                                          (rule "polySimp_homoEq" (formula "6") (term "1,1,1,0"))
                                          (rule "polySimp_homoEq" (formula "13") (term "1,1,1,0"))
                                          (rule "polySimp_homoEq" (formula "5") (term "1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0,1,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,1,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "0,1,0,1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,1,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1,0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,1,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,1,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0,1,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,0"))
                                          (rule "inEqSimp_ltRight" (formula "36"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                          (rule "polySimp_mulAssoc" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0,1,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "9"))
                                          (rule "mul_literals" (formula "9") (term "1,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "33") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "33") (term "0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "7") (term "1,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "0,1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "0,1,1,1,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "14") (term "1,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "0,1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "0,1,1,1,0"))
                                          (rule "polySimp_sepNegMonomial" (formula "6") (term "1,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "0,1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "0,1,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,1,1,0"))
                                          (rule "mul_literals" (formula "6") (term "0,1,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "1,1,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                          (rule "mul_literals" (formula "9") (term "1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,1,1,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,1,1,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "1,1,0,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "7") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "10") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "10") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "32") (term "0,0,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0,0"))
                                          (rule "mul_literals" (formula "6") (term "0,0,1,0,0,0"))
                                          (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                          (rule "leq_literals" (formula "9") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "mul_literals" (formula "9") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0"))
                                          (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0"))
                                          (rule "leq_literals" (formula "9") (term "0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "pullOutSelect" (formula "47") (term "0") (inst "selectSK=f_0_0"))
                                          (rule "simplifySelectOfAnon" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "46")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "31"))
                                          (rule "eqSymm" (formula "48"))
                                          (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "6"))
                                          (rule "applyEq" (formula "9") (term "1,1,0,0,0") (ifseqformula "2"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "1,0,0,0"))
                                          (rule "applyEq" (formula "6") (term "0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,0"))
                                          (rule "times_zero_1" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "applyEq" (formula "7") (term "1,1,0,0") (ifseqformula "2"))
                                          (rule "applyEq" (formula "6") (term "0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq0" (formula "6"))
                                          (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                          (rule "add_literals" (formula "6") (term "1,0"))
                                          (rule "times_zero_1" (formula "6") (term "0"))
                                          (rule "qeq_literals" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                                          (rule "polySimp_elimOne" (formula "5") (term "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                                          (rule "simplifySelectOfAnon" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "30"))
                                          (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "46"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEq" (formula "47") (term "0") (ifseqformula "1"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "30"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfArrayRange" (formula "1") (term "0,0,0,0") (inst "iv=iv"))
                                          (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "45"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_and_contradInEq0" (formula "6") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "6") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "0,1,0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,1,0,0"))
                                          (rule "mul_literals" (formula "6") (term "0,0,1,0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "6") (term "0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "6") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "6") (term "0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "6") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "6") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "6") (term "1,0,1,0,0"))
                                          (rule "add_literals" (formula "6") (term "0,1,0,0"))
                                          (rule "leq_literals" (formula "6") (term "1,0,0"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "nnf_imp2or" (formula "13") (term "0"))
                                          (rule "nnf_imp2or" (formula "9") (term "0"))
                                          (rule "nnf_imp2or" (formula "31") (term "0"))
                                          (rule "nnf_imp2or" (formula "6") (term "0"))
                                          (rule "nnf_notAnd" (formula "13") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "13") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                                          (rule "mul_literals" (formula "13") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "9") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "9") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "9") (term "0,0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "9") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "9") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
                                          (rule "mul_literals" (formula "9") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0"))
                                          (rule "times_zero_1" (formula "31") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                          (rule "mul_literals" (formula "31") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "31") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,0,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "31") (term "0,0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1,0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "31") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "0,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "6") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "6") (term "0,0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "6") (term "0,0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "6") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "6") (term "1,0,0"))
                                          (rule "mul_literals" (formula "6") (term "1,0,0,1,0,0"))
                                          (rule "add_literals" (formula "6") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
                                          (rule "mul_literals" (formula "6") (term "1,1,0,0"))
                                          (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "27"))
                                          (rule "true_left" (formula "27"))
                                          (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "26"))
                                           (builtin "One Step Simplification" (formula "26"))
                                          (rule "translateJavaSubInt" (formula "26") (term "3,0,1"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "andLeft" (formula "27"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "andLeft" (formula "28"))
                                          (rule "notLeft" (formula "26"))
                                          (rule "notLeft" (formula "26"))
                                          (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "41"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "40"))
                                           (builtin "One Step Simplification" (formula "4"))
                                          (rule "polySimp_elimSub" (formula "32") (term "3,0"))
                                          (rule "mul_literals" (formula "32") (term "1,3,0"))
                                          (rule "polySimp_addComm0" (formula "32") (term "3,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "31"))
                                          (rule "inEqSimp_commuteLeq" (formula "30"))
                                          (rule "inEqSimp_commuteLeq" (formula "29"))
                                          (rule "inEqSimp_commuteLeq" (formula "26"))
                                          (rule "applyEq" (formula "29") (term "0") (ifseqformula "28"))
                                          (rule "applyEq" (formula "32") (term "1,3,0") (ifseqformula "28"))
                                          (rule "applyEq" (formula "6") (term "1,1,1,0,0,1,0") (ifseqformula "28"))
                                          (rule "applyEq" (formula "30") (term "1") (ifseqformula "28"))
                                          (rule "applyEq" (formula "31") (term "1") (ifseqformula "28"))
                                          (rule "applyEq" (formula "9") (term "1,1,1,1,0") (ifseqformula "28"))
                                          (rule "applyEq" (formula "6") (term "1,1,0,1,0,1,0") (ifseqformula "28"))
                                          (rule "applyEq" (formula "13") (term "1,1,0,0,1,0") (ifseqformula "28"))
                                          (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "27"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "11") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "0"))
                                          (rule "commute_or_2" (formula "2") (term "0,1,0,0"))
                                          (rule "jdiv_axiom" (formula "39") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "0,0,2,1"))
                                          (rule "eqSymm" (formula "39"))
                                          (rule "applyEqRigid" (formula "39") (term "1") (ifseqformula "40"))
                                          (rule "inEqSimp_subsumption6" (formula "39") (term "0,0") (ifseqformula "8"))
                                          (rule "mul_literals" (formula "39") (term "1,1,0,0,0"))
                                          (rule "greater_literals" (formula "39") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "leq_literals" (formula "39") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "polyDiv_pullOut" (formula "39") (term "0") (inst "polyDivCoeff=l_0"))
                                          (rule "equal_literals" (formula "39") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0"))
                                          (rule "polySimp_pullOutFactor0" (formula "39") (term "0,0,0"))
                                          (rule "add_literals" (formula "39") (term "1,0,0,0"))
                                          (rule "times_zero_1" (formula "39") (term "0,0,0"))
                                          (rule "div_literals" (formula "39") (term "0,0"))
                                          (rule "add_zero_left" (formula "39") (term "0"))
                                           (builtin "One Step Simplification" (formula "39"))
                                          (rule "true_left" (formula "39"))
                                          (rule "commute_or" (formula "14") (term "1,1,0"))
                                          (rule "commute_or" (formula "6") (term "1,1,0"))
                                          (rule "commute_or" (formula "14") (term "0,0"))
                                          (rule "commute_or" (formula "9") (term "0,0"))
                                          (rule "commute_or" (formula "37") (term "0,0"))
                                          (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "33") (term "0"))
                                          (rule "replace_known_left" (formula "33") (term "1,0") (ifseqformula "16"))
                                           (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "42")) (ifInst ""  (formula "34")))
                                          (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "34") (term "0") (inst "i=i") (inst "j=j_1"))
                                           (builtin "One Step Simplification" (formula "34"))
                                          (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,1,0"))
                                          (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                          (rule "nnf_imp2or" (formula "34") (term "0"))
                                          (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                                          (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                          (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                          (rule "nnf_imp2or" (formula "34") (term "0,1,0"))
                                          (rule "nnf_notAnd" (formula "34") (term "0,0,1,0"))
                                          (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,1,0"))
                                          (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1,0"))
                                          (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1,0"))
                                          (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,1,0"))
                                          (rule "mul_literals" (formula "34") (term "0,1,0,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,1,0"))
                                          (rule "cut_direct" (formula "54") (term "0,0"))
                                          (branch "CUT: o_0 = null TRUE"
                                              (builtin "One Step Simplification" (formula "55"))
                                             (rule "false_right" (formula "55"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                             (rule "applyEqReverse" (formula "55") (term "0") (ifseqformula "2"))
                                             (rule "hideAuxiliaryEq" (formula "2"))
                                             (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "54")))
                                             (rule "closeFalse" (formula "2"))
                                          )
                                          (branch "CUT: o_0 = null FALSE"
                                              (builtin "One Step Simplification" (formula "55"))
                                             (rule "notRight" (formula "55"))
                                             (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "55"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "55"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "ifthenelse_negated" (formula "3") (term "0"))
                                             (rule "ifthenelse_negated" (formula "2") (term "0"))
                                             (rule "commute_or" (formula "7") (term "0,0"))
                                             (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "34") (term "0"))
                                             (rule "replace_known_right" (formula "34") (term "0,0,0") (ifseqformula "44"))
                                              (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "17")) (ifInst ""  (formula "35")))
                                             (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "35") (term "0") (inst "i=i"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "translateJavaSubInt" (formula "35") (term "1,1,0,0"))
                                             (rule "translateJavaAddInt" (formula "35") (term "0,2,1,1,0"))
                                             (rule "polySimp_elimSub" (formula "35") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "35") (term "1,1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "35") (term "0,2,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "35") (term "1,1,0,0"))
                                             (rule "add_literals" (formula "35") (term "0,1,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "35") (term "1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "35") (term "0"))
                                             (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                             (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                                             (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                                             (rule "cnf_rightDist" (formula "15") (term "0"))
                                             (rule "cnf_rightDist" (formula "10") (term "0"))
                                             (rule "distr_forallAnd" (formula "15"))
                                             (rule "andLeft" (formula "15"))
                                             (rule "distr_forallAnd" (formula "10"))
                                             (rule "andLeft" (formula "10"))
                                             (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "36") (term "0") (inst "i=i") (inst "j=j_1"))
                                              (builtin "One Step Simplification" (formula "36"))
                                             (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "36") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "36") (term "1,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,0"))
                                             (rule "nnf_imp2or" (formula "36") (term "0"))
                                             (rule "nnf_notAnd" (formula "36") (term "0,0"))
                                             (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0"))
                                             (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "36") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                                             (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                                             (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0"))
                                             (rule "nnf_imp2or" (formula "36") (term "0,1,0"))
                                             (rule "nnf_notAnd" (formula "36") (term "0,0,1,0"))
                                             (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,1,0"))
                                             (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1,0"))
                                             (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,1,0"))
                                             (rule "mul_literals" (formula "36") (term "0,1,0,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,1,0"))
                                             (rule "commute_or_2" (formula "17") (term "0"))
                                             (rule "commute_or" (formula "11") (term "0"))
                                             (rule "cnf_rightDist" (formula "7") (term "0"))
                                             (rule "distr_forallAnd" (formula "7"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "commute_or" (formula "38") (term "0,0,1,0"))
                                             (rule "shift_paren_or" (formula "17") (term "0"))
                                             (rule "commute_or_2" (formula "8") (term "0"))
                                             (rule "commute_or" (formula "18") (term "0,0"))
                                             (rule "commute_or" (formula "8") (term "0,0"))
                                             (rule "cnf_rightDist" (formula "7") (term "0"))
                                             (rule "distr_forallAnd" (formula "7"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "commute_or_2" (formula "8") (term "0"))
                                             (rule "commute_or" (formula "8") (term "0,0"))
                                             (rule "cnf_rightDist" (formula "7") (term "0"))
                                             (rule "distr_forallAnd" (formula "7"))
                                             (rule "andLeft" (formula "7"))
                                             (rule "commute_or" (formula "8") (term "0"))
                                             (rule "arrayLengthIsAShort" (formula "38") (term "0"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "true_left" (formula "38"))
                                             (rule "arrayLengthNotNegative" (formula "38") (term "0"))
                                             (rule "arrayLengthNotNegative" (formula "37") (term "0"))
                                             (rule "arrayLengthIsAShort" (formula "38") (term "0"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "true_left" (formula "38"))
                                             (rule "ifthenelse_split" (formula "2") (term "0"))
                                             (branch "o_0.<created> = TRUE TRUE"
                                                (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "2"))
                                                 (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "63")))
                                                (rule "closeFalse" (formula "3"))
                                             )
                                             (branch "o_0.<created> = TRUE FALSE"
                                                (rule "applyEqReverse" (formula "64") (term "0") (ifseqformula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "1,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "49"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "49"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "63")))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                          )
                                       )
                                    )
                                    (branch
                                       (rule "polySimp_homoEq" (formula "6") (term "1,1,1,0"))
                                       (rule "polySimp_homoEq" (formula "5") (term "1,1,1,0"))
                                       (rule "polySimp_homoEq" (formula "13") (term "1,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,1,1,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,1,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,1,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "0,1,0,1,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1,0,1,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,1,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,1,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0,1,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,1,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0,1,1,1,0"))
                                       (rule "precOfInt" (formula "46"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,1,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "5") (term "0,1,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,1,0"))
                                       (rule "inEqSimp_ltRight" (formula "36"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "polySimp_mulAssoc" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "10") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "10") (term "0,1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "9"))
                                       (rule "mul_literals" (formula "9") (term "1,0,0"))
                                       (rule "add_literals" (formula "9") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "0,1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulAssoc" (formula "33") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "33") (term "0,1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "6") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "46") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "46") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "46") (term "0,0,1"))
                                       (rule "add_literals" (formula "46") (term "0,0,0,1"))
                                       (rule "add_zero_left" (formula "46") (term "0,0,1"))
                                       (rule "polySimp_pullOutFactor2" (formula "46") (term "0,1"))
                                       (rule "add_literals" (formula "46") (term "1,0,1"))
                                       (rule "times_zero_1" (formula "46") (term "0,1"))
                                       (rule "leq_literals" (formula "46") (term "1"))
                                        (builtin "One Step Simplification" (formula "46"))
                                       (rule "inEqSimp_leqRight" (formula "46"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0"))
                                       (rule "polySimp_sepNegMonomial" (formula "8") (term "1,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "0,1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "0,1,1,1,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "7") (term "1,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "0,1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "0,1,1,1,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "15") (term "1,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0,1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "0,1,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1"))
                                       (rule "polySimp_elimOne" (formula "27") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,1,1,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "1,1,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                       (rule "mul_literals" (formula "10") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,1,1,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,1,1,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,1,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "11") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "33") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0,0"))
                                       (rule "mul_literals" (formula "7") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_invertInEq1" (formula "1"))
                                       (rule "times_zero_2" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(2(#))"))
                                       (rule "mul_literals" (formula "10") (term "0,1,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "10") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                       (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                       (rule "add_literals" (formula "10") (term "0,0"))
                                       (rule "leq_literals" (formula "10") (term "0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "6"))
                                       (rule "applyEq" (formula "9") (term "1,1,0,0,0") (ifseqformula "2"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "1,0,0,0"))
                                       (rule "applyEq" (formula "7") (term "0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq0" (formula "7"))
                                       (rule "polySimp_pullOutFactor1" (formula "7") (term "0"))
                                       (rule "add_literals" (formula "7") (term "1,0"))
                                       (rule "times_zero_1" (formula "7") (term "0"))
                                       (rule "qeq_literals" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "1,0"))
                                       (rule "times_zero_1" (formula "3") (term "0"))
                                       (rule "leq_literals" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "applyEq" (formula "6") (term "1,1,0,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "5") (term "0") (ifseqformula "2"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1"))
                                       (rule "inEqSimp_antiSymm" (formula "10") (ifseqformula "1"))
                                       (rule "applyEq" (formula "11") (term "0") (ifseqformula "10"))
                                       (rule "qeq_literals" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "applyEqRigid" (formula "1") (term "0") (ifseqformula "10"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "9"))
                                       (rule "translateJavaShiftLeftIntZero" (formula "11") (term "0"))
                                       (rule "eqSymm" (formula "11"))
                                       (rule "applyEq" (formula "10") (term "1") (ifseqformula "9"))
                                       (rule "applyEq" (formula "4") (term "1,1,0,0,0,1,0") (ifseqformula "11"))
                                       (rule "add_literals" (formula "4") (term "1,0,0,0,1,0"))
                                       (rule "applyEq" (formula "8") (term "1,1,0,1,0") (ifseqformula "11"))
                                       (rule "add_literals" (formula "8") (term "1,0,1,0"))
                                       (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "11"))
                                       (rule "jdiv_axiom_inline" (formula "32") (term "0"))
                                       (rule "div_literals" (formula "32") (term "1,0"))
                                       (rule "qeq_literals" (formula "32") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "eqSymm" (formula "32"))
                                       (rule "applyEqRigid" (formula "4") (term "1,1,1,1,1,0") (ifseqformula "11"))
                                       (rule "add_literals" (formula "4") (term "1,1,1,1,0"))
                                       (rule "applyEqRigid" (formula "12") (term "1,1,1,1,1,0") (ifseqformula "11"))
                                       (rule "add_literals" (formula "12") (term "1,1,1,1,0"))
                                       (rule "applyEq" (formula "33") (term "1") (ifseqformula "11"))
                                       (rule "applyEqRigid" (formula "11") (term "0,0") (ifseqformula "32"))
                                       (rule "times_zero_2" (formula "11") (term "0"))
                                       (rule "equal_literals" (formula "11"))
                                       (rule "closeFalse" (formula "11"))
                                    )
                                 )
                              )
                           )
                           (branch "Null Reference (_indices = null)"
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "equal_literals" (formula "38") (term "0"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "closeTrue" (formula "38"))
                     )
                  )
               )
            )
            (branch "if x_6 false"
                (builtin "One Step Simplification" (formula "36"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "elim_double_block_2" (formula "36") (term "1"))
               (rule "blockBreak" (formula "36") (term "1"))
               (rule "lsBreak" (formula "36") (term "1"))
               (rule "assignment" (formula "36") (term "1"))
                (builtin "One Step Simplification" (formula "36"))
               (rule "blockEmpty" (formula "36") (term "1"))
                (builtin "Block Contract (Internal)" (formula "36") (newnames "exc_1,heap_Before_BLOCK,savedHeap_Before_BLOCK,o,f"))
               (branch "Validity"
                   (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "12")) (ifInst ""  (formula "9")) (ifInst ""  (formula "36")))
                   (builtin "One Step Simplification" (formula "37"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,1") (ifseqformula "23"))
                  (rule "andLeft" (formula "26"))
                  (rule "eqSymm" (formula "38") (term "0,0,1,0,1"))
                  (rule "replace_known_left" (formula "27") (term "0,0") (ifseqformula "8"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "true_left" (formula "27"))
                  (rule "variableDeclarationAssign" (formula "37") (term "1"))
                  (rule "variableDeclaration" (formula "37") (term "1") (newnames "exc_1_1"))
                  (rule "assignment" (formula "37") (term "1"))
                   (builtin "One Step Simplification" (formula "37"))
                  (rule "emptyStatement" (formula "37") (term "1"))
                  (rule "emptyStatement" (formula "37") (term "1"))
                  (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                  (rule "tryEmpty" (formula "36") (term "1"))
                  (rule "blockEmptyLabel" (formula "36") (term "1"))
                  (rule "blockEmpty" (formula "36") (term "1"))
                  (rule "methodCallEmpty" (formula "36") (term "1"))
                  (rule "emptyModality" (formula "36") (term "1"))
                  (rule "andRight" (formula "36"))
                  (branch "Case 1"
                     (rule "andRight" (formula "36"))
                     (branch "Case 1"
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "closeTrue" (formula "36"))
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "shiftLeftLowerBoundGe" (formula "4") (term "0") (ifseqformula "2") (userinteraction))
                        (rule "leq_literals" (formula "4") (term "0,0"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "polySimp_homoEq" (formula "6") (term "1,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,1,1,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0,1,1,1,0"))
                        (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,1,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,1,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "6") (term "0,1,0,1,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,1,1,1,0"))
                        (rule "translateJavaShiftLeftIntZero" (formula "4") (term "1,1"))
                        (rule "inEqSimp_gtRight" (formula "27"))
                        (rule "mul_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1,1,0"))
                        (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "2") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulAssoc" (formula "26") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                        (rule "applyEqRigid" (formula "5") (term "0,1") (ifseqformula "6"))
                        (rule "polySimp_sepNegMonomial" (formula "7") (term "1,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "0,1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "7") (term "0,1,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1"))
                        (rule "polySimp_elimOne" (formula "19") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,1,1,0"))
                        (rule "mul_literals" (formula "7") (term "0,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "7") (term "1,1,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0,0"))
                        (rule "mul_literals" (formula "7") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0,0"))
                        (rule "mul_literals" (formula "2") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0,0"))
                        (rule "mul_literals" (formula "25") (term "0,0,1,0,0,0"))
                        (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "36"))
                        (rule "add_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_contradEq3" (formula "36") (ifseqformula "1"))
                        (rule "mul_literals" (formula "36") (term "1,0,0"))
                        (rule "add_literals" (formula "36") (term "0,0"))
                        (rule "qeq_literals" (formula "36") (term "0"))
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "false_right" (formula "36"))
                        (rule "inEqSimp_contradInEq0" (formula "5") (term "1") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "5") (term "0,1"))
                         (builtin "One Step Simplification" (formula "5"))
                        (rule "notLeft" (formula "5"))
                        (rule "inEqSimp_leqRight" (formula "26"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                        (rule "leq_literals" (formula "4") (term "0"))
                         (builtin "One Step Simplification" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "nnf_imp2or" (formula "6") (term "0"))
                        (rule "nnf_imp2or" (formula "3") (term "0"))
                        (rule "nnf_imp2or" (formula "24") (term "0"))
                        (rule "nnf_notAnd" (formula "6") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "6") (term "1,0,0"))
                        (rule "times_zero_1" (formula "6") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "6") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
                        (rule "mul_literals" (formula "6") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "6") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "6") (term "0,0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "6") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "6") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "3") (term "0,0"))
                        (rule "inEqSimp_notGeq" (formula "3") (term "1,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0"))
                        (rule "mul_literals" (formula "3") (term "1,1,0,0"))
                        (rule "inEqSimp_notLeq" (formula "3") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "3") (term "0,0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "3") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "3") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,0"))
                        (rule "nnf_notAnd" (formula "24") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "24") (term "0,0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,0,1,0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0,0"))
                        (rule "add_literals" (formula "24") (term "0,0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "24") (term "0,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "24") (term "0,1,0,0,0"))
                        (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0"))
                        (rule "times_zero_1" (formula "24") (term "1,0,0,1,0,0"))
                        (rule "add_zero_right" (formula "24") (term "0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                        (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                        (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "20"))
                        (rule "true_left" (formula "20"))
                        (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "19"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "translateJavaSubInt" (formula "19") (term "3,0,1"))
                        (rule "andLeft" (formula "19"))
                        (rule "andLeft" (formula "19"))
                        (rule "andLeft" (formula "19"))
                        (rule "andLeft" (formula "19"))
                        (rule "andLeft" (formula "21"))
                        (rule "andLeft" (formula "19"))
                        (rule "andLeft" (formula "20"))
                        (rule "andLeft" (formula "19"))
                        (rule "notLeft" (formula "19"))
                        (rule "notLeft" (formula "19"))
                        (rule "polySimp_elimSub" (formula "25") (term "3,0"))
                        (rule "mul_literals" (formula "25") (term "1,3,0"))
                        (rule "polySimp_addComm0" (formula "25") (term "3,0"))
                        (rule "inEqSimp_commuteLeq" (formula "24"))
                        (rule "inEqSimp_commuteLeq" (formula "23"))
                        (rule "inEqSimp_commuteLeq" (formula "22"))
                        (rule "inEqSimp_commuteLeq" (formula "19"))
                        (rule "applyEq" (formula "22") (term "0") (ifseqformula "21"))
                        (rule "applyEq" (formula "23") (term "1") (ifseqformula "21"))
                        (rule "applyEq" (formula "25") (term "1,3,0") (ifseqformula "21"))
                        (rule "applyEq" (formula "24") (term "1") (ifseqformula "21"))
                        (rule "applyEq" (formula "3") (term "1,1,1,1,0") (ifseqformula "21"))
                        (rule "applyEq" (formula "6") (term "1,1,0,0,1,0") (ifseqformula "21"))
                        (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "20"))
                        (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "4") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0"))
                        (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "4"))
                        (rule "qeq_literals" (formula "1") (term "0"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "36"))
                     (rule "closeTrue" (formula "36"))
                  )
               )
               (branch "Precondition"
                  (rule "andRight" (formula "36"))
                  (branch "Case 1"
                     (rule "andRight" (formula "36"))
                     (branch "Case 1"
                         (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "12")))
                        (rule "closeTrue" (formula "36"))
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "36"))
                        (rule "wellFormedAnon" (formula "36"))
                        (rule "wellFormedAnonEQ" (formula "36") (term "0") (ifseqformula "23"))
                        (rule "replace_known_left" (formula "36") (term "1") (ifseqformula "6"))
                         (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "7")) (ifInst ""  (formula "22")))
                        (rule "closeTrue" (formula "36"))
                     )
                  )
                  (branch "Case 2"
                     (rule "andRight" (formula "36"))
                     (branch "Case 1"
                        (rule "andRight" (formula "36"))
                        (branch "Case 1"
                            (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "35")))
                           (rule "closeTrue" (formula "36"))
                        )
                        (branch "Case 2"
                            (builtin "One Step Simplification" (formula "36"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0") (ifseqformula "23"))
                           (rule "orRight" (formula "36"))
                           (rule "orRight" (formula "36"))
                           (rule "close" (formula "36") (ifseqformula "8"))
                        )
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "9")))
                        (rule "closeTrue" (formula "36"))
                     )
                  )
               )
               (branch "Usage"
                   (builtin "One Step Simplification" (formula "26"))
                   (builtin "One Step Simplification" (formula "37"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,1,1") (ifseqformula "23"))
                  (rule "andLeft" (formula "26"))
                  (rule "andLeft" (formula "26"))
                  (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "26"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "true_left" (formula "28"))
                  (rule "applyEqRigid" (formula "1") (term "1,1,0,1,0") (ifseqformula "27"))
                  (rule "add_literals" (formula "1") (term "1,0,1,0"))
                  (rule "applyEq" (formula "18") (term "0") (ifseqformula "19"))
                  (rule "applyEq" (formula "37") (term "0,1,1,0,0,1,0,0") (ifseqformula "26"))
                  (rule "applyEqRigid" (formula "27") (term "0") (ifseqformula "26"))
                  (rule "greater_literals" (formula "27"))
                  (rule "false_right" (formula "27"))
                  (rule "applyEq" (formula "5") (term "0,0,0,2,0,0,1,1,0") (ifseqformula "26"))
                  (rule "mul_literals" (formula "5") (term "0,0,2,0,0,1,1,0"))
                  (rule "applyEqRigid" (formula "5") (term "0,0,0,1,1,1,0") (ifseqformula "26"))
                  (rule "mul_literals" (formula "5") (term "0,0,1,1,1,0"))
                  (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "26"))
                  (rule "elim_double_block_2" (formula "36") (term "1"))
                  (rule "ifUnfold" (formula "36") (term "1") (inst "#boolv=x"))
                  (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_7"))
                  (rule "inequality_comparison_simple" (formula "36") (term "1"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "replace_known_left" (formula "36") (term "0,0,1,0") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "ifSplit" (formula "36"))
                  (branch "if x_7 true"
                      (builtin "One Step Simplification" (formula "37"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "if x_7 false"
                      (builtin "One Step Simplification" (formula "37"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "blockEmpty" (formula "36") (term "1"))
                     (rule "emptyStatement" (formula "36") (term "1"))
                     (rule "methodCallEmpty" (formula "36") (term "1"))
                     (rule "tryEmpty" (formula "36") (term "1"))
                     (rule "emptyModality" (formula "36") (term "1"))
                     (rule "andRight" (formula "36"))
                     (branch "Case 1"
                        (rule "impRight" (formula "36"))
                        (rule "andRight" (formula "37"))
                        (branch "Case 1"
                           (rule "andRight" (formula "37"))
                           (branch "Case 1"
                              (rule "andRight" (formula "37"))
                              (branch "Case 1"
                                  (builtin "One Step Simplification" (formula "1"))
                                  (builtin "One Step Simplification" (formula "37"))
                                 (rule "true_left" (formula "1"))
                                 (rule "allRight" (formula "36") (inst "sk=i_0"))
                                 (rule "impRight" (formula "36"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "polySimp_homoEq" (formula "7") (term "1,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,1,1,1,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,1,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,1,1,1,0"))
                                 (rule "add_literals" (formula "7") (term "0,0,1,1,1,0"))
                                 (rule "add_zero_left" (formula "7") (term "0,1,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "7") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "26") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "26") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "7") (term "0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "38") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "20"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                 (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
                                 (rule "polySimp_addComm1" (formula "2") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                 (rule "polySimp_invertEq" (formula "7") (term "1,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "0,1,1,1,0"))
                                 (rule "times_zero_2" (formula "7") (term "1,1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "0,1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1"))
                                 (rule "polySimp_elimOne" (formula "19") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "7") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "37") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1"))
                                 (rule "mul_literals" (formula "37") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "37") (term "1,1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                 (rule "mul_literals" (formula "2") (term "0,0,1"))
                                 (rule "pullOutSelect" (formula "37") (term "0,0") (inst "selectSK=arr_0"))
                                 (rule "applyEq" (formula "38") (term "0,1") (ifseqformula "1"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "applyEqReverse" (formula "38") (term "0,0") (ifseqformula "1"))
                                 (rule "applyEqReverse" (formula "38") (term "0,1") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                 (rule "times_zero_1" (formula "1") (term "0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "17") (term "0,0"))
                                 (rule "qeq_literals" (formula "17") (term "0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "nnf_imp2or" (formula "25") (term "0"))
                                 (rule "nnf_imp2or" (formula "8") (term "0"))
                                 (rule "nnf_imp2or" (formula "4") (term "0"))
                                 (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "25") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "25") (term "0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "25") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "25") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "25") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "25") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "25") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0"))
                                 (rule "mul_literals" (formula "25") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "8") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "8") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "8") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "8") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
                                 (rule "mul_literals" (formula "8") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "8") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "8") (term "0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "8") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "8") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "8") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "8") (term "0,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "4") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "4") (term "0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "4") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "4") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "4") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "1,0,0"))
                                 (rule "mul_literals" (formula "4") (term "1,1,0,0"))
                                 (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "20"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "translateJavaSubInt" (formula "20") (term "3,0,1"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "22"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "22"))
                                 (rule "notLeft" (formula "20"))
                                 (rule "notLeft" (formula "20"))
                                 (rule "polySimp_elimSub" (formula "26") (term "3,0"))
                                 (rule "mul_literals" (formula "26") (term "1,3,0"))
                                 (rule "polySimp_addComm0" (formula "26") (term "3,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "25"))
                                 (rule "inEqSimp_commuteLeq" (formula "24"))
                                 (rule "inEqSimp_commuteLeq" (formula "23"))
                                 (rule "inEqSimp_commuteLeq" (formula "20"))
                                 (rule "applyEq" (formula "24") (term "1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "25") (term "1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "4") (term "1,1,1,1,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "23") (term "0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "44") (term "1,1,1") (ifseqformula "22"))
                                 (rule "applyEq" (formula "26") (term "1,3,0") (ifseqformula "22"))
                                 (rule "applyEq" (formula "8") (term "1,1,0,0,1,0") (ifseqformula "22"))
                                 (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "21"))
                                 (rule "polySimp_mulComm0" (formula "6") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "6") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                 (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                 (rule "polySimp_elimOne" (formula "6") (term "0"))
                                 (rule "commute_or" (formula "9") (term "1,1,0"))
                                 (rule "commute_or" (formula "31") (term "0,0"))
                                 (rule "commute_or" (formula "9") (term "0,0"))
                                 (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "27") (term "0"))
                                 (rule "replace_known_right" (formula "27") (term "0,0,0") (ifseqformula "35"))
                                  (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "11")) (ifInst ""  (formula "28")))
                                 (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "28") (term "0") (inst "i=i") (inst "j=j"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "28") (term "0"))
                                 (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                 (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "28") (term "0,1,0"))
                                 (rule "nnf_notAnd" (formula "28") (term "0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1,0"))
                                 (rule "commute_or" (formula "4") (term "0,0"))
                                 (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "27") (term "0"))
                                 (rule "replace_known_left" (formula "27") (term "1,0") (ifseqformula "11"))
                                  (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "36")) (ifInst ""  (formula "28")))
                                 (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "28") (term "0") (inst "i=i"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "translateJavaAddInt" (formula "28") (term "0,2,1,1,0"))
                                 (rule "translateJavaSubInt" (formula "28") (term "1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "28") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "1,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "28") (term "0,2,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "28") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "28") (term "0"))
                                 (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                 (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                 (rule "cnf_rightDist" (formula "9") (term "0"))
                                 (rule "distr_forallAnd" (formula "9"))
                                 (rule "andLeft" (formula "9"))
                                 (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "28") (term "0") (inst "i=i") (inst "j=j"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "28") (term "0"))
                                 (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                                 (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                                 (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "28") (term "0,1,0"))
                                 (rule "nnf_notAnd" (formula "28") (term "0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1,0"))
                                 (rule "commute_or_2" (formula "10") (term "0"))
                                 (rule "cnf_rightDist" (formula "4") (term "0"))
                                 (rule "distr_forallAnd" (formula "4"))
                                 (rule "andLeft" (formula "4"))
                                 (rule "commute_or" (formula "30") (term "0,0,1,0"))
                                 (rule "shift_paren_or" (formula "10") (term "0"))
                                 (rule "commute_or" (formula "5") (term "0"))
                                 (rule "commute_or" (formula "11") (term "0,0"))
                                 (rule "arrayLengthIsAShort" (formula "28") (term "0"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "true_left" (formula "28"))
                                 (rule "arrayLengthNotNegative" (formula "28") (term "0"))
                                 (rule "arrayLengthNotNegative" (formula "27") (term "0"))
                                 (rule "arrayLengthIsAShort" (formula "28") (term "0"))
                                  (builtin "One Step Simplification" (formula "28"))
                                 (rule "true_left" (formula "28"))
                                 (rule "all_pull_out3" (formula "32") (term "0"))
                                 (rule "shift_paren_or" (formula "32") (term "0,0"))
                                 (rule "shift_paren_or" (formula "32") (term "0,0,0"))
                                 (rule "allLeft" (formula "36") (inst "t=i_0"))
                                 (rule "inEqSimp_contradInEq0" (formula "36") (term "1,0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "36") (term "0,0,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "1,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "36") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "36") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "36") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "36") (term "0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "36") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "36") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "36") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "36") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "36") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "36") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "pullOutSelect" (formula "36") (term "0") (inst "selectSK=arr_1"))
                                 (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "34"))
                                  (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "49")) (ifInst ""  (formula "17")))
                                 (rule "polySimp_homoEq" (formula "37"))
                                 (rule "polySimp_addComm1" (formula "37") (term "0"))
                                 (rule "elementOfArrayRangeConcrete" (formula "36") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "3")))
                                 (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0"))
                                 (rule "replace_known_left" (formula "36") (term "0,0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "applyEqReverse" (formula "37") (term "0,1,0,0") (ifseqformula "36"))
                                 (rule "hideAuxiliaryEq" (formula "36"))
                                 (rule "polySimp_addComm1" (formula "36") (term "0"))
                                 (rule "polySimp_sepNegMonomial" (formula "36"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "0"))
                                 (rule "allLeft" (formula "4") (inst "t=i_0"))
                                 (rule "replaceKnownSelect_taclet00001211010_0" (formula "4") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00001211010_1" (formula "4") (term "0,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "4") (term "1,0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "4") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "4") (term "0,0,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "4") (term "0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "4") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "4") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "4") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "4") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "inEqSimp_contradInEq1" (formula "4") (term "0") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "4") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "4"))
                                 (rule "replace_known_left" (formula "52") (term "0") (ifseqformula "4"))
                                  (builtin "One Step Simplification" (formula "52"))
                                 (rule "inEqSimp_leqRight" (formula "52"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "allLeft" (formula "7") (inst "t=i_0"))
                                 (rule "replaceKnownSelect_taclet00001211010_0" (formula "7") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00001211010_1" (formula "7") (term "0,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "7") (term "1,0") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "7") (term "0,0,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "7") (term "1,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "7") (term "0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "7") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "7") (term "0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor2b" (formula "7") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "7") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "7") (term "0,1,0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "inEqSimp_contradInEq1" (formula "7") (term "1") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "7") (term "0,1"))
                                 (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1"))
                                 (rule "mul_literals" (formula "7") (term "0,1,0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "7") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "7") (term "0,0,0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,1"))
                                 (rule "add_literals" (formula "7") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "7") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "7") (term "0,0,1"))
                                 (rule "leq_literals" (formula "7") (term "0,1"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "7") (term "0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "closeFalse" (formula "7"))
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "37"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "polySimp_homoEq" (formula "5") (term "1,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0,1,1,1,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0,1,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,1,1,1,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,1,1,1,0"))
                                 (rule "add_zero_left" (formula "5") (term "0,1,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "5") (term "0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulAssoc" (formula "24") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                                 (rule "polySimp_invertEq" (formula "5") (term "1,1,1,0"))
                                 (rule "times_zero_2" (formula "5") (term "1,1,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0,1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0,1,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "1"))
                                 (rule "polySimp_elimOne" (formula "17") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,0,1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "5") (term "0"))
                                 (rule "nnf_imp2or" (formula "1") (term "0"))
                                 (rule "nnf_imp2or" (formula "23") (term "0"))
                                 (rule "nnf_notAnd" (formula "5") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "5") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "5") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "5") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "5") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0"))
                                 (rule "mul_literals" (formula "5") (term "1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,0,1,0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "23") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "23") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0"))
                                 (rule "mul_literals" (formula "23") (term "1,1,0,0"))
                                 (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "19"))
                                 (rule "true_left" (formula "19"))
                                 (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "34"))
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "translateJavaSubInt" (formula "34") (term "3,0,1"))
                                 (rule "polySimp_elimSub" (formula "34") (term "3,0,1"))
                                 (rule "mul_literals" (formula "34") (term "1,3,0,1"))
                                 (rule "polySimp_addComm0" (formula "34") (term "3,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "34") (term "1,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "34") (term "0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "34") (term "0,1,0,0,0,0"))
                                 (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "18"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "translateJavaSubInt" (formula "18") (term "3,0,1"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "andLeft" (formula "18"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "notLeft" (formula "19"))
                                 (rule "notLeft" (formula "18"))
                                 (rule "replace_known_left" (formula "42") (term "1,1,0,0,0,0") (ifseqformula "19"))
                                  (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "31")) (ifInst ""  (formula "32")) (ifInst ""  (formula "20")))
                                 (rule "polySimp_elimSub" (formula "24") (term "3,0"))
                                 (rule "mul_literals" (formula "24") (term "1,3,0"))
                                 (rule "polySimp_addComm0" (formula "24") (term "3,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "23"))
                                 (rule "replace_known_left" (formula "42") (term "1,0") (ifseqformula "23"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "inEqSimp_commuteLeq" (formula "21"))
                                 (rule "replace_known_left" (formula "42") (term "0,1,0") (ifseqformula "21"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "inEqSimp_commuteLeq" (formula "22"))
                                 (rule "replace_known_left" (formula "42") (term "1,0") (ifseqformula "22"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "inEqSimp_commuteLeq" (formula "18"))
                                 (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "18"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "applyEq" (formula "23") (term "1") (ifseqformula "20"))
                                 (rule "applyEq" (formula "22") (term "1") (ifseqformula "20"))
                                 (rule "applyEq" (formula "42") (term "1,3,0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "24") (term "1,3,0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "1") (term "1,1,1,1,0") (ifseqformula "20"))
                                 (rule "applyEq" (formula "5") (term "1,1,0,0,1,0") (ifseqformula "20"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "19"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "3") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "commute_or" (formula "6") (term "1,1,0"))
                                 (rule "commute_or" (formula "6") (term "0,0"))
                                 (rule "commute_or" (formula "1") (term "0,0"))
                                 (rule "commute_or" (formula "29") (term "0,0"))
                                 (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "43") (term "0"))
                                 (rule "wellFormedAnon" (formula "1") (term "1,0"))
                                 (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "28"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "34"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "9")) (ifInst ""  (formula "27")) (ifInst ""  (formula "8")) (ifInst ""  (formula "44")))
                                 (rule "true_left" (formula "1"))
                                 (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "43") (term "0") (inst "i=i") (inst "j=j"))
                                  (builtin "One Step Simplification" (formula "43"))
                                 (rule "allRight" (formula "43") (inst "sk=i_0"))
                                 (rule "impRight" (formula "43"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "allRight" (formula "45") (inst "sk=j_0"))
                                 (rule "impRight" (formula "45"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_leqRight" (formula "47"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "5"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                 (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                 (rule "add_literals" (formula "5") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "4"))
                                 (rule "inEqSimp_commuteLeq" (formula "2"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                 (rule "polySimp_elimOne" (formula "5") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "pullOutSelect" (formula "1") (term "1,1") (inst "selectSK=arr_0"))
                                 (rule "simplifySelectOfAnon" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")) (ifInst ""  (formula "39")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,0") (ifseqformula "33"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=arr_1"))
                                 (rule "simplifySelectOfAnon" (formula "2"))
                                  (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "45")) (ifInst ""  (formula "40")))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "2") (term "0,0,0") (ifseqformula "34"))
                                 (rule "ifthenelse_negated" (formula "2") (term "0"))
                                 (rule "pullOutSelect" (formula "1") (term "1,0") (inst "selectSK=arr_2"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "35"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                 (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "46"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "ifthenelse_negated" (formula "1") (term "0"))
                                 (rule "pullOutSelect" (formula "3") (term "1,0") (inst "selectSK=arr_3"))
                                 (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                  (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "42")))
                                 (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0,0"))
                                 (rule "replace_known_right" (formula "3") (term "0,0,0,0,0") (ifseqformula "47"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "ifthenelse_negated" (formula "3") (term "0"))
                                 (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "34") (term "0"))
                                 (rule "replace_known_right" (formula "34") (term "0,0,0") (ifseqformula "43"))
                                  (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "17")) (ifInst ""  (formula "35")))
                                 (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "35") (term "0") (inst "i=i") (inst "j=j"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "35") (term "1,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "35") (term "0"))
                                 (rule "nnf_notAnd" (formula "35") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0"))
                                 (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                                 (rule "nnf_imp2or" (formula "35") (term "0,1,0"))
                                 (rule "nnf_notAnd" (formula "35") (term "0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1,0"))
                                 (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "34") (term "0") (inst "i=i"))
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "translateJavaAddInt" (formula "34") (term "0,2,1,1,0"))
                                 (rule "translateJavaSubInt" (formula "34") (term "1,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "34") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "34") (term "1,1,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "34") (term "0,2,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "1,1,0,0"))
                                 (rule "add_literals" (formula "34") (term "0,1,1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                 (rule "nnf_imp2or" (formula "34") (term "0"))
                                 (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                 (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0"))
                                 (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "34") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "34") (term "0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0"))
                                 (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                                 (rule "cnf_rightDist" (formula "15") (term "0"))
                                 (rule "cnf_rightDist" (formula "10") (term "0"))
                                 (rule "distr_forallAnd" (formula "15"))
                                 (rule "andLeft" (formula "15"))
                                 (rule "distr_forallAnd" (formula "10"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "commute_or_2" (formula "17") (term "0"))
                                 (rule "commute_or" (formula "11") (term "0"))
                                 (rule "commute_or" (formula "37") (term "0,0,1,0"))
                                 (rule "shift_paren_or" (formula "16") (term "0"))
                                 (rule "commute_or" (formula "17") (term "0,0"))
                                 (rule "ifthenelse_split" (formula "3") (term "0"))
                                 (branch "self.sorted_splitters.<created> = TRUE TRUE"
                                    (rule "applyEqReverse" (formula "5") (term "1,0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "4") (term "0,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "4"))
                                    (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "4"))
                                    (rule "hideAuxiliaryEq" (formula "4"))
                                    (rule "replace_known_left" (formula "2") (term "0,0,0") (ifseqformula "3"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "2"))
                                    (rule "hideAuxiliaryEq" (formula "2"))
                                    (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "2"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "arrayLengthIsAShort" (formula "32") (term "0"))
                                     (builtin "One Step Simplification" (formula "32"))
                                    (rule "true_left" (formula "32"))
                                    (rule "arrayLengthNotNegative" (formula "32") (term "0"))
                                    (rule "arrayLengthIsAShort" (formula "31") (term "0"))
                                     (builtin "One Step Simplification" (formula "31"))
                                    (rule "true_left" (formula "31"))
                                    (rule "arrayLengthNotNegative" (formula "31") (term "0"))
                                    (rule "all_pull_out3" (formula "36") (term "0"))
                                    (rule "shift_paren_or" (formula "36") (term "0,0"))
                                    (rule "shift_paren_or" (formula "36") (term "0,0,0"))
                                    (rule "allLeft" (formula "36") (inst "t=i_0"))
                                    (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0,0,0,0") (ifseqformula "5"))
                                    (rule "qeq_literals" (formula "36") (term "0,0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0,0,0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq1" (formula "36") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "36") (term "1,1,0,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "36") (term "0,0,0,0,0,0"))
                                    (rule "leq_literals" (formula "36") (term "0,0,0,0,0"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "commute_or" (formula "36") (term "0,0"))
                                    (rule "allLeft" (formula "36") (inst "t=j_0"))
                                    (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0") (ifseqformula "3"))
                                    (rule "inEqSimp_homoInEq1" (formula "36") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "36") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "36") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "36") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "36") (term "0,0,0,0"))
                                    (rule "leq_literals" (formula "36") (term "0,0,0"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "inEqSimp_contradInEq0" (formula "36") (term "1") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "36") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1"))
                                    (rule "add_literals" (formula "36") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "36") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "36") (term "0,0,1"))
                                    (rule "leq_literals" (formula "36") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "inEqSimp_contradInEq1" (formula "36") (ifseqformula "4"))
                                    (rule "andLeft" (formula "36"))
                                    (rule "inEqSimp_homoInEq1" (formula "36"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                                    (rule "add_literals" (formula "36") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "36") (term "0"))
                                    (rule "add_literals" (formula "36") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "36") (term "1,0"))
                                    (rule "add_zero_right" (formula "36") (term "0"))
                                    (rule "leq_literals" (formula "36"))
                                    (rule "closeFalse" (formula "36"))
                                 )
                                 (branch "self.sorted_splitters.<created> = TRUE FALSE"
                                    (rule "applyEqReverse" (formula "4") (term "1,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "replace_known_right" (formula "2") (term "0,0,0") (ifseqformula "43"))
                                     (builtin "One Step Simplification" (formula "2"))
                                    (rule "replace_known_right" (formula "3") (term "0,0,0") (ifseqformula "43"))
                                     (builtin "One Step Simplification" (formula "3"))
                                    (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "43"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "1,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "arrayLengthIsAShort" (formula "33") (term "0"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "true_left" (formula "33"))
                                    (rule "arrayLengthNotNegative" (formula "33") (term "0"))
                                    (rule "arrayLengthNotNegative" (formula "32") (term "0"))
                                    (rule "arrayLengthIsAShort" (formula "33") (term "0"))
                                     (builtin "One Step Simplification" (formula "33"))
                                    (rule "true_left" (formula "33"))
                                    (rule "all_pull_out3" (formula "37") (term "0"))
                                    (rule "shift_paren_or" (formula "37") (term "0,0"))
                                    (rule "shift_paren_or" (formula "37") (term "0,0,0"))
                                    (rule "ifthenelse_split" (formula "2") (term "0"))
                                    (branch " self.sorted_splitters.<created>@anon_heap_fill<<anonHeapFunction>> = TRUE TRUE"
                                       (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "2"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "allLeft" (formula "36") (inst "t=i_0"))
                                       (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "36") (term "0,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0,0,0,0") (ifseqformula "6"))
                                       (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "36") (term "0,0,0,0,1,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0,0,0,0"))
                                       (rule "add_literals" (formula "36") (term "1,1,0,0,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "36") (term "1,0,0,1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "36") (term "0,0,1,0,0,0,0"))
                                       (rule "leq_literals" (formula "36") (term "0,1,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "inEqSimp_contradInEq1" (formula "36") (term "0,0,0,0") (ifseqformula "5"))
                                       (rule "qeq_literals" (formula "36") (term "0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "commute_or" (formula "36") (term "0,0"))
                                       (rule "allLeft" (formula "36") (inst "t=j_0"))
                                       (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "36") (term "0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "36") (term "1,0") (ifseqformula "4"))
                                       (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "36") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "36") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "36") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "36") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "36") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "36") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "36") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                       (rule "polySimp_addComm0" (formula "36") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0"))
                                       (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "36") (term "0,0,0"))
                                       (rule "leq_literals" (formula "36") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "onlyCreatedObjectsAreReferencedFinal" (formula "50") (term "0") (ifseqformula "16") (ifseqformula "17"))
                                       (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "46"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "48")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch " self.sorted_splitters.<created>@anon_heap_fill<<anonHeapFunction>> = TRUE FALSE"
                                       (rule "applyEqReverse" (formula "3") (term "0") (ifseqformula "2"))
                                       (rule "hideAuxiliaryEq" (formula "2"))
                                       (rule "replace_known_right" (formula "1") (term "0,0") (ifseqformula "43"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "1,1") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "allLeft" (formula "35") (inst "t=i_0"))
                                       (rule "inEqSimp_homoInEq1" (formula "35") (term "1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "35") (term "0,1,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0,0"))
                                       (rule "mul_literals" (formula "35") (term "0,1,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0,0,0,0") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "35") (term "0,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "inEqSimp_contradInEq1" (formula "35") (term "0,0,0,0") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "35") (term "0,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "35") (term "0,0,0,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "35") (term "1,1,0,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "35") (term "0,0,0,0,0,0"))
                                       (rule "leq_literals" (formula "35") (term "0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "commute_or" (formula "35") (term "0,0"))
                                       (rule "allLeft" (formula "35") (inst "t=j_0"))
                                       (rule "inEqSimp_homoInEq1" (formula "35") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "35") (term "0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,1,0"))
                                       (rule "mul_literals" (formula "35") (term "0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "35") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "35") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "35") (term "1,0,0,1,0"))
                                       (rule "add_literals" (formula "35") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "35") (term "0,1,0"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "inEqSimp_contradInEq1" (formula "35") (term "0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                       (rule "polySimp_addComm0" (formula "35") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                                       (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "35") (term "0,0,0"))
                                       (rule "leq_literals" (formula "35") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "35"))
                                       (rule "onlyCreatedObjectsAreReferencedFinal" (formula "51") (term "0") (ifseqformula "15") (ifseqformula "16"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "47"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferencedFinal" (formula "53") (term "0") (ifseqformula "16") (ifseqformula "17"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "49"))
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                              )
                           )
                           (branch "Case 2"
                               (builtin "One Step Simplification" (formula "1"))
                               (builtin "One Step Simplification" (formula "37"))
                              (rule "closeTrue" (formula "37"))
                           )
                        )
                        (branch "Case 2"
                            (builtin "One Step Simplification" (formula "1"))
                            (builtin "One Step Simplification" (formula "37"))
                           (rule "true_left" (formula "1"))
                           (rule "allRight" (formula "36") (inst "sk=f_0"))
                           (rule "allRight" (formula "36") (inst "sk=o_0"))
                           (rule "orRight" (formula "36"))
                           (rule "orRight" (formula "36"))
                           (rule "eqSymm" (formula "38"))
                           (rule "polySimp_homoEq" (formula "5") (term "1,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,1,1,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0,1,1,1,0"))
                           (rule "mul_literals" (formula "5") (term "0,1,0,1,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,1,1,1,0"))
                           (rule "add_literals" (formula "5") (term "0,0,1,1,1,0"))
                           (rule "add_zero_left" (formula "5") (term "0,1,1,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulAssoc" (formula "24") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulAssoc" (formula "5") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "5") (term "0,1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "5") (term "0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0,0"))
                           (rule "polySimp_invertEq" (formula "5") (term "1,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "0,1,1,1,0"))
                           (rule "times_zero_2" (formula "5") (term "1,1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "5") (term "0,1,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                           (rule "polySimp_mulLiterals" (formula "17") (term "1"))
                           (rule "polySimp_elimOne" (formula "17") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "23") (term "0,1,0,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,0,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,1,1,0"))
                           (rule "mul_literals" (formula "5") (term "0,1,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,1,0,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "5") (term "0,1,0,0,0"))
                           (rule "mul_literals" (formula "5") (term "0,0,1,0,0,0"))
                           (rule "pullOutSelect" (formula "37") (term "0") (inst "selectSK=f_0_0"))
                           (rule "simplifySelectOfAnon" (formula "1"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "22"))
                           (rule "eqSymm" (formula "38"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "23"))
                            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                           (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                           (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "37"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "nnf_imp2or" (formula "24") (term "0"))
                           (rule "nnf_imp2or" (formula "2") (term "0"))
                           (rule "nnf_imp2or" (formula "6") (term "0"))
                           (rule "nnf_notAnd" (formula "24") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "24") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "24") (term "0,0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "24") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "24") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "24") (term "0,1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "24") (term "1,0,0"))
                           (rule "mul_literals" (formula "24") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "24") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0"))
                           (rule "mul_literals" (formula "24") (term "1,1,0,0"))
                           (rule "nnf_notAnd" (formula "2") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "2") (term "1,0,0"))
                           (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "2") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1,0,0"))
                           (rule "mul_literals" (formula "2") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "2") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "2") (term "0,0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "2") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "2") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "6") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "6") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "0,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "6") (term "0,0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "6") (term "0,0,0,0,0,0"))
                           (rule "add_literals" (formula "6") (term "0,0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "6") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "6") (term "1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "6") (term "0,1,0,0,0"))
                           (rule "inEqSimp_notGeq" (formula "6") (term "1,0,0"))
                           (rule "mul_literals" (formula "6") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
                           (rule "mul_literals" (formula "6") (term "1,1,0,0"))
                           (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "19"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "translateJavaSubInt" (formula "19") (term "3,0,1"))
                           (rule "andLeft" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "andLeft" (formula "20"))
                           (rule "andLeft" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "andLeft" (formula "19"))
                           (rule "andLeft" (formula "21"))
                           (rule "notLeft" (formula "19"))
                           (rule "notLeft" (formula "19"))
                           (rule "polySimp_elimSub" (formula "25") (term "3,0"))
                           (rule "mul_literals" (formula "25") (term "1,3,0"))
                           (rule "polySimp_addComm0" (formula "25") (term "3,0"))
                           (rule "inEqSimp_commuteLeq" (formula "24"))
                           (rule "inEqSimp_commuteLeq" (formula "23"))
                           (rule "inEqSimp_commuteLeq" (formula "22"))
                           (rule "inEqSimp_commuteLeq" (formula "19"))
                           (rule "applyEq" (formula "2") (term "1,1,1,1,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "24") (term "1") (ifseqformula "21"))
                           (rule "applyEq" (formula "25") (term "1,3,0") (ifseqformula "21"))
                           (rule "applyEq" (formula "23") (term "1") (ifseqformula "21"))
                           (rule "applyEq" (formula "22") (term "0") (ifseqformula "21"))
                           (rule "applyEq" (formula "6") (term "1,1,0,0,1,0") (ifseqformula "21"))
                           (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "20"))
                           (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "4") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                           (rule "polySimp_elimOne" (formula "4") (term "0"))
                           (rule "commute_or" (formula "7") (term "1,1,0"))
                           (rule "commute_or" (formula "30") (term "0,0"))
                           (rule "commute_or" (formula "2") (term "0,0"))
                           (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "26") (term "0"))
                           (rule "replace_known_right" (formula "26") (term "0,0,0") (ifseqformula "34"))
                            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "9")) (ifInst ""  (formula "27")))
                           (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "27") (term "0") (inst "i=i") (inst "j=j"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1,0"))
                           (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                           (rule "nnf_imp2or" (formula "27") (term "0"))
                           (rule "nnf_notAnd" (formula "27") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                           (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                           (rule "nnf_imp2or" (formula "27") (term "0,1,0"))
                           (rule "nnf_notAnd" (formula "27") (term "0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1,0"))
                           (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1,0"))
                           (rule "commute_or" (formula "7") (term "0,0"))
                           (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "26") (term "0"))
                           (rule "replace_known_left" (formula "26") (term "1,0") (ifseqformula "9"))
                            (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "35")) (ifInst ""  (formula "27")))
                           (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "27") (term "0") (inst "i=i"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "translateJavaSubInt" (formula "27") (term "1,1,0,0"))
                           (rule "translateJavaAddInt" (formula "27") (term "0,2,1,1,0"))
                           (rule "polySimp_elimSub" (formula "27") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "27") (term "1,1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "27") (term "0,2,1,1,0"))
                           (rule "polySimp_addComm1" (formula "27") (term "1,1,0,0"))
                           (rule "add_literals" (formula "27") (term "0,1,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                           (rule "nnf_imp2or" (formula "27") (term "0"))
                           (rule "nnf_notAnd" (formula "27") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                           (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                           (rule "cnf_rightDist" (formula "2") (term "0"))
                           (rule "distr_forallAnd" (formula "2"))
                           (rule "andLeft" (formula "2"))
                           (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "27") (term "0"))
                           (rule "replace_known_left" (formula "27") (term "1,0") (ifseqformula "10"))
                            (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "37")) (ifInst ""  (formula "28")))
                           (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "28") (term "0") (inst "i=i") (inst "j=j"))
                            (builtin "One Step Simplification" (formula "28"))
                           (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1,0"))
                           (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,1,0"))
                           (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1,0"))
                           (rule "nnf_imp2or" (formula "28") (term "0"))
                           (rule "nnf_notAnd" (formula "28") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0"))
                           (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0"))
                           (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                           (rule "nnf_imp2or" (formula "28") (term "0,1,0"))
                           (rule "nnf_notAnd" (formula "28") (term "0,0,1,0"))
                           (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,1,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1,0"))
                           (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1,0"))
                           (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1,0"))
                           (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "27") (term "0") (inst "i=i"))
                            (builtin "One Step Simplification" (formula "27"))
                           (rule "translateJavaSubInt" (formula "27") (term "1,1,0,0"))
                           (rule "translateJavaAddInt" (formula "27") (term "0,2,1,1,0"))
                           (rule "polySimp_elimSub" (formula "27") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "27") (term "1,1,1,0,0"))
                           (rule "polySimp_addComm0" (formula "27") (term "0,2,1,1,0"))
                           (rule "polySimp_addComm1" (formula "27") (term "1,1,0,0"))
                           (rule "add_literals" (formula "27") (term "0,1,1,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                           (rule "nnf_imp2or" (formula "27") (term "0"))
                           (rule "nnf_notAnd" (formula "27") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0"))
                           (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                           (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0"))
                           (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                           (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "27") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0"))
                           (rule "commute_or" (formula "3") (term "0"))
                           (rule "cnf_rightDist" (formula "8") (term "0"))
                           (rule "commute_or" (formula "28") (term "0,0,1,0"))
                           (rule "cut_direct" (formula "47") (term "0,0"))
                           (branch "CUT: o_0 = null TRUE"
                               (builtin "One Step Simplification" (formula "48"))
                              (rule "false_right" (formula "48"))
                              (rule "replace_known_left" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")))
                              (rule "closeFalse" (formula "2"))
                           )
                           (branch "CUT: o_0 = null FALSE"
                               (builtin "One Step Simplification" (formula "48"))
                              (rule "notRight" (formula "48"))
                              (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "48")) (ifInst ""  (formula "49")))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                     )
                     (branch "Case 2"
                        (rule "impRight" (formula "36"))
                        (rule "andRight" (formula "37"))
                        (branch "Case 1"
                           (rule "andRight" (formula "37"))
                           (branch "Case 1"
                              (rule "andRight" (formula "37"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "37"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "37"))
                                    (branch "Case 1"
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "Case 2"
                                       (rule "andRight" (formula "37"))
                                       (branch "Case 1"
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "Case 2"
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "Case 2"
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "Case 2"
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
               )
            )
         )
      )
      (branch "Exceptional Post (fill)"
          (builtin "One Step Simplification" (formula "24"))
          (builtin "One Step Simplification" (formula "14"))
         (rule "translateJavaSubInt" (formula "14") (term "2,1,0,0"))
         (rule "andLeft" (formula "14"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "15") (term "1,0") (ifseqformula "14"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "15"))
         (rule "notLeft" (formula "15"))
         (rule "close" (formula "18") (ifseqformula "17"))
      )
      (branch "Pre (fill)"
          (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "19")) (ifInst ""  (formula "1")) (ifInst ""  (formula "19")) (ifInst ""  (formula "5")))
         (rule "leq_literals" (formula "22") (term "0,0"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "inEqSimp_commuteLeq" (formula "22") (term "1"))
         (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
         (rule "times_zero_2" (formula "22") (term "1,0,0"))
         (rule "add_zero_right" (formula "22") (term "0,0"))
         (rule "applyEq" (formula "22") (term "0,1") (ifseqformula "10"))
         (rule "inEqSimp_homoInEq1" (formula "22") (term "1"))
         (rule "polySimp_pullOutFactor1" (formula "22") (term "0,1"))
         (rule "add_literals" (formula "22") (term "1,0,1"))
         (rule "times_zero_1" (formula "22") (term "0,1"))
         (rule "leq_literals" (formula "22") (term "1"))
          (builtin "One Step Simplification" (formula "22"))
         (rule "inEqSimp_geqRight" (formula "22"))
         (rule "times_zero_1" (formula "1") (term "1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_rightDist" (formula "1") (term "1"))
         (rule "mul_literals" (formula "1") (term "0,1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
         (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "1"))
         (rule "andLeft" (formula "9"))
         (rule "inEqSimp_homoInEq1" (formula "9"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0"))
         (rule "mul_literals" (formula "9") (term "0,1,0"))
         (rule "polySimp_addAssoc" (formula "9") (term "0"))
         (rule "polySimp_addComm0" (formula "9") (term "0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "9") (term "0"))
         (rule "add_literals" (formula "9") (term "1,1,0"))
         (rule "times_zero_1" (formula "9") (term "1,0"))
         (rule "add_zero_right" (formula "9") (term "0"))
         (rule "leq_literals" (formula "9"))
         (rule "closeFalse" (formula "9"))
      )
   )
)
(branch "Null Reference (_indices = null)"
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
   (rule "closeFalse" (formula "1"))
)
)
}
