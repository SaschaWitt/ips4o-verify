\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Sep 02 11:23:36 CEST 2022
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_OFF
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:off , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , finalFields-finalFields\\:immutable , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsCheckingOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:off , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../src";

\proofObligation "#Proof Obligation Settings
#Fri Sep 02 11:23:36 CEST 2022
contract=de.wiesler.Tree[de.wiesler.Tree\\:\\:treeSearchInvariantLemmaImpl(int,int,int,int,int)].JML normal_behavior operation contract.0
name=de.wiesler.Tree[de.wiesler.Tree\\:\\:treeSearchInvariantLemmaImpl(int,int,int,int,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "1" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "2" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "3" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "4" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "5" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "6" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "7" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "8" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "9" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "10" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))

(autoModeTime "263866")

(branch "dummy ID"
(rule "expand_inInt" (formula "1") (term "1,0,1,0,0,0") (newnames "heapAtPre,o,f"))
(rule "expand_inInt" (formula "1") (term "1,1,0,0,0"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0,1,0,0,0"))
(rule "expand_inInt" (formula "1") (term "1,0,0,1,0,0,0"))
(rule "expand_inInt" (formula "1") (term "0,0,0,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,0,0,0,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,0,0,0,0,1,0,0,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "16"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "18"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "6"))
(rule "eqSymm" (formula "24") (term "0,0,1,0,1"))
(rule "translateJavaDivInt" (formula "24") (term "4,0,0,0,0,0,1"))
(rule "translateJavaSubInt" (formula "24") (term "0,2,0,0,3,0,0,0,0,0,1"))
(rule "translateJavaSubInt" (formula "24") (term "2,3,0,0,0,0,0,1"))
(rule "translateJavaAddInt" (formula "24") (term "2,0,0,0,0,0,1"))
(rule "translateJavaAddInt" (formula "24") (term "1,0,0,0,0,0,1"))
(rule "eqSymm" (formula "19"))
(rule "translateJavaDivInt" (formula "24") (term "1,0,2,0,0,3,0,0,0,0,0,1"))
(rule "translateJavaDivInt" (formula "24") (term "1,2,3,0,0,0,0,0,1"))
(rule "translateJavaMulInt" (formula "24") (term "0,1,0,0,0,0,0,1"))
(rule "translateJavaSubInt" (formula "19") (term "1,0"))
(rule "polySimp_elimSub" (formula "24") (term "0,2,0,0,3,0,0,0,0,0,1"))
(rule "polySimp_elimSub" (formula "24") (term "2,3,0,0,0,0,0,1"))
(rule "polySimp_elimSub" (formula "19") (term "1,0"))
(rule "polySimp_mulComm0" (formula "24") (term "0,1,0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "24") (term "2,0,0,0,0,0,1"))
(rule "polySimp_addComm0" (formula "19") (term "1,0"))
(rule "inEqSimp_commuteLeq" (formula "13"))
(rule "inEqSimp_commuteLeq" (formula "11"))
(rule "inEqSimp_commuteLeq" (formula "17"))
(rule "inEqSimp_commuteLeq" (formula "9"))
(rule "inEqSimp_commuteLeq" (formula "5"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "assignment" (formula "24") (term "1"))
 (builtin "One Step Simplification" (formula "24"))
(rule "methodBodyExpand" (formula "24") (term "1") (newnames "heapBefore_treeSearchInvariantLemmaImpl,savedHeapBefore_treeSearchInvariantLemmaImpl"))
 (builtin "One Step Simplification" (formula "24"))
 (builtin "Block Contract (Internal)" (formula "24") (newnames "result_21,exc_25,heap_Before_BLOCK,savedHeap_Before_BLOCK,o,f"))
(branch "Validity"
    (builtin "One Step Simplification" (formula "25"))
    (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "14")) (ifInst ""  (formula "1")) (ifInst ""  (formula "24")) (ifInst ""  (formula "2")) (ifInst ""  (formula "3")))
   (rule "true_left" (formula "23"))
   (rule "eqSymm" (formula "24") (term "0,0,1,0,1"))
   (rule "inEqSimp_commuteLeq" (formula "24") (term "1,0,0,1"))
   (rule "variableDeclarationAssign" (formula "24") (term "1"))
   (rule "variableDeclaration" (formula "24") (term "1") (newnames "exc_25_1"))
   (rule "assignment" (formula "24") (term "1"))
    (builtin "One Step Simplification" (formula "24"))
   (rule "emptyStatement" (formula "24") (term "1"))
   (rule "emptyStatement" (formula "24") (term "1"))
   (rule "tryEmpty" (formula "24") (term "1"))
   (rule "blockEmptyLabel" (formula "24") (term "1"))
   (rule "blockEmpty" (formula "24") (term "1"))
   (rule "methodCallEmpty" (formula "24") (term "1"))
   (rule "emptyModality" (formula "24") (term "1"))
   (rule "andRight" (formula "24"))
   (branch "Case 1"
      (rule "andRight" (formula "24"))
      (branch "Case 1"
          (builtin "One Step Simplification" (formula "24"))
         (rule "closeTrue" (formula "24"))
      )
      (branch "Case 2"
          (builtin "One Step Simplification" (formula "24"))
         (rule "powPositive" (formula "24") (term "0") (userinteraction))
         (rule "greater_literals" (formula "1") (term "1,0"))
          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")) (ifInst ""  (formula "25")))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "Case 2"
       (builtin "One Step Simplification" (formula "24"))
      (rule "closeTrue" (formula "24"))
   )
)
(branch "Precondition"
   (rule "andRight" (formula "24"))
   (branch "Case 1"
      (rule "andRight" (formula "24"))
      (branch "Case 1"
          (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "14")))
         (rule "closeTrue" (formula "24"))
      )
      (branch "Case 2"
          (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "1")))
         (rule "closeTrue" (formula "24"))
      )
   )
   (branch "Case 2"
      (rule "andRight" (formula "24"))
      (branch "Case 1"
         (rule "andRight" (formula "24"))
         (branch "Case 1"
             (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "23")))
            (rule "closeTrue" (formula "24"))
         )
         (branch "Case 2"
             (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "2")))
            (rule "closeTrue" (formula "24"))
         )
      )
      (branch "Case 2"
          (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "3")))
         (rule "closeTrue" (formula "24"))
      )
   )
)
(branch "Usage"
    (builtin "One Step Simplification" (formula "23"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "andLeft" (formula "23"))
   (rule "andLeft" (formula "23"))
   (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "23"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "true_left" (formula "25"))
   (rule "inEqSimp_commuteLeq" (formula "24"))
   (rule "elim_double_block_2" (formula "26") (term "1"))
   (rule "ifUnfold" (formula "26") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "26") (term "1") (newnames "x"))
   (rule "inequality_comparison_simple" (formula "26") (term "1"))
    (builtin "One Step Simplification" (formula "26"))
   (rule "replace_known_left" (formula "26") (term "0,0,1,0") (ifseqformula "23"))
    (builtin "One Step Simplification" (formula "26"))
   (rule "ifSplit" (formula "26"))
   (branch "if x true"
       (builtin "One Step Simplification" (formula "27"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x false"
       (builtin "One Step Simplification" (formula "27"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "blockEmpty" (formula "26") (term "1"))
       (builtin "Block Contract (Internal)" (formula "26") (newnames "result_22,exc_26,heap_Before_BLOCK_0,savedHeap_Before_BLOCK_0,o,f"))
      (branch "Validity"
          (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "14")) (ifInst ""  (formula "1")) (ifInst ""  (formula "26")) (ifInst ""  (formula "2")) (ifInst ""  (formula "3")))
          (builtin "One Step Simplification" (formula "27"))
         (rule "true_left" (formula "25"))
         (rule "eqSymm" (formula "26") (term "0,0,1,0,1"))
         (rule "translateJavaAddInt" (formula "26") (term "1,0,1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1"))
         (rule "polySimp_addComm0" (formula "26") (term "1,0,1,0,0,1"))
         (rule "variableDeclarationAssign" (formula "26") (term "1"))
         (rule "variableDeclaration" (formula "26") (term "1") (newnames "exc_26_1"))
         (rule "assignment" (formula "26") (term "1"))
          (builtin "One Step Simplification" (formula "26"))
         (rule "emptyStatement" (formula "26") (term "1"))
         (rule "emptyStatement" (formula "26") (term "1"))
         (rule "tryEmpty" (formula "26") (term "1"))
         (rule "blockEmptyLabel" (formula "26") (term "1"))
         (rule "blockEmpty" (formula "26") (term "1"))
         (rule "methodCallEmpty" (formula "26") (term "1"))
         (rule "emptyModality" (formula "26") (term "1"))
         (rule "andRight" (formula "26"))
         (branch "Case 1"
            (rule "andRight" (formula "26"))
            (branch "Case 1"
                (builtin "One Step Simplification" (formula "26"))
               (rule "closeTrue" (formula "26"))
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "26"))
               (rule "powSplitFactor" (formula "26") (term "0") (userinteraction))
               (rule "greater_literals" (formula "1") (term "1,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "polySimp_elimSub" (formula "1") (term "1,1,1,1"))
               (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
               (rule "eqSymm" (formula "1") (term "1"))
               (rule "polySimp_addComm1" (formula "1") (term "1,0,0,1"))
               (rule "add_literals" (formula "1") (term "0,1,0,0,1"))
               (rule "add_zero_left" (formula "1") (term "1,0,0,1"))
               (rule "eqSymm" (formula "1") (term "1"))
               (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "27"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "notLeft" (formula "1"))
               (rule "inEqSimp_ltToLeq" (formula "18"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "18") (term "0"))
               (rule "inEqSimp_geqRight" (formula "25"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "19"))
               (rule "polySimp_mulLiterals" (formula "19") (term "0"))
               (rule "polySimp_elimOne" (formula "19") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "mul_literals" (formula "1") (term "1"))
               (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "1"))
               (rule "leq_literals" (formula "7") (term "0"))
                (builtin "One Step Simplification" (formula "7"))
               (rule "true_left" (formula "7"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "17"))
               (rule "qeq_literals" (formula "1") (term "0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Case 2"
             (builtin "One Step Simplification" (formula "26"))
            (rule "closeTrue" (formula "26"))
         )
      )
      (branch "Precondition"
         (rule "andRight" (formula "26"))
         (branch "Case 1"
            (rule "andRight" (formula "26"))
            (branch "Case 1"
                (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "14")))
               (rule "closeTrue" (formula "26"))
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "1")))
               (rule "closeTrue" (formula "26"))
            )
         )
         (branch "Case 2"
            (rule "andRight" (formula "26"))
            (branch "Case 1"
               (rule "andRight" (formula "26"))
               (branch "Case 1"
                   (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "25")))
                  (rule "closeTrue" (formula "26"))
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "2")))
                  (rule "closeTrue" (formula "26"))
               )
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "3")))
               (rule "closeTrue" (formula "26"))
            )
         )
      )
      (branch "Usage"
          (builtin "One Step Simplification" (formula "27"))
          (builtin "One Step Simplification" (formula "25"))
         (rule "andLeft" (formula "25"))
         (rule "andLeft" (formula "25"))
         (rule "translateJavaAddInt" (formula "26") (term "1,0"))
         (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "25"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "true_left" (formula "27"))
         (rule "polySimp_mulComm0" (formula "26") (term "1"))
         (rule "polySimp_addComm0" (formula "26") (term "1,0"))
         (rule "elim_double_block_2" (formula "28") (term "1"))
         (rule "ifUnfold" (formula "28") (term "1") (inst "#boolv=x"))
         (rule "variableDeclaration" (formula "28") (term "1") (newnames "x_1"))
         (rule "inequality_comparison_simple" (formula "28") (term "1"))
          (builtin "One Step Simplification" (formula "28"))
         (rule "replace_known_left" (formula "28") (term "0,0,1,0") (ifseqformula "25"))
          (builtin "One Step Simplification" (formula "28"))
         (rule "ifSplit" (formula "28"))
         (branch "if x_1 true"
             (builtin "One Step Simplification" (formula "29"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "if x_1 false"
             (builtin "One Step Simplification" (formula "29"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "blockEmpty" (formula "28") (term "1"))
             (builtin "Block Contract (Internal)" (formula "28") (newnames "result_23,exc_27,heap_Before_BLOCK_1,savedHeap_Before_BLOCK_1,o,f"))
            (branch "Validity"
                (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "14")) (ifInst ""  (formula "1")) (ifInst ""  (formula "28")) (ifInst ""  (formula "2")) (ifInst ""  (formula "3")))
                (builtin "One Step Simplification" (formula "29"))
               (rule "true_left" (formula "27"))
               (rule "eqSymm" (formula "28") (term "0,0,1,0,1"))
               (rule "translateJavaAddInt" (formula "28") (term "1,0,1,0,0,1"))
               (rule "translateJavaAddInt" (formula "28") (term "1,1,1,1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1"))
               (rule "polySimp_addComm0" (formula "28") (term "1,0,1,0,0,1"))
               (rule "eqSymm" (formula "28") (term "1,0,0,1"))
               (rule "polySimp_addComm0" (formula "28") (term "1,0,0,1,0,0,1"))
               (rule "eqSymm" (formula "28") (term "1,0,0,1"))
               (rule "variableDeclarationAssign" (formula "28") (term "1"))
               (rule "variableDeclaration" (formula "28") (term "1") (newnames "exc_27_1"))
               (rule "assignment" (formula "28") (term "1"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "emptyStatement" (formula "28") (term "1"))
               (rule "emptyStatement" (formula "28") (term "1"))
               (rule "tryEmpty" (formula "28") (term "1"))
               (rule "blockEmptyLabel" (formula "28") (term "1"))
               (rule "blockEmpty" (formula "28") (term "1"))
               (rule "methodCallEmpty" (formula "28") (term "1"))
               (rule "emptyModality" (formula "28") (term "1"))
               (rule "andRight" (formula "28"))
               (branch "Case 1"
                  (rule "andRight" (formula "28"))
                  (branch "Case 1"
                      (builtin "One Step Simplification" (formula "28"))
                     (rule "closeTrue" (formula "28"))
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "28"))
                     (rule "powSplitFactor" (formula "28") (term "0") (userinteraction))
                     (rule "greater_literals" (formula "1") (term "1,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "polySimp_elimSub" (formula "1") (term "1,1,1,1"))
                     (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                     (rule "eqSymm" (formula "1") (term "1"))
                     (rule "polySimp_addComm1" (formula "1") (term "1,0,0,1"))
                     (rule "add_literals" (formula "1") (term "0,1,0,0,1"))
                     (rule "eqSymm" (formula "1") (term "1"))
                     (rule "replace_known_right" (formula "1") (term "1") (ifseqformula "29"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "notLeft" (formula "1"))
                     (rule "inEqSimp_ltToLeq" (formula "18"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "18") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "27"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "applyEq" (formula "29") (term "0,1") (ifseqformula "27"))
                     (rule "polySimp_mulLiterals" (formula "29") (term "1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                     (rule "polySimp_elimOne" (formula "19") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "18") (term "0"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "closeFalse" (formula "18"))
                  )
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "closeTrue" (formula "28"))
               )
            )
            (branch "Precondition"
               (rule "andRight" (formula "28"))
               (branch "Case 1"
                  (rule "andRight" (formula "28"))
                  (branch "Case 1"
                      (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "14")))
                     (rule "closeTrue" (formula "28"))
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "1")))
                     (rule "closeTrue" (formula "28"))
                  )
               )
               (branch "Case 2"
                  (rule "andRight" (formula "28"))
                  (branch "Case 1"
                     (rule "andRight" (formula "28"))
                     (branch "Case 1"
                         (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "27")))
                        (rule "closeTrue" (formula "28"))
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "2")))
                        (rule "closeTrue" (formula "28"))
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "3")))
                     (rule "closeTrue" (formula "28"))
                  )
               )
            )
            (branch "Usage"
                (builtin "One Step Simplification" (formula "27"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "andLeft" (formula "27"))
               (rule "andLeft" (formula "27"))
               (rule "translateJavaAddInt" (formula "28") (term "1,0"))
               (rule "translateJavaAddInt" (formula "28") (term "1,1,1"))
               (rule "replace_known_left" (formula "29") (term "0") (ifseqformula "27"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "true_left" (formula "29"))
               (rule "polySimp_mulComm0" (formula "28") (term "1"))
               (rule "polySimp_addComm0" (formula "28") (term "1,0"))
               (rule "eqSymm" (formula "28"))
               (rule "polySimp_addComm0" (formula "28") (term "1,0,0"))
               (rule "eqSymm" (formula "28"))
               (rule "applyEq" (formula "28") (term "0,1") (ifseqformula "26"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1"))
               (rule "elim_double_block_2" (formula "30") (term "1"))
               (rule "ifUnfold" (formula "30") (term "1") (inst "#boolv=x"))
               (rule "variableDeclaration" (formula "30") (term "1") (newnames "x_2"))
               (rule "inequality_comparison_simple" (formula "30") (term "1"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "replace_known_left" (formula "30") (term "0,0,1,0") (ifseqformula "27"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "ifSplit" (formula "30"))
               (branch "if x_2 true"
                   (builtin "One Step Simplification" (formula "31"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "if x_2 false"
                   (builtin "One Step Simplification" (formula "31"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "blockEmpty" (formula "30") (term "1"))
                   (builtin "Block Contract (Internal)" (formula "30") (newnames "result_0,exc_0,heap_Before_BLOCK_2,savedHeap_Before_BLOCK_2,o,f"))
                  (branch "Validity"
                      (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "14")) (ifInst ""  (formula "1")) (ifInst ""  (formula "30")) (ifInst ""  (formula "2")) (ifInst ""  (formula "3")))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "true_left" (formula "29"))
                     (rule "eqSymm" (formula "30") (term "0,0,1,0,1"))
                     (rule "translateJavaAddInt" (formula "30") (term "1,0,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "30") (term "1,0,1,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "30") (term "1,0,0,1"))
                     (rule "variableDeclarationAssign" (formula "30") (term "1"))
                     (rule "variableDeclaration" (formula "30") (term "1") (newnames "exc_0_1"))
                     (rule "assignment" (formula "30") (term "1"))
                      (builtin "One Step Simplification" (formula "30"))
                     (rule "emptyStatement" (formula "30") (term "1"))
                     (rule "emptyStatement" (formula "30") (term "1"))
                     (rule "tryEmpty" (formula "30") (term "1"))
                     (rule "blockEmptyLabel" (formula "30") (term "1"))
                     (rule "blockEmpty" (formula "30") (term "1"))
                     (rule "methodCallEmpty" (formula "30") (term "1"))
                     (rule "emptyModality" (formula "30") (term "1"))
                     (rule "andRight" (formula "30"))
                     (branch "Case 1"
                        (rule "andRight" (formula "30"))
                        (branch "Case 1"
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "closeTrue" (formula "30"))
                        )
                        (branch "Case 2"
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "geq_to_leq" (formula "30") (userinteraction))
                           (rule "powMonoConcrete" (formula "30"))
                           (rule "greater_literals" (formula "30") (term "1"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "inEqSimp_ltToLeq" (formula "18"))
                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "18") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0"))
                           (rule "mul_literals" (formula "30") (term "1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                           (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                           (rule "polySimp_elimOne" (formula "18") (term "0"))
                           (rule "replace_known_left" (formula "30") (term "1") (ifseqformula "18"))
                            (builtin "One Step Simplification" (formula "30"))
                           (rule "inEqSimp_geqRight" (formula "30"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "18"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "30"))
                        (rule "closeTrue" (formula "30"))
                     )
                  )
                  (branch "Precondition"
                     (rule "andRight" (formula "30"))
                     (branch "Case 1"
                        (rule "andRight" (formula "30"))
                        (branch "Case 1"
                            (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "14")))
                           (rule "closeTrue" (formula "30"))
                        )
                        (branch "Case 2"
                            (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "1")))
                           (rule "closeTrue" (formula "30"))
                        )
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "30"))
                        (branch "Case 1"
                           (rule "andRight" (formula "30"))
                           (branch "Case 1"
                               (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "29")))
                              (rule "closeTrue" (formula "30"))
                           )
                           (branch "Case 2"
                               (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "2")))
                              (rule "closeTrue" (formula "30"))
                           )
                        )
                        (branch "Case 2"
                            (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "3")))
                           (rule "closeTrue" (formula "30"))
                        )
                     )
                  )
                  (branch "Usage"
                      (builtin "One Step Simplification" (formula "29"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "andLeft" (formula "29"))
                     (rule "andLeft" (formula "29"))
                     (rule "translateJavaAddInt" (formula "30") (term "1,0"))
                     (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "29"))
                      (builtin "One Step Simplification" (formula "31"))
                     (rule "true_left" (formula "31"))
                     (rule "polySimp_addComm0" (formula "30") (term "1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "30"))
                     (rule "applyEq" (formula "30") (term "1") (ifseqformula "26"))
                     (rule "elim_double_block_2" (formula "32") (term "1"))
                     (rule "ifUnfold" (formula "32") (term "1") (inst "#boolv=x"))
                     (rule "variableDeclaration" (formula "32") (term "1") (newnames "x_3"))
                     (rule "inequality_comparison_simple" (formula "32") (term "1"))
                      (builtin "One Step Simplification" (formula "32"))
                     (rule "replace_known_left" (formula "32") (term "0,0,1,0") (ifseqformula "29"))
                      (builtin "One Step Simplification" (formula "32"))
                     (rule "ifSplit" (formula "32"))
                     (branch "if x_3 true"
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "if x_3 false"
                         (builtin "One Step Simplification" (formula "1"))
                         (builtin "One Step Simplification" (formula "33"))
                        (rule "true_left" (formula "1"))
                        (rule "blockEmpty" (formula "32") (term "1"))
                         (builtin "Block Contract (Internal)" (formula "32") (newnames "result_1,exc_1,heap_Before_BLOCK_3,savedHeap_Before_BLOCK_3,o,f"))
                        (branch "Validity"
                            (builtin "One Step Simplification" (formula "31") (ifInst ""  (formula "14")) (ifInst ""  (formula "1")) (ifInst ""  (formula "32")) (ifInst ""  (formula "2")) (ifInst ""  (formula "3")))
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "true_left" (formula "31"))
                           (rule "eqSymm" (formula "32") (term "0,0,1,0,1"))
                           (rule "translateJavaSubInt" (formula "32") (term "0,2,0,1,0,0,1"))
                           (rule "translateJavaDivInt" (formula "32") (term "1,0,2,0,1,0,0,1"))
                           (rule "polySimp_elimSub" (formula "32") (term "0,2,0,1,0,0,1"))
                           (rule "variableDeclarationAssign" (formula "32") (term "1"))
                           (rule "variableDeclaration" (formula "32") (term "1") (newnames "exc_1_1"))
                           (rule "assignment" (formula "32") (term "1"))
                            (builtin "One Step Simplification" (formula "32"))
                           (rule "emptyStatement" (formula "32") (term "1"))
                           (rule "emptyStatement" (formula "32") (term "1"))
                           (rule "tryEmpty" (formula "32") (term "1"))
                           (rule "blockEmptyLabel" (formula "32") (term "1"))
                           (rule "blockEmpty" (formula "32") (term "1"))
                           (rule "methodCallEmpty" (formula "32") (term "1"))
                           (rule "emptyModality" (formula "32") (term "1"))
                           (rule "andRight" (formula "32"))
                           (branch "Case 1"
                              (rule "andRight" (formula "32"))
                              (branch "Case 1"
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "closeTrue" (formula "32"))
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "inEqSimp_ltToLeq" (formula "18"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "18") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "17"))
                                 (rule "leq_literals" (formula "7") (term "0"))
                                  (builtin "One Step Simplification" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "20") (inst "i=i") (inst "i_0=i_0"))
                                  (builtin "One Step Simplification" (formula "20"))
                                 (rule "expand_inInt" (formula "20") (term "1,0,0,1,0"))
                                 (rule "expand_inInt" (formula "20") (term "1,0,0,1"))
                                 (rule "replace_int_MAX" (formula "20") (term "1,0,1,0,0,1,0"))
                                 (rule "replace_int_MIN" (formula "20") (term "0,1,1,0,0,1,0"))
                                 (rule "replace_int_MAX" (formula "20") (term "1,0,1,0,0,1"))
                                 (rule "replace_int_MIN" (formula "20") (term "0,1,1,0,0,1"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "21"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "20"))
                                 (rule "andLeft" (formula "22"))
                                 (rule "notLeft" (formula "20"))
                                 (rule "notLeft" (formula "20"))
                                 (rule "eqSymm" (formula "28") (term "1,0"))
                                 (rule "translateJavaSubInt" (formula "26") (term "3,0"))
                                 (rule "translateJavaShiftLeftInt" (formula "22") (term "1"))
                                 (rule "translateJavaSubInt" (formula "28") (term "0,2,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "26") (term "3,0"))
                                 (rule "mul_literals" (formula "26") (term "1,3,0"))
                                 (rule "polySimp_elimSub" (formula "28") (term "0,2,0,1,0"))
                                 (rule "mul_literals" (formula "28") (term "1,0,2,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "26") (term "3,0"))
                                 (rule "polySimp_addComm0" (formula "28") (term "0,2,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "27") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "28") (term "1,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "27") (term "1,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "27") (term "0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "25"))
                                 (rule "inEqSimp_commuteLeq" (formula "23"))
                                 (rule "inEqSimp_commuteLeq" (formula "24"))
                                 (rule "inEqSimp_commuteLeq" (formula "20"))
                                 (rule "applyEq" (formula "26") (term "1,3,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "24") (term "1") (ifseqformula "19"))
                                 (rule "applyEq" (formula "22") (term "0") (ifseqformula "19"))
                                 (rule "eqSymm" (formula "22"))
                                 (rule "applyEq" (formula "25") (term "1") (ifseqformula "19"))
                                 (rule "applyEq" (formula "23") (term "0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "27") (term "0,1,0,0,1,0,0,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "28") (term "0,1,0,0,1,0,0,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "27") (term "0,1,0,0,1,1,0") (ifseqformula "19"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "27") (term "1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,1,0"))
                                 (rule "mul_literals" (formula "27") (term "0,1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "1,1,1,1,0"))
                                 (rule "javaShiftLeftIntDef" (formula "22") (term "0"))
                                 (rule "mod_axiom" (formula "22") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                 (rule "shiftLeftDef" (formula "22") (term "0,0"))
                                 (rule "polySimp_elimNeg" (formula "22") (term "1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "0,1,1,0,0"))
                                 (rule "shiftLeftPositiveShiftDef" (formula "22") (term "2,0,0"))
                                 (rule "polySimp_elimOneLeft0" (formula "22") (term "2,0,0"))
                                 (rule "shiftRightPositiveShiftDef" (formula "22") (term "1,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0"))
                                 (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "21"))
                                 (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                 (rule "mul_literals" (formula "17") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0"))
                                 (rule "add_literals" (formula "17") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "17"))
                                 (rule "leq_literals" (formula "6") (term "0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "nnf_imp2or" (formula "28") (term "0"))
                                 (rule "nnf_imp2or" (formula "27") (term "0"))
                                 (rule "expand_moduloInteger" (formula "22") (term "0"))
                                 (rule "replace_int_RANGE" (formula "22") (term "1,1,0"))
                                 (rule "replace_int_HALFRANGE" (formula "22") (term "0,0,1,0"))
                                 (rule "replace_int_MIN" (formula "22") (term "0,0"))
                                 (rule "polySimp_homoEq" (formula "22"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                 (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "22"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                 (rule "polySimp_elimOne" (formula "22") (term "0"))
                                 (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                 (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                 (rule "nnf_notAnd" (formula "28") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,0"))
                                 (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "28") (term "0,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "28") (term "1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "28") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "1,0,0,1,1,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "1,1,1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "28") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "1,0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "28") (term "1,0,1,0,0"))
                                 (rule "nnf_notAnd" (formula "27") (term "0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,0"))
                                 (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,0"))
                                 (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
                                 (rule "add_zero_left" (formula "27") (term "0,0,0,0,0"))
                                 (rule "nnf_notAnd" (formula "27") (term "1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "27") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "27") (term "1,0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "27") (term "1,0,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "27") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "27") (term "1,0,0,1,1,0,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "27") (term "1,1,1,0,0"))
                                 (rule "Contract_axiom_for_binarySearchInvariant_in_Tree" (formula "13") (term "0"))
                                 (rule "replace_known_left" (formula "13") (term "1,0,0") (ifseqformula "2"))
                                  (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "1")) (ifInst ""  (formula "41")) (ifInst ""  (formula "30")))
                                 (rule "true_left" (formula "13"))
                                 (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "29"))
                                 (rule "true_left" (formula "29"))
                                 (rule "Definition_axiom_for_treeSearchInvariant_in_de_wiesler_Tree" (formula "14") (term "0"))
                                  (builtin "One Step Simplification" (formula "14"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "andLeft" (formula "14"))
                                 (rule "eqSymm" (formula "18") (term "0"))
                                 (rule "eqSymm" (formula "18") (term "1"))
                                 (rule "eqSymm" (formula "17") (term "1"))
                                 (rule "translateJavaAddInt" (formula "15") (term "1,1"))
                                 (rule "translateJavaDivInt" (formula "17") (term "1,1,1"))
                                 (rule "translateJavaSubInt" (formula "17") (term "0,1"))
                                 (rule "translateJavaSubInt" (formula "17") (term "1,1"))
                                 (rule "polySimp_elimSub" (formula "18") (term "0,1"))
                                 (rule "polySimp_elimSub" (formula "17") (term "0,1"))
                                 (rule "mul_literals" (formula "17") (term "1,0,1"))
                                 (rule "polySimp_elimSub" (formula "17") (term "1,1"))
                                 (rule "polySimp_homoEq" (formula "18") (term "1"))
                                 (rule "polySimp_homoEq" (formula "17") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                 (rule "polySimp_addComm0" (formula "15") (term "1,1"))
                                 (rule "polySimp_addComm0" (formula "17") (term "1,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1"))
                                 (rule "polySimp_elimOne" (formula "18") (term "1,1,0,1"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,1"))
                                 (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                 (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                                 (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                 (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                 (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,0,1"))
                                 (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1"))
                                 (rule "inEqSimp_ltToLeq" (formula "17") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "15"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "15") (term "0"))
                                 (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "36"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "18") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "18") (term "1,1"))
                                 (rule "polySimp_mulAssoc" (formula "18") (term "0,1,1"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,1"))
                                 (rule "polySimp_mulLiterals" (formula "18") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "18") (term "0,1,1"))
                                 (rule "polySimp_sepNegMonomial" (formula "17") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "17") (term "0,0"))
                                 (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "21"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                 (rule "inEqSimp_contradEq7" (formula "18") (term "0") (ifseqformula "21"))
                                 (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                 (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                 (rule "leq_literals" (formula "18") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "18"))
                                 (rule "true_left" (formula "18"))
                                 (rule "inEqSimp_exactShadow1" (formula "15") (ifseqformula "14"))
                                 (rule "greater_literals" (formula "15") (term "0"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "15") (term "0"))
                                 (rule "add_literals" (formula "15") (term "1,1,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                 (rule "mul_literals" (formula "15") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "15"))
                                 (rule "leq_literals" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "13"))
                                 (rule "mul_literals" (formula "33") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                                 (rule "mul_literals" (formula "33") (term "1"))
                                 (rule "Definition_axiom_for_binarySearchInvariant_in_de_wiesler_Tree" (formula "12") (term "0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "andLeft" (formula "12"))
                                 (rule "andLeft" (formula "12"))
                                 (rule "andLeft" (formula "12"))
                                 (rule "translateJavaSubInt" (formula "15") (term "1,0"))
                                 (rule "translateJavaSubInt" (formula "14") (term "0,0"))
                                 (rule "translateJavaSubInt" (formula "14") (term "0,2,0,1"))
                                 (rule "translateJavaSubInt" (formula "12") (term "0"))
                                 (rule "translateJavaSubInt" (formula "13") (term "1"))
                                 (rule "eqSymm" (formula "15") (term "0"))
                                 (rule "polySimp_elimSub" (formula "14") (term "0,0"))
                                 (rule "polySimp_elimSub" (formula "14") (term "0,2,0,1"))
                                 (rule "polySimp_elimSub" (formula "12") (term "0"))
                                 (rule "mul_literals" (formula "12") (term "1,0"))
                                 (rule "polySimp_elimSub" (formula "13") (term "1"))
                                 (rule "mul_literals" (formula "13") (term "1,1"))
                                 (rule "polySimp_elimSub" (formula "15") (term "0,0"))
                                 (rule "mul_literals" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_homoEq" (formula "14") (term "0"))
                                 (rule "polySimp_homoEq" (formula "15") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                 (rule "polySimp_addComm0" (formula "12") (term "0"))
                                 (rule "polySimp_addComm0" (formula "13") (term "1"))
                                 (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                 (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "15") (term "0,0,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "14") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "15") (term "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "12"))
                                 (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                 (rule "mul_literals" (formula "12") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                 (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "13"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0"))
                                 (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "25"))
                                 (rule "applyEq" (formula "15") (term "0,1,0,0") (ifseqformula "25"))
                                 (rule "polySimp_sepPosMonomial" (formula "14") (term "0"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                 (rule "mul_literals" (formula "14") (term "0,1,0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,0"))
                                 (rule "polySimp_sepNegMonomial" (formula "15") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "15") (term "0,0"))
                                 (rule "polySimp_elimOne" (formula "15") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1"))
                                 (rule "polySimp_mulComm0" (formula "14") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "14") (term "1,1"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1"))
                                 (rule "mul_literals" (formula "14") (term "0,1,1"))
                                 (rule "polySimp_elimOne" (formula "14") (term "1,1,1"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                 (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                 (rule "polySimp_elimOne" (formula "12") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                 (rule "mul_literals" (formula "13") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "12"))
                                 (rule "mul_literals" (formula "8") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                 (rule "add_literals" (formula "8") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                 (rule "mul_literals" (formula "8") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "6"))
                                 (rule "leq_literals" (formula "8") (term "0"))
                                  (builtin "One Step Simplification" (formula "8"))
                                 (rule "true_left" (formula "8"))
                                 (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "32") (term "0") (inst "i=i") (inst "j=j"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "expand_inInt" (formula "32") (term "1,0,0"))
                                 (rule "expand_inInt" (formula "32") (term "1,0,0,1,0"))
                                 (rule "replace_int_MAX" (formula "32") (term "1,0,1,0,0"))
                                 (rule "replace_int_MIN" (formula "32") (term "0,1,1,0,0"))
                                 (rule "replace_int_MIN" (formula "32") (term "0,1,1,0,0,1,0"))
                                 (rule "replace_int_MAX" (formula "32") (term "1,0,1,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0,1,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "32") (term "1,0,1,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "32") (term "1,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "32") (term "1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0"))
                                 (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "34") (term "1,0,2,0,1,0"))
                                 (rule "translateJavaSubInt" (formula "34") (term "0,1,1,1,0,2,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "34") (term "1,0,0,1,0,2,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "34") (term "1,1,1,0,2,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "34") (term "0,1,1,1,0,2,0,1,0"))
                                 (rule "mul_literals" (formula "34") (term "1,0,1,1,1,0,2,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "1,0,2,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "34") (term "0,1,0,1,0,2,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "0,1,1,0,2,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,1,0,2,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,1,0,2,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "34") (term "1,1,0,2,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "34") (term "0,1,1,0,2,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "1,0,2,0,1,0"))
                                 (rule "polySimp_mulComm1" (formula "34") (term "1,1,0,2,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "0,1,1,0,2,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "34") (term "0,1,0,2,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "34") (term "0,0,1,0,2,0,1,0"))
                                 (rule "polySimp_mulComm1" (formula "34") (term "1,0,1,0,2,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,1,0,2,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,2,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "34") (term "0,0,2,0,1,0"))
                                 (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "33") (term "0,1,1,0"))
                                 (rule "translateJavaSubInt" (formula "33") (term "0,1,1,0,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "33") (term "1,0,0,0,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "33") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "33") (term "0,1,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "33") (term "1,0,1,1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "0,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "33") (term "0,1,0,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "0,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0,1,1,0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "1,0,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "33") (term "0,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "0,1,1,0"))
                                 (rule "polySimp_mulComm1" (formula "33") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "0,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "0,0,0,1,1,0"))
                                 (rule "polySimp_mulComm1" (formula "33") (term "1,0,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0,1,1,0"))
                                 (rule "inEqSimp_homoInEq0" (formula "33") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "0,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "0,1,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "1,0,1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "0,0,1,1,1,0"))
                                 (rule "mul_literals" (formula "33") (term "0,0,0,1,1,1,0"))
                                 (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "33") (term "0,0,1,0"))
                                 (rule "translateJavaSubInt" (formula "33") (term "0,1,1,0,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "33") (term "1,0,0,0,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "33") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "33") (term "0,1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "33") (term "1,0,1,1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "33") (term "0,1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "33") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "0,0,1,0"))
                                 (rule "polySimp_mulComm1" (formula "33") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_mulComm1" (formula "33") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "0,1,0,1,0"))
                                 (rule "mul_literals" (formula "33") (term "0,0,1,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "1,0,1,0,1,0"))
                                 (rule "nnf_imp2or" (formula "32") (term "0"))
                                 (rule "commute_or_2" (formula "34") (term "0,0"))
                                 (rule "commute_or_2" (formula "33") (term "0,0"))
                                 (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "20") (term "0"))
                                 (rule "translateJavaSubInt" (formula "20") (term "0,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "20") (term "1,0,0,0"))
                                 (rule "polySimp_elimSub" (formula "20") (term "1,1,0"))
                                 (rule "polySimp_elimSub" (formula "20") (term "0,1,1,0"))
                                 (rule "mul_literals" (formula "20") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "0"))
                                 (rule "polySimp_addComm0" (formula "20") (term "0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "20") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "0"))
                                 (rule "polySimp_homoEq" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                 (rule "polySimp_mulComm1" (formula "20") (term "1,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "0,1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "20") (term "0,0,1,1,0"))
                                 (rule "polySimp_mulComm1" (formula "20") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "20") (term "0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                 (rule "applyEq" (formula "20") (term "1,1,0,1,0") (ifseqformula "19"))
                                 (rule "applyEq" (formula "20") (term "0,1,0,1,0,0,1,0") (ifseqformula "19"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0"))
                                 (rule "applyEq" (formula "20") (term "0,1,0,1,0,0,1,0") (ifseqformula "19"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0"))
                                 (rule "applyEq" (formula "20") (term "0,1,0,1,0,1,0,0,0") (ifseqformula "19"))
                                 (rule "polySimp_sepPosMonomial" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                 (rule "polySimp_rightDist" (formula "20") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,0,1"))
                                 (rule "polySimp_rightDist" (formula "20") (term "0,0,1"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,1"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,0,0,1"))
                                 (rule "polySimp_rightDist" (formula "20") (term "0,0,0,1"))
                                 (rule "mul_literals" (formula "20") (term "0,0,0,0,1"))
                                 (rule "jdiv_axiom" (formula "46") (term "0,1,0,2,0"))
                                 (rule "eqSymm" (formula "1"))
                                 (rule "polyDiv_pullOut" (formula "1") (term "0,2,0") (inst "polyDivCoeff=mul(d_bin, Z(neglit(1(#))))"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,2,0"))
                                 (rule "equal_literals" (formula "1") (term "0,0,2,0"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
                                 (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,2,0"))
                                 (rule "add_literals" (formula "1") (term "1,0,0,0,2,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0,0,0,2,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "2,0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "1,2,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "2,0"))
                                 (rule "polySimp_mulAssoc" (formula "1") (term "0,2,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0,2,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0,2,0"))
                                 (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                 (rule "nnf_imp2or" (formula "33") (term "0,1,0"))
                                 (rule "nnf_notAnd" (formula "33") (term "0,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0,0"))
                                 (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0,0"))
                                 (rule "mul_literals" (formula "33") (term "1,0,0,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0"))
                                 (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0"))
                                 (rule "nnf_notAnd" (formula "33") (term "1,0,0"))
                                 (rule "inEqSimp_notLeq" (formula "33") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "33") (term "1,0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,1,0,0"))
                                 (rule "mul_literals" (formula "33") (term "1,0,1,0,0"))
                                 (rule "inEqSimp_notGeq" (formula "33") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "33") (term "1,0,0,1,1,0,0"))
                                 (rule "add_literals" (formula "33") (term "0,0,1,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "33") (term "1,1,1,0,0"))
                                 (rule "nnf_notAnd" (formula "33") (term "0,0,1,0"))
                                 (rule "div_axiom" (formula "29") (term "0,1,1,2,1,0,0") (inst "quotient=quotient_0"))
                                 (rule "mul_literals" (formula "29") (term "1,1,1,1,1"))
                                 (rule "qeq_literals" (formula "29") (term "0,1,1"))
                                  (builtin "One Step Simplification" (formula "29"))
                                 (rule "equal_literals" (formula "29") (term "0"))
                                  (builtin "One Step Simplification" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "andLeft" (formula "29"))
                                 (rule "polySimp_addComm1" (formula "31") (term "1"))
                                 (rule "add_literals" (formula "31") (term "0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "30"))
                                 (rule "inEqSimp_homoInEq1" (formula "31"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "31") (term "0"))
                                 (rule "applyEq" (formula "32") (term "0,1,1,2,1,0,0") (ifseqformula "29"))
                                 (rule "polySimp_addComm0" (formula "32") (term "1,2,1,0,0"))
                                 (rule "applyEq" (formula "32") (term "0,1,1,1,1,1,0,0") (ifseqformula "29"))
                                 (rule "polySimp_addComm0" (formula "32") (term "1,1,1,1,0,0"))
                                 (rule "applyEq" (formula "32") (term "0,0,0,1,0,0") (ifseqformula "29"))
                                 (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,1,0,0"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "31"))
                                 (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                 (rule "polySimp_rightDist" (formula "31") (term "1"))
                                 (rule "mul_literals" (formula "31") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,1,0,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "32") (term "0,1,0,0") (ifseqformula "30"))
                                 (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0,1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,1,0,0"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,0,0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0,1,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0,0,1,0,0"))
                                 (rule "add_literals" (formula "32") (term "1,1,0,0,0,1,0,0"))
                                 (rule "times_zero_1" (formula "32") (term "1,0,0,0,1,0,0"))
                                 (rule "add_zero_right" (formula "32") (term "0,0,0,1,0,0"))
                                 (rule "leq_literals" (formula "32") (term "0,0,1,0,0"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "mod_axiom" (formula "32") (term "0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "32"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "0,1,0"))
                                 (rule "mul_literals" (formula "32") (term "0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                 (rule "add_zero_left" (formula "32") (term "0,0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "32"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "0,1"))
                                 (rule "newSym_eq" (formula "32") (inst "l=l_0") (inst "newSymDef=add(mul(pow(Z(2(#)),
            int::final(self,
                       de.wiesler.Tree::$log_buckets)),
        Z(0(#))),
    mul(pow(Z(2(#)),
            add(mul(quotient_0, Z(neglit(2(3(#))))),
                int::final(self,
                           de.wiesler.Tree::$log_buckets))),
        Z(0(#))))"))
                                 (rule "times_zero_1" (formula "32") (term "1,1,1"))
                                 (rule "times_zero_1" (formula "32") (term "0,1,1"))
                                 (rule "add_zero_left" (formula "32") (term "1,1"))
                                 (rule "add_zero_right" (formula "32") (term "1"))
                                 (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "32"))
                                 (rule "polySimp_homoEq" (formula "33"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "33") (term "0"))
                                 (rule "polySimp_addComm0" (formula "33") (term "0,0"))
                                 (rule "polySimp_sepPosMonomial" (formula "33"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                 (rule "polySimp_rightDist" (formula "33") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "0,1"))
                                 (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "33"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                 (rule "polyDiv_pullOut" (formula "32") (term "0") (inst "polyDivCoeff=l_0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,2,0"))
                                 (rule "equal_literals" (formula "32") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "polySimp_homoEq" (formula "32"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                 (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                                 (rule "polySimp_addComm1" (formula "32") (term "0,1,1,1,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0,1,1,1,0"))
                                 (rule "add_literals" (formula "32") (term "1,1,0,0,1,1,1,0"))
                                 (rule "times_zero_1" (formula "32") (term "1,0,0,1,1,1,0"))
                                 (rule "add_zero_right" (formula "32") (term "0,0,1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                 (rule "polySimp_pullOutFactor1" (formula "32") (term "0,0"))
                                 (rule "add_literals" (formula "32") (term "1,0,0"))
                                 (rule "times_zero_1" (formula "32") (term "0,0"))
                                 (rule "add_zero_left" (formula "32") (term "0"))
                                 (rule "polySimp_invertEq" (formula "32"))
                                 (rule "times_zero_2" (formula "32") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                 (rule "polySimp_elimOne" (formula "32") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "31"))
                                 (rule "mul_literals" (formula "27") (term "0,0"))
                                 (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                 (rule "add_literals" (formula "27") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                 (rule "mul_literals" (formula "27") (term "1"))
                                 (rule "elimGcdGeq_antec" (formula "27") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                                 (rule "leq_literals" (formula "27") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0"))
                                 (rule "polySimp_addLiterals" (formula "27") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0"))
                                 (rule "add_literals" (formula "27") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "27") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "27") (term "0,0"))
                                 (rule "leq_literals" (formula "27") (term "0"))
                                  (builtin "One Step Simplification" (formula "27"))
                                 (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "32"))
                                 (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "30"))
                                 (rule "polySimp_mulAssoc" (formula "32") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "32") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "32") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "32") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcd=Z(2(3(#)))"))
                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0"))
                                 (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,1,0"))
                                 (rule "neg_literal" (formula "32") (term "0,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "32") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "polySimp_addLiterals" (formula "32") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                                 (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "32") (term "0,0"))
                                 (rule "qeq_literals" (formula "32") (term "0"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "inEqSimp_antiSymm" (formula "28") (ifseqformula "32"))
                                 (rule "applyEqRigid" (formula "24") (term "0,1,1") (ifseqformula "28"))
                                 (rule "times_zero_2" (formula "24") (term "1,1"))
                                 (rule "add_zero_right" (formula "24") (term "1"))
                                 (rule "applyEqRigid" (formula "29") (term "0") (ifseqformula "28"))
                                 (rule "qeq_literals" (formula "29"))
                                 (rule "true_left" (formula "29"))
                                 (rule "applyEq" (formula "34") (term "0,1,1") (ifseqformula "28"))
                                 (rule "times_zero_2" (formula "34") (term "1,1"))
                                 (rule "add_zero_right" (formula "34") (term "1"))
                                 (rule "applyEq" (formula "33") (term "0,1") (ifseqformula "28"))
                                 (rule "times_zero_2" (formula "33") (term "1"))
                                 (rule "applyEqRigid" (formula "32") (term "0") (ifseqformula "28"))
                                 (rule "leq_literals" (formula "32"))
                                 (rule "true_left" (formula "32"))
                                 (rule "applyEq" (formula "31") (term "1") (ifseqformula "28"))
                                 (rule "applyEqRigid" (formula "35") (term "0,0,1,0") (ifseqformula "28"))
                                 (rule "times_zero_2" (formula "35") (term "0,1,0"))
                                 (rule "add_zero_left" (formula "35") (term "1,0"))
                                 (rule "polySimp_homoEq" (formula "35"))
                                 (rule "polySimp_pullOutFactor1b" (formula "35") (term "0"))
                                 (rule "add_literals" (formula "35") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "35") (term "1,0"))
                                 (rule "add_zero_right" (formula "35") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "29"))
                                 (rule "leq_literals" (formula "32") (term "0"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "true_left" (formula "32"))
                                 (rule "inEqSimp_subsumption0" (formula "24") (ifseqformula "23"))
                                 (rule "leq_literals" (formula "24") (term "0"))
                                  (builtin "One Step Simplification" (formula "24"))
                                 (rule "true_left" (formula "24"))
                                 (rule "inEqSimp_subsumption0" (formula "31") (ifseqformula "29"))
                                 (rule "leq_literals" (formula "31") (term "0"))
                                  (builtin "One Step Simplification" (formula "31"))
                                 (rule "true_left" (formula "31"))
                                 (rule "elimGcdEq" (formula "32") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "times_zero_1" (formula "32") (term "1,0,1,0"))
                                 (rule "add_zero_left" (formula "32") (term "0,0,1"))
                                 (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                                 (rule "add_literals" (formula "32") (term "1,0,0"))
                                 (rule "add_zero_left" (formula "32") (term "0,1,0"))
                                 (rule "times_zero_1" (formula "32") (term "0,0,1"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "times_zero_1" (formula "32") (term "1,0,0,0"))
                                 (rule "qeq_literals" (formula "32") (term "1,0"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "add_zero_left" (formula "32") (term "0,0"))
                                 (rule "leq_literals" (formula "32") (term "0"))
                                  (builtin "One Step Simplification" (formula "32"))
                                 (rule "nnf_notAnd" (formula "36") (term "0,0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0,1,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "36") (term "0,1,1,0,0,0,1,0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,0,1,0"))
                                 (rule "nnf_notAnd" (formula "36") (term "1,0,0,1,0"))
                                 (rule "inEqSimp_notLeq" (formula "36") (term "0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "36") (term "1,0,0,0,1,0,0,1,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "36") (term "1,0,1,0,0,1,0"))
                                 (rule "inEqSimp_notGeq" (formula "36") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "36") (term "1,0,0,1,1,0,0,1,0"))
                                 (rule "add_literals" (formula "36") (term "0,0,1,1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "36") (term "1,1,1,0,0,1,0"))
                                 (rule "arrayLengthIsAnInt" (formula "35") (term "0"))
                                 (rule "expand_inInt" (formula "35"))
                                 (rule "replace_int_MAX" (formula "35") (term "1,0"))
                                 (rule "replace_int_MIN" (formula "35") (term "0,1"))
                                 (rule "andLeft" (formula "35"))
                                 (rule "inEqSimp_commuteLeq" (formula "36"))
                                 (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "35"))
                                 (rule "polySimp_mulComm0" (formula "37") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "37") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                 (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                 (rule "polySimp_elimOne" (formula "37") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "37"))
                                 (rule "polySimp_mulAssoc" (formula "49") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "49") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "49") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "49"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "49") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=pow(Z(2(#)), l)") (inst "elimGcd=Z(2(#))"))
                                 (rule "neg_literal" (formula "49") (term "0,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,0,0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "49") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "49"))
                                 (rule "mul_literals" (formula "49") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "49") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "49") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "49") (term "0,0"))
                                 (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "49") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "49") (term "0,0"))
                                 (rule "qeq_literals" (formula "49") (term "0"))
                                  (builtin "One Step Simplification" (formula "49"))
                                 (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "37"))
                                 (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                 (rule "mul_literals" (formula "14") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "14") (term "0"))
                                 (rule "add_literals" (formula "14") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                 (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                 (rule "polySimp_elimOne" (formula "14") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "14"))
                                 (rule "leq_literals" (formula "6") (term "0"))
                                  (builtin "One Step Simplification" (formula "6"))
                                 (rule "true_left" (formula "6"))
                                 (rule "inEqSimp_exactShadow1" (formula "19") (ifseqformula "49"))
                                 (rule "mul_literals" (formula "19") (term "1,0,1"))
                                 (rule "greater_literals" (formula "19") (term "0"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                 (rule "mul_literals" (formula "19") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "19") (term "0"))
                                 (rule "add_literals" (formula "19") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                 (rule "polySimp_elimOne" (formula "19") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "19"))
                                 (rule "leq_literals" (formula "5") (term "0"))
                                  (builtin "One Step Simplification" (formula "5"))
                                 (rule "true_left" (formula "5"))
                                 (rule "arrayLengthNotNegative" (formula "38") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "38"))
                                 (rule "leq_literals" (formula "36") (term "0"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "true_left" (formula "36"))
                                 (rule "arrayLengthNotNegative" (formula "34") (term "0"))
                                 (rule "arrayLengthIsAnInt" (formula "35") (term "0"))
                                 (rule "expand_inInt" (formula "35"))
                                 (rule "replace_int_MIN" (formula "35") (term "0,1"))
                                 (rule "replace_int_MAX" (formula "35") (term "1,0"))
                                 (rule "andLeft" (formula "35"))
                                 (rule "inEqSimp_commuteLeq" (formula "36"))
                                 (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "34"))
                                 (rule "leq_literals" (formula "36") (term "0"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "true_left" (formula "36"))
                                 (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "35"))
                                 (rule "polySimp_mulComm0" (formula "36") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "36") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                 (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                 (rule "polySimp_elimOne" (formula "36") (term "0"))
                                 (rule "shift_paren_or" (formula "43") (term "0,0,0"))
                                 (rule "commute_or" (formula "42") (term "1,0,0,0"))
                                 (rule "commute_or_2" (formula "41") (term "0,0"))
                                 (rule "cut_direct" (formula "15") (term "1"))
                                 (branch "CUT: self.sorted_splitters[b_bin] >= value TRUE"
                                     (builtin "One Step Simplification" (formula "16"))
                                    (rule "true_left" (formula "16"))
                                    (rule "cut_direct" (formula "14") (term "1"))
                                    (branch "CUT: self.sorted_splitters[b_bin + d_bin * -1] <= -1 + value TRUE"
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "true_left" (formula "15"))
                                       (rule "div_axiom" (formula "1") (term "1,0") (inst "quotient=quotient_1"))
                                       (rule "qeq_literals" (formula "1") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "equal_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1,1,1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "polySimp_addComm1" (formula "3") (term "1"))
                                       (rule "add_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "applyEq" (formula "4") (term "0,1,2,0") (ifseqformula "1"))
                                       (rule "polySimp_addComm0" (formula "4") (term "2,0"))
                                       (rule "applyEq" (formula "4") (term "1,0") (ifseqformula "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "3"))
                                       (rule "mul_literals" (formula "10") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                       (rule "add_literals" (formula "10") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                       (rule "mul_literals" (formula "10") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(neglit(4(2(8(1(4(7(3(7(0(1(#))))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "10") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                       (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "10") (term "0,0"))
                                       (rule "leq_literals" (formula "10") (term "0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "9"))
                                       (rule "polySimp_mulAssoc" (formula "2") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "2") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "2") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                                       (rule "leq_literals" (formula "2") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                       (rule "neg_literal" (formula "2") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "2") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                       (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "2") (term "0,0"))
                                       (rule "qeq_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "16"))
                                       (rule "polySimp_mulAssoc" (formula "3") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                       (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "18"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "inEqSimp_subsumption4" (formula "3") (ifseqformula "2"))
                                       (rule "greater_literals" (formula "3") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "0,0"))
                                       (rule "leq_literals" (formula "3") (term "0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "commute_or_2" (formula "47") (term "0,0,1,0"))
                                       (rule "onlyCreatedObjectsAreReferencedFinal" (formula "62") (term "1,0") (ifseqformula "7") (ifseqformula "8"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferencedFinal" (formula "63") (term "1,1") (ifseqformula "8") (ifseqformula "9"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "61"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "div_axiom" (formula "39") (term "0") (inst "quotient=quotient_2"))
                                       (rule "mul_literals" (formula "39") (term "1,1,1,1,1"))
                                       (rule "qeq_literals" (formula "39") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "39"))
                                       (rule "equal_literals" (formula "39") (term "0"))
                                        (builtin "One Step Simplification" (formula "39"))
                                       (rule "andLeft" (formula "39"))
                                       (rule "andLeft" (formula "39"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,1"))
                                       (rule "add_literals" (formula "41") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "41") (term "1"))
                                       (rule "add_literals" (formula "41") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "40"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "40") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "41"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "41") (term "0"))
                                       (rule "applyEq" (formula "39") (term "0") (ifseqformula "42"))
                                       (rule "eqSymm" (formula "39"))
                                       (rule "applyEq" (formula "40") (term "0,1,0,0") (ifseqformula "39"))
                                       (rule "times_zero_2" (formula "40") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "40") (term "0,0"))
                                       (rule "applyEqRigid" (formula "41") (term "0,1,0,0") (ifseqformula "39"))
                                       (rule "times_zero_2" (formula "41") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "41") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                       (rule "mul_literals" (formula "40") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "41"))
                                       (rule "mul_literals" (formula "41") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "43"))
                                       (rule "leq_literals" (formula "40") (term "0"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "true_left" (formula "40"))
                                       (rule "commute_or_2" (formula "52") (term "0,0,0"))
                                       (rule "shift_paren_or" (formula "51") (term "0,0,0"))
                                       (rule "commute_or" (formula "50") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "50") (term "0,0,0,1,0"))
                                       (rule "cnf_rightDist" (formula "51") (term "0"))
                                       (rule "distr_forallAnd" (formula "51"))
                                       (rule "andLeft" (formula "51"))
                                       (rule "commute_or" (formula "52") (term "0"))
                                       (rule "commute_or" (formula "53") (term "0,0,0,0"))
                                       (rule "inEqSimp_or_subsumption0" (formula "53") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "53") (term "0,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "53"))
                                       (rule "shift_paren_or" (formula "50") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "50") (term "0,0,1,0"))
                                       (rule "commute_or" (formula "51") (term "0,0,0,0"))
                                       (rule "inEqSimp_or_subsumption0" (formula "51") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "51") (term "0,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "51"))
                                       (rule "commute_or" (formula "52") (term "0,0,0,0"))
                                       (rule "inEqSimp_or_subsumption0" (formula "52") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "52") (term "0,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "52"))
                                       (rule "commute_or" (formula "50") (term "0,0,0,0"))
                                       (rule "inEqSimp_or_subsumption0" (formula "50") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "50") (term "0,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "commute_or" (formula "50") (term "0,0,0,0,1,0"))
                                       (rule "ifthenelse_split" (formula "8") (term "0"))
                                       (branch "d_bin >= 0 TRUE"
                                          (rule "eqSymm" (formula "9"))
                                          (rule "applyEq" (formula "67") (term "0,1,0,2,0") (ifseqformula "9"))
                                          (rule "polySimp_addComm0" (formula "67") (term "0,2,0"))
                                          (rule "applyEq" (formula "30") (term "1,0,0,1") (ifseqformula "9"))
                                          (rule "polySimp_addComm1" (formula "30") (term "0,0,1"))
                                          (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "8"))
                                          (rule "leq_literals" (formula "16") (term "0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "7"))
                                          (rule "times_zero_1" (formula "8") (term "0,0"))
                                          (rule "add_zero_left" (formula "8") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                          (rule "mul_literals" (formula "8") (term "1"))
                                          (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "8") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,0"))
                                          (rule "leq_literals" (formula "8") (term "0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "8"))
                                          (rule "leq_literals" (formula "16") (term "0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "19"))
                                          (rule "times_zero_1" (formula "9") (term "0,0"))
                                          (rule "add_zero_left" (formula "9") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                          (rule "mul_literals" (formula "9") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "9"))
                                          (rule "leq_literals" (formula "15") (term "0"))
                                           (builtin "One Step Simplification" (formula "15"))
                                          (rule "true_left" (formula "15"))
                                          (rule "all_pull_out3" (formula "50") (term "0"))
                                          (rule "shift_paren_or" (formula "50") (term "0,0"))
                                          (rule "shift_paren_or" (formula "50") (term "0,0,0"))
                                          (rule "shift_paren_or" (formula "50") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "50") (term "0,0,0,0,0"))
                                          (rule "allLeft" (formula "52") (inst "t=b"))
                                          (rule "polySimp_addComm1" (formula "52") (term "1,0,0,1,1,1"))
                                          (rule "polySimp_addComm1" (formula "52") (term "1,1,0,1,1"))
                                          (rule "polySimp_addComm1" (formula "52") (term "1,0,0,0,1"))
                                          (rule "inEqSimp_commuteGeq" (formula "52") (term "1,0"))
                                          (rule "applyEq" (formula "52") (term "1,1,0,0,1") (ifseqformula "28"))
                                          (rule "applyEq" (formula "52") (term "0,1,0,1,0,0,1,1,1") (ifseqformula "28"))
                                          (rule "applyEq" (formula "52") (term "0,1,0,1,0,0,0,1") (ifseqformula "28"))
                                          (rule "applyEq" (formula "52") (term "0,1") (ifseqformula "29"))
                                          (rule "inEqSimp_homoInEq1" (formula "52") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "52") (term "1,0,1"))
                                          (rule "polySimp_rightDist" (formula "52") (term "1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "52") (term "0,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "52") (term "0,0,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,1,0,1"))
                                          (rule "polySimp_elimOne" (formula "52") (term "1,0,0,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "52") (term "0,0,0,1,0,1"))
                                          (rule "mul_literals" (formula "52") (term "0,0,0,0,1,0,1"))
                                          (rule "polySimp_addAssoc" (formula "52") (term "0,1"))
                                          (rule "polySimp_addComm1" (formula "52") (term "0,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "52") (term "0,1"))
                                          (rule "add_literals" (formula "52") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "52") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "52") (term "0,1"))
                                          (rule "polySimp_addComm1" (formula "52") (term "0,1"))
                                          (rule "polySimp_addAssoc" (formula "52") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "52") (term "0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "52") (term "0,0,0,0,0,0,1"))
                                          (rule "applyEq" (formula "52") (term "0,1,0,1,1,0,1") (ifseqformula "28"))
                                          (rule "polySimp_pullOutFactor2b" (formula "52") (term "0,1"))
                                          (rule "add_literals" (formula "52") (term "1,1,0,1"))
                                          (rule "times_zero_1" (formula "52") (term "1,0,1"))
                                          (rule "add_zero_right" (formula "52") (term "0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "52") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "52") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "52") (term "0,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "52") (term "0,0,0") (ifseqformula "25"))
                                          (rule "qeq_literals" (formula "52") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "inEqSimp_contradInEq0" (formula "52") (term "0,0") (ifseqformula "26"))
                                          (rule "qeq_literals" (formula "52") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "cut_direct" (formula "52") (term "0"))
                                          (branch "CUT: pow(2, self.log_buckets) <= b TRUE"
                                              (builtin "One Step Simplification" (formula "53"))
                                             (rule "true_left" (formula "53"))
                                             (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "52"))
                                             (rule "mul_literals" (formula "42") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                             (rule "mul_literals" (formula "42") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "42"))
                                             (rule "leq_literals" (formula "25") (term "0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "inEqSimp_exactShadow3" (formula "63") (ifseqformula "52"))
                                             (rule "polySimp_mulAssoc" (formula "63") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "63") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "63") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "63") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "63"))
                                             (rule "polySimp_mulLiterals" (formula "63") (term "0"))
                                             (rule "inEqSimp_contradInEq2" (formula "26") (ifseqformula "63"))
                                             (rule "greater_literals" (formula "26") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "greater_literals" (formula "26") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "andLeft" (formula "26"))
                                             (rule "polySimp_mulComm0" (formula "26") (term "0"))
                                             (rule "polySimp_rightDist" (formula "26") (term "1"))
                                             (rule "mul_literals" (formula "26") (term "0,1"))
                                             (rule "inEqSimp_homoInEq1" (formula "26"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "1,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "26") (term "0"))
                                             (rule "add_literals" (formula "26") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "26") (term "1,0"))
                                             (rule "add_literals" (formula "26") (term "0"))
                                             (rule "leq_literals" (formula "26"))
                                             (rule "closeFalse" (formula "26"))
                                          )
                                          (branch "CUT: pow(2, self.log_buckets) <= b FALSE"
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "inEqSimp_leqRight" (formula "64"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "48"))
                                             (rule "polySimp_rightDist" (formula "53") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "53") (term "0"))
                                             (rule "polySimp_rightDist" (formula "53") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0"))
                                             (rule "mul_literals" (formula "53") (term "0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "53") (term "1,0,0,0"))
                                             (rule "polySimp_addComm1" (formula "53") (term "0,0"))
                                             (rule "add_literals" (formula "53") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "53"))
                                             (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                             (rule "polySimp_elimOne" (formula "53") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "48"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "28"))
                                             (rule "leq_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "53"))
                                             (rule "mul_literals" (formula "10") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                             (rule "add_literals" (formula "10") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                             (rule "mul_literals" (formula "10") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "9"))
                                             (rule "leq_literals" (formula "10") (term "0"))
                                              (builtin "One Step Simplification" (formula "10"))
                                             (rule "true_left" (formula "10"))
                                             (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "53"))
                                             (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                             (rule "mul_literals" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0,0"))
                                             (rule "add_literals" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "6") (term "0"))
                                             (rule "add_literals" (formula "6") (term "1,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                             (rule "polySimp_elimOne" (formula "6") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "6") (term "0"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "true_left" (formula "6"))
                                             (rule "allLeft" (formula "52") (inst "t=b"))
                                             (rule "polySimp_addComm1" (formula "52") (term "1,0,0,0,1"))
                                             (rule "polySimp_addComm1" (formula "52") (term "1,0,0,1,1,1"))
                                             (rule "polySimp_addComm1" (formula "52") (term "1,1,0,1,1"))
                                             (rule "inEqSimp_commuteGeq" (formula "52") (term "1,0"))
                                             (rule "applyEq" (formula "52") (term "1,1,0,0,1") (ifseqformula "29"))
                                             (rule "applyEq" (formula "52") (term "0,1,0,1,0,0,0,1") (ifseqformula "29"))
                                             (rule "inEqSimp_homoInEq0" (formula "52") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,0,1"))
                                             (rule "polySimp_addComm1" (formula "52") (term "0,1"))
                                             (rule "applyEq" (formula "52") (term "0,1,0,1,0,0,1,0,1") (ifseqformula "29"))
                                             (rule "polySimp_addComm1" (formula "52") (term "0,1"))
                                             (rule "apply_eq_monomials" (formula "52") (term "1,0,1") (ifseqformula "30"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,1,0,1"))
                                             (rule "polySimp_rightDist" (formula "52") (term "0,1,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,0,1,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "52") (term "1,0,1"))
                                             (rule "add_literals" (formula "52") (term "1,1,1,0,1"))
                                             (rule "times_zero_1" (formula "52") (term "1,1,0,1"))
                                             (rule "add_zero_right" (formula "52") (term "1,0,1"))
                                             (rule "polySimp_rightDist" (formula "52") (term "1,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,1"))
                                             (rule "polySimp_rightDist" (formula "52") (term "0,1,0,1"))
                                             (rule "polySimp_rightDist" (formula "52") (term "0,0,1,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,1,0,1"))
                                             (rule "polySimp_elimOne" (formula "52") (term "1,0,0,1,0,1"))
                                             (rule "polySimp_rightDist" (formula "52") (term "0,0,0,1,0,1"))
                                             (rule "mul_literals" (formula "52") (term "0,0,0,0,1,0,1"))
                                             (rule "polySimp_addAssoc" (formula "52") (term "0,1"))
                                             (rule "polySimp_addComm1" (formula "52") (term "0,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "52") (term "0,1"))
                                             (rule "add_literals" (formula "52") (term "1,1,0,1"))
                                             (rule "times_zero_1" (formula "52") (term "1,0,1"))
                                             (rule "add_zero_right" (formula "52") (term "0,1"))
                                             (rule "polySimp_addComm1" (formula "52") (term "0,1"))
                                             (rule "polySimp_addAssoc" (formula "52") (term "0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,1"))
                                             (rule "add_literals" (formula "52") (term "0,0,0,0,0,1"))
                                             (rule "add_zero_left" (formula "52") (term "0,0,0,0,1"))
                                             (rule "applyEq" (formula "52") (term "0,1,0,1,1,0,1") (ifseqformula "29"))
                                             (rule "polySimp_pullOutFactor2b" (formula "52") (term "0,1"))
                                             (rule "add_literals" (formula "52") (term "1,1,0,1"))
                                             (rule "times_zero_1" (formula "52") (term "1,0,1"))
                                             (rule "add_zero_right" (formula "52") (term "0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "52") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "52") (term "1,1"))
                                             (rule "inEqSimp_contradInEq0" (formula "52") (term "1,0,0") (ifseqformula "27"))
                                             (rule "qeq_literals" (formula "52") (term "0,1,0,0"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "inEqSimp_contradInEq1" (formula "52") (term "0,0") (ifseqformula "26"))
                                             (rule "qeq_literals" (formula "52") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "inEqSimp_contradInEq1" (formula "52") (term "0") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "52") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0,0"))
                                             (rule "add_literals" (formula "52") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "52") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,0"))
                                             (rule "leq_literals" (formula "52") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "21"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "52") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "52"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                             (rule "polySimp_elimOne" (formula "52") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "52") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "52") (term "0"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "true_left" (formula "52"))
                                             (rule "allLeft" (formula "57") (inst "t=b"))
                                             (rule "polySimp_addComm1" (formula "57") (term "1,0,0,1,0,0,2,0,1"))
                                             (rule "polySimp_addComm1" (formula "57") (term "1,0,0,1,0,2,0,1"))
                                             (rule "polySimp_addComm1" (formula "57") (term "1,1,0,0,0,2,0,1"))
                                             (rule "inEqSimp_commuteGeq" (formula "57") (term "1,0"))
                                             (rule "applyEq" (formula "57") (term "1,1,0,1,0,2,0,1") (ifseqformula "29"))
                                             (rule "applyEq" (formula "57") (term "0,1,0,1,0,0,1,0,2,0,1") (ifseqformula "29"))
                                             (rule "polySimp_addComm1" (formula "57") (term "0,2,0,1"))
                                             (rule "applyEq" (formula "57") (term "0,1,0,1,0,0,1,0,2,0,1") (ifseqformula "29"))
                                             (rule "polySimp_addComm1" (formula "57") (term "0,2,0,1"))
                                             (rule "apply_eq_monomials" (formula "57") (term "1,0,2,0,1") (ifseqformula "30"))
                                             (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,1,0,2,0,1"))
                                             (rule "polySimp_rightDist" (formula "57") (term "0,1,0,2,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "57") (term "1,0,1,0,2,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "57") (term "1,0,2,0,1"))
                                             (rule "add_literals" (formula "57") (term "1,1,1,0,2,0,1"))
                                             (rule "times_zero_1" (formula "57") (term "1,1,0,2,0,1"))
                                             (rule "add_zero_right" (formula "57") (term "1,0,2,0,1"))
                                             (rule "polySimp_rightDist" (formula "57") (term "1,0,2,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,2,0,1"))
                                             (rule "polySimp_rightDist" (formula "57") (term "0,1,0,2,0,1"))
                                             (rule "polySimp_rightDist" (formula "57") (term "0,0,1,0,2,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,1,0,2,0,1"))
                                             (rule "polySimp_elimOne" (formula "57") (term "1,0,0,1,0,2,0,1"))
                                             (rule "polySimp_rightDist" (formula "57") (term "0,0,0,1,0,2,0,1"))
                                             (rule "mul_literals" (formula "57") (term "0,0,0,0,1,0,2,0,1"))
                                             (rule "polySimp_addAssoc" (formula "57") (term "0,2,0,1"))
                                             (rule "polySimp_addComm1" (formula "57") (term "0,0,2,0,1"))
                                             (rule "polySimp_pullOutFactor0b" (formula "57") (term "0,2,0,1"))
                                             (rule "add_literals" (formula "57") (term "1,1,0,2,0,1"))
                                             (rule "times_zero_1" (formula "57") (term "1,0,2,0,1"))
                                             (rule "add_zero_right" (formula "57") (term "0,2,0,1"))
                                             (rule "polySimp_addComm1" (formula "57") (term "0,2,0,1"))
                                             (rule "polySimp_addAssoc" (formula "57") (term "0,0,2,0,1"))
                                             (rule "polySimp_addAssoc" (formula "57") (term "0,0,0,2,0,1"))
                                             (rule "polySimp_addAssoc" (formula "57") (term "0,0,0,0,2,0,1"))
                                             (rule "add_literals" (formula "57") (term "0,0,0,0,0,2,0,1"))
                                             (rule "add_zero_left" (formula "57") (term "0,0,0,0,2,0,1"))
                                             (rule "applyEq" (formula "57") (term "0,1,0,1,1,0,2,0,1") (ifseqformula "29"))
                                             (rule "polySimp_pullOutFactor2b" (formula "57") (term "0,2,0,1"))
                                             (rule "add_literals" (formula "57") (term "1,1,0,2,0,1"))
                                             (rule "times_zero_1" (formula "57") (term "1,0,2,0,1"))
                                             (rule "add_zero_right" (formula "57") (term "0,2,0,1"))
                                             (rule "replace_known_right" (formula "57") (term "1") (ifseqformula "71"))
                                              (builtin "One Step Simplification" (formula "57"))
                                             (rule "inEqSimp_contradInEq1" (formula "57") (term "0,0") (ifseqformula "26"))
                                             (rule "qeq_literals" (formula "57") (term "0,0,0"))
                                              (builtin "One Step Simplification" (formula "57"))
                                             (rule "inEqSimp_contradInEq1" (formula "57") (term "1") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq1" (formula "57") (term "0,1"))
                                             (rule "polySimp_pullOutFactor1b" (formula "57") (term "0,0,1"))
                                             (rule "add_literals" (formula "57") (term "1,1,0,0,1"))
                                             (rule "times_zero_1" (formula "57") (term "1,0,0,1"))
                                             (rule "add_zero_right" (formula "57") (term "0,0,1"))
                                             (rule "leq_literals" (formula "57") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "57"))
                                             (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "57"))
                                             (rule "leq_literals" (formula "26") (term "0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "inEqSimp_contradInEq0" (formula "56") (ifseqformula "26"))
                                             (rule "qeq_literals" (formula "56") (term "0"))
                                              (builtin "One Step Simplification" (formula "56"))
                                             (rule "closeFalse" (formula "56"))
                                          )
                                       )
                                       (branch "d_bin >= 0 FALSE"
                                          (rule "eqSymm" (formula "8"))
                                          (rule "inEqSimp_geqRight" (formula "63"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "applyEq" (formula "67") (term "0,1,0,2,0") (ifseqformula "9"))
                                          (rule "polySimp_mulComm0" (formula "67") (term "1,0,2,0"))
                                          (rule "polySimp_rightDist" (formula "67") (term "1,0,2,0"))
                                          (rule "polySimp_mulAssoc" (formula "67") (term "0,1,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "67") (term "0,0,1,0,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "67") (term "0,1,0,2,0"))
                                          (rule "polySimp_elimOne" (formula "67") (term "0,1,0,2,0"))
                                          (rule "polySimp_addAssoc" (formula "67") (term "0,2,0"))
                                          (rule "polySimp_addComm0" (formula "67") (term "0,0,2,0"))
                                          (rule "applyEq" (formula "30") (term "1,0,0,1") (ifseqformula "9"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "30") (term "0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "14") (term "0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "true_left" (formula "14"))
                                          (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                                          (rule "polySimp_mulAssoc" (formula "7") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "7") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                                          (rule "neg_literal" (formula "7") (term "0,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "7") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,0"))
                                          (rule "qeq_literals" (formula "7") (term "0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "7"))
                                          (rule "leq_literals" (formula "5") (term "0"))
                                           (builtin "One Step Simplification" (formula "5"))
                                          (rule "true_left" (formula "5"))
                                          (rule "all_pull_out3" (formula "50") (term "0"))
                                          (rule "shift_paren_or" (formula "50") (term "0,0"))
                                          (rule "shift_paren_or" (formula "50") (term "0,0,0"))
                                          (rule "shift_paren_or" (formula "50") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "50") (term "0,0,0,0,0"))
                                          (rule "allLeft" (formula "53") (inst "t=b"))
                                          (rule "polySimp_addComm1" (formula "53") (term "1,0,0,1,0,2,0,1"))
                                          (rule "polySimp_addComm1" (formula "53") (term "1,1,0,0,0,2,0,1"))
                                          (rule "polySimp_addComm1" (formula "53") (term "1,0,0,1,0,0,2,0,1"))
                                          (rule "inEqSimp_commuteGeq" (formula "53") (term "1,0"))
                                          (rule "applyEq" (formula "53") (term "1,1,0,1,0,2,0,1") (ifseqformula "28"))
                                          (rule "applyEq" (formula "53") (term "0,1,0,1,0,0,1,0,2,0,1") (ifseqformula "28"))
                                          (rule "polySimp_addComm1" (formula "53") (term "0,2,0,1"))
                                          (rule "applyEq" (formula "53") (term "0,1,0,1,0,0,1,0,2,0,1") (ifseqformula "28"))
                                          (rule "polySimp_addComm1" (formula "53") (term "0,2,0,1"))
                                          (rule "apply_eq_monomials" (formula "53") (term "1,0,2,0,1") (ifseqformula "29"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,1,0,2,0,1"))
                                          (rule "polySimp_rightDist" (formula "53") (term "0,1,0,2,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,0,2,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "53") (term "1,0,2,0,1"))
                                          (rule "add_literals" (formula "53") (term "1,1,1,0,2,0,1"))
                                          (rule "times_zero_1" (formula "53") (term "1,1,0,2,0,1"))
                                          (rule "add_zero_right" (formula "53") (term "1,0,2,0,1"))
                                          (rule "polySimp_rightDist" (formula "53") (term "1,0,2,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,2,0,1"))
                                          (rule "polySimp_rightDist" (formula "53") (term "0,1,0,2,0,1"))
                                          (rule "polySimp_rightDist" (formula "53") (term "0,0,1,0,2,0,1"))
                                          (rule "polySimp_rightDist" (formula "53") (term "0,0,0,1,0,2,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0,1,0,2,0,1"))
                                          (rule "polySimp_elimOne" (formula "53") (term "1,0,0,0,1,0,2,0,1"))
                                          (rule "polySimp_rightDist" (formula "53") (term "0,0,0,0,1,0,2,0,1"))
                                          (rule "mul_literals" (formula "53") (term "0,0,0,0,0,1,0,2,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0,0,1,0,2,0,1"))
                                          (rule "polySimp_elimOne" (formula "53") (term "1,0,0,0,0,1,0,2,0,1"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "0,2,0,1"))
                                          (rule "polySimp_addComm1" (formula "53") (term "0,0,2,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "53") (term "0,2,0,1"))
                                          (rule "add_literals" (formula "53") (term "1,1,0,2,0,1"))
                                          (rule "times_zero_1" (formula "53") (term "1,0,2,0,1"))
                                          (rule "add_zero_right" (formula "53") (term "0,2,0,1"))
                                          (rule "polySimp_addComm1" (formula "53") (term "0,2,0,1"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "0,0,2,0,1"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,2,0,1"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,0,2,0,1"))
                                          (rule "polySimp_addAssoc" (formula "53") (term "0,0,0,0,0,2,0,1"))
                                          (rule "add_literals" (formula "53") (term "0,0,0,0,0,0,2,0,1"))
                                          (rule "add_zero_left" (formula "53") (term "0,0,0,0,0,2,0,1"))
                                          (rule "applyEq" (formula "53") (term "0,1,0,1,1,0,2,0,1") (ifseqformula "28"))
                                          (rule "polySimp_pullOutFactor2b" (formula "53") (term "0,2,0,1"))
                                          (rule "add_literals" (formula "53") (term "1,1,0,2,0,1"))
                                          (rule "times_zero_1" (formula "53") (term "1,0,2,0,1"))
                                          (rule "add_zero_right" (formula "53") (term "0,2,0,1"))
                                          (rule "replace_known_right" (formula "53") (term "1") (ifseqformula "67"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "inEqSimp_contradInEq0" (formula "53") (term "1,0") (ifseqformula "26"))
                                          (rule "qeq_literals" (formula "53") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "inEqSimp_contradInEq1" (formula "53") (term "0") (ifseqformula "25"))
                                          (rule "qeq_literals" (formula "53") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "53"))
                                          (rule "inEqSimp_exactShadow3" (formula "63") (ifseqformula "53"))
                                          (rule "polySimp_mulAssoc" (formula "63") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "63") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "63") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "63") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "63"))
                                          (rule "polySimp_mulLiterals" (formula "63") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "63"))
                                          (rule "andLeft" (formula "27"))
                                          (rule "inEqSimp_homoInEq1" (formula "27"))
                                          (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                          (rule "add_literals" (formula "27") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "27") (term "1,0"))
                                          (rule "add_literals" (formula "27") (term "0"))
                                          (rule "leq_literals" (formula "27"))
                                          (rule "closeFalse" (formula "27"))
                                       )
                                    )
                                    (branch "CUT: self.sorted_splitters[b_bin + d_bin * -1] <= -1 + value FALSE"
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "inEqSimp_leqRight" (formula "53"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "applyEq" (formula "8") (term "0") (ifseqformula "15"))
                                       (rule "inEqSimp_homoInEq1" (formula "8"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                       (rule "add_literals" (formula "8") (term "0,0"))
                                       (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "7") (term "0") (ifseqformula "15"))
                                       (rule "inEqSimp_homoInEq0" (formula "7"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                       (rule "add_literals" (formula "7") (term "0,0"))
                                       (rule "applyEq" (formula "57") (term "0,0,1,0,2,0") (ifseqformula "15"))
                                       (rule "applyEq" (formula "1") (term "0,1,0,2,1,0") (ifseqformula "15"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,2,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,2,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,2,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,2,1,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,0,2,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,2,1,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,2,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,2,1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,2,1,0"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "15"))
                                       (rule "inEqSimp_homoInEq0" (formula "12"))
                                       (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
                                       (rule "add_literals" (formula "12") (term "1,0"))
                                       (rule "times_zero_1" (formula "12") (term "0"))
                                       (rule "qeq_literals" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "applyEq" (formula "2") (term "0,0,1,2,0") (ifseqformula "14"))
                                       (rule "polySimp_addComm0" (formula "2") (term "2,0"))
                                       (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "2") (term "0,1") (ifseqformula "14"))
                                       (rule "applyEq" (formula "25") (term "1") (ifseqformula "14"))
                                       (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "14"))
                                       (rule "polySimp_addComm0" (formula "2") (term "2,0"))
                                       (rule "applyEq" (formula "21") (term "0,1,0,0,1") (ifseqformula "14"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "0,0"))
                                       (rule "mul_literals" (formula "2") (term "1,0,0"))
                                       (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "6"))
                                       (rule "leq_literals" (formula "7") (term "0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "commute_or_2" (formula "39") (term "0,0,1,0"))
                                       (rule "onlyCreatedObjectsAreReferencedFinal" (formula "54") (term "1,1") (ifseqformula "3") (ifseqformula "4"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "52"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferencedFinal" (formula "55") (term "1,0") (ifseqformula "4") (ifseqformula "5"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "54"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "div_axiom" (formula "31") (term "0") (inst "quotient=quotient_1"))
                                       (rule "mul_literals" (formula "31") (term "1,1,1,1,1"))
                                       (rule "qeq_literals" (formula "31") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "31"))
                                       (rule "equal_literals" (formula "31") (term "0"))
                                        (builtin "One Step Simplification" (formula "31"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,1"))
                                       (rule "add_literals" (formula "33") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "33") (term "1"))
                                       (rule "add_literals" (formula "33") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "32"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "33"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0"))
                                       (rule "applyEq" (formula "31") (term "0") (ifseqformula "34"))
                                       (rule "eqSymm" (formula "31"))
                                       (rule "applyEq" (formula "33") (term "0,1,0,0") (ifseqformula "31"))
                                       (rule "times_zero_2" (formula "33") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "33") (term "0,0"))
                                       (rule "applyEq" (formula "32") (term "0,1,0,0") (ifseqformula "31"))
                                       (rule "times_zero_2" (formula "32") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "32") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                                       (rule "mul_literals" (formula "33") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                       (rule "mul_literals" (formula "32") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "35"))
                                       (rule "leq_literals" (formula "32") (term "0"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "true_left" (formula "32"))
                                       (rule "commute_or_2" (formula "44") (term "0,0,0"))
                                       (rule "shift_paren_or" (formula "43") (term "0,0,0"))
                                       (rule "commute_or" (formula "42") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "42") (term "0,0,0,1,0"))
                                       (rule "cnf_rightDist" (formula "43") (term "0"))
                                       (rule "distr_forallAnd" (formula "43"))
                                       (rule "andLeft" (formula "43"))
                                       (rule "commute_or" (formula "44") (term "0"))
                                       (rule "commute_or" (formula "45") (term "0,0,0,0"))
                                       (rule "inEqSimp_or_subsumption0" (formula "45") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "45") (term "0,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "45"))
                                       (rule "shift_paren_or" (formula "42") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "42") (term "0,0,1,0"))
                                       (rule "commute_or" (formula "43") (term "0,0,0,0"))
                                       (rule "inEqSimp_or_subsumption0" (formula "43") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "43") (term "0,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "commute_or" (formula "44") (term "0,0,0,0"))
                                       (rule "inEqSimp_or_subsumption0" (formula "44") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "44") (term "0,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "44"))
                                       (rule "commute_or" (formula "42") (term "0,0,0,0"))
                                       (rule "inEqSimp_or_subsumption0" (formula "42") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "42") (term "0,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "commute_or" (formula "42") (term "0,0,0,0,1,0"))
                                       (rule "div_axiom" (formula "4") (term "1,0") (inst "quotient=quotient_2"))
                                       (rule "mul_literals" (formula "4") (term "1,1,1,1,1"))
                                       (rule "qeq_literals" (formula "4") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "equal_literals" (formula "4") (term "0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "andLeft" (formula "4"))
                                       (rule "polySimp_addAssoc" (formula "6") (term "0,1"))
                                       (rule "add_literals" (formula "6") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "6") (term "1"))
                                       (rule "add_literals" (formula "6") (term "0,1"))
                                       (rule "add_zero_left" (formula "6") (term "1"))
                                       (rule "inEqSimp_commuteGeq" (formula "6"))
                                       (rule "inEqSimp_homoInEq0" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "applyEq" (formula "7") (term "1,0") (ifseqformula "4"))
                                       (rule "applyEq" (formula "7") (term "0,1,2,0") (ifseqformula "4"))
                                       (rule "polySimp_addComm1" (formula "7") (term "2,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1"))
                                       (rule "mul_literals" (formula "5") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "6"))
                                       (rule "mul_literals" (formula "11") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                       (rule "mul_literals" (formula "11") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcdRightDiv=Z(neglit(4(2(8(1(4(7(3(7(0(1(#))))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "11") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                                       (rule "add_zero_right" (formula "11") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                       (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "11") (term "0,0"))
                                       (rule "leq_literals" (formula "11") (term "0"))
                                        (builtin "One Step Simplification" (formula "11"))
                                       (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "16"))
                                       (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                       (rule "mul_literals" (formula "5") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "add_literals" (formula "5") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "5") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(2(#))"))
                                       (rule "neg_literal" (formula "5") (term "0,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "5") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "5") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "5") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "5") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "5") (term "0,0"))
                                       (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "5") (term "0,0"))
                                       (rule "qeq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "jdiv_axiom" (formula "63") (term "0,1,0,2,0"))
                                       (rule "eqSymm" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0,2,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0,2,0"))
                                       (rule "applyEq" (formula "1") (term "1,0") (ifseqformula "5"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "polyDiv_pullOut" (formula "1") (term "0,2,0") (inst "polyDivCoeff=mul(b_bin, Z(neglit(1(#))))"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,2,0"))
                                       (rule "equal_literals" (formula "1") (term "0,0,2,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,2,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,0,0,2,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,0,0,0,2,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "2,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "1,2,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "2,0"))
                                       (rule "polySimp_mulAssoc" (formula "1") (term "0,2,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,2,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0,2,0"))
                                       (rule "polyDiv_pullOut" (formula "1") (term "0,1,2,0") (inst "polyDivCoeff=Z(neglit(1(#)))"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,1,2,0"))
                                       (rule "equal_literals" (formula "1") (term "0,0,1,2,0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0,0,1,2,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "1,1,2,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0,1,1,1,2,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,1,1,1,2,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,2,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,2,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "2,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,2,0"))
                                       (rule "apply_eq_monomials" (formula "1") (term "1,2,0") (ifseqformula "5"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,2,0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,0,1,2,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "1,2,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,1,2,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,1,2,0"))
                                       (rule "add_zero_right" (formula "1") (term "1,2,0"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,2,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "2,0"))
                                       (rule "all_pull_out3" (formula "47") (term "0"))
                                       (rule "shift_paren_or" (formula "47") (term "0,0"))
                                       (rule "shift_paren_or" (formula "47") (term "0,0,0"))
                                       (rule "shift_paren_or" (formula "47") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "47") (term "0,0,0,0,0"))
                                       (rule "ifthenelse_split" (formula "8") (term "0"))
                                       (branch "b_bin >= -1 TRUE"
                                          (rule "eqSymm" (formula "9"))
                                          (rule "applyEq" (formula "64") (term "0,1,0,2,0") (ifseqformula "9"))
                                          (rule "polySimp_addComm0" (formula "64") (term "0,2,0"))
                                          (rule "applyEq" (formula "27") (term "1,0,0,1") (ifseqformula "9"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0,0,1"))
                                          (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "8"))
                                          (rule "leq_literals" (formula "14") (term "0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "true_left" (formula "14"))
                                          (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "7"))
                                          (rule "mul_literals" (formula "8") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                          (rule "mul_literals" (formula "8") (term "1"))
                                          (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "8") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,0"))
                                          (rule "leq_literals" (formula "8") (term "0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "8"))
                                          (rule "leq_literals" (formula "14") (term "0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "true_left" (formula "14"))
                                          (rule "allLeft" (formula "50") (inst "t=b"))
                                          (rule "polySimp_addComm1" (formula "50") (term "1,0,0,1,0,0,2,0,1"))
                                          (rule "polySimp_addComm1" (formula "50") (term "1,1,0,0,0,2,0,1"))
                                          (rule "polySimp_addComm1" (formula "50") (term "1,0,0,1,0,2,0,1"))
                                          (rule "inEqSimp_commuteGeq" (formula "50") (term "1,0"))
                                          (rule "applyEq" (formula "50") (term "1,1,0,1,0,2,0,1") (ifseqformula "25"))
                                          (rule "applyEq" (formula "50") (term "0,1,0,1,0,0,1,0,2,0,1") (ifseqformula "25"))
                                          (rule "polySimp_addComm1" (formula "50") (term "0,2,0,1"))
                                          (rule "applyEq" (formula "50") (term "0,1,0,1,0,0,1,0,2,0,1") (ifseqformula "25"))
                                          (rule "polySimp_addComm1" (formula "50") (term "0,2,0,1"))
                                          (rule "apply_eq_monomials" (formula "50") (term "1,0,2,0,1") (ifseqformula "26"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,1,0,2,0,1"))
                                          (rule "polySimp_rightDist" (formula "50") (term "0,1,0,2,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,0,2,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "50") (term "1,0,2,0,1"))
                                          (rule "add_literals" (formula "50") (term "1,1,1,0,2,0,1"))
                                          (rule "times_zero_1" (formula "50") (term "1,1,0,2,0,1"))
                                          (rule "add_zero_right" (formula "50") (term "1,0,2,0,1"))
                                          (rule "polySimp_rightDist" (formula "50") (term "1,0,2,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,2,0,1"))
                                          (rule "polySimp_rightDist" (formula "50") (term "0,1,0,2,0,1"))
                                          (rule "polySimp_rightDist" (formula "50") (term "0,0,1,0,2,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,1,0,2,0,1"))
                                          (rule "polySimp_elimOne" (formula "50") (term "1,0,0,1,0,2,0,1"))
                                          (rule "polySimp_rightDist" (formula "50") (term "0,0,0,1,0,2,0,1"))
                                          (rule "mul_literals" (formula "50") (term "0,0,0,0,1,0,2,0,1"))
                                          (rule "polySimp_addAssoc" (formula "50") (term "0,2,0,1"))
                                          (rule "polySimp_addComm1" (formula "50") (term "0,0,2,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "50") (term "0,2,0,1"))
                                          (rule "add_literals" (formula "50") (term "1,1,0,2,0,1"))
                                          (rule "times_zero_1" (formula "50") (term "1,0,2,0,1"))
                                          (rule "add_zero_right" (formula "50") (term "0,2,0,1"))
                                          (rule "polySimp_addComm1" (formula "50") (term "0,2,0,1"))
                                          (rule "polySimp_addAssoc" (formula "50") (term "0,0,2,0,1"))
                                          (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,2,0,1"))
                                          (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,2,0,1"))
                                          (rule "add_literals" (formula "50") (term "0,0,0,0,0,2,0,1"))
                                          (rule "add_zero_left" (formula "50") (term "0,0,0,0,2,0,1"))
                                          (rule "applyEq" (formula "50") (term "0,1,0,1,1,0,2,0,1") (ifseqformula "25"))
                                          (rule "polySimp_pullOutFactor2b" (formula "50") (term "0,2,0,1"))
                                          (rule "add_literals" (formula "50") (term "1,1,0,2,0,1"))
                                          (rule "times_zero_1" (formula "50") (term "1,0,2,0,1"))
                                          (rule "add_zero_right" (formula "50") (term "0,2,0,1"))
                                          (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "64"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "inEqSimp_contradInEq1" (formula "50") (term "0,0") (ifseqformula "22"))
                                          (rule "qeq_literals" (formula "50") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "inEqSimp_contradInEq0" (formula "50") (term "0") (ifseqformula "23"))
                                          (rule "qeq_literals" (formula "50") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "50"))
                                          (rule "mul_literals" (formula "39") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                          (rule "mul_literals" (formula "39") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "39"))
                                          (rule "leq_literals" (formula "22") (term "0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "inEqSimp_exactShadow3" (formula "60") (ifseqformula "50"))
                                          (rule "polySimp_mulAssoc" (formula "60") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "60") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "60") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "60") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "60"))
                                          (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                          (rule "inEqSimp_contradInEq2" (formula "23") (ifseqformula "60"))
                                          (rule "greater_literals" (formula "23") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "greater_literals" (formula "23") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1"))
                                          (rule "mul_literals" (formula "23") (term "0,1"))
                                          (rule "inEqSimp_homoInEq1" (formula "23"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "23") (term "0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0"))
                                          (rule "add_literals" (formula "23") (term "0"))
                                          (rule "leq_literals" (formula "23"))
                                          (rule "closeFalse" (formula "23"))
                                       )
                                       (branch "b_bin >= -1 FALSE"
                                          (rule "eqSymm" (formula "8"))
                                          (rule "inEqSimp_geqRight" (formula "60"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "applyEq" (formula "64") (term "0,1,0,2,0") (ifseqformula "9"))
                                          (rule "polySimp_mulComm0" (formula "64") (term "1,0,2,0"))
                                          (rule "polySimp_rightDist" (formula "64") (term "1,0,2,0"))
                                          (rule "polySimp_rightDist" (formula "64") (term "0,1,0,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "64") (term "1,0,1,0,2,0"))
                                          (rule "mul_literals" (formula "64") (term "0,0,1,0,2,0"))
                                          (rule "polySimp_elimOne" (formula "64") (term "1,0,1,0,2,0"))
                                          (rule "polySimp_addAssoc" (formula "64") (term "0,2,0"))
                                          (rule "polySimp_addComm0" (formula "64") (term "0,0,2,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,2,0"))
                                          (rule "add_literals" (formula "64") (term "1,1,0,2,0"))
                                          (rule "times_zero_1" (formula "64") (term "1,0,2,0"))
                                          (rule "add_zero_right" (formula "64") (term "0,2,0"))
                                          (rule "applyEq" (formula "27") (term "1,0,0,1") (ifseqformula "9"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1"))
                                          (rule "polySimp_pullOutFactor2b" (formula "27") (term "0,0,1"))
                                          (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
                                          (rule "add_literals" (formula "27") (term "0,0,0,1"))
                                          (rule "add_zero_left" (formula "27") (term "0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "18") (term "0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                          (rule "mul_literals" (formula "7") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "7") (term "0"))
                                          (rule "add_literals" (formula "7") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "7") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(2(#))"))
                                          (rule "neg_literal" (formula "7") (term "0,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,0,0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0"))
                                          (rule "leq_literals" (formula "7") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "mul_literals" (formula "7") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "7") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "7") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                                          (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "7") (term "0,0"))
                                          (rule "qeq_literals" (formula "7") (term "0"))
                                           (builtin "One Step Simplification" (formula "7"))
                                          (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "7"))
                                          (rule "leq_literals" (formula "6") (term "0"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "allLeft" (formula "50") (inst "t=b"))
                                          (rule "polySimp_addComm1" (formula "50") (term "1,1,0,0,0,2,0,1"))
                                          (rule "polySimp_addComm1" (formula "50") (term "1,0,0,1,0,0,2,0,1"))
                                          (rule "polySimp_addComm1" (formula "50") (term "1,0,0,1,0,2,0,1"))
                                          (rule "inEqSimp_commuteGeq" (formula "50") (term "1,0"))
                                          (rule "applyEq" (formula "50") (term "1,1,0,1,0,2,0,1") (ifseqformula "25"))
                                          (rule "applyEq" (formula "50") (term "0,1,0,1,0,0,1,0,2,0,1") (ifseqformula "25"))
                                          (rule "polySimp_addComm1" (formula "50") (term "0,2,0,1"))
                                          (rule "applyEq" (formula "50") (term "0,1,0,1,0,0,1,0,2,0,1") (ifseqformula "25"))
                                          (rule "polySimp_addComm1" (formula "50") (term "0,2,0,1"))
                                          (rule "apply_eq_monomials" (formula "50") (term "1,0,2,0,1") (ifseqformula "26"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,1,0,2,0,1"))
                                          (rule "polySimp_rightDist" (formula "50") (term "0,1,0,2,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,0,2,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "50") (term "1,0,2,0,1"))
                                          (rule "add_literals" (formula "50") (term "1,1,1,0,2,0,1"))
                                          (rule "times_zero_1" (formula "50") (term "1,1,0,2,0,1"))
                                          (rule "add_zero_right" (formula "50") (term "1,0,2,0,1"))
                                          (rule "polySimp_rightDist" (formula "50") (term "1,0,2,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,2,0,1"))
                                          (rule "polySimp_rightDist" (formula "50") (term "0,1,0,2,0,1"))
                                          (rule "polySimp_mulAssoc" (formula "50") (term "0,0,1,0,2,0,1"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "0,0,0,1,0,2,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "0,0,1,0,2,0,1"))
                                          (rule "polySimp_elimOne" (formula "50") (term "0,0,1,0,2,0,1"))
                                          (rule "polySimp_addAssoc" (formula "50") (term "0,2,0,1"))
                                          (rule "polySimp_addComm1" (formula "50") (term "0,0,2,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "50") (term "0,2,0,1"))
                                          (rule "add_literals" (formula "50") (term "1,1,0,2,0,1"))
                                          (rule "times_zero_1" (formula "50") (term "1,0,2,0,1"))
                                          (rule "add_zero_right" (formula "50") (term "0,2,0,1"))
                                          (rule "polySimp_addComm1" (formula "50") (term "0,2,0,1"))
                                          (rule "polySimp_addAssoc" (formula "50") (term "0,0,2,0,1"))
                                          (rule "applyEq" (formula "50") (term "0,1,0,1,1,0,2,0,1") (ifseqformula "25"))
                                          (rule "polySimp_pullOutFactor2b" (formula "50") (term "0,2,0,1"))
                                          (rule "add_literals" (formula "50") (term "1,1,0,2,0,1"))
                                          (rule "times_zero_1" (formula "50") (term "1,0,2,0,1"))
                                          (rule "add_zero_right" (formula "50") (term "0,2,0,1"))
                                          (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "64"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "inEqSimp_contradInEq0" (formula "50") (term "1,0") (ifseqformula "23"))
                                          (rule "qeq_literals" (formula "50") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "inEqSimp_contradInEq1" (formula "50") (term "0") (ifseqformula "22"))
                                          (rule "qeq_literals" (formula "50") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "inEqSimp_exactShadow3" (formula "60") (ifseqformula "50"))
                                          (rule "polySimp_mulAssoc" (formula "60") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "60") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "60") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "60") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "60"))
                                          (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "60"))
                                          (rule "andLeft" (formula "24"))
                                          (rule "inEqSimp_homoInEq1" (formula "24"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                          (rule "add_literals" (formula "24") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "24") (term "1,0"))
                                          (rule "add_literals" (formula "24") (term "0"))
                                          (rule "leq_literals" (formula "24"))
                                          (rule "closeFalse" (formula "24"))
                                       )
                                    )
                                 )
                                 (branch "CUT: self.sorted_splitters[b_bin] >= value FALSE"
                                     (builtin "One Step Simplification" (formula "15"))
                                    (rule "inEqSimp_geqRight" (formula "53"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "applyEq" (formula "39") (term "0") (ifseqformula "16"))
                                    (rule "inEqSimp_homoInEq0" (formula "39"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1,0"))
                                    (rule "mul_literals" (formula "39") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "39") (term "0"))
                                    (rule "add_literals" (formula "39") (term "0,0"))
                                    (rule "applyEq" (formula "44") (term "1,1,0,0") (ifseqformula "16"))
                                    (rule "applyEq" (formula "53") (term "0") (ifseqformula "16"))
                                    (rule "inEqSimp_commuteGeq" (formula "53"))
                                    (rule "applyEq" (formula "41") (term "1") (ifseqformula "16"))
                                    (rule "applyEq" (formula "42") (term "1,1,1,0,0,0,1,0") (ifseqformula "16"))
                                    (rule "polySimp_addAssoc" (formula "42") (term "1,1,0,0,0,1,0"))
                                    (rule "add_literals" (formula "42") (term "0,1,1,0,0,0,1,0"))
                                    (rule "add_zero_left" (formula "42") (term "1,1,0,0,0,1,0"))
                                    (rule "applyEq" (formula "34") (term "0") (ifseqformula "16"))
                                    (rule "inEqSimp_homoInEq1" (formula "34"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                    (rule "mul_literals" (formula "34") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                    (rule "add_literals" (formula "34") (term "0,0"))
                                    (rule "applyEq" (formula "14") (term "0") (ifseqformula "16"))
                                    (rule "inEqSimp_homoInEq1" (formula "14"))
                                    (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                                    (rule "add_literals" (formula "14") (term "1,0"))
                                    (rule "times_zero_1" (formula "14") (term "0"))
                                    (rule "leq_literals" (formula "14"))
                                    (rule "true_left" (formula "14"))
                                    (rule "applyEq" (formula "41") (term "1,1,1,0,0") (ifseqformula "15"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "1,1,0,0"))
                                    (rule "add_literals" (formula "41") (term "0,1,1,0,0"))
                                    (rule "add_zero_left" (formula "41") (term "1,1,0,0"))
                                    (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "15"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,0"))
                                    (rule "applyEq" (formula "36") (term "1") (ifseqformula "15"))
                                    (rule "applyEq" (formula "42") (term "1,1,0,0") (ifseqformula "15"))
                                    (rule "applyEq" (formula "26") (term "1") (ifseqformula "15"))
                                    (rule "applyEq" (formula "42") (term "0,1,0,0,1,1,1,0") (ifseqformula "15"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,1,1,0"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,1,1,0"))
                                    (rule "mul_literals" (formula "42") (term "0,1,0,0,1,1,1,0"))
                                    (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,1,1,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,0,1,1,1,0"))
                                    (rule "add_zero_left" (formula "42") (term "0,0,1,1,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "33"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                    (rule "polySimp_elimOne" (formula "33") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "33"))
                                    (rule "leq_literals" (formula "6") (term "0"))
                                     (builtin "One Step Simplification" (formula "6"))
                                    (rule "true_left" (formula "6"))
                                    (rule "polyDiv_pullOut" (formula "30") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,2,0"))
                                    (rule "equal_literals" (formula "30") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "30"))
                                    (rule "mul_literals" (formula "30") (term "1,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "30") (term "0"))
                                    (rule "polySimp_addComm1" (formula "30") (term "0,1,0"))
                                    (rule "add_literals" (formula "30") (term "0,0,1,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "30"))
                                    (rule "mul_literals" (formula "30") (term "1"))
                                    (rule "inEqSimp_exactShadow0" (formula "18") (ifseqformula "50"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "greater_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                    (rule "mul_literals" (formula "18") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                    (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                    (rule "add_literals" (formula "18") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "18") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1"))
                                    (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcdRightDiv=b") (inst "elimGcdLeftDiv=b_bin") (inst "elimGcd=Z(2(#))"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,1,0"))
                                    (rule "leq_literals" (formula "18") (term "0,0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                    (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                    (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "18") (term "0,0"))
                                    (rule "leq_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "35"))
                                    (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "36") (term "0"))
                                    (rule "add_literals" (formula "36") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "0"))
                                    (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "37"))
                                    (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                                    (rule "mul_literals" (formula "39") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0"))
                                    (rule "add_literals" (formula "39") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "0"))
                                    (rule "inEqSimp_exactShadow2" (formula "44") (ifseqformula "51"))
                                    (rule "mul_literals" (formula "44") (term "1,0,0,1"))
                                    (rule "greater_literals" (formula "44") (term "0"))
                                     (builtin "One Step Simplification" (formula "44"))
                                    (rule "mul_literals" (formula "44") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "44") (term "0"))
                                    (rule "add_literals" (formula "44") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                    (rule "mul_literals" (formula "44") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "12"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "18") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                    (rule "polySimp_elimOne" (formula "18") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "17"))
                                    (rule "leq_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "true_left" (formula "18"))
                                    (rule "cut_direct" (formula "13") (term "1"))
                                    (branch "CUT: self.sorted_splitters[b_bin + d_bin * -1] <= -1 + value TRUE"
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "true_left" (formula "14"))
                                       (rule "div_axiom" (formula "2") (term "1,0") (inst "quotient=quotient_1"))
                                       (rule "equal_literals" (formula "2") (term "0"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "qeq_literals" (formula "2") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "2"))
                                       (rule "mul_literals" (formula "2") (term "1,1,1"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "andLeft" (formula "2"))
                                       (rule "polySimp_addComm1" (formula "4") (term "1"))
                                       (rule "add_literals" (formula "4") (term "0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "2"))
                                       (rule "applyEq" (formula "5") (term "0,1,2,0") (ifseqformula "2"))
                                       (rule "polySimp_addComm0" (formula "5") (term "2,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "4"))
                                       (rule "mul_literals" (formula "10") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                       (rule "add_literals" (formula "10") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                       (rule "mul_literals" (formula "10") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "10") (inst "elimGcdRightDiv=Z(neglit(4(2(8(1(4(7(3(7(0(1(#))))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "10") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                       (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "10") (term "0,0"))
                                       (rule "leq_literals" (formula "10") (term "0"))
                                        (builtin "One Step Simplification" (formula "10"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "9"))
                                       (rule "polySimp_mulAssoc" (formula "3") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "3") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "3") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                                       (rule "neg_literal" (formula "3") (term "0,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0,1,0"))
                                       (rule "leq_literals" (formula "3") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "mul_literals" (formula "3") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "3") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "16"))
                                       (rule "polySimp_mulAssoc" (formula "4") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                       (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "18"))
                                       (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "inEqSimp_subsumption4" (formula "4") (ifseqformula "3"))
                                       (rule "mul_literals" (formula "4") (term "0,1,0"))
                                       (rule "greater_literals" (formula "4") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "leq_literals" (formula "4") (term "0"))
                                        (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "commute_or" (formula "46") (term "1,0,0,1,0"))
                                       (rule "onlyCreatedObjectsAreReferencedFinal" (formula "61") (term "1,0") (ifseqformula "8") (ifseqformula "9"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferencedFinal" (formula "62") (term "1,1") (ifseqformula "9") (ifseqformula "10"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "60"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "commute_or_2" (formula "50") (term "0,0,0"))
                                       (rule "shift_paren_or" (formula "49") (term "0,0,0"))
                                       (rule "commute_or" (formula "48") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "48") (term "0,0,0,1,0"))
                                       (rule "cnf_rightDist" (formula "49") (term "0"))
                                       (rule "distr_forallAnd" (formula "49"))
                                       (rule "andLeft" (formula "49"))
                                       (rule "commute_or" (formula "50") (term "0"))
                                       (rule "commute_or" (formula "51") (term "0,0,0,0"))
                                       (rule "inEqSimp_or_subsumption0" (formula "51") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "51") (term "0,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "51"))
                                       (rule "div_axiom" (formula "39") (term "0") (inst "quotient=quotient_2"))
                                       (rule "mul_literals" (formula "39") (term "1,1,1,1,1"))
                                       (rule "qeq_literals" (formula "39") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "39"))
                                       (rule "equal_literals" (formula "39") (term "0"))
                                        (builtin "One Step Simplification" (formula "39"))
                                       (rule "andLeft" (formula "39"))
                                       (rule "andLeft" (formula "39"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,1"))
                                       (rule "add_literals" (formula "41") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "41") (term "1"))
                                       (rule "add_literals" (formula "41") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "40"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "40") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "41"))
                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "41") (term "0"))
                                       (rule "applyEq" (formula "39") (term "0") (ifseqformula "42"))
                                       (rule "eqSymm" (formula "39"))
                                       (rule "applyEq" (formula "40") (term "0,1,0,0") (ifseqformula "39"))
                                       (rule "mul_literals" (formula "40") (term "1,0,0"))
                                       (rule "add_literals" (formula "40") (term "0,0"))
                                       (rule "applyEqRigid" (formula "41") (term "0,1,0,0") (ifseqformula "39"))
                                       (rule "mul_literals" (formula "41") (term "1,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                       (rule "mul_literals" (formula "40") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "41"))
                                       (rule "mul_literals" (formula "41") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "43"))
                                       (rule "leq_literals" (formula "40") (term "0"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "true_left" (formula "40"))
                                       (rule "shift_paren_or" (formula "49") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "49") (term "0,0,1,0"))
                                       (rule "commute_or" (formula "50") (term "0,0,0,0"))
                                       (rule "inEqSimp_or_subsumption0" (formula "50") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "50") (term "0,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "commute_or" (formula "51") (term "0,0,0,0"))
                                       (rule "inEqSimp_or_subsumption0" (formula "51") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "51") (term "0,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "51"))
                                       (rule "commute_or" (formula "49") (term "0,0,0,0"))
                                       (rule "inEqSimp_or_subsumption0" (formula "49") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "49") (term "0,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "49"))
                                       (rule "commute_or" (formula "49") (term "0,0,0,1,0"))
                                       (rule "ifthenelse_split" (formula "9") (term "0"))
                                       (branch "d_bin >= 0 TRUE"
                                          (rule "eqSymm" (formula "10"))
                                          (rule "applyEq" (formula "66") (term "0,1,0,2,0") (ifseqformula "10"))
                                          (rule "polySimp_addComm0" (formula "66") (term "0,2,0"))
                                          (rule "applyEq" (formula "30") (term "1,0,0,1") (ifseqformula "10"))
                                          (rule "polySimp_addComm1" (formula "30") (term "0,0,1"))
                                          (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "9"))
                                          (rule "leq_literals" (formula "16") (term "0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "19"))
                                          (rule "times_zero_1" (formula "9") (term "0,0"))
                                          (rule "add_zero_left" (formula "9") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                          (rule "mul_literals" (formula "9") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "43"))
                                          (rule "leq_literals" (formula "9") (term "0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "8"))
                                          (rule "times_zero_1" (formula "9") (term "0,0"))
                                          (rule "add_zero_left" (formula "9") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                          (rule "mul_literals" (formula "9") (term "1"))
                                          (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "9") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                          (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "9") (term "0,0"))
                                          (rule "leq_literals" (formula "9") (term "0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "9"))
                                          (rule "leq_literals" (formula "16") (term "0"))
                                           (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "all_pull_out3" (formula "49") (term "0"))
                                          (rule "shift_paren_or" (formula "49") (term "0,0"))
                                          (rule "shift_paren_or" (formula "49") (term "0,0,0"))
                                          (rule "shift_paren_or" (formula "49") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "49") (term "0,0,0,0,0"))
                                          (rule "allLeft" (formula "52") (inst "t=b"))
                                          (rule "polySimp_addComm1" (formula "52") (term "1,0,0,1,0,0,2,0,1"))
                                          (rule "polySimp_addComm1" (formula "52") (term "1,0,0,1,0,2,0,1"))
                                          (rule "polySimp_addComm1" (formula "52") (term "1,1,0,0,0,2,0,1"))
                                          (rule "inEqSimp_homoInEq1" (formula "52") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "52") (term "0,1,0"))
                                          (rule "applyEq" (formula "52") (term "1,1,0,1,0,2,0,1") (ifseqformula "28"))
                                          (rule "applyEq" (formula "52") (term "0,1,0,1,0,0,1,0,2,0,1") (ifseqformula "28"))
                                          (rule "polySimp_addComm1" (formula "52") (term "0,2,0,1"))
                                          (rule "applyEq" (formula "52") (term "0,1,0,1,0,0,1,0,2,0,1") (ifseqformula "28"))
                                          (rule "polySimp_addComm1" (formula "52") (term "0,2,0,1"))
                                          (rule "apply_eq_monomials" (formula "52") (term "1,0,2,0,1") (ifseqformula "29"))
                                          (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,1,0,2,0,1"))
                                          (rule "polySimp_rightDist" (formula "52") (term "0,1,0,2,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "52") (term "1,0,1,0,2,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "52") (term "1,0,2,0,1"))
                                          (rule "add_literals" (formula "52") (term "1,1,1,0,2,0,1"))
                                          (rule "times_zero_1" (formula "52") (term "1,1,0,2,0,1"))
                                          (rule "add_zero_right" (formula "52") (term "1,0,2,0,1"))
                                          (rule "polySimp_rightDist" (formula "52") (term "1,0,2,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,2,0,1"))
                                          (rule "polySimp_rightDist" (formula "52") (term "0,1,0,2,0,1"))
                                          (rule "polySimp_rightDist" (formula "52") (term "0,0,1,0,2,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,1,0,2,0,1"))
                                          (rule "polySimp_elimOne" (formula "52") (term "1,0,0,1,0,2,0,1"))
                                          (rule "polySimp_rightDist" (formula "52") (term "0,0,0,1,0,2,0,1"))
                                          (rule "mul_literals" (formula "52") (term "0,0,0,0,1,0,2,0,1"))
                                          (rule "polySimp_addAssoc" (formula "52") (term "0,2,0,1"))
                                          (rule "polySimp_addComm1" (formula "52") (term "0,0,2,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "52") (term "0,2,0,1"))
                                          (rule "add_literals" (formula "52") (term "1,1,0,2,0,1"))
                                          (rule "times_zero_1" (formula "52") (term "1,0,2,0,1"))
                                          (rule "add_zero_right" (formula "52") (term "0,2,0,1"))
                                          (rule "polySimp_addComm1" (formula "52") (term "0,2,0,1"))
                                          (rule "polySimp_addAssoc" (formula "52") (term "0,0,2,0,1"))
                                          (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,2,0,1"))
                                          (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,2,0,1"))
                                          (rule "add_literals" (formula "52") (term "0,0,0,0,0,2,0,1"))
                                          (rule "add_zero_left" (formula "52") (term "0,0,0,0,2,0,1"))
                                          (rule "applyEq" (formula "52") (term "0,1,0,1,1,0,2,0,1") (ifseqformula "28"))
                                          (rule "polySimp_pullOutFactor2b" (formula "52") (term "0,2,0,1"))
                                          (rule "add_literals" (formula "52") (term "1,1,0,2,0,1"))
                                          (rule "times_zero_1" (formula "52") (term "1,0,2,0,1"))
                                          (rule "add_zero_right" (formula "52") (term "0,2,0,1"))
                                          (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "66"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "52") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "52") (term "1,1"))
                                          (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1"))
                                          (rule "mul_literals" (formula "52") (term "0,1,1"))
                                          (rule "polySimp_elimOne" (formula "52") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "52") (term "0,0") (ifseqformula "24"))
                                          (rule "qeq_literals" (formula "52") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "inEqSimp_contradInEq0" (formula "52") (term "0") (ifseqformula "25"))
                                          (rule "qeq_literals" (formula "52") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "inEqSimp_contradInEq0" (formula "26") (ifseqformula "52"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "inEqSimp_homoInEq1" (formula "26"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                          (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0"))
                                          (rule "add_literals" (formula "26") (term "0"))
                                          (rule "leq_literals" (formula "26"))
                                          (rule "closeFalse" (formula "26"))
                                       )
                                       (branch "d_bin >= 0 FALSE"
                                          (rule "eqSymm" (formula "9"))
                                          (rule "inEqSimp_geqRight" (formula "62"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "applyEq" (formula "66") (term "0,1,0,2,0") (ifseqformula "10"))
                                          (rule "polySimp_mulComm0" (formula "66") (term "1,0,2,0"))
                                          (rule "polySimp_rightDist" (formula "66") (term "1,0,2,0"))
                                          (rule "polySimp_mulAssoc" (formula "66") (term "0,1,0,2,0"))
                                          (rule "polySimp_mulComm0" (formula "66") (term "0,0,1,0,2,0"))
                                          (rule "polySimp_mulLiterals" (formula "66") (term "0,1,0,2,0"))
                                          (rule "polySimp_elimOne" (formula "66") (term "0,1,0,2,0"))
                                          (rule "polySimp_addAssoc" (formula "66") (term "0,2,0"))
                                          (rule "polySimp_addComm0" (formula "66") (term "0,0,2,0"))
                                          (rule "applyEq" (formula "30") (term "1,0,0,1") (ifseqformula "10"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                          (rule "polySimp_addComm1" (formula "30") (term "0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "14") (term "0"))
                                           (builtin "One Step Simplification" (formula "14"))
                                          (rule "true_left" (formula "14"))
                                          (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                                          (rule "polySimp_mulAssoc" (formula "8") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "8") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                          (rule "elimGcdLeq_antec" (formula "8") (inst "elimGcdRightDiv=Z(neglit(1(#)))") (inst "elimGcdLeftDiv=quotient_1") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,1,0"))
                                          (rule "neg_literal" (formula "8") (term "0,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "8") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                          (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "8") (term "0,0"))
                                          (rule "qeq_literals" (formula "8") (term "0"))
                                           (builtin "One Step Simplification" (formula "8"))
                                          (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "8"))
                                          (rule "leq_literals" (formula "6") (term "0"))
                                           (builtin "One Step Simplification" (formula "6"))
                                          (rule "true_left" (formula "6"))
                                          (rule "all_pull_out3" (formula "49") (term "0"))
                                          (rule "shift_paren_or" (formula "49") (term "0,0"))
                                          (rule "shift_paren_or" (formula "49") (term "0,0,0"))
                                          (rule "shift_paren_or" (formula "49") (term "0,0,0,0"))
                                          (rule "shift_paren_or" (formula "49") (term "0,0,0,0,0"))
                                          (rule "allLeft" (formula "52") (inst "t=b"))
                                          (rule "polySimp_addComm1" (formula "52") (term "1,0,0,1,0,0,2,0,1"))
                                          (rule "polySimp_addComm1" (formula "52") (term "1,0,0,1,0,2,0,1"))
                                          (rule "polySimp_addComm1" (formula "52") (term "1,1,0,0,0,2,0,1"))
                                          (rule "inEqSimp_homoInEq1" (formula "52") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "52") (term "0,1,0"))
                                          (rule "applyEq" (formula "52") (term "1,1,0,1,0,2,0,1") (ifseqformula "28"))
                                          (rule "applyEq" (formula "52") (term "0,1,0,1,0,0,1,0,2,0,1") (ifseqformula "28"))
                                          (rule "polySimp_addComm1" (formula "52") (term "0,2,0,1"))
                                          (rule "applyEq" (formula "52") (term "0,1,0,1,0,0,1,0,2,0,1") (ifseqformula "28"))
                                          (rule "polySimp_addComm1" (formula "52") (term "0,2,0,1"))
                                          (rule "apply_eq_monomials" (formula "52") (term "1,0,2,0,1") (ifseqformula "29"))
                                          (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,1,0,2,0,1"))
                                          (rule "polySimp_rightDist" (formula "52") (term "0,1,0,2,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "52") (term "1,0,1,0,2,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "52") (term "1,0,2,0,1"))
                                          (rule "add_literals" (formula "52") (term "1,1,1,0,2,0,1"))
                                          (rule "times_zero_1" (formula "52") (term "1,1,0,2,0,1"))
                                          (rule "add_zero_right" (formula "52") (term "1,0,2,0,1"))
                                          (rule "polySimp_rightDist" (formula "52") (term "1,0,2,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,2,0,1"))
                                          (rule "polySimp_rightDist" (formula "52") (term "0,1,0,2,0,1"))
                                          (rule "polySimp_rightDist" (formula "52") (term "0,0,1,0,2,0,1"))
                                          (rule "polySimp_rightDist" (formula "52") (term "0,0,0,1,0,2,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0,1,0,2,0,1"))
                                          (rule "polySimp_elimOne" (formula "52") (term "1,0,0,0,1,0,2,0,1"))
                                          (rule "polySimp_rightDist" (formula "52") (term "0,0,0,0,1,0,2,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0,0,1,0,2,0,1"))
                                          (rule "mul_literals" (formula "52") (term "0,0,0,0,0,1,0,2,0,1"))
                                          (rule "polySimp_elimOne" (formula "52") (term "1,0,0,0,0,1,0,2,0,1"))
                                          (rule "polySimp_addAssoc" (formula "52") (term "0,2,0,1"))
                                          (rule "polySimp_addComm1" (formula "52") (term "0,0,2,0,1"))
                                          (rule "polySimp_pullOutFactor0b" (formula "52") (term "0,2,0,1"))
                                          (rule "add_literals" (formula "52") (term "1,1,0,2,0,1"))
                                          (rule "times_zero_1" (formula "52") (term "1,0,2,0,1"))
                                          (rule "add_zero_right" (formula "52") (term "0,2,0,1"))
                                          (rule "polySimp_addComm1" (formula "52") (term "0,2,0,1"))
                                          (rule "polySimp_addAssoc" (formula "52") (term "0,0,2,0,1"))
                                          (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,2,0,1"))
                                          (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,2,0,1"))
                                          (rule "polySimp_addAssoc" (formula "52") (term "0,0,0,0,0,2,0,1"))
                                          (rule "add_literals" (formula "52") (term "0,0,0,0,0,0,2,0,1"))
                                          (rule "add_zero_left" (formula "52") (term "0,0,0,0,0,2,0,1"))
                                          (rule "applyEq" (formula "52") (term "0,1,0,1,1,0,2,0,1") (ifseqformula "28"))
                                          (rule "polySimp_pullOutFactor2b" (formula "52") (term "0,2,0,1"))
                                          (rule "add_literals" (formula "52") (term "1,1,0,2,0,1"))
                                          (rule "times_zero_1" (formula "52") (term "1,0,2,0,1"))
                                          (rule "add_zero_right" (formula "52") (term "0,2,0,1"))
                                          (rule "replace_known_right" (formula "52") (term "1") (ifseqformula "66"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "52") (term "1"))
                                          (rule "polySimp_mulComm0" (formula "52") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "52") (term "1,1"))
                                          (rule "polySimp_mulLiterals" (formula "52") (term "1,1,1"))
                                          (rule "mul_literals" (formula "52") (term "0,1,1"))
                                          (rule "polySimp_elimOne" (formula "52") (term "1,1,1"))
                                          (rule "inEqSimp_contradInEq0" (formula "52") (term "1,0") (ifseqformula "25"))
                                          (rule "qeq_literals" (formula "52") (term "0,1,0"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "inEqSimp_contradInEq1" (formula "52") (term "0") (ifseqformula "24"))
                                          (rule "qeq_literals" (formula "52") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "inEqSimp_contradInEq0" (formula "26") (ifseqformula "52"))
                                          (rule "andLeft" (formula "26"))
                                          (rule "inEqSimp_homoInEq1" (formula "26"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                          (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0"))
                                          (rule "add_literals" (formula "26") (term "0"))
                                          (rule "leq_literals" (formula "26"))
                                          (rule "closeFalse" (formula "26"))
                                       )
                                    )
                                    (branch "CUT: self.sorted_splitters[b_bin + d_bin * -1] <= -1 + value FALSE"
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "inEqSimp_leqRight" (formula "52"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "3") (term "0,0,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "56") (term "0,0,1,0,2,0") (ifseqformula "14"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "14"))
                                       (rule "inEqSimp_homoInEq0" (formula "12"))
                                       (rule "polySimp_pullOutFactor1" (formula "12") (term "0"))
                                       (rule "add_literals" (formula "12") (term "1,0"))
                                       (rule "times_zero_1" (formula "12") (term "0"))
                                       (rule "qeq_literals" (formula "12"))
                                       (rule "true_left" (formula "12"))
                                       (rule "applyEq" (formula "1") (term "0,1,0,2,1,0") (ifseqformula "13"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,2,1,0"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,2,1,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,2,1,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,2,1,0"))
                                       (rule "polySimp_addComm0" (formula "1") (term "0,0,2,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,2,1,0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0,2,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,2,1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,2,1,0"))
                                       (rule "applyEq" (formula "8") (term "0") (ifseqformula "13"))
                                       (rule "inEqSimp_homoInEq1" (formula "8"))
                                       (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                       (rule "mul_literals" (formula "8") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                       (rule "add_literals" (formula "8") (term "0,0"))
                                       (rule "applyEq" (formula "3") (term "0,0,1,2,0") (ifseqformula "13"))
                                       (rule "polySimp_addComm0" (formula "3") (term "2,0"))
                                       (rule "applyEq" (formula "7") (term "0") (ifseqformula "13"))
                                       (rule "inEqSimp_homoInEq0" (formula "7"))
                                       (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                       (rule "mul_literals" (formula "7") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                       (rule "add_literals" (formula "7") (term "0,0"))
                                       (rule "applyEq" (formula "25") (term "1") (ifseqformula "13"))
                                       (rule "applyEq" (formula "3") (term "0,1") (ifseqformula "13"))
                                       (rule "applyEq" (formula "3") (term "1,2,0") (ifseqformula "13"))
                                       (rule "polySimp_addComm0" (formula "3") (term "2,0"))
                                       (rule "applyEq" (formula "21") (term "0,1,0,0,1") (ifseqformula "13"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0"))
                                       (rule "mul_literals" (formula "3") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                       (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                       (rule "polySimp_elimOne" (formula "8") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                       (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                       (rule "polySimp_elimOne" (formula "7") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "3") (term "0,0") (ifseqformula "32"))
                                       (rule "leq_literals" (formula "3") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "3"))
                                       (rule "eqSymm" (formula "3"))
                                       (rule "applyEq" (formula "54") (term "0,1,0,2,0") (ifseqformula "3"))
                                       (rule "applyEq" (formula "20") (term "1,0,0,1") (ifseqformula "3"))
                                       (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "32"))
                                       (rule "leq_literals" (formula "7") (term "0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "commute_or" (formula "38") (term "1,0,0,1,0"))
                                       (rule "onlyCreatedObjectsAreReferencedFinal" (formula "53") (term "1,1") (ifseqformula "4") (ifseqformula "5"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "51"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "onlyCreatedObjectsAreReferencedFinal" (formula "54") (term "1,0") (ifseqformula "5") (ifseqformula "6"))
                                       (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "53"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "commute_or_2" (formula "42") (term "0,0,0"))
                                       (rule "shift_paren_or" (formula "41") (term "0,0,0"))
                                       (rule "commute_or" (formula "40") (term "1,0,0,0"))
                                       (rule "commute_or" (formula "40") (term "0,0,0,1,0"))
                                       (rule "cnf_rightDist" (formula "41") (term "0"))
                                       (rule "distr_forallAnd" (formula "41"))
                                       (rule "andLeft" (formula "41"))
                                       (rule "commute_or" (formula "42") (term "0"))
                                       (rule "commute_or" (formula "43") (term "0,0,0,0"))
                                       (rule "inEqSimp_or_subsumption0" (formula "43") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "43") (term "0,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "43"))
                                       (rule "shift_paren_or" (formula "40") (term "0,0,0"))
                                       (rule "commute_or_2" (formula "40") (term "0,0,1,0"))
                                       (rule "commute_or" (formula "41") (term "0,0,0,0"))
                                       (rule "inEqSimp_or_subsumption0" (formula "41") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "41") (term "0,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "41"))
                                       (rule "commute_or" (formula "42") (term "0,0,0,0"))
                                       (rule "inEqSimp_or_subsumption0" (formula "42") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "42") (term "0,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "42"))
                                       (rule "commute_or" (formula "40") (term "0,0,0,0"))
                                       (rule "inEqSimp_or_subsumption0" (formula "40") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "40") (term "0,0,0,0,0,0"))
                                        (builtin "One Step Simplification" (formula "40"))
                                       (rule "div_axiom" (formula "31") (term "0") (inst "quotient=quotient_1"))
                                       (rule "mul_literals" (formula "31") (term "1,1,1,1,1"))
                                       (rule "qeq_literals" (formula "31") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "31"))
                                       (rule "equal_literals" (formula "31") (term "0"))
                                        (builtin "One Step Simplification" (formula "31"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "andLeft" (formula "31"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,1"))
                                       (rule "add_literals" (formula "33") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "33") (term "1"))
                                       (rule "add_literals" (formula "33") (term "0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "32"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "0"))
                                       (rule "inEqSimp_homoInEq1" (formula "33"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0"))
                                       (rule "applyEq" (formula "31") (term "0") (ifseqformula "34"))
                                       (rule "eqSymm" (formula "31"))
                                       (rule "applyEq" (formula "33") (term "0,1,0,0") (ifseqformula "31"))
                                       (rule "mul_literals" (formula "33") (term "1,0,0"))
                                       (rule "add_literals" (formula "33") (term "0,0"))
                                       (rule "applyEq" (formula "32") (term "0,1,0,0") (ifseqformula "31"))
                                       (rule "mul_literals" (formula "32") (term "1,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                                       (rule "mul_literals" (formula "33") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                       (rule "mul_literals" (formula "32") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "35"))
                                       (rule "leq_literals" (formula "32") (term "0"))
                                        (builtin "One Step Simplification" (formula "32"))
                                       (rule "true_left" (formula "32"))
                                       (rule "commute_or" (formula "41") (term "0,0,0,1,0"))
                                       (rule "div_axiom" (formula "5") (term "1") (inst "quotient=quotient_2"))
                                       (rule "qeq_literals" (formula "5") (term "0,1,1"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "equal_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "mul_literals" (formula "5") (term "1,1,1"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "andLeft" (formula "5"))
                                       (rule "polySimp_addAssoc" (formula "7") (term "0,1"))
                                       (rule "add_literals" (formula "7") (term "0,0,1"))
                                       (rule "polySimp_addComm1" (formula "7") (term "1"))
                                       (rule "add_literals" (formula "7") (term "0,1"))
                                       (rule "add_zero_left" (formula "7") (term "1"))
                                       (rule "inEqSimp_commuteGeq" (formula "7"))
                                       (rule "inEqSimp_homoInEq0" (formula "6"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "applyEq" (formula "60") (term "0,1,0,2,0") (ifseqformula "5"))
                                       (rule "polySimp_addComm0" (formula "60") (term "0,2,0"))
                                       (rule "applyEq" (formula "8") (term "1") (ifseqformula "5"))
                                       (rule "applyEq" (formula "24") (term "1,0,0,1") (ifseqformula "5"))
                                       (rule "polySimp_addComm1" (formula "24") (term "0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "6"))
                                       (rule "polySimp_mulComm0" (formula "6") (term "1"))
                                       (rule "polySimp_rightDist" (formula "6") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                                       (rule "mul_literals" (formula "6") (term "0,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "7"))
                                       (rule "mul_literals" (formula "37") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                       (rule "mul_literals" (formula "37") (term "1"))
                                       (rule "elimGcdGeq_antec" (formula "37") (inst "elimGcdRightDiv=Z(1(#))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "37") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "mul_literals" (formula "37") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "37") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "37") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "37") (term "0,0"))
                                       (rule "add_literals" (formula "37") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "37") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "37") (term "0,0"))
                                       (rule "leq_literals" (formula "37") (term "0"))
                                        (builtin "One Step Simplification" (formula "37"))
                                       (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "7"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "21") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "15"))
                                       (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0"))
                                       (rule "mul_literals" (formula "6") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "6") (term "0"))
                                       (rule "add_literals" (formula "6") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                       (rule "elimGcdLeq_antec" (formula "6") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))") (inst "elimGcdLeftDiv=quotient_2") (inst "elimGcd=Z(2(#))"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
                                       (rule "leq_literals" (formula "6") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "polySimp_mulLiterals" (formula "6") (term "1,0,0,0,0,0"))
                                       (rule "neg_literal" (formula "6") (term "0,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addLiterals" (formula "6") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "6") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "6") (term "0,0"))
                                       (rule "add_literals" (formula "6") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "6") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "6") (term "0,0"))
                                       (rule "qeq_literals" (formula "6") (term "0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "22"))
                                       (rule "mul_literals" (formula "20") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                       (rule "mul_literals" (formula "20") (term "1"))
                                       (rule "inEqSimp_subsumption6" (formula "20") (ifseqformula "40"))
                                       (rule "mul_literals" (formula "20") (term "1,1,0"))
                                       (rule "greater_literals" (formula "20") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "leq_literals" (formula "20") (term "0"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "true_left" (formula "20"))
                                       (rule "jdiv_axiom" (formula "9") (term "0"))
                                       (rule "eqSymm" (formula "9"))
                                       (rule "polySimp_mulComm0" (formula "9") (term "0,0,2,0"))
                                       (rule "polySimp_rightDist" (formula "9") (term "0,0,2,0"))
                                       (rule "mul_literals" (formula "9") (term "0,0,0,2,0"))
                                       (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "5"))
                                       (rule "applyEq" (formula "9") (term "1") (ifseqformula "10"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "polySimp_homoEq" (formula "9") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1"))
                                       (rule "polySimp_elimOne" (formula "9") (term "1,0,1"))
                                       (rule "polySimp_sepPosMonomial" (formula "9") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "0"))
                                       (rule "mul_literals" (formula "9") (term "1,0"))
                                       (rule "inEqSimp_subsumption1" (formula "9") (term "0") (ifseqformula "41"))
                                       (rule "leq_literals" (formula "9") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "all_pull_out3" (formula "47") (term "0"))
                                       (rule "shift_paren_or" (formula "47") (term "0,0"))
                                       (rule "shift_paren_or" (formula "47") (term "0,0,0"))
                                       (rule "shift_paren_or" (formula "47") (term "0,0,0,0"))
                                       (rule "shift_paren_or" (formula "47") (term "0,0,0,0,0"))
                                       (rule "allLeft" (formula "50") (inst "t=b"))
                                       (rule "polySimp_addComm1" (formula "50") (term "1,0,0,1,0,2,0,1"))
                                       (rule "polySimp_addComm1" (formula "50") (term "1,0,0,1,0,0,2,0,1"))
                                       (rule "polySimp_addComm1" (formula "50") (term "1,1,0,0,0,2,0,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "50") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "50") (term "0,1,0"))
                                       (rule "applyEq" (formula "50") (term "1,1,0,1,0,2,0,1") (ifseqformula "25"))
                                       (rule "applyEq" (formula "50") (term "0,1,0,1,0,0,1,0,2,0,1") (ifseqformula "25"))
                                       (rule "polySimp_addComm1" (formula "50") (term "0,2,0,1"))
                                       (rule "applyEq" (formula "50") (term "0,1,0,1,0,0,1,0,2,0,1") (ifseqformula "25"))
                                       (rule "polySimp_addComm1" (formula "50") (term "0,2,0,1"))
                                       (rule "apply_eq_monomials" (formula "50") (term "1,0,2,0,1") (ifseqformula "26"))
                                       (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,1,0,2,0,1"))
                                       (rule "polySimp_rightDist" (formula "50") (term "0,1,0,2,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,0,2,0,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "50") (term "1,0,2,0,1"))
                                       (rule "add_literals" (formula "50") (term "1,1,1,0,2,0,1"))
                                       (rule "times_zero_1" (formula "50") (term "1,1,0,2,0,1"))
                                       (rule "add_zero_right" (formula "50") (term "1,0,2,0,1"))
                                       (rule "polySimp_rightDist" (formula "50") (term "1,0,2,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,2,0,1"))
                                       (rule "polySimp_rightDist" (formula "50") (term "0,1,0,2,0,1"))
                                       (rule "polySimp_rightDist" (formula "50") (term "0,0,1,0,2,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,1,0,2,0,1"))
                                       (rule "polySimp_elimOne" (formula "50") (term "1,0,0,1,0,2,0,1"))
                                       (rule "polySimp_rightDist" (formula "50") (term "0,0,0,1,0,2,0,1"))
                                       (rule "mul_literals" (formula "50") (term "0,0,0,0,1,0,2,0,1"))
                                       (rule "polySimp_addAssoc" (formula "50") (term "0,2,0,1"))
                                       (rule "polySimp_addComm1" (formula "50") (term "0,0,2,0,1"))
                                       (rule "polySimp_pullOutFactor0b" (formula "50") (term "0,2,0,1"))
                                       (rule "add_literals" (formula "50") (term "1,1,0,2,0,1"))
                                       (rule "times_zero_1" (formula "50") (term "1,0,2,0,1"))
                                       (rule "add_zero_right" (formula "50") (term "0,2,0,1"))
                                       (rule "polySimp_addComm1" (formula "50") (term "0,2,0,1"))
                                       (rule "polySimp_addAssoc" (formula "50") (term "0,0,2,0,1"))
                                       (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,2,0,1"))
                                       (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,2,0,1"))
                                       (rule "add_literals" (formula "50") (term "0,0,0,0,0,2,0,1"))
                                       (rule "add_zero_left" (formula "50") (term "0,0,0,0,2,0,1"))
                                       (rule "applyEq" (formula "50") (term "0,1,0,1,1,0,2,0,1") (ifseqformula "25"))
                                       (rule "polySimp_pullOutFactor2b" (formula "50") (term "0,2,0,1"))
                                       (rule "add_literals" (formula "50") (term "1,1,0,2,0,1"))
                                       (rule "times_zero_1" (formula "50") (term "1,0,2,0,1"))
                                       (rule "add_zero_right" (formula "50") (term "0,2,0,1"))
                                       (rule "replace_known_right" (formula "50") (term "1") (ifseqformula "64"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "50") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "50") (term "1,1"))
                                       (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1"))
                                       (rule "mul_literals" (formula "50") (term "0,1,1"))
                                       (rule "polySimp_elimOne" (formula "50") (term "1,1,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "50") (term "0,0") (ifseqformula "20"))
                                       (rule "qeq_literals" (formula "50") (term "0,0,0"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "inEqSimp_contradInEq0" (formula "50") (term "0") (ifseqformula "21"))
                                       (rule "qeq_literals" (formula "50") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "50"))
                                       (rule "andLeft" (formula "23"))
                                       (rule "inEqSimp_homoInEq1" (formula "23"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                       (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0"))
                                       (rule "add_literals" (formula "23") (term "0"))
                                       (rule "leq_literals" (formula "23"))
                                       (rule "closeFalse" (formula "23"))
                                    )
                                 )
                              )
                           )
                           (branch "Case 2"
                               (builtin "One Step Simplification" (formula "32"))
                              (rule "closeTrue" (formula "32"))
                           )
                        )
                        (branch "Precondition"
                           (rule "andRight" (formula "32"))
                           (branch "Case 1"
                              (rule "andRight" (formula "32"))
                              (branch "Case 1"
                                  (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "14")))
                                 (rule "closeTrue" (formula "32"))
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "1")))
                                 (rule "closeTrue" (formula "32"))
                              )
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "32"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "32"))
                                 (branch "Case 1"
                                     (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "31")))
                                    (rule "closeTrue" (formula "32"))
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "2")))
                                    (rule "closeTrue" (formula "32"))
                                 )
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "3")))
                                 (rule "closeTrue" (formula "32"))
                              )
                           )
                        )
                        (branch "Usage"
                            (builtin "One Step Simplification" (formula "31"))
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "andLeft" (formula "31"))
                           (rule "andLeft" (formula "31"))
                           (rule "translateJavaSubInt" (formula "32") (term "0,2,0"))
                           (rule "translateJavaDivInt" (formula "32") (term "1,0,2,0"))
                           (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "31"))
                            (builtin "One Step Simplification" (formula "33"))
                           (rule "true_left" (formula "33"))
                           (rule "polySimp_elimSub" (formula "32") (term "0,2,0"))
                           (rule "elim_double_block_2" (formula "34") (term "1"))
                           (rule "ifUnfold" (formula "34") (term "1") (inst "#boolv=x"))
                           (rule "variableDeclaration" (formula "34") (term "1") (newnames "x_4"))
                           (rule "inequality_comparison_simple" (formula "34") (term "1"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "replace_known_left" (formula "34") (term "0,0,1,0") (ifseqformula "31"))
                            (builtin "One Step Simplification" (formula "34"))
                           (rule "ifSplit" (formula "34"))
                           (branch "if x_4 true"
                               (builtin "One Step Simplification" (formula "35"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "if x_4 false"
                               (builtin "One Step Simplification" (formula "35"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "blockEmpty" (formula "34") (term "1"))
                               (builtin "Block Contract (Internal)" (formula "34") (newnames "result_2,exc_2,heap_Before_BLOCK_4,savedHeap_Before_BLOCK_4,o,f"))
                              (branch "Validity"
                                  (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "14")) (ifInst ""  (formula "1")) (ifInst ""  (formula "34")) (ifInst ""  (formula "2")) (ifInst ""  (formula "3")))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "true_left" (formula "33"))
                                 (rule "eqSymm" (formula "34") (term "0,0,1,0,1"))
                                 (rule "translateJavaAddInt" (formula "34") (term "1,1,0,0,1"))
                                 (rule "translateJavaAddInt" (formula "34") (term "1,0,1,0,0,1"))
                                 (rule "translateJavaMulInt" (formula "34") (term "0,1,0,1,0,0,1"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,1,0,0,1"))
                                 (rule "polySimp_addComm0" (formula "34") (term "1,1,0,0,1"))
                                 (rule "variableDeclarationAssign" (formula "34") (term "1"))
                                 (rule "variableDeclaration" (formula "34") (term "1") (newnames "exc_2_1"))
                                 (rule "assignment" (formula "34") (term "1"))
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "emptyStatement" (formula "34") (term "1"))
                                 (rule "emptyStatement" (formula "34") (term "1"))
                                 (rule "tryEmpty" (formula "34") (term "1"))
                                 (rule "blockEmptyLabel" (formula "34") (term "1"))
                                 (rule "blockEmpty" (formula "34") (term "1"))
                                 (rule "methodCallEmpty" (formula "34") (term "1"))
                                 (rule "emptyModality" (formula "34") (term "1"))
                                 (rule "andRight" (formula "34"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "34"))
                                    (branch "Case 1"
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "closeTrue" (formula "34"))
                                    )
                                    (branch "Case 2"
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "logDefinition" (formula "34") (term "0") (userinteraction))
                                       (rule "greater_literals" (formula "34") (term "1,0,0"))
                                        (builtin "One Step Simplification" (formula "34"))
                                       (rule "inEqSimp_ltToLeq" (formula "18"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,0"))
                                       (rule "mul_literals" (formula "34") (term "1,0,0,0,1,0"))
                                       (rule "add_literals" (formula "34") (term "0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,0,1,1,2,1,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,0,1,1,2,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,1,2,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,1,2,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,0,0,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                                       (rule "polySimp_mulAssoc" (formula "34") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "34") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,1,0,1,1,2,1,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0,1,1,2,1,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0,1,1,2,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,1,0,1,1,2,1,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,0,1,0,1,1,2,1,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "1,1,0,1,0,1,1,2,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,1,1,2,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,1,2,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,0,1,1,2,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,0,1,1,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,1,1,2,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "1,1,0,1,1,2,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,1,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,0"))
                                       (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "17"))
                                       (rule "leq_literals" (formula "7") (term "0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "polyDiv_pullOut" (formula "33") (term "1,1,2,1,0") (inst "polyDivCoeff=b"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,2,1,1,2,1,0"))
                                       (rule "equal_literals" (formula "33") (term "0,1,1,2,1,0"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "polySimp_addComm0" (formula "33") (term "1,1,2,1,0"))
                                       (rule "polySimp_addComm1" (formula "33") (term "0,1,1,1,2,1,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "33") (term "0,0,1,1,1,2,1,0"))
                                       (rule "add_literals" (formula "33") (term "1,0,0,1,1,1,2,1,0"))
                                       (rule "times_zero_1" (formula "33") (term "0,0,1,1,1,2,1,0"))
                                       (rule "add_zero_left" (formula "33") (term "0,1,1,1,2,1,0"))
                                       (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "20") (inst "i_0=i_0") (inst "i=i"))
                                        (builtin "One Step Simplification" (formula "20"))
                                       (rule "expand_inInt" (formula "20") (term "1,0,0,1,0"))
                                       (rule "expand_inInt" (formula "20") (term "1,0,0,1"))
                                       (rule "replace_int_MAX" (formula "20") (term "1,0,1,0,0,1,0"))
                                       (rule "replace_int_MIN" (formula "20") (term "0,1,1,0,0,1,0"))
                                       (rule "replace_int_MAX" (formula "20") (term "1,0,1,0,0,1"))
                                       (rule "replace_int_MIN" (formula "20") (term "0,1,1,0,0,1"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "andLeft" (formula "21"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "andLeft" (formula "20"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "notLeft" (formula "20"))
                                       (rule "notLeft" (formula "20"))
                                       (rule "translateJavaSubInt" (formula "28") (term "0,2,1,1,0"))
                                       (rule "translateJavaSubInt" (formula "26") (term "3,0"))
                                       (rule "translateJavaShiftLeftInt" (formula "22") (term "1"))
                                       (rule "eqSymm" (formula "28") (term "1,0"))
                                       (rule "polySimp_elimSub" (formula "26") (term "3,0"))
                                       (rule "mul_literals" (formula "26") (term "1,3,0"))
                                       (rule "polySimp_elimSub" (formula "28") (term "0,2,0,1,0"))
                                       (rule "mul_literals" (formula "28") (term "1,0,2,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "26") (term "3,0"))
                                       (rule "polySimp_addComm0" (formula "28") (term "0,2,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "27") (term "1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "28") (term "1,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "27") (term "1,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "27") (term "0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "25"))
                                       (rule "inEqSimp_commuteLeq" (formula "23"))
                                       (rule "inEqSimp_commuteLeq" (formula "24"))
                                       (rule "inEqSimp_commuteLeq" (formula "20"))
                                       (rule "applyEq" (formula "22") (term "0") (ifseqformula "19"))
                                       (rule "eqSymm" (formula "22"))
                                       (rule "applyEq" (formula "26") (term "1,3,0") (ifseqformula "19"))
                                       (rule "applyEq" (formula "23") (term "0") (ifseqformula "19"))
                                       (rule "applyEq" (formula "24") (term "1") (ifseqformula "19"))
                                       (rule "applyEq" (formula "25") (term "1") (ifseqformula "19"))
                                       (rule "applyEq" (formula "27") (term "0,1,0,0,1,0,0,0") (ifseqformula "19"))
                                       (rule "applyEq" (formula "27") (term "0,1,0,0,1,1,0") (ifseqformula "19"))
                                       (rule "applyEq" (formula "28") (term "0,1,0,0,1,0,0,0") (ifseqformula "19"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0"))
                                       (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "27") (term "1,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,1,1,0"))
                                       (rule "mul_literals" (formula "27") (term "0,1,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "27") (term "1,1,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0"))
                                       (rule "javaShiftLeftIntDef" (formula "22") (term "0"))
                                       (rule "mod_axiom" (formula "22") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0"))
                                       (rule "shiftLeftDef" (formula "22") (term "0,0"))
                                       (rule "polySimp_elimNeg" (formula "22") (term "1,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "0,1,1,0,0"))
                                       (rule "shiftLeftPositiveShiftDef" (formula "22") (term "2,0,0"))
                                       (rule "polySimp_elimOneLeft0" (formula "22") (term "2,0,0"))
                                       (rule "shiftRightPositiveShiftDef" (formula "22") (term "1,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "21"))
                                       (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                       (rule "mul_literals" (formula "17") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0"))
                                       (rule "add_literals" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0"))
                                       (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "17"))
                                       (rule "leq_literals" (formula "6") (term "0"))
                                        (builtin "One Step Simplification" (formula "6"))
                                       (rule "true_left" (formula "6"))
                                       (rule "nnf_imp2or" (formula "27") (term "0"))
                                       (rule "nnf_imp2or" (formula "28") (term "0"))
                                       (rule "expand_moduloInteger" (formula "22") (term "0"))
                                       (rule "replace_int_HALFRANGE" (formula "22") (term "0,0,1,0"))
                                       (rule "replace_int_RANGE" (formula "22") (term "1,1,0"))
                                       (rule "replace_int_MIN" (formula "22") (term "0,0"))
                                       (rule "polySimp_homoEq" (formula "22"))
                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                       (rule "mul_literals" (formula "22") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                       (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "22"))
                                       (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                       (rule "polySimp_elimOne" (formula "22") (term "0"))
                                       (rule "nnf_notAnd" (formula "27") (term "0,0"))
                                       (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                       (rule "nnf_notAnd" (formula "27") (term "1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "27") (term "0,1,0,0"))
                                       (rule "mul_literals" (formula "27") (term "1,0,0,0,1,0,0"))
                                       (rule "add_literals" (formula "27") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,1,0,0"))
                                       (rule "mul_literals" (formula "27") (term "1,0,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "27") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "27") (term "1,0,0,1,1,0,0"))
                                       (rule "add_literals" (formula "27") (term "0,0,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "27") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "27") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,0"))
                                       (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "27") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "27") (term "0,0,0,0,0"))
                                       (rule "nnf_notAnd" (formula "28") (term "1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "28") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "28") (term "1,0,0,1,1,0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,1,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "28") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "28") (term "0,1,0,0"))
                                       (rule "mul_literals" (formula "28") (term "1,0,0,0,1,0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,1,0,0"))
                                       (rule "mul_literals" (formula "28") (term "1,0,1,0,0"))
                                       (rule "nnf_notAnd" (formula "28") (term "0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0"))
                                       (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,0"))
                                       (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "28") (term "0,0,0,0,0"))
                                       (rule "Definition_axiom_for_treeSearchInvariant_in_de_wiesler_Tree" (formula "14") (term "0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "andLeft" (formula "14"))
                                       (rule "andLeft" (formula "14"))
                                       (rule "andLeft" (formula "14"))
                                       (rule "andLeft" (formula "14"))
                                       (rule "eqSymm" (formula "18") (term "0"))
                                       (rule "eqSymm" (formula "18") (term "1"))
                                       (rule "eqSymm" (formula "17") (term "1"))
                                       (rule "translateJavaAddInt" (formula "15") (term "1,1"))
                                       (rule "translateJavaDivInt" (formula "17") (term "1,1,1"))
                                       (rule "translateJavaSubInt" (formula "17") (term "0,1"))
                                       (rule "translateJavaSubInt" (formula "17") (term "1,1"))
                                       (rule "polySimp_elimSub" (formula "18") (term "0,1"))
                                       (rule "polySimp_elimSub" (formula "17") (term "0,1"))
                                       (rule "mul_literals" (formula "17") (term "1,0,1"))
                                       (rule "polySimp_elimSub" (formula "17") (term "1,1"))
                                       (rule "polySimp_homoEq" (formula "18") (term "1"))
                                       (rule "polySimp_homoEq" (formula "17") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                       (rule "polySimp_addComm0" (formula "15") (term "1,1"))
                                       (rule "polySimp_addComm0" (formula "17") (term "1,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1"))
                                       (rule "polySimp_elimOne" (formula "18") (term "1,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                       (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                       (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,0,1"))
                                       (rule "polySimp_addComm0" (formula "17") (term "0,0,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "17") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "15"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0"))
                                       (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "37"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "18") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,1"))
                                       (rule "polySimp_mulAssoc" (formula "18") (term "0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,1,1"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0,1,1"))
                                       (rule "polySimp_sepNegMonomial" (formula "17") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "17") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "17") (term "0,0"))
                                       (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "21"))
                                        (builtin "One Step Simplification" (formula "17"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                       (rule "inEqSimp_contradEq7" (formula "18") (term "0") (ifseqformula "21"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                       (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                       (rule "add_literals" (formula "18") (term "0,0,0"))
                                       (rule "leq_literals" (formula "18") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "14"))
                                       (rule "mul_literals" (formula "34") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                       (rule "mul_literals" (formula "34") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "34"))
                                       (rule "leq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "inEqSimp_exactShadow1" (formula "14") (ifseqformula "13"))
                                       (rule "greater_literals" (formula "14") (term "0"))
                                        (builtin "One Step Simplification" (formula "14"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "14") (term "0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                       (rule "mul_literals" (formula "14") (term "1"))
                                       (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "31"))
                                       (rule "true_left" (formula "31"))
                                       (rule "Definition_axiom_for_binarySearchInvariant_in_de_wiesler_Tree" (formula "12") (term "0"))
                                        (builtin "One Step Simplification" (formula "12"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "andLeft" (formula "12"))
                                       (rule "translateJavaSubInt" (formula "15") (term "1,0"))
                                       (rule "translateJavaSubInt" (formula "14") (term "0,0"))
                                       (rule "translateJavaSubInt" (formula "14") (term "0,2,0,1"))
                                       (rule "translateJavaSubInt" (formula "12") (term "0"))
                                       (rule "translateJavaSubInt" (formula "13") (term "1"))
                                       (rule "eqSymm" (formula "15") (term "0"))
                                       (rule "polySimp_elimSub" (formula "14") (term "0,0"))
                                       (rule "polySimp_elimSub" (formula "14") (term "0,2,0,1"))
                                       (rule "polySimp_elimSub" (formula "12") (term "0"))
                                       (rule "mul_literals" (formula "12") (term "1,0"))
                                       (rule "polySimp_elimSub" (formula "13") (term "1"))
                                       (rule "mul_literals" (formula "13") (term "1,1"))
                                       (rule "polySimp_elimSub" (formula "15") (term "0,0"))
                                       (rule "mul_literals" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_homoEq" (formula "14") (term "0"))
                                       (rule "polySimp_homoEq" (formula "15") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_addComm0" (formula "12") (term "0"))
                                       (rule "polySimp_addComm0" (formula "13") (term "1"))
                                       (rule "polySimp_addComm0" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "15") (term "0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "14") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "15") (term "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                       (rule "mul_literals" (formula "12") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                       (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "13"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0"))
                                       (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "24"))
                                       (rule "applyEq" (formula "15") (term "0,1,0,0") (ifseqformula "24"))
                                       (rule "polySimp_sepPosMonomial" (formula "14") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "1,1,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "15") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,1"))
                                       (rule "mul_literals" (formula "14") (term "0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1"))
                                       (rule "polySimp_elimOne" (formula "14") (term "1,1,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                                       (rule "mul_literals" (formula "13") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "13") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "12"))
                                       (rule "mul_literals" (formula "8") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                       (rule "add_literals" (formula "8") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                                       (rule "mul_literals" (formula "8") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "6"))
                                       (rule "leq_literals" (formula "8") (term "0"))
                                        (builtin "One Step Simplification" (formula "8"))
                                       (rule "true_left" (formula "8"))
                                       (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "31") (term "0") (inst "j=j") (inst "i=i"))
                                        (builtin "One Step Simplification" (formula "31"))
                                       (rule "expand_inInt" (formula "31") (term "1,0,0"))
                                       (rule "expand_inInt" (formula "31") (term "1,0,0,1,0"))
                                       (rule "replace_int_MAX" (formula "31") (term "1,0,1,0,0"))
                                       (rule "replace_int_MIN" (formula "31") (term "0,1,1,0,0"))
                                       (rule "replace_int_MIN" (formula "31") (term "0,1,1,0,0,1,0"))
                                       (rule "replace_int_MAX" (formula "31") (term "1,0,1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0,1,0"))
                                       (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0,0,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0,0,0"))
                                       (rule "add_literals" (formula "31") (term "0,0,0,1,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "31") (term "1,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "31") (term "1,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "31") (term "1,1,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,0,1,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,0"))
                                       (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "32") (term "0,0,1,0"))
                                       (rule "translateJavaSubInt" (formula "32") (term "0,1,1,0,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "32") (term "1,0,0,0,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "32") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "32") (term "0,1,1,0,0,1,0"))
                                       (rule "mul_literals" (formula "32") (term "1,0,1,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "32") (term "0,1,0,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "32") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "0,0,1,0"))
                                       (rule "polySimp_mulComm1" (formula "32") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "0,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_mulComm1" (formula "32") (term "1,0,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,0,0,1,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "0,1,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,1,0"))
                                       (rule "mul_literals" (formula "32") (term "0,0,1,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,0,1,0,1,0"))
                                       (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "32") (term "0,1,1,0"))
                                       (rule "translateJavaSubInt" (formula "32") (term "0,1,1,0,1,1,0"))
                                       (rule "polySimp_elimSub" (formula "32") (term "1,0,0,0,1,1,0"))
                                       (rule "polySimp_elimSub" (formula "32") (term "1,1,0,1,1,0"))
                                       (rule "polySimp_elimSub" (formula "32") (term "0,1,1,0,1,1,0"))
                                       (rule "mul_literals" (formula "32") (term "1,0,1,1,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "0,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "32") (term "0,1,0,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "0,1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0,1,1,0"))
                                       (rule "polySimp_addComm1" (formula "32") (term "1,0,1,1,0"))
                                       (rule "polySimp_addComm0" (formula "32") (term "0,1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm1" (formula "32") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "0,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "0,0,0,1,1,0"))
                                       (rule "polySimp_mulComm1" (formula "32") (term "1,0,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "0,1,0,0,1,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "32") (term "1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "0,1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,1,1,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "0,1,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,0,1,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "0,0,1,1,1,0"))
                                       (rule "mul_literals" (formula "32") (term "0,0,0,1,1,1,0"))
                                       (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "33") (term "1,0,2,0,1,0"))
                                       (rule "translateJavaSubInt" (formula "33") (term "0,1,1,1,0,2,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "33") (term "1,0,0,1,0,2,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "33") (term "1,1,1,0,2,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "33") (term "0,1,1,1,0,2,0,1,0"))
                                       (rule "mul_literals" (formula "33") (term "1,0,1,1,1,0,2,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,0,2,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "33") (term "0,1,0,1,0,2,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "0,1,1,0,2,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,1,0,2,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,1,0,2,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "33") (term "1,1,0,2,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "33") (term "0,1,1,0,2,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,0,2,0,1,0"))
                                       (rule "polySimp_mulComm1" (formula "33") (term "1,1,0,2,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "0,1,1,0,2,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "0,1,0,2,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "33") (term "0,0,1,0,2,0,1,0"))
                                       (rule "polySimp_mulComm1" (formula "33") (term "1,0,1,0,2,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,1,0,2,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,2,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0,2,0,1,0"))
                                       (rule "nnf_imp2or" (formula "31") (term "0"))
                                       (rule "jdiv_axiom" (formula "44") (term "0,1,0,2,0"))
                                       (rule "eqSymm" (formula "44"))
                                       (rule "polyDiv_pullOut" (formula "44") (term "0,2,0") (inst "polyDivCoeff=mul(d_bin, Z(neglit(1(#))))"))
                                       (rule "equal_literals" (formula "44") (term "0,0,2,0"))
                                        (builtin "One Step Simplification" (formula "44"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,2,0"))
                                       (rule "polySimp_pullOutFactor0" (formula "44") (term "0,0,0,2,0"))
                                       (rule "add_literals" (formula "44") (term "1,0,0,0,2,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "0,0,0,2,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "2,0"))
                                       (rule "polySimp_addComm0" (formula "44") (term "1,2,0"))
                                       (rule "polySimp_rightDist" (formula "44") (term "2,0"))
                                       (rule "polySimp_mulAssoc" (formula "44") (term "0,2,0"))
                                       (rule "polySimp_mulComm0" (formula "44") (term "0,0,2,0"))
                                       (rule "polySimp_mulLiterals" (formula "44") (term "0,2,0"))
                                       (rule "polySimp_elimOne" (formula "44") (term "0,2,0"))
                                       (rule "commute_or_2" (formula "32") (term "0,0"))
                                       (rule "commute_or_2" (formula "33") (term "0,0"))
                                       (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "19") (term "0"))
                                       (rule "translateJavaSubInt" (formula "19") (term "0,1,1,0"))
                                       (rule "polySimp_elimSub" (formula "19") (term "1,0,0,0"))
                                       (rule "polySimp_elimSub" (formula "19") (term "1,1,0"))
                                       (rule "polySimp_elimSub" (formula "19") (term "0,1,1,0"))
                                       (rule "mul_literals" (formula "19") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "0"))
                                       (rule "polySimp_addComm0" (formula "19") (term "0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "19") (term "1,0"))
                                       (rule "polySimp_addComm0" (formula "19") (term "0,1,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "0"))
                                       (rule "polySimp_homoEq" (formula "19"))
                                       (rule "polySimp_mulComm1" (formula "19") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "0,1,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "19") (term "0,0,1,1,0"))
                                       (rule "polySimp_mulComm1" (formula "19") (term "1,0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "19") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                       (rule "applyEq" (formula "19") (term "1,1,0,1,0") (ifseqformula "18"))
                                       (rule "applyEq" (formula "19") (term "0,1,0,1,0,0,1,0") (ifseqformula "18"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0"))
                                       (rule "applyEq" (formula "19") (term "0,1,0,1,0,0,1,0") (ifseqformula "18"))
                                       (rule "polySimp_addComm1" (formula "19") (term "0"))
                                       (rule "applyEq" (formula "19") (term "0,1,0,1,0,1,0,0,0") (ifseqformula "18"))
                                       (rule "polySimp_sepPosMonomial" (formula "19"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "19") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1"))
                                       (rule "polySimp_elimOne" (formula "19") (term "1,0,1"))
                                       (rule "polySimp_rightDist" (formula "19") (term "0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "19") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "19") (term "0,0,0,1"))
                                       (rule "mul_literals" (formula "19") (term "0,0,0,0,1"))
                                       (rule "ifthenelse_split" (formula "49") (term "0,0,0"))
                                       (branch "self.tree[b] <= -1 + value TRUE"
                                          (rule "replace_known_left" (formula "50") (term "0,0,0,1,0") (ifseqformula "1"))
                                           (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "1")) (ifInst ""  (formula "1")))
                                          (rule "div_literals" (formula "50") (term "1,1,1,2,1,0"))
                                          (rule "add_zero_right" (formula "50") (term "1,1,2,1,0"))
                                          (rule "polySimp_addComm0" (formula "50") (term "1,2,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "50") (term "0,1,0"))
                                          (rule "mul_literals" (formula "50") (term "1,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "50") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "50") (term "0,0,0,1,0"))
                                          (rule "add_zero_left" (formula "50") (term "0,0,1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "50") (term "0,0"))
                                          (rule "mul_literals" (formula "50") (term "1,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "50") (term "0,0,0"))
                                          (rule "add_literals" (formula "50") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "50") (term "0,0,0"))
                                          (rule "applyEq" (formula "50") (term "1,2,1,0") (ifseqformula "19"))
                                          (rule "inEqSimp_invertInEq1" (formula "50") (term "0,1,0"))
                                          (rule "times_zero_2" (formula "50") (term "1,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "0,0,1,0"))
                                          (rule "inEqSimp_invertInEq0" (formula "50") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "0,0,0"))
                                          (rule "times_zero_2" (formula "50") (term "1,0,0"))
                                          (rule "inEqSimp_subsumption6" (formula "50") (term "0,0") (ifseqformula "36"))
                                          (rule "greater_literals" (formula "50") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "mul_literals" (formula "50") (term "1,0,0,0"))
                                          (rule "leq_literals" (formula "50") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "orRight" (formula "50"))
                                          (rule "notRight" (formula "50"))
                                          (rule "polySimp_homoEq" (formula "51"))
                                          (rule "times_zero_2" (formula "51") (term "1,0"))
                                          (rule "add_zero_right" (formula "51") (term "0"))
                                          (rule "polySimp_sepPosMonomial" (formula "51"))
                                          (rule "mul_literals" (formula "51") (term "1"))
                                          (rule "inEqSimp_contradEq7" (formula "51") (ifseqformula "22"))
                                          (rule "add_zero_left" (formula "51") (term "0,0"))
                                          (rule "mul_literals" (formula "51") (term "0,0"))
                                          (rule "leq_literals" (formula "51") (term "0"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "false_right" (formula "51"))
                                          (rule "inEqSimp_contradInEq5" (formula "1") (ifseqformula "37"))
                                          (rule "greater_literals" (formula "1") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1,0"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "self.tree[b] <= -1 + value FALSE"
                                          (rule "replace_known_right" (formula "50") (term "0,0,0,1,0") (ifseqformula "49"))
                                           (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "49")) (ifInst ""  (formula "49")))
                                          (rule "div_literals" (formula "50") (term "1,1,1,2,1,0"))
                                          (rule "add_zero_right" (formula "50") (term "1,2,0"))
                                          (rule "add_zero_right" (formula "50") (term "1,1,2,1,0"))
                                          (rule "inEqSimp_leqRight" (formula "49"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "50") (term "0,0"))
                                          (rule "times_zero_2" (formula "50") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "50") (term "0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "50") (term "0,1,0"))
                                          (rule "times_zero_2" (formula "50") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "50") (term "0,0,1,0"))
                                          (rule "applyEq" (formula "50") (term "1,2,1,0") (ifseqformula "19"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "50") (term "0,0"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "50") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "0,0,1,0"))
                                          (rule "inEqSimp_subsumption6" (formula "50") (term "0,0") (ifseqformula "36"))
                                          (rule "mul_literals" (formula "50") (term "1,1,0,0,0"))
                                          (rule "greater_literals" (formula "50") (term "0,0,0,0"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "leq_literals" (formula "50") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "orRight" (formula "50"))
                                          (rule "notRight" (formula "50"))
                                          (rule "polySimp_homoEq" (formula "51"))
                                          (rule "times_zero_2" (formula "51") (term "1,0"))
                                          (rule "add_zero_right" (formula "51") (term "0"))
                                          (rule "polySimp_sepPosMonomial" (formula "51"))
                                          (rule "mul_literals" (formula "51") (term "1"))
                                          (rule "inEqSimp_contradEq7" (formula "51") (ifseqformula "22"))
                                          (rule "add_zero_left" (formula "51") (term "0,0"))
                                          (rule "mul_literals" (formula "51") (term "0,0"))
                                          (rule "leq_literals" (formula "51") (term "0"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "false_right" (formula "51"))
                                          (rule "inEqSimp_contradInEq5" (formula "1") (ifseqformula "37"))
                                          (rule "greater_literals" (formula "1") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1,0"))
                                          (rule "qeq_literals" (formula "1") (term "0"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "34"))
                                    (rule "closeTrue" (formula "34"))
                                 )
                              )
                              (branch "Precondition"
                                 (rule "andRight" (formula "34"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "34"))
                                    (branch "Case 1"
                                        (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "14")))
                                       (rule "closeTrue" (formula "34"))
                                    )
                                    (branch "Case 2"
                                        (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "1")))
                                       (rule "closeTrue" (formula "34"))
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "andRight" (formula "34"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "34"))
                                       (branch "Case 1"
                                           (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "33")))
                                          (rule "closeTrue" (formula "34"))
                                       )
                                       (branch "Case 2"
                                           (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "2")))
                                          (rule "closeTrue" (formula "34"))
                                       )
                                    )
                                    (branch "Case 2"
                                        (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "3")))
                                       (rule "closeTrue" (formula "34"))
                                    )
                                 )
                              )
                              (branch "Usage"
                                  (builtin "One Step Simplification" (formula "33"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "andLeft" (formula "33"))
                                 (rule "andLeft" (formula "33"))
                                 (rule "translateJavaAddInt" (formula "34") (term "1"))
                                 (rule "translateJavaAddInt" (formula "34") (term "1,0"))
                                 (rule "translateJavaMulInt" (formula "34") (term "0,1,0"))
                                 (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "33"))
                                  (builtin "One Step Simplification" (formula "35"))
                                 (rule "true_left" (formula "35"))
                                 (rule "polySimp_mulComm0" (formula "34") (term "0,1,0"))
                                 (rule "polySimp_addComm0" (formula "34") (term "1"))
                                 (rule "elim_double_block_2" (formula "36") (term "1"))
                                 (rule "ifUnfold" (formula "36") (term "1") (inst "#boolv=x"))
                                 (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_5"))
                                 (rule "inequality_comparison_simple" (formula "36") (term "1"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "replace_known_left" (formula "36") (term "0,0,1,0") (ifseqformula "33"))
                                  (builtin "One Step Simplification" (formula "36"))
                                 (rule "ifSplit" (formula "36"))
                                 (branch "if x_5 true"
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "if x_5 false"
                                     (builtin "One Step Simplification" (formula "1"))
                                     (builtin "One Step Simplification" (formula "37"))
                                    (rule "true_left" (formula "1"))
                                    (rule "blockEmpty" (formula "36") (term "1"))
                                    (rule "ifUnfold" (formula "36") (term "1") (inst "#boolv=x"))
                                    (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_6"))
                                    (rule "compound_less_than_comparison_2" (formula "36") (term "1") (inst "#v0=x_7") (inst "#v1=x_8"))
                                    (rule "variableDeclarationAssign" (formula "36") (term "1"))
                                    (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_7"))
                                    (rule "assignment" (formula "36") (term "1"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "variableDeclarationAssign" (formula "36") (term "1"))
                                    (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_8"))
                                    (rule "compound_subtraction_1" (formula "36") (term "1") (inst "#v=x_9"))
                                    (rule "variableDeclarationAssign" (formula "36") (term "1"))
                                    (rule "variableDeclaration" (formula "36") (term "1") (newnames "x_9"))
                                    (rule "assignment_read_attribute_this_final" (formula "36"))
                                     (builtin "One Step Simplification" (formula "36"))
                                    (rule "assignmentSubtractionInt" (formula "36") (term "1"))
                                    (branch "Overflow check"
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "expand_inInt" (formula "36"))
                                       (rule "replace_int_MIN" (formula "36") (term "0,1"))
                                       (rule "replace_int_MAX" (formula "36") (term "1,0"))
                                       (rule "polySimp_elimSub" (formula "36") (term "1,1"))
                                       (rule "mul_literals" (formula "36") (term "1,1,1"))
                                       (rule "polySimp_elimSub" (formula "36") (term "0,0"))
                                       (rule "mul_literals" (formula "36") (term "1,0,0"))
                                       (rule "polySimp_addComm0" (formula "36") (term "1,1"))
                                       (rule "polySimp_addComm0" (formula "36") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "18"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "34") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1,1,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "36") (term "1"))
                                       (rule "mul_literals" (formula "36") (term "1,0,1"))
                                       (rule "polySimp_addComm1" (formula "36") (term "0,1"))
                                       (rule "add_literals" (formula "36") (term "0,0,1"))
                                       (rule "inEqSimp_homoInEq0" (formula "36") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,0"))
                                       (rule "add_literals" (formula "36") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "34") (term "1,0,1,1,0"))
                                       (rule "mul_literals" (formula "34") (term "0,1,0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "34") (term "1,1,0,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1"))
                                       (rule "mul_literals" (formula "36") (term "1,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "36") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "36") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "36") (term "0,0"))
                                       (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "17"))
                                       (rule "leq_literals" (formula "7") (term "0"))
                                        (builtin "One Step Simplification" (formula "7"))
                                       (rule "true_left" (formula "7"))
                                       (rule "Definition_axiom_for_treeSearchInvariant_in_de_wiesler_Tree" (formula "15") (term "0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "andLeft" (formula "15"))
                                       (rule "andLeft" (formula "15"))
                                       (rule "andLeft" (formula "15"))
                                       (rule "andLeft" (formula "15"))
                                       (rule "eqSymm" (formula "19") (term "0"))
                                       (rule "eqSymm" (formula "19") (term "1"))
                                       (rule "translateJavaSubInt" (formula "18") (term "1,1"))
                                       (rule "translateJavaSubInt" (formula "18") (term "0,1"))
                                       (rule "translateJavaAddInt" (formula "16") (term "1,1"))
                                       (rule "eqSymm" (formula "18") (term "1"))
                                       (rule "translateJavaDivInt" (formula "18") (term "1,1,1"))
                                       (rule "polySimp_elimSub" (formula "19") (term "0,1"))
                                       (rule "polySimp_elimSub" (formula "18") (term "0,1"))
                                       (rule "mul_literals" (formula "18") (term "1,0,1"))
                                       (rule "polySimp_elimSub" (formula "18") (term "1,1"))
                                       (rule "polySimp_homoEq" (formula "19") (term "1"))
                                       (rule "polySimp_homoEq" (formula "18") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                       (rule "polySimp_addComm0" (formula "16") (term "1,1"))
                                       (rule "polySimp_addComm0" (formula "18") (term "1,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,1"))
                                       (rule "polySimp_elimOne" (formula "19") (term "1,1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                       (rule "mul_literals" (formula "18") (term "0,1,0,1"))
                                       (rule "polySimp_addAssoc" (formula "19") (term "0,1"))
                                       (rule "polySimp_addComm0" (formula "19") (term "0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0,0,1"))
                                       (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1"))
                                       (rule "inEqSimp_ltToLeq" (formula "18") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "16"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "16") (term "0"))
                                       (rule "applyEq" (formula "16") (term "0,1,0") (ifseqformula "29"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "19") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "19") (term "1,1"))
                                       (rule "polySimp_mulAssoc" (formula "19") (term "0,1,1"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "19") (term "0,1,1"))
                                       (rule "polySimp_elimOne" (formula "19") (term "0,1,1"))
                                       (rule "polySimp_sepNegMonomial" (formula "18") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0,1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "18") (term "0,0"))
                                       (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "21"))
                                        (builtin "One Step Simplification" (formula "18"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                       (rule "inEqSimp_contradEq7" (formula "19") (term "0") (ifseqformula "21"))
                                       (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                                       (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "19") (term "0,0,0"))
                                       (rule "leq_literals" (formula "19") (term "0,0"))
                                        (builtin "One Step Simplification" (formula "19"))
                                       (rule "true_left" (formula "19"))
                                       (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "15"))
                                       (rule "mul_literals" (formula "26") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                       (rule "mul_literals" (formula "26") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "26"))
                                       (rule "leq_literals" (formula "5") (term "0"))
                                        (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "inEqSimp_exactShadow1" (formula "15") (ifseqformula "14"))
                                       (rule "greater_literals" (formula "15") (term "0"))
                                        (builtin "One Step Simplification" (formula "15"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor0b" (formula "15") (term "0"))
                                       (rule "add_literals" (formula "15") (term "1,1,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                       (rule "mul_literals" (formula "15") (term "1"))
                                       (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "23"))
                                       (rule "true_left" (formula "23"))
                                       (rule "Definition_axiom_for_binarySearchInvariant_in_de_wiesler_Tree" (formula "13") (term "0"))
                                        (builtin "One Step Simplification" (formula "13"))
                                       (rule "andLeft" (formula "13"))
                                       (rule "andLeft" (formula "13"))
                                       (rule "andLeft" (formula "13"))
                                       (rule "eqSymm" (formula "16") (term "0"))
                                       (rule "translateJavaSubInt" (formula "15") (term "0,0"))
                                       (rule "translateJavaSubInt" (formula "15") (term "0,2,0,1"))
                                       (rule "translateJavaSubInt" (formula "13") (term "0"))
                                       (rule "translateJavaSubInt" (formula "14") (term "1"))
                                       (rule "translateJavaSubInt" (formula "16") (term "0,0"))
                                       (rule "polySimp_elimSub" (formula "15") (term "0,0"))
                                       (rule "polySimp_elimSub" (formula "15") (term "0,2,0,1"))
                                       (rule "polySimp_elimSub" (formula "13") (term "0"))
                                       (rule "mul_literals" (formula "13") (term "1,0"))
                                       (rule "polySimp_elimSub" (formula "14") (term "1"))
                                       (rule "mul_literals" (formula "14") (term "1,1"))
                                       (rule "polySimp_elimSub" (formula "16") (term "0,0"))
                                       (rule "mul_literals" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_homoEq" (formula "15") (term "0"))
                                       (rule "polySimp_homoEq" (formula "16") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                       (rule "polySimp_addComm0" (formula "13") (term "0"))
                                       (rule "polySimp_addComm0" (formula "14") (term "1"))
                                       (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "16") (term "0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "15") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1"))
                                       (rule "inEqSimp_commuteLeq" (formula "16") (term "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "13"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                       (rule "mul_literals" (formula "13") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                       (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "14"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0"))
                                       (rule "applyEq" (formula "14") (term "1,0") (ifseqformula "24"))
                                       (rule "applyEq" (formula "16") (term "0,1,0,0") (ifseqformula "24"))
                                       (rule "polySimp_sepPosMonomial" (formula "15") (term "0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,0"))
                                       (rule "polySimp_sepNegMonomial" (formula "16") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "16") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,1"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,1"))
                                       (rule "mul_literals" (formula "15") (term "0,1,1"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1"))
                                       (rule "mul_literals" (formula "14") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "13"))
                                       (rule "mul_literals" (formula "9") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                       (rule "add_literals" (formula "9") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                       (rule "mul_literals" (formula "9") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "7"))
                                       (rule "leq_literals" (formula "9") (term "0"))
                                        (builtin "One Step Simplification" (formula "9"))
                                       (rule "true_left" (formula "9"))
                                       (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "25") (inst "i_0=i_0") (inst "i=i"))
                                        (builtin "One Step Simplification" (formula "25"))
                                       (rule "expand_inInt" (formula "25") (term "1,0,0,1"))
                                       (rule "expand_inInt" (formula "25") (term "1,0,0,1,0"))
                                       (rule "replace_int_MAX" (formula "25") (term "1,0,1,0,0,1"))
                                       (rule "replace_int_MIN" (formula "25") (term "0,1,1,0,0,1"))
                                       (rule "replace_int_MAX" (formula "25") (term "1,0,1,0,0,1,0"))
                                       (rule "replace_int_MIN" (formula "25") (term "0,1,1,0,0,1,0"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "andLeft" (formula "26"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "andLeft" (formula "25"))
                                       (rule "andLeft" (formula "27"))
                                       (rule "notLeft" (formula "25"))
                                       (rule "notLeft" (formula "25"))
                                       (rule "eqSymm" (formula "33") (term "1,0"))
                                       (rule "translateJavaSubInt" (formula "31") (term "3,0"))
                                       (rule "translateJavaShiftLeftInt" (formula "27") (term "1"))
                                       (rule "translateJavaSubInt" (formula "33") (term "0,2,0,1,0"))
                                       (rule "polySimp_elimSub" (formula "31") (term "3,0"))
                                       (rule "mul_literals" (formula "31") (term "1,3,0"))
                                       (rule "polySimp_elimSub" (formula "33") (term "0,2,0,1,0"))
                                       (rule "mul_literals" (formula "33") (term "1,0,2,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "31") (term "3,0"))
                                       (rule "polySimp_addComm0" (formula "33") (term "0,2,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "32") (term "1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "33") (term "1,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "32") (term "1,1,0,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "32") (term "0,1,0"))
                                       (rule "inEqSimp_commuteLeq" (formula "30"))
                                       (rule "inEqSimp_commuteLeq" (formula "29"))
                                       (rule "inEqSimp_commuteLeq" (formula "28"))
                                       (rule "inEqSimp_commuteLeq" (formula "25"))
                                       (rule "applyEq" (formula "28") (term "0") (ifseqformula "27"))
                                       (rule "applyEq" (formula "29") (term "1") (ifseqformula "24"))
                                       (rule "applyEq" (formula "30") (term "1") (ifseqformula "24"))
                                       (rule "applyEq" (formula "31") (term "1,3,0") (ifseqformula "27"))
                                       (rule "applyEq" (formula "27") (term "0") (ifseqformula "24"))
                                       (rule "eqSymm" (formula "27"))
                                       (rule "applyEq" (formula "32") (term "0,1,0,0,1,1,0") (ifseqformula "24"))
                                       (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,0") (ifseqformula "24"))
                                       (rule "applyEq" (formula "33") (term "0,1,0,0,1,0,0,0") (ifseqformula "24"))
                                       (rule "applyEq" (formula "31") (term "1,3,0") (ifseqformula "27"))
                                       (rule "applyEq" (formula "28") (term "0") (ifseqformula "27"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,1,1,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,1,1,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,1,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0"))
                                       (rule "inEqSimp_subsumption1" (formula "50") (term "1") (ifseqformula "25"))
                                       (rule "leq_literals" (formula "50") (term "0,1"))
                                        (builtin "One Step Simplification" (formula "50"))
                                       (rule "inEqSimp_leqRight" (formula "50"))
                                       (rule "mul_literals" (formula "1") (term "1,0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "27"))
                                       (rule "qeq_literals" (formula "1") (term "0"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "Usage"
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "translateJavaSubInt" (formula "36") (term "0,1,0"))
                                       (rule "polySimp_elimSub" (formula "36") (term "0,1,0"))
                                       (rule "mul_literals" (formula "36") (term "1,0,1,0"))
                                       (rule "polySimp_addComm0" (formula "36") (term "0,1,0"))
                                       (rule "less_than_comparison_simple" (formula "36") (term "1"))
                                        (builtin "One Step Simplification" (formula "36"))
                                       (rule "ifSplit" (formula "36"))
                                       (branch "if x_6 true"
                                           (builtin "Block Contract (Internal)" (formula "37") (newnames "result_3,exc_3,heap_Before_BLOCK_5,savedHeap_Before_BLOCK_5,o,f"))
                                          (branch "Validity"
                                              (builtin "One Step Simplification" (formula "1"))
                                              (builtin "One Step Simplification" (formula "38"))
                                              (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "15")) (ifInst ""  (formula "2")) (ifInst ""  (formula "37")) (ifInst ""  (formula "3")) (ifInst ""  (formula "4")))
                                             (rule "true_left" (formula "36"))
                                             (rule "eqSymm" (formula "37") (term "0,0,1,0,1"))
                                             (rule "translateJavaAddInt" (formula "37") (term "1,0,1,0,0,1"))
                                             (rule "polySimp_addComm0" (formula "37") (term "1,0,1,0,0,1"))
                                             (rule "inEqSimp_commuteLeq" (formula "37") (term "1,0,0,1"))
                                             (rule "variableDeclarationAssign" (formula "37") (term "1"))
                                             (rule "variableDeclaration" (formula "37") (term "1") (newnames "exc_3_1"))
                                             (rule "assignment" (formula "37") (term "1"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "emptyStatement" (formula "37") (term "1"))
                                             (rule "emptyStatement" (formula "37") (term "1"))
                                             (rule "tryEmpty" (formula "37") (term "1"))
                                             (rule "blockEmptyLabel" (formula "37") (term "1"))
                                             (rule "blockEmpty" (formula "37") (term "1"))
                                             (rule "methodCallEmpty" (formula "37") (term "1"))
                                             (rule "emptyModality" (formula "37") (term "1"))
                                             (rule "andRight" (formula "37"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "37"))
                                                (branch "Case 1"
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "closeTrue" (formula "37"))
                                                )
                                                (branch "Case 2"
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "geq_to_leq" (formula "37") (userinteraction))
                                                   (rule "translateJavaSubInt" (formula "37") (term "1,1"))
                                                   (rule "polySimp_elimSub" (formula "37") (term "1,1"))
                                                   (rule "mul_literals" (formula "37") (term "1,1,1"))
                                                   (rule "polySimp_addComm0" (formula "37") (term "1,1"))
                                                   (rule "powMonoConcrete" (formula "37"))
                                                   (rule "greater_literals" (formula "37") (term "1"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "inEqSimp_ltToLeq" (formula "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "19"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "37") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "37") (term "0,1"))
                                                   (rule "polySimp_addComm1" (formula "37") (term "0,0,1"))
                                                   (rule "add_literals" (formula "37") (term "0,0,0,1"))
                                                   (rule "replace_known_left" (formula "37") (term "1") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "inEqSimp_geqRight" (formula "37"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "36") (term "1,0,1,1,0"))
                                                   (rule "mul_literals" (formula "36") (term "0,1,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "36") (term "1,1,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "1"))
                                                   (rule "leq_literals" (formula "8") (term "0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "18"))
                                                   (rule "leq_literals" (formula "8") (term "0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                                   (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                                   (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0"))
                                                   (rule "qeq_literals" (formula "18") (term "0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "17"))
                                                   (rule "qeq_literals" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                             (branch "Case 2"
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "closeTrue" (formula "37"))
                                             )
                                          )
                                          (branch "Precondition"
                                             (rule "andRight" (formula "37"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "37"))
                                                (branch "Case 1"
                                                    (builtin "One Step Simplification" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "15")))
                                                   (rule "closeTrue" (formula "37"))
                                                )
                                                (branch "Case 2"
                                                    (builtin "One Step Simplification" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "2")))
                                                   (rule "closeTrue" (formula "37"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "andRight" (formula "37"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "37"))
                                                   (branch "Case 1"
                                                       (builtin "One Step Simplification" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "36")))
                                                      (rule "closeTrue" (formula "37"))
                                                   )
                                                   (branch "Case 2"
                                                       (builtin "One Step Simplification" (formula "1"))
                                                       (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "3")))
                                                      (rule "closeTrue" (formula "37"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                    (builtin "One Step Simplification" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "4")))
                                                   (rule "closeTrue" (formula "37"))
                                                )
                                             )
                                          )
                                          (branch "Usage"
                                              (builtin "One Step Simplification" (formula "1"))
                                              (builtin "One Step Simplification" (formula "36"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "andLeft" (formula "36"))
                                             (rule "andLeft" (formula "36"))
                                             (rule "translateJavaAddInt" (formula "37") (term "1,0"))
                                             (rule "replace_known_left" (formula "38") (term "0") (ifseqformula "36"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "true_left" (formula "38"))
                                             (rule "polySimp_addComm0" (formula "37") (term "1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "37"))
                                             (rule "elim_double_block_2" (formula "39") (term "1"))
                                             (rule "ifUnfold" (formula "39") (term "1") (inst "#boolv=x"))
                                             (rule "variableDeclaration" (formula "39") (term "1") (newnames "x_10"))
                                             (rule "inequality_comparison_simple" (formula "39") (term "1"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "replace_known_left" (formula "39") (term "0,0,1,0") (ifseqformula "36"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "applyEq" (formula "37") (term "1") (ifseqformula "27"))
                                             (rule "translateJavaSubInt" (formula "37") (term "1,0"))
                                             (rule "polySimp_elimSub" (formula "37") (term "1,0"))
                                             (rule "mul_literals" (formula "37") (term "1,1,0"))
                                             (rule "polySimp_addComm0" (formula "37") (term "1,0"))
                                             (rule "ifSplit" (formula "39"))
                                             (branch "if x_10 true"
                                                 (builtin "One Step Simplification" (formula "40"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "if x_10 false"
                                                 (builtin "One Step Simplification" (formula "40"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "blockEmpty" (formula "39") (term "1"))
                                                (rule "emptyStatement" (formula "39") (term "1"))
                                                 (builtin "Block Contract (Internal)" (formula "39") (newnames "result_4,exc_4,heap_Before_BLOCK_6,savedHeap_Before_BLOCK_6,o,f"))
                                                (branch "Validity"
                                                    (builtin "One Step Simplification" (formula "40"))
                                                    (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "15")) (ifInst ""  (formula "2")) (ifInst ""  (formula "39")) (ifInst ""  (formula "3")) (ifInst ""  (formula "4")))
                                                   (rule "true_left" (formula "38"))
                                                   (rule "eqSymm" (formula "39") (term "0,0,1,0,1"))
                                                   (rule "variableDeclarationAssign" (formula "39") (term "1"))
                                                   (rule "variableDeclaration" (formula "39") (term "1") (newnames "exc_4_1"))
                                                   (rule "assignment" (formula "39") (term "1"))
                                                    (builtin "One Step Simplification" (formula "39"))
                                                   (rule "emptyStatement" (formula "39") (term "1"))
                                                   (rule "emptyStatement" (formula "39") (term "1"))
                                                   (rule "tryEmpty" (formula "39") (term "1"))
                                                   (rule "blockEmptyLabel" (formula "39") (term "1"))
                                                   (rule "blockEmpty" (formula "39") (term "1"))
                                                   (rule "methodCallEmpty" (formula "39") (term "1"))
                                                   (rule "emptyModality" (formula "39") (term "1"))
                                                   (rule "andRight" (formula "39"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "39"))
                                                      (branch "Case 1"
                                                          (builtin "One Step Simplification" (formula "39"))
                                                         (rule "closeTrue" (formula "39"))
                                                      )
                                                      (branch "Case 2"
                                                          (builtin "One Step Simplification" (formula "39"))
                                                         (rule "Contract_axiom_for_piLemma_in_Tree" (formula "39") (term "0") (userinteraction))
                                                         (rule "translateJavaSubInt" (formula "1") (term "1,1,1,0,0,0"))
                                                         (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "3"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "40")))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "polySimp_elimSub" (formula "38") (term "1,1,1,0"))
                                                         (rule "mul_literals" (formula "38") (term "1,1,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "38") (term "1,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "19"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "38") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "38") (term "0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "38") (term "1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "35") (term "1,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1,1,0"))
                                                         (rule "mul_literals" (formula "35") (term "0,1,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "35") (term "1,1,0,1,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "38") (term "0,1,0"))
                                                         (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                                         (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                                         (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "19") (term "0,0"))
                                                         (rule "qeq_literals" (formula "19") (term "0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "18"))
                                                         (rule "leq_literals" (formula "8") (term "0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "Contract_axiom_for_binarySearchInvariant_in_Tree" (formula "15") (term "0"))
                                                         (rule "replace_known_left" (formula "15") (term "0,1") (ifseqformula "21"))
                                                          (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "21")) (ifInst ""  (formula "2")) (ifInst ""  (formula "3")) (ifInst ""  (formula "37")))
                                                         (rule "Definition_axiom_for_binarySearchInvariant_in_de_wiesler_Tree" (formula "16") (term "0"))
                                                          (builtin "One Step Simplification" (formula "16"))
                                                         (rule "andLeft" (formula "16"))
                                                         (rule "andLeft" (formula "16"))
                                                         (rule "andLeft" (formula "16"))
                                                         (rule "translateJavaSubInt" (formula "19") (term "1,0"))
                                                         (rule "translateJavaSubInt" (formula "18") (term "0,2,0,1"))
                                                         (rule "translateJavaSubInt" (formula "18") (term "0,0"))
                                                         (rule "translateJavaSubInt" (formula "16") (term "0"))
                                                         (rule "translateJavaSubInt" (formula "17") (term "1"))
                                                         (rule "eqSymm" (formula "19") (term "0"))
                                                         (rule "polySimp_elimSub" (formula "18") (term "0,2,0,1"))
                                                         (rule "polySimp_elimSub" (formula "18") (term "0,0"))
                                                         (rule "polySimp_elimSub" (formula "16") (term "0"))
                                                         (rule "mul_literals" (formula "16") (term "1,0"))
                                                         (rule "polySimp_elimSub" (formula "17") (term "1"))
                                                         (rule "mul_literals" (formula "17") (term "1,1"))
                                                         (rule "polySimp_elimSub" (formula "19") (term "0,0"))
                                                         (rule "mul_literals" (formula "19") (term "1,0,0"))
                                                         (rule "polySimp_homoEq" (formula "18") (term "0"))
                                                         (rule "polySimp_homoEq" (formula "19") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "16") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "17") (term "1"))
                                                         (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "19") (term "0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "18") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "19") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "16"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                                         (rule "mul_literals" (formula "16") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "17"))
                                                         (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                         (rule "applyEq" (formula "19") (term "0,1,0,0") (ifseqformula "23"))
                                                         (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "23"))
                                                         (rule "polySimp_sepPosMonomial" (formula "18") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                         (rule "mul_literals" (formula "18") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "18") (term "1,1,0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "19") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "19") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "18") (term "1,1"))
                                                         (rule "mul_literals" (formula "18") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "18") (term "1,1,1"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                                         (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                                         (rule "mul_literals" (formula "17") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "16"))
                                                         (rule "mul_literals" (formula "11") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                         (rule "add_literals" (formula "11") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                         (rule "mul_literals" (formula "11") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "9"))
                                                         (rule "leq_literals" (formula "11") (term "0"))
                                                          (builtin "One Step Simplification" (formula "11"))
                                                         (rule "true_left" (formula "11"))
                                                         (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "24") (inst "i=i") (inst "i_0=i_0"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "expand_inInt" (formula "24") (term "1,0,0,1"))
                                                         (rule "expand_inInt" (formula "24") (term "1,0,0,1,0"))
                                                         (rule "replace_int_MAX" (formula "24") (term "1,0,1,0,0,1"))
                                                         (rule "replace_int_MIN" (formula "24") (term "0,1,1,0,0,1"))
                                                         (rule "replace_int_MAX" (formula "24") (term "1,0,1,0,0,1,0"))
                                                         (rule "replace_int_MIN" (formula "24") (term "0,1,1,0,0,1,0"))
                                                         (rule "andLeft" (formula "24"))
                                                         (rule "andLeft" (formula "24"))
                                                         (rule "andLeft" (formula "24"))
                                                         (rule "andLeft" (formula "24"))
                                                         (rule "andLeft" (formula "24"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "andLeft" (formula "24"))
                                                         (rule "andLeft" (formula "24"))
                                                         (rule "andLeft" (formula "24"))
                                                         (rule "andLeft" (formula "26"))
                                                         (rule "notLeft" (formula "25"))
                                                         (rule "notLeft" (formula "24"))
                                                         (rule "translateJavaSubInt" (formula "32") (term "0,2,1,1,0"))
                                                         (rule "translateJavaSubInt" (formula "30") (term "3,0"))
                                                         (rule "translateJavaShiftLeftInt" (formula "26") (term "1"))
                                                         (rule "eqSymm" (formula "32") (term "1,0"))
                                                         (rule "polySimp_elimSub" (formula "30") (term "3,0"))
                                                         (rule "mul_literals" (formula "30") (term "1,3,0"))
                                                         (rule "polySimp_elimSub" (formula "32") (term "0,2,0,1,0"))
                                                         (rule "mul_literals" (formula "32") (term "1,0,2,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "30") (term "3,0"))
                                                         (rule "polySimp_addComm0" (formula "32") (term "0,2,0,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "31") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "31") (term "1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "32") (term "1,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "31") (term "1,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "31") (term "0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "29"))
                                                         (rule "inEqSimp_commuteLeq" (formula "27"))
                                                         (rule "inEqSimp_commuteLeq" (formula "28"))
                                                         (rule "inEqSimp_commuteLeq" (formula "24"))
                                                         (rule "replace_known_left" (formula "49") (term "1") (ifseqformula "24"))
                                                          (builtin "One Step Simplification" (formula "49"))
                                                         (rule "applyEq" (formula "27") (term "0") (ifseqformula "26"))
                                                         (rule "applyEq" (formula "29") (term "1") (ifseqformula "23"))
                                                         (rule "applyEq" (formula "30") (term "1,3,0") (ifseqformula "23"))
                                                         (rule "applyEq" (formula "23") (term "0") (ifseqformula "26"))
                                                         (rule "applyEq" (formula "28") (term "1") (ifseqformula "26"))
                                                         (rule "applyEq" (formula "27") (term "0") (ifseqformula "23"))
                                                         (rule "applyEq" (formula "31") (term "0,1,0,0,1,0,0,0") (ifseqformula "26"))
                                                         (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,0") (ifseqformula "26"))
                                                         (rule "applyEq" (formula "31") (term "0,1,0,0,1,1,0") (ifseqformula "26"))
                                                         (rule "applyEq" (formula "28") (term "1") (ifseqformula "23"))
                                                         (rule "applyEq" (formula "26") (term "1") (ifseqformula "23"))
                                                         (rule "applyEq" (formula "31") (term "0,1,0,0,1,1,0") (ifseqformula "23"))
                                                         (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,0") (ifseqformula "23"))
                                                         (rule "applyEq" (formula "31") (term "0,1,0,0,1,0,0,0") (ifseqformula "23"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,1,1,0"))
                                                         (rule "mul_literals" (formula "31") (term "0,1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "31") (term "1,1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,0"))
                                                         (rule "mul_literals" (formula "31") (term "0,1,1,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,0"))
                                                         (rule "javaShiftLeftIntDef" (formula "23") (term "0"))
                                                         (rule "mod_axiom" (formula "23") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                                                         (rule "shiftLeftDef" (formula "23") (term "0,0"))
                                                         (rule "polySimp_elimNeg" (formula "23") (term "1,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "0,1,1,0,0"))
                                                         (rule "shiftLeftPositiveShiftDef" (formula "23") (term "2,0,0"))
                                                         (rule "polySimp_elimOneLeft0" (formula "23") (term "2,0,0"))
                                                         (rule "shiftRightPositiveShiftDef" (formula "23") (term "1,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                                         (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "25"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "1"))
                                                         (rule "leq_literals" (formula "8") (term "0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "nnf_imp2or" (formula "32") (term "0"))
                                                         (rule "nnf_imp2or" (formula "31") (term "0"))
                                                         (rule "expand_moduloInteger" (formula "23") (term "0"))
                                                         (rule "replace_int_MIN" (formula "23") (term "0,0"))
                                                         (rule "replace_int_HALFRANGE" (formula "23") (term "0,0,1,0"))
                                                         (rule "replace_int_RANGE" (formula "23") (term "1,1,0"))
                                                         (rule "polySimp_homoEq" (formula "23"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                                                         (rule "polySimp_sepNegMonomial" (formula "23"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                         (rule "Contract_axiom_for_piLemma_in_Tree" (formula "51") (term "0"))
                                                         (rule "translateJavaSubInt" (formula "1") (term "1,1,1,0,0,0"))
                                                         (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "4"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "52")))
                                                         (rule "notLeft" (formula "1"))
                                                         (rule "polySimp_elimSub" (formula "47") (term "1,1,1,0"))
                                                         (rule "mul_literals" (formula "47") (term "1,1,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "47") (term "1,1,1,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "47") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "47") (term "0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "47") (term "1"))
                                                         (rule "replace_known_left" (formula "47") (term "1") (ifseqformula "24"))
                                                          (builtin "One Step Simplification" (formula "47"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "47") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "47") (term "0,1"))
                                                         (rule "Definition_axiom_for_piLemma_in_de_wiesler_Tree" (formula "51") (term "0"))
                                                          (builtin "One Step Simplification" (formula "51"))
                                                         (rule "Definition_axiom_for_treeSearchInvariant_in_de_wiesler_Tree" (formula "20") (term "0"))
                                                          (builtin "One Step Simplification" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "andLeft" (formula "20"))
                                                         (rule "eqSymm" (formula "24") (term "0"))
                                                         (rule "eqSymm" (formula "24") (term "1"))
                                                         (rule "translateJavaSubInt" (formula "23") (term "0,1"))
                                                         (rule "translateJavaSubInt" (formula "23") (term "1,1"))
                                                         (rule "translateJavaAddInt" (formula "21") (term "1,1"))
                                                         (rule "translateJavaDivInt" (formula "23") (term "1,0,1"))
                                                         (rule "eqSymm" (formula "23") (term "1"))
                                                         (rule "polySimp_elimSub" (formula "24") (term "0,1"))
                                                         (rule "polySimp_elimSub" (formula "23") (term "1,1"))
                                                         (rule "polySimp_elimSub" (formula "23") (term "0,1"))
                                                         (rule "mul_literals" (formula "23") (term "1,0,1"))
                                                         (rule "polySimp_homoEq" (formula "24") (term "1"))
                                                         (rule "polySimp_homoEq" (formula "23") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,1"))
                                                         (rule "polySimp_addComm0" (formula "21") (term "1,1"))
                                                         (rule "polySimp_addComm0" (formula "23") (term "1,1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "1,0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1"))
                                                         (rule "polySimp_elimOne" (formula "24") (term "1,1,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "0,1,0,1"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,0,1"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "24") (term "0,1"))
                                                         (rule "polySimp_addComm0" (formula "24") (term "0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "23") (term "0,1"))
                                                         (rule "polySimp_addComm1" (formula "23") (term "0,0,1"))
                                                         (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "23") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "21"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                         (rule "applyEq" (formula "21") (term "0,1,0") (ifseqformula "40"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                                                         (rule "polySimp_sepPosMonomial" (formula "24") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "1,1"))
                                                         (rule "polySimp_mulAssoc" (formula "24") (term "0,1,1"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "24") (term "0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "24") (term "0,1,1"))
                                                         (rule "polySimp_sepNegMonomial" (formula "23") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "0,1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "0,0"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                         (rule "inEqSimp_contradEq7" (formula "24") (term "0") (ifseqformula "2"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                                         (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "24") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "24"))
                                                         (rule "true_left" (formula "24"))
                                                         (rule "inEqSimp_subsumption1" (formula "23") (term "0") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                                         (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                                         (rule "qeq_literals" (formula "23") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "20"))
                                                         (rule "mul_literals" (formula "37") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                                         (rule "mul_literals" (formula "37") (term "1"))
                                                         (rule "replace_known_left" (formula "53") (term "0") (ifseqformula "37"))
                                                          (builtin "One Step Simplification" (formula "53"))
                                                         (rule "inEqSimp_geqRight" (formula "53"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "38"))
                                                         (rule "leq_literals" (formula "8") (term "0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "inEqSimp_exactShadow1" (formula "21") (ifseqformula "20"))
                                                         (rule "greater_literals" (formula "21") (term "0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                                         (rule "mul_literals" (formula "21") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "21") (term "0"))
                                                         (rule "add_literals" (formula "21") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "21") (term "1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                         (rule "mul_literals" (formula "21") (term "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "1"))
                                                         (rule "polySimp_mulAssoc" (formula "50") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "50") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "50") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "50") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "50"))
                                                         (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "50"))
                                                         (rule "andLeft" (formula "21"))
                                                         (rule "inEqSimp_homoInEq1" (formula "21"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                                         (rule "add_literals" (formula "21") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "21") (term "1,0"))
                                                         (rule "add_literals" (formula "21") (term "0"))
                                                         (rule "leq_literals" (formula "21"))
                                                         (rule "closeFalse" (formula "21"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "closeTrue" (formula "39"))
                                                   )
                                                )
                                                (branch "Precondition"
                                                   (rule "andRight" (formula "39"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "39"))
                                                      (branch "Case 1"
                                                          (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "15")))
                                                         (rule "closeTrue" (formula "39"))
                                                      )
                                                      (branch "Case 2"
                                                          (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "2")))
                                                         (rule "closeTrue" (formula "39"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "andRight" (formula "39"))
                                                      (branch "Case 1"
                                                         (rule "andRight" (formula "39"))
                                                         (branch "Case 1"
                                                             (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "38")))
                                                            (rule "closeTrue" (formula "39"))
                                                         )
                                                         (branch "Case 2"
                                                             (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "3")))
                                                            (rule "closeTrue" (formula "39"))
                                                         )
                                                      )
                                                      (branch "Case 2"
                                                          (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "4")))
                                                         (rule "closeTrue" (formula "39"))
                                                      )
                                                   )
                                                )
                                                (branch "Usage"
                                                    (builtin "One Step Simplification" (formula "38"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "andLeft" (formula "38"))
                                                   (rule "andLeft" (formula "38"))
                                                   (rule "replace_known_left" (formula "40") (term "0") (ifseqformula "38"))
                                                    (builtin "One Step Simplification" (formula "40"))
                                                   (rule "true_left" (formula "40"))
                                                   (rule "elim_double_block_2" (formula "41") (term "1"))
                                                   (rule "ifUnfold" (formula "41") (term "1") (inst "#boolv=x"))
                                                   (rule "variableDeclaration" (formula "41") (term "1") (newnames "x_11"))
                                                   (rule "inequality_comparison_simple" (formula "41") (term "1"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "replace_known_left" (formula "41") (term "0,0,1,0") (ifseqformula "38"))
                                                    (builtin "One Step Simplification" (formula "41"))
                                                   (rule "ifSplit" (formula "41"))
                                                   (branch "if x_11 true"
                                                       (builtin "One Step Simplification" (formula "42"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch "if x_11 false"
                                                       (builtin "One Step Simplification" (formula "42"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "blockEmpty" (formula "41") (term "1"))
                                                      (rule "emptyStatement" (formula "41") (term "1"))
                                                       (builtin "Block Contract (Internal)" (formula "41") (newnames "result_5,exc_5,heap_Before_BLOCK_7,savedHeap_Before_BLOCK_7,o,f"))
                                                      (branch "Validity"
                                                          (builtin "One Step Simplification" (formula "42"))
                                                          (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "15")) (ifInst ""  (formula "2")) (ifInst ""  (formula "41")) (ifInst ""  (formula "3")) (ifInst ""  (formula "4")))
                                                         (rule "true_left" (formula "40"))
                                                         (rule "eqSymm" (formula "41") (term "0,0,1,0,1"))
                                                         (rule "eqSymm" (formula "41") (term "1,0,0,1"))
                                                         (rule "translateJavaSubInt" (formula "41") (term "0,1,0,2,0,1,0,0,1"))
                                                         (rule "translateJavaSubInt" (formula "41") (term "1,1,0,0,1"))
                                                         (rule "translateJavaSubInt" (formula "41") (term "0,1,1,0,1,0,0,1"))
                                                         (rule "translateJavaAddInt" (formula "41") (term "0,0,1,1,0,0,1"))
                                                         (rule "translateJavaMulInt" (formula "41") (term "0,0,0,1,1,0,0,1"))
                                                         (rule "polySimp_elimSub" (formula "41") (term "1,0,2,0,1,0,0,1"))
                                                         (rule "polySimp_elimSub" (formula "41") (term "1,1,0,1,0,0,1"))
                                                         (rule "polySimp_elimSub" (formula "41") (term "1,1,0,0,1"))
                                                         (rule "polySimp_elimSub" (formula "41") (term "0,1,0,2,0,1,0,0,1"))
                                                         (rule "mul_literals" (formula "41") (term "1,0,1,0,2,0,1,0,0,1"))
                                                         (rule "polySimp_elimSub" (formula "41") (term "0,1,1,0,1,0,0,1"))
                                                         (rule "mul_literals" (formula "41") (term "1,0,1,1,0,1,0,0,1"))
                                                         (rule "polySimp_elimNeg" (formula "41") (term "2,0,1,0,0,1"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "0,0,0,1,1,0,0,1"))
                                                         (rule "polySimp_addComm0" (formula "41") (term "0,1,1,0,1,0,0,1"))
                                                         (rule "polySimp_addComm0" (formula "41") (term "0,1,0,2,0,1,0,0,1"))
                                                         (rule "polySimp_addComm0" (formula "41") (term "1,1,0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "41") (term "1,1,0,1,0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "41") (term "1,0,2,0,1,0,0,1"))
                                                         (rule "variableDeclarationAssign" (formula "41") (term "1"))
                                                         (rule "variableDeclaration" (formula "41") (term "1") (newnames "exc_5_1"))
                                                         (rule "assignment" (formula "41") (term "1"))
                                                          (builtin "One Step Simplification" (formula "41"))
                                                         (rule "emptyStatement" (formula "41") (term "1"))
                                                         (rule "emptyStatement" (formula "41") (term "1"))
                                                         (rule "tryEmpty" (formula "41") (term "1"))
                                                         (rule "blockEmptyLabel" (formula "41") (term "1"))
                                                         (rule "blockEmpty" (formula "41") (term "1"))
                                                         (rule "methodCallEmpty" (formula "41") (term "1"))
                                                         (rule "emptyModality" (formula "41") (term "1"))
                                                         (rule "andRight" (formula "41"))
                                                         (branch "Case 1"
                                                            (rule "andRight" (formula "41"))
                                                            (branch "Case 1"
                                                                (builtin "One Step Simplification" (formula "41"))
                                                               (rule "closeTrue" (formula "41"))
                                                            )
                                                            (branch "Case 2"
                                                                (builtin "One Step Simplification" (formula "41"))
                                                               (rule "Definition_axiom_for_piLemma_in_de_wiesler_Tree" (formula "39") (term "0") (userinteraction))
                                                                (builtin "One Step Simplification" (formula "39") (userinteraction))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "Definition_axiom_for_piLemmaLeft_in_de_wiesler_Tree" (formula "39") (term "0") (userinteraction))
                                                               (rule "Definition_axiom_for_piLemmaRight_in_de_wiesler_Tree" (formula "40") (term "0") (userinteraction))
                                                                (builtin "One Step Simplification" (formula "40"))
                                                                (builtin "One Step Simplification" (formula "39"))
                                                               (rule "ifthenelse_split" (formula "42") (term "0") (userinteraction))
                                                               (branch "self.tree[b] < value TRUE"
                                                                  (rule "eqSymm" (formula "41"))
                                                                  (rule "eqSymm" (formula "40"))
                                                                  (rule "translateJavaSubInt" (formula "41") (term "0,1,0"))
                                                                  (rule "translateJavaSubInt" (formula "41") (term "1"))
                                                                  (rule "translateJavaSubInt" (formula "40") (term "1"))
                                                                  (rule "translateJavaSubInt" (formula "40") (term "0,1,0"))
                                                                  (rule "translateJavaMulInt" (formula "41") (term "0,0,0,1"))
                                                                  (rule "translateJavaMulInt" (formula "40") (term "0,1,1"))
                                                                  (rule "translateJavaAddInt" (formula "41") (term "0,0,1"))
                                                                  (rule "replace_known_left" (formula "36") (term "0,1,1,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "36"))
                                                                  (rule "replace_known_left" (formula "43") (term "0,1,0,1,1") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "polySimp_elimSub" (formula "41") (term "0,1,0"))
                                                                  (rule "mul_literals" (formula "41") (term "1,0,1,0"))
                                                                  (rule "eqSymm" (formula "41"))
                                                                  (rule "polySimp_elimSub" (formula "40") (term "1,0"))
                                                                  (rule "eqSymm" (formula "40"))
                                                                  (rule "polySimp_elimSub" (formula "41") (term "0"))
                                                                  (rule "eqSymm" (formula "41"))
                                                                  (rule "polySimp_elimSub" (formula "40") (term "0,1,1"))
                                                                  (rule "mul_literals" (formula "40") (term "1,0,1,1"))
                                                                  (rule "polySimp_elimSub" (formula "40") (term "0"))
                                                                  (rule "eqSymm" (formula "40"))
                                                                  (rule "polySimp_elimSub" (formula "41") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "41") (term "0,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "36") (term "1,0"))
                                                                  (rule "polySimp_addComm0" (formula "43") (term "0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "40") (term "0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "41") (term "0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "41") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "40") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "41") (term "1,0"))
                                                                  (rule "polySimp_addComm0" (formula "41") (term "0,1,1"))
                                                                  (rule "close" (formula "43") (ifseqformula "41"))
                                                               )
                                                               (branch "self.tree[b] < value FALSE"
                                                                  (rule "eqSymm" (formula "40"))
                                                                  (rule "eqSymm" (formula "39"))
                                                                  (rule "translateJavaMulInt" (formula "40") (term "0,0,0,1"))
                                                                  (rule "translateJavaSubInt" (formula "40") (term "0,1,0"))
                                                                  (rule "translateJavaSubInt" (formula "39") (term "0,1,0"))
                                                                  (rule "translateJavaMulInt" (formula "39") (term "0,1,1"))
                                                                  (rule "translateJavaAddInt" (formula "40") (term "0,0,1"))
                                                                  (rule "translateJavaSubInt" (formula "39") (term "1"))
                                                                  (rule "translateJavaSubInt" (formula "40") (term "1"))
                                                                  (rule "replace_known_right" (formula "35") (term "0,1,1,0") (ifseqformula "42"))
                                                                   (builtin "One Step Simplification" (formula "35"))
                                                                  (rule "add_zero_right" (formula "35") (term "1,0"))
                                                                  (rule "replace_known_right" (formula "43") (term "0,1,0,1,1") (ifseqformula "42"))
                                                                   (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "add_zero_right" (formula "43") (term "0,1,1"))
                                                                  (rule "polySimp_elimSub" (formula "40") (term "1,0"))
                                                                  (rule "eqSymm" (formula "40"))
                                                                  (rule "polySimp_elimSub" (formula "39") (term "1,0"))
                                                                  (rule "eqSymm" (formula "39"))
                                                                  (rule "polySimp_homoEq" (formula "43"))
                                                                  (rule "polySimp_mulLiterals" (formula "43") (term "1,0"))
                                                                  (rule "polySimp_elimSub" (formula "40") (term "0,1,1"))
                                                                  (rule "mul_literals" (formula "40") (term "1,0,1,1"))
                                                                  (rule "polySimp_elimSub" (formula "40") (term "0"))
                                                                  (rule "eqSymm" (formula "40"))
                                                                  (rule "polySimp_elimSub" (formula "39") (term "0,1,1"))
                                                                  (rule "mul_literals" (formula "39") (term "1,0,1,1"))
                                                                  (rule "polySimp_elimSub" (formula "39") (term "0"))
                                                                  (rule "eqSymm" (formula "39"))
                                                                  (rule "polySimp_elimOne" (formula "43") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "40") (term "0,0,0,1"))
                                                                  (rule "polySimp_mulComm0" (formula "39") (term "0,0,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "40") (term "0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "39") (term "0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "40") (term "1"))
                                                                  (rule "polySimp_addComm1" (formula "40") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "39") (term "1,0"))
                                                                  (rule "polySimp_addComm0" (formula "40") (term "0,1,1"))
                                                                  (rule "inEqSimp_ltRight" (formula "42"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                  (rule "logTimesBaseConcrete" (formula "36") (term "0"))
                                                                  (rule "greater_literals" (formula "36") (term "1,0,0"))
                                                                   (builtin "One Step Simplification" (formula "36"))
                                                                  (rule "polySimp_addComm0" (formula "36") (term "1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "20"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                  (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "41"))
                                                                  (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "43") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor0" (formula "43") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "43") (term "1,0,0,0"))
                                                                  (rule "applyEq" (formula "41") (term "0") (ifseqformula "40"))
                                                                  (rule "polySimp_homoEq" (formula "41"))
                                                                  (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "41") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "41") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "41") (term "0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "41") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "41") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor0" (formula "41") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "41") (term "1,0,0,0"))
                                                                  (rule "close" (formula "43") (ifseqformula "41"))
                                                               )
                                                            )
                                                         )
                                                         (branch "Case 2"
                                                             (builtin "One Step Simplification" (formula "41"))
                                                            (rule "closeTrue" (formula "41"))
                                                         )
                                                      )
                                                      (branch "Precondition"
                                                         (rule "andRight" (formula "41"))
                                                         (branch "Case 1"
                                                            (rule "andRight" (formula "41"))
                                                            (branch "Case 1"
                                                                (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "15")))
                                                               (rule "closeTrue" (formula "41"))
                                                            )
                                                            (branch "Case 2"
                                                                (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "2")))
                                                               (rule "closeTrue" (formula "41"))
                                                            )
                                                         )
                                                         (branch "Case 2"
                                                            (rule "andRight" (formula "41"))
                                                            (branch "Case 1"
                                                               (rule "andRight" (formula "41"))
                                                               (branch "Case 1"
                                                                   (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "40")))
                                                                  (rule "closeTrue" (formula "41"))
                                                               )
                                                               (branch "Case 2"
                                                                   (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "3")))
                                                                  (rule "closeTrue" (formula "41"))
                                                               )
                                                            )
                                                            (branch "Case 2"
                                                                (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "4")))
                                                               (rule "closeTrue" (formula "41"))
                                                            )
                                                         )
                                                      )
                                                      (branch "Usage"
                                                          (builtin "One Step Simplification" (formula "40"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "andLeft" (formula "40"))
                                                         (rule "andLeft" (formula "40"))
                                                         (rule "translateJavaSubInt" (formula "41") (term "0,1,0,2,1"))
                                                         (rule "translateJavaAddInt" (formula "41") (term "0,0,0"))
                                                         (rule "translateJavaSubInt" (formula "41") (term "0,1,1,1"))
                                                         (rule "translateJavaSubInt" (formula "41") (term "0"))
                                                         (rule "eqSymm" (formula "41"))
                                                         (rule "translateJavaMulInt" (formula "41") (term "0,0,0,1"))
                                                         (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "40"))
                                                          (builtin "One Step Simplification" (formula "42"))
                                                         (rule "true_left" (formula "42"))
                                                         (rule "polySimp_elimNeg" (formula "41") (term "2,0"))
                                                         (rule "polySimp_elimSub" (formula "41") (term "0,1,1,0"))
                                                         (rule "mul_literals" (formula "41") (term "1,0,1,1,0"))
                                                         (rule "polySimp_elimSub" (formula "41") (term "1"))
                                                         (rule "polySimp_elimSub" (formula "41") (term "1,0,2,0"))
                                                         (rule "polySimp_elimSub" (formula "41") (term "1,1,0"))
                                                         (rule "polySimp_elimSub" (formula "41") (term "0,1,0,2,0"))
                                                         (rule "mul_literals" (formula "41") (term "1,0,1,0,2,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "0,0,0,1"))
                                                         (rule "polySimp_addComm0" (formula "41") (term "0,1,1,0"))
                                                         (rule "polySimp_addComm0" (formula "41") (term "0,1,0,2,0"))
                                                         (rule "polySimp_addComm0" (formula "41") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "41") (term "1,1,0"))
                                                         (rule "polySimp_addComm1" (formula "41") (term "1,0,2,0"))
                                                         (rule "elim_double_block_2" (formula "43") (term "1"))
                                                         (rule "ifUnfold" (formula "43") (term "1") (inst "#boolv=x"))
                                                         (rule "variableDeclaration" (formula "43") (term "1") (newnames "x_12"))
                                                         (rule "inequality_comparison_simple" (formula "43") (term "1"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "replace_known_left" (formula "43") (term "0,0,1,0") (ifseqformula "40"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "ifSplit" (formula "43"))
                                                         (branch "if x_12 true"
                                                             (builtin "One Step Simplification" (formula "44"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                         (branch "if x_12 false"
                                                             (builtin "One Step Simplification" (formula "44"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "blockEmpty" (formula "43") (term "1"))
                                                            (rule "emptyStatement" (formula "43") (term "1"))
                                                             (builtin "Block Contract (Internal)" (formula "43") (newnames "result_6,exc_6,heap_Before_BLOCK_8,savedHeap_Before_BLOCK_8,o,f"))
                                                            (branch "Validity"
                                                                (builtin "One Step Simplification" (formula "44"))
                                                                (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "15")) (ifInst ""  (formula "2")) (ifInst ""  (formula "43")) (ifInst ""  (formula "3")) (ifInst ""  (formula "4")))
                                                               (rule "true_left" (formula "42"))
                                                               (rule "onlyCreatedObjectsAreReferencedFinal" (formula "41") (term "1,0,0,0") (ifseqformula "2") (ifseqformula "3"))
                                                               (rule "translateJavaSubInt" (formula "44") (term "0,1,0,1,0,0,1"))
                                                               (rule "eqSymm" (formula "44") (term "0,0,1,0,1"))
                                                               (rule "polySimp_elimSub" (formula "44") (term "1,0,1,0,0,1"))
                                                               (rule "polySimp_elimSub" (formula "44") (term "0,1,0,1,0,0,1"))
                                                               (rule "mul_literals" (formula "44") (term "1,0,1,0,1,0,0,1"))
                                                               (rule "polySimp_addComm0" (formula "44") (term "0,1,0,1,0,0,1"))
                                                               (rule "polySimp_addComm1" (formula "44") (term "1,0,1,0,0,1"))
                                                               (rule "variableDeclarationAssign" (formula "44") (term "1"))
                                                               (rule "variableDeclaration" (formula "44") (term "1") (newnames "exc_6_1"))
                                                               (rule "assignment" (formula "44") (term "1"))
                                                                (builtin "One Step Simplification" (formula "44"))
                                                               (rule "emptyStatement" (formula "44") (term "1"))
                                                               (rule "emptyStatement" (formula "44") (term "1"))
                                                               (rule "tryEmpty" (formula "44") (term "1"))
                                                               (rule "blockEmptyLabel" (formula "44") (term "1"))
                                                               (rule "blockEmpty" (formula "44") (term "1"))
                                                               (rule "methodCallEmpty" (formula "44") (term "1"))
                                                               (rule "emptyModality" (formula "44") (term "1"))
                                                               (rule "andRight" (formula "44"))
                                                               (branch "Case 1"
                                                                  (rule "andRight" (formula "44"))
                                                                  (branch "Case 1"
                                                                      (builtin "One Step Simplification" (formula "44"))
                                                                     (rule "closeTrue" (formula "44"))
                                                                  )
                                                                  (branch "Case 2"
                                                                      (builtin "One Step Simplification" (formula "44"))
                                                                     (rule "Definition_axiom_for_treeSearchInvariant_in_de_wiesler_Tree" (formula "17") (term "0") (userinteraction))
                                                                      (builtin "One Step Simplification" (formula "17") (ifInst ""  (formula "19")))
                                                                     (rule "andLeft" (formula "17"))
                                                                     (rule "andLeft" (formula "17"))
                                                                     (rule "andLeft" (formula "17"))
                                                                     (rule "andLeft" (formula "17"))
                                                                     (rule "powSplitFactor" (formula "24") (term "0") (userinteraction))
                                                                     (rule "impLeft" (formula "24") (userinteraction))
                                                                     (branch "Case 1"
                                                                        (rule "greater_literals" (formula "47") (term "1"))
                                                                         (builtin "One Step Simplification" (formula "47"))
                                                                        (rule "translateJavaAddInt" (formula "18") (term "1,1"))
                                                                        (rule "translateJavaDivInt" (formula "49") (term "1"))
                                                                        (rule "eqSymm" (formula "21") (term "0"))
                                                                        (rule "eqSymm" (formula "21") (term "1"))
                                                                        (rule "eqSymm" (formula "20"))
                                                                        (rule "translateJavaDivInt" (formula "20") (term "1,1"))
                                                                        (rule "translateJavaSubInt" (formula "20") (term "0"))
                                                                        (rule "translateJavaSubInt" (formula "20") (term "1"))
                                                                        (rule "polySimp_elimSub" (formula "21") (term "0,1"))
                                                                        (rule "polySimp_elimSub" (formula "20") (term "0"))
                                                                        (rule "mul_literals" (formula "20") (term "1,0"))
                                                                        (rule "polySimp_elimSub" (formula "20") (term "1"))
                                                                        (rule "polySimp_homoEq" (formula "21") (term "1"))
                                                                        (rule "polySimp_homoEq" (formula "20"))
                                                                        (rule "polySimp_mulComm0" (formula "21") (term "1,0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                                        (rule "polySimp_addComm0" (formula "18") (term "1,1"))
                                                                        (rule "polySimp_addComm0" (formula "20") (term "1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "21") (term "1,0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1"))
                                                                        (rule "polySimp_elimOne" (formula "21") (term "1,1,0,1"))
                                                                        (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,1"))
                                                                        (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                                        (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                                        (rule "inEqSimp_geqRight" (formula "47"))
                                                                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                        (rule "add_literals" (formula "1") (term "0,0"))
                                                                        (rule "add_zero_left" (formula "1") (term "0"))
                                                                        (rule "polySimp_addAssoc" (formula "22") (term "0,1"))
                                                                        (rule "polySimp_addComm0" (formula "22") (term "0,0,1"))
                                                                        (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                                        (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                                                        (rule "polySimp_addComm0" (formula "21") (term "0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "47") (term "0,1,0,1,1"))
                                                                        (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,1,0,1,1"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                        (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                        (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0"))
                                                                        (rule "polySimp_homoEq" (formula "47"))
                                                                        (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,1,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "24"))
                                                                        (rule "polySimp_mulComm0" (formula "24") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                        (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "19"))
                                                                        (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                                        (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "32"))
                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                                                        (rule "applyEq" (formula "49") (term "0,1,0,1,0") (ifseqformula "20"))
                                                                        (rule "applyEq" (formula "47") (term "0,1,0,1,1,0,1,0") (ifseqformula "20"))
                                                                        (rule "applyEq" (formula "47") (term "0,1,0,1,0,2,0,1,0") (ifseqformula "20"))
                                                                        (rule "polySimp_sepPosMonomial" (formula "22") (term "1"))
                                                                        (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                                                                        (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                                                                        (rule "polySimp_mulAssoc" (formula "22") (term "0,1,1"))
                                                                        (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "22") (term "0,1,1"))
                                                                        (rule "polySimp_elimOne" (formula "22") (term "0,1,1"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "21"))
                                                                        (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                                        (rule "applyEq" (formula "47") (term "0,0,0,0") (ifseqformula "21"))
                                                                        (rule "polySimp_mulComm0" (formula "47") (term "0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "47") (term "0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "47") (term "0,0,0,0"))
                                                                        (rule "mul_literals" (formula "47") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "47"))
                                                                        (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                                                                        (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,1,1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,1,0"))
                                                                        (rule "polySimp_rightDist" (formula "40") (term "1,0,1,1,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,1,0"))
                                                                        (rule "mul_literals" (formula "40") (term "0,1,0,1,1,0"))
                                                                        (rule "polySimp_elimOne" (formula "40") (term "1,1,0,1,1,0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                                                                        (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,1,0,1,1"))
                                                                        (rule "polySimp_mulComm0" (formula "47") (term "1,0,1,0,1,1"))
                                                                        (rule "polySimp_rightDist" (formula "47") (term "1,0,1,0,1,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,1,0,1,1"))
                                                                        (rule "mul_literals" (formula "47") (term "0,1,0,1,0,1,1"))
                                                                        (rule "polySimp_elimOne" (formula "47") (term "1,1,0,1,0,1,1"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "47") (term "1,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0"))
                                                                        (rule "mul_literals" (formula "47") (term "0,1,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0"))
                                                                        (rule "inEqSimp_contradEq7" (formula "22") (term "0") (ifseqformula "24"))
                                                                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                                                        (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                                                        (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                                                        (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                                                        (rule "leq_literals" (formula "22") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "22"))
                                                                        (rule "true_left" (formula "22"))
                                                                        (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "22"))
                                                                        (rule "leq_literals" (formula "9") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "9"))
                                                                        (rule "true_left" (formula "9"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                                                                        (rule "andLeft" (formula "2"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                                        (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                        (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                        (rule "add_zero_right" (formula "2") (term "0"))
                                                                        (rule "leq_literals" (formula "2"))
                                                                        (rule "closeFalse" (formula "2"))
                                                                     )
                                                                     (branch "Case 2"
                                                                        (rule "powSplitFactor" (formula "24") (term "1,1") (userinteraction))
                                                                        (rule "impLeft" (formula "24") (userinteraction))
                                                                        (branch "Case 1"
                                                                           (rule "greater_literals" (formula "48") (term "1"))
                                                                            (builtin "One Step Simplification" (formula "48"))
                                                                           (rule "translateJavaDivInt" (formula "50") (term "1"))
                                                                           (rule "eqSymm" (formula "21") (term "0"))
                                                                           (rule "eqSymm" (formula "21") (term "1"))
                                                                           (rule "translateJavaAddInt" (formula "18") (term "1,1"))
                                                                           (rule "eqSymm" (formula "20"))
                                                                           (rule "translateJavaDivInt" (formula "50") (term "0,1"))
                                                                           (rule "translateJavaDivInt" (formula "20") (term "1,1"))
                                                                           (rule "translateJavaSubInt" (formula "20") (term "0"))
                                                                           (rule "translateJavaSubInt" (formula "20") (term "1"))
                                                                           (rule "polySimp_elimSub" (formula "24") (term "1,1,1"))
                                                                           (rule "mul_literals" (formula "24") (term "1,1,1,1"))
                                                                           (rule "polySimp_elimSub" (formula "48") (term "0"))
                                                                           (rule "mul_literals" (formula "48") (term "1,0"))
                                                                           (rule "polySimp_elimSub" (formula "21") (term "0,1"))
                                                                           (rule "polySimp_elimSub" (formula "20") (term "0"))
                                                                           (rule "mul_literals" (formula "20") (term "1,0"))
                                                                           (rule "polySimp_elimSub" (formula "20") (term "1"))
                                                                           (rule "polySimp_homoEq" (formula "21") (term "1"))
                                                                           (rule "polySimp_homoEq" (formula "20"))
                                                                           (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                                                           (rule "eqSymm" (formula "24"))
                                                                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,1"))
                                                                           (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                                           (rule "polySimp_addComm0" (formula "18") (term "1,1"))
                                                                           (rule "polySimp_addComm1" (formula "48") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "24") (term "1,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "20") (term "1,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "48") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "24") (term "0,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "21") (term "1,0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1"))
                                                                           (rule "polySimp_elimOne" (formula "21") (term "1,1,0,1"))
                                                                           (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,1"))
                                                                           (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                                           (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "40") (term "0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,1,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "23"))
                                                                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0"))
                                                                           (rule "polySimp_homoEq" (formula "47"))
                                                                           (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "1"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                                                                           (rule "polySimp_addComm0" (formula "21") (term "0,0,1"))
                                                                           (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "20") (term "0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                           (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                           (rule "inEqSimp_geqRight" (formula "48"))
                                                                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "1") (term "0,0"))
                                                                           (rule "add_zero_left" (formula "1") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "19"))
                                                                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "48") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,1,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "48") (term "0"))
                                                                           (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "33"))
                                                                           (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                                                           (rule "applyEq" (formula "50") (term "0,1,0,1,0") (ifseqformula "20"))
                                                                           (rule "applyEq" (formula "25") (term "1") (ifseqformula "26"))
                                                                           (rule "applyEq" (formula "48") (term "0,1,0,1,0,2,0,1,0") (ifseqformula "20"))
                                                                           (rule "applyEq" (formula "48") (term "0,1,0,1,1,0,1,0") (ifseqformula "20"))
                                                                           (rule "polySimp_sepPosMonomial" (formula "22") (term "1"))
                                                                           (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                                                                           (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                                                                           (rule "polySimp_mulAssoc" (formula "22") (term "0,1,1"))
                                                                           (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "22") (term "0,1,1"))
                                                                           (rule "polySimp_elimOne" (formula "22") (term "0,1,1"))
                                                                           (rule "polySimp_sepNegMonomial" (formula "21"))
                                                                           (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                                           (rule "applyEq" (formula "48") (term "0,0,0,0") (ifseqformula "21"))
                                                                           (rule "polySimp_mulComm0" (formula "48") (term "0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "48") (term "0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "48") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "48") (term "0,0,0,0"))
                                                                           (rule "mul_literals" (formula "48") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_sepNegMonomial" (formula "48"))
                                                                           (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "48") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "41") (term "1,0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,1,0"))
                                                                           (rule "mul_literals" (formula "41") (term "0,1,0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "41") (term "1,1,0,1,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                                                                           (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                           (rule "mul_literals" (formula "1") (term "0,1"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                                                                           (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,1,0,1,1"))
                                                                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,0,1,1"))
                                                                           (rule "polySimp_rightDist" (formula "48") (term "1,0,1,0,1,1"))
                                                                           (rule "mul_literals" (formula "48") (term "0,1,0,1,0,1,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,0,1,1"))
                                                                           (rule "polySimp_elimOne" (formula "48") (term "1,1,0,1,0,1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "48") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "48") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0"))
                                                                           (rule "inEqSimp_contradEq7" (formula "22") (term "0") (ifseqformula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                                                           (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                                                           (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                                                           (rule "leq_literals" (formula "22") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "22"))
                                                                           (rule "true_left" (formula "22"))
                                                                           (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "22"))
                                                                           (rule "leq_literals" (formula "9") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "9"))
                                                                           (rule "true_left" (formula "9"))
                                                                           (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                                                                           (rule "andLeft" (formula "2"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                           (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                           (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                                           (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                                           (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                           (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                           (rule "add_zero_right" (formula "2") (term "0"))
                                                                           (rule "leq_literals" (formula "2"))
                                                                           (rule "closeFalse" (formula "2"))
                                                                        )
                                                                        (branch "Case 2"
                                                                           (rule "eqSymm" (formula "21") (term "0"))
                                                                           (rule "eqSymm" (formula "21") (term "1"))
                                                                           (rule "translateJavaAddInt" (formula "18") (term "1,1"))
                                                                           (rule "eqSymm" (formula "20"))
                                                                           (rule "translateJavaDivInt" (formula "50") (term "1"))
                                                                           (rule "translateJavaSubInt" (formula "20") (term "0"))
                                                                           (rule "translateJavaSubInt" (formula "20") (term "1"))
                                                                           (rule "translateJavaDivInt" (formula "50") (term "0,1"))
                                                                           (rule "translateJavaDivInt" (formula "20") (term "1,1"))
                                                                           (rule "polySimp_elimSub" (formula "25") (term "1,1,1"))
                                                                           (rule "mul_literals" (formula "25") (term "1,1,1,1"))
                                                                           (rule "polySimp_elimSub" (formula "24") (term "1,0"))
                                                                           (rule "mul_literals" (formula "24") (term "1,1,0"))
                                                                           (rule "polySimp_elimSub" (formula "24") (term "1,1,1"))
                                                                           (rule "mul_literals" (formula "24") (term "1,1,1,1"))
                                                                           (rule "polySimp_elimSub" (formula "21") (term "0,1"))
                                                                           (rule "polySimp_elimSub" (formula "20") (term "0"))
                                                                           (rule "mul_literals" (formula "20") (term "1,0"))
                                                                           (rule "polySimp_elimSub" (formula "20") (term "1"))
                                                                           (rule "polySimp_elimSub" (formula "24") (term "0,1,1,1"))
                                                                           (rule "mul_literals" (formula "24") (term "1,0,1,1,1"))
                                                                           (rule "polySimp_addLiterals" (formula "24") (term "1,1,1"))
                                                                           (rule "polySimp_homoEq" (formula "21") (term "1"))
                                                                           (rule "polySimp_homoEq" (formula "20"))
                                                                           (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                                           (rule "eqSymm" (formula "25"))
                                                                           (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                                                           (rule "eqSymm" (formula "24"))
                                                                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,1"))
                                                                           (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                                           (rule "polySimp_addComm0" (formula "18") (term "1,1"))
                                                                           (rule "polySimp_addComm1" (formula "25") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "24") (term "1,0,0"))
                                                                           (rule "eqSymm" (formula "24"))
                                                                           (rule "polySimp_addComm0" (formula "20") (term "1,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "25") (term "0,1,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "24") (term "0,1,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "24") (term "1,0"))
                                                                           (rule "polySimp_addComm0" (formula "24") (term "0,1,0"))
                                                                           (rule "eqSymm" (formula "24"))
                                                                           (rule "polySimp_rightDist" (formula "21") (term "1,0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1"))
                                                                           (rule "polySimp_elimOne" (formula "21") (term "1,1,0,1"))
                                                                           (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,1"))
                                                                           (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                                           (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "23"))
                                                                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0"))
                                                                           (rule "polySimp_homoEq" (formula "48"))
                                                                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "48") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "1"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                                                                           (rule "polySimp_addComm0" (formula "21") (term "0,0,1"))
                                                                           (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "20") (term "0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                           (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "18"))
                                                                           (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "48") (term "0,1,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,1,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "48") (term "0"))
                                                                           (rule "applyEq" (formula "18") (term "0,1,0") (ifseqformula "33"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                                                           (rule "applyEq" (formula "50") (term "0,1,0,1,0") (ifseqformula "19"))
                                                                           (rule "applyEq" (formula "25") (term "1") (ifseqformula "26"))
                                                                           (rule "applyEq" (formula "48") (term "0,1,0,1,0,2,0,1,0") (ifseqformula "19"))
                                                                           (rule "applyEq" (formula "48") (term "0,1,0,1,1,0,1,0") (ifseqformula "19"))
                                                                           (rule "polySimp_sepPosMonomial" (formula "21") (term "1"))
                                                                           (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                                                                           (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                                                                           (rule "polySimp_mulAssoc" (formula "21") (term "0,1,1"))
                                                                           (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "21") (term "0,1,1"))
                                                                           (rule "polySimp_elimOne" (formula "21") (term "0,1,1"))
                                                                           (rule "polySimp_sepNegMonomial" (formula "20"))
                                                                           (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                                           (rule "applyEq" (formula "48") (term "0,0,0,0") (ifseqformula "20"))
                                                                           (rule "polySimp_mulComm0" (formula "48") (term "0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "48") (term "0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "48") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "48") (term "0,0,0,0"))
                                                                           (rule "mul_literals" (formula "48") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_sepNegMonomial" (formula "48"))
                                                                           (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "48") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                                                                           (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "41") (term "1,0,1,1,0"))
                                                                           (rule "mul_literals" (formula "41") (term "0,1,0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "41") (term "1,1,0,1,1,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,1,0,1,1"))
                                                                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,0,1,1"))
                                                                           (rule "polySimp_rightDist" (formula "48") (term "1,0,1,0,1,1"))
                                                                           (rule "mul_literals" (formula "48") (term "0,1,0,1,0,1,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,1,0,1,1"))
                                                                           (rule "polySimp_elimOne" (formula "48") (term "1,1,0,1,0,1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "48") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "48") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "48") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "48") (term "1,1,0,0"))
                                                                           (rule "inEqSimp_contradEq7" (formula "21") (term "0") (ifseqformula "23"))
                                                                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                                                           (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                                                           (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                                                           (rule "leq_literals" (formula "21") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "21"))
                                                                           (rule "true_left" (formula "21"))
                                                                           (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "21"))
                                                                           (rule "leq_literals" (formula "8") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "8"))
                                                                           (rule "true_left" (formula "8"))
                                                                           (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "1"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                                                           (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "21") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "21") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "21"))
                                                                           (rule "true_left" (formula "21"))
                                                                           (rule "newSym_eq" (formula "21") (inst "newSymDef=mul(pow(Z(2(#)),
        add(add(Z(neglit(1(#))),
                mul(l, Z(neglit(1(#))))),
            int::final(self,
                       de.wiesler.Tree::$log_buckets))),
    Z(0(#)))") (inst "l=l_0"))
                                                                           (rule "times_zero_1" (formula "21") (term "1,1"))
                                                                           (rule "add_zero_right" (formula "21") (term "1"))
                                                                           (rule "applyEq" (formula "48") (term "0") (ifseqformula "21"))
                                                                           (rule "eqSymm" (formula "48"))
                                                                           (rule "applyEq" (formula "46") (term "0,2,0") (ifseqformula "21"))
                                                                           (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "21"))
                                                                           (rule "eqSymm" (formula "22"))
                                                                           (rule "applyEq" (formula "46") (term "1,0") (ifseqformula "21"))
                                                                           (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "22"))
                                                                           (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                                           (rule "eqSymm" (formula "23"))
                                                                           (rule "applyEq" (formula "48") (term "0,0,0") (ifseqformula "23"))
                                                                           (rule "applyEq" (formula "15") (term "3,0") (ifseqformula "23"))
                                                                           (rule "applyEq" (formula "11") (term "0") (ifseqformula "23"))
                                                                           (rule "applyEq" (formula "10") (term "0") (ifseqformula "23"))
                                                                           (rule "applyEq" (formula "37") (term "0,0,1,0,2,0") (ifseqformula "23"))
                                                                           (rule "applyEq" (formula "19") (term "0,0,1,1") (ifseqformula "23"))
                                                                           (rule "applyEq" (formula "24") (term "1") (ifseqformula "23"))
                                                                           (rule "applyEq" (formula "46") (term "0,1,0,1") (ifseqformula "23"))
                                                                           (rule "elimGcdLeq_antec" (formula "10") (inst "elimGcd=Z(4(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(1(1(9(0(7(8(6(3(5(#))))))))))"))
                                                                           (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
                                                                           (rule "leq_literals" (formula "10") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "neg_literal" (formula "10") (term "0,0,0,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,0,0,0"))
                                                                           (rule "mul_literals" (formula "10") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_addLiterals" (formula "10") (term "0,0,0,0"))
                                                                           (rule "add_literals" (formula "10") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                                                                           (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "10") (term "0,0"))
                                                                           (rule "qeq_literals" (formula "10") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "10"))
                                                                           (rule "elimGcdGeq_antec" (formula "11") (inst "elimGcd=Z(4(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(neglit(2(1(9(0(7(8(6(3(5(#)))))))))))"))
                                                                           (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,1,0"))
                                                                           (rule "leq_literals" (formula "11") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "11"))
                                                                           (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                                                           (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "11") (term "0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                                                           (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "11") (term "0,0"))
                                                                           (rule "leq_literals" (formula "11") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "11"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "16"))
                                                                           (rule "mul_literals" (formula "29") (term "0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                                                           (rule "mul_literals" (formula "29") (term "1"))
                                                                           (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "29"))
                                                                           (rule "leq_literals" (formula "6") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "6"))
                                                                           (rule "true_left" (formula "6"))
                                                                           (rule "inEqSimp_exactShadow1" (formula "16") (ifseqformula "15"))
                                                                           (rule "greater_literals" (formula "16") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "16"))
                                                                           (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                                                           (rule "mul_literals" (formula "16") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "16") (term "0"))
                                                                           (rule "add_literals" (formula "16") (term "1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "16") (term "1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                                           (rule "mul_literals" (formula "16") (term "1"))
                                                                           (rule "Definition_axiom_for_piLemma_in_de_wiesler_Tree" (formula "43") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "43"))
                                                                           (rule "andLeft" (formula "43"))
                                                                           (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "26"))
                                                                           (rule "true_left" (formula "26"))
                                                                           (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "25") (inst "i_0=i_0") (inst "i=i"))
                                                                            (builtin "One Step Simplification" (formula "25"))
                                                                           (rule "expand_inInt" (formula "25") (term "1,0,0,1,0"))
                                                                           (rule "expand_inInt" (formula "25") (term "1,0,0,1"))
                                                                           (rule "replace_int_MAX" (formula "25") (term "1,0,1,0,0,1,0"))
                                                                           (rule "replace_int_MIN" (formula "25") (term "0,1,1,0,0,1,0"))
                                                                           (rule "replace_int_MAX" (formula "25") (term "1,0,1,0,0,1"))
                                                                           (rule "replace_int_MIN" (formula "25") (term "0,1,1,0,0,1"))
                                                                           (rule "andLeft" (formula "25"))
                                                                           (rule "andLeft" (formula "25"))
                                                                           (rule "andLeft" (formula "25"))
                                                                           (rule "andLeft" (formula "25"))
                                                                           (rule "andLeft" (formula "25"))
                                                                           (rule "andLeft" (formula "25"))
                                                                           (rule "andLeft" (formula "27"))
                                                                           (rule "andLeft" (formula "25"))
                                                                           (rule "andLeft" (formula "26"))
                                                                           (rule "andLeft" (formula "25"))
                                                                           (rule "notLeft" (formula "26"))
                                                                           (rule "notLeft" (formula "25"))
                                                                           (rule "eqSymm" (formula "33") (term "1,0"))
                                                                           (rule "translateJavaSubInt" (formula "31") (term "3,0"))
                                                                           (rule "translateJavaShiftLeftInt" (formula "27") (term "1"))
                                                                           (rule "translateJavaSubInt" (formula "33") (term "0,2,0,1,0"))
                                                                           (rule "replace_known_right" (formula "53") (term "0") (ifseqformula "56"))
                                                                            (builtin "One Step Simplification" (formula "53"))
                                                                           (rule "polySimp_elimSub" (formula "31") (term "3,0"))
                                                                           (rule "mul_literals" (formula "31") (term "1,3,0"))
                                                                           (rule "polySimp_elimSub" (formula "33") (term "0,2,0,1,0"))
                                                                           (rule "mul_literals" (formula "33") (term "1,0,2,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "31") (term "3,0"))
                                                                           (rule "polySimp_addComm0" (formula "33") (term "0,2,0,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "32") (term "1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "33") (term "1,1,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "32") (term "0,1,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "32") (term "1,1,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "30"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "28"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "29"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "25"))
                                                                           (rule "applyEq" (formula "29") (term "1") (ifseqformula "24"))
                                                                           (rule "applyEq" (formula "30") (term "1") (ifseqformula "24"))
                                                                           (rule "applyEq" (formula "31") (term "1,3,0") (ifseqformula "24"))
                                                                           (rule "applyEq" (formula "28") (term "0") (ifseqformula "24"))
                                                                           (rule "applyEq" (formula "24") (term "0") (ifseqformula "27"))
                                                                           (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,0") (ifseqformula "27"))
                                                                           (rule "applyEq" (formula "32") (term "0,1,0,0,1,1,0") (ifseqformula "27"))
                                                                           (rule "applyEq" (formula "33") (term "0,1,0,0,1,0,0,0") (ifseqformula "27"))
                                                                           (rule "applyEq" (formula "27") (term "1") (ifseqformula "24"))
                                                                           (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,0") (ifseqformula "24"))
                                                                           (rule "applyEq" (formula "33") (term "0,1,0,0,1,0,0,0") (ifseqformula "24"))
                                                                           (rule "applyEq" (formula "32") (term "0,1,0,0,1,1,0") (ifseqformula "24"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "32") (term "1,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "32") (term "1,1,1,0"))
                                                                           (rule "mul_literals" (formula "32") (term "0,1,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "32") (term "1,1,1,1,0"))
                                                                           (rule "javaShiftLeftIntDef" (formula "24") (term "0"))
                                                                           (rule "mod_axiom" (formula "24") (term "1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                                                           (rule "shiftLeftDef" (formula "24") (term "0,0"))
                                                                           (rule "polySimp_elimNeg" (formula "24") (term "1,1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "24") (term "0,1,1,0,0"))
                                                                           (rule "shiftLeftPositiveShiftDef" (formula "24") (term "2,0,0"))
                                                                           (rule "polySimp_elimOneLeft0" (formula "24") (term "2,0,0"))
                                                                           (rule "shiftRightPositiveShiftDef" (formula "24") (term "1,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                                                                           (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "26"))
                                                                           (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                                           (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                           (rule "add_literals" (formula "1") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                           (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "1"))
                                                                           (rule "leq_literals" (formula "7") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "7"))
                                                                           (rule "true_left" (formula "7"))
                                                                           (rule "nnf_imp2or" (formula "33") (term "0"))
                                                                           (rule "nnf_imp2or" (formula "32") (term "0"))
                                                                           (rule "expand_moduloInteger" (formula "24") (term "0"))
                                                                           (rule "replace_int_RANGE" (formula "24") (term "1,1,0"))
                                                                           (rule "replace_int_HALFRANGE" (formula "24") (term "0,0,1,0"))
                                                                           (rule "replace_int_MIN" (formula "24") (term "0,0"))
                                                                           (rule "polySimp_homoEq" (formula "24"))
                                                                           (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                                           (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "24") (term "0,0"))
                                                                           (rule "polySimp_sepNegMonomial" (formula "24"))
                                                                           (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                                           (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "18") (term "0"))
                                                                           (rule "translateJavaSubInt" (formula "18") (term "0,1,1,0"))
                                                                           (rule "polySimp_elimSub" (formula "18") (term "1,0,0,0"))
                                                                           (rule "polySimp_elimSub" (formula "18") (term "1,1,0"))
                                                                           (rule "polySimp_elimSub" (formula "18") (term "0,1,1,0"))
                                                                           (rule "mul_literals" (formula "18") (term "1,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "18") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "18") (term "0,1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "18") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "18") (term "0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "18") (term "1,0"))
                                                                           (rule "polySimp_addComm0" (formula "18") (term "0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "18") (term "0"))
                                                                           (rule "polySimp_homoEq" (formula "18"))
                                                                           (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                                           (rule "polySimp_mulComm1" (formula "18") (term "1,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "18") (term "0,1,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "18") (term "0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "18") (term "0,0,1,1,0"))
                                                                           (rule "polySimp_mulComm1" (formula "18") (term "1,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "18") (term "0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                                           (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                                           (rule "applyEq" (formula "18") (term "1,1,0,1,0") (ifseqformula "17"))
                                                                           (rule "applyEq" (formula "18") (term "0,1,0,1,0,0,1,0") (ifseqformula "17"))
                                                                           (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                                           (rule "applyEq" (formula "18") (term "0,1,0,1,0,0,1,0") (ifseqformula "17"))
                                                                           (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                                           (rule "applyEq" (formula "18") (term "0,0,1,0") (ifseqformula "21"))
                                                                           (rule "polySimp_mulComm1" (formula "18") (term "0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "18") (term "0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                                           (rule "applyEq" (formula "18") (term "0,0,1,0") (ifseqformula "21"))
                                                                           (rule "polySimp_mulComm1" (formula "18") (term "0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "18") (term "0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                                           (rule "applyEq" (formula "18") (term "0,1,0,1,0,1,0,0,0") (ifseqformula "17"))
                                                                           (rule "applyEq" (formula "18") (term "0,1,0,0,0") (ifseqformula "21"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0"))
                                                                           (rule "polySimp_sepPosMonomial" (formula "18"))
                                                                           (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                                           (rule "polySimp_rightDist" (formula "18") (term "0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1"))
                                                                           (rule "polySimp_elimOne" (formula "18") (term "1,0,1"))
                                                                           (rule "polySimp_rightDist" (formula "18") (term "0,0,1"))
                                                                           (rule "polySimp_rightDist" (formula "18") (term "0,0,0,1"))
                                                                           (rule "mul_literals" (formula "18") (term "0,0,0,0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,1"))
                                                                           (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                                                           (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                                                           (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "54") (term "1,1"))
                                                                           (rule "translateJavaSubInt" (formula "54") (term "0,1,1,1,1"))
                                                                           (rule "polySimp_elimSub" (formula "54") (term "1,0,0,1,1"))
                                                                           (rule "polySimp_elimSub" (formula "54") (term "0,1,1,1,1"))
                                                                           (rule "mul_literals" (formula "54") (term "1,0,1,1,1,1"))
                                                                           (rule "polySimp_elimSub" (formula "54") (term "1,1,1,1"))
                                                                           (rule "polySimp_mulComm0" (formula "54") (term "1,1"))
                                                                           (rule "polySimp_addComm0" (formula "54") (term "0,1,0,1,1"))
                                                                           (rule "polySimp_rightDist" (formula "54") (term "0,1,1,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1,1,1"))
                                                                           (rule "polySimp_addComm1" (formula "54") (term "1,1,1"))
                                                                           (rule "polySimp_rightDist" (formula "54") (term "0,0,1,1,1"))
                                                                           (rule "polySimp_mulAssoc" (formula "54") (term "0,0,0,1,1,1"))
                                                                           (rule "polySimp_mulComm0" (formula "54") (term "0,0,0,0,1,1,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "54") (term "0,0,0,1,1,1"))
                                                                           (rule "polySimp_addComm1" (formula "54") (term "0,1,1,1"))
                                                                           (rule "polySimp_addComm0" (formula "54") (term "0,0,1,1,1"))
                                                                           (rule "polySimp_rightDist" (formula "54") (term "1,1"))
                                                                           (rule "polySimp_mulComm1" (formula "54") (term "1,1,1"))
                                                                           (rule "polySimp_mulComm0" (formula "54") (term "0,1,1,1"))
                                                                           (rule "polySimp_rightDist" (formula "54") (term "0,1,1"))
                                                                           (rule "polySimp_mulComm1" (formula "54") (term "1,0,1,1"))
                                                                           (rule "polySimp_mulComm0" (formula "54") (term "0,1,0,1,1"))
                                                                           (rule "polySimp_rightDist" (formula "54") (term "0,0,1,1"))
                                                                           (rule "polySimp_elimOne" (formula "54") (term "0,0,0,1,1"))
                                                                           (rule "polySimp_mulComm1" (formula "54") (term "1,0,0,1,1"))
                                                                           (rule "polySimp_mulComm0" (formula "54") (term "0,1,0,0,1,1"))
                                                                           (rule "polySimp_addAssoc" (formula "54") (term "1"))
                                                                           (rule "polySimp_addAssoc" (formula "54") (term "0,1"))
                                                                           (rule "polySimp_addAssoc" (formula "54") (term "0,0,1"))
                                                                           (rule "polySimp_homoEq" (formula "54"))
                                                                           (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "54") (term "0,0,0"))
                                                                           (rule "applyEq" (formula "54") (term "1,1,0,1,0") (ifseqformula "46"))
                                                                           (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                                           (rule "applyEq" (formula "54") (term "0,1,1,0,0,1,0") (ifseqformula "46"))
                                                                           (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "54") (term "0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                                                           (rule "polySimp_rightDist" (formula "54") (term "1,1,1,0,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "54") (term "0,1,1,1,0,1,0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "54") (term "1,1,0,1,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "54") (term "0,1,1,0,1,0,0,0"))
                                                                           (rule "add_literals" (formula "54") (term "0,0,1,1,0,1,0,0,0"))
                                                                           (rule "applyEq" (formula "54") (term "0,1,1,0,0,1,0") (ifseqformula "46"))
                                                                           (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                                                           (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "54") (term "0,1,1,0,0,1,0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "54") (term "1,0,0,1,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "54") (term "0,1,0,0,1,0,0,0"))
                                                                           (rule "add_literals" (formula "54") (term "0,0,1,0,0,1,0,0,0"))
                                                                           (rule "applyEq" (formula "54") (term "0,1,1,0,0,1,0") (ifseqformula "46"))
                                                                           (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                                           (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "54") (term "0,1,1,0,0,1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "54") (term "1,0,0,1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "54") (term "0,1,0,0,1,0,0,0"))
                                                                           (rule "add_literals" (formula "54") (term "0,0,1,0,0,1,0,0,0"))
                                                                           (rule "applyEq" (formula "54") (term "1,0,1,0") (ifseqformula "20"))
                                                                           (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                                                           (rule "applyEq" (formula "54") (term "0,0,1,0") (ifseqformula "20"))
                                                                           (rule "polySimp_mulComm0" (formula "54") (term "0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                                                           (rule "applyEq" (formula "54") (term "0,0,1,0") (ifseqformula "20"))
                                                                           (rule "polySimp_mulComm0" (formula "54") (term "0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                                           (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                                                           (rule "applyEq" (formula "54") (term "0,0,1,0,0") (ifseqformula "38"))
                                                                           (rule "polySimp_mulComm1" (formula "54") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0"))
                                                                           (rule "apply_eq_monomials" (formula "54") (term "1,0,0") (ifseqformula "18"))
                                                                           (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "54") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "54") (term "1,0,0"))
                                                                           (rule "add_literals" (formula "54") (term "1,1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "54") (term "1,1,0,0"))
                                                                           (rule "add_zero_right" (formula "54") (term "1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "54") (term "1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "54") (term "0,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "54") (term "0,0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,1,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "54") (term "1,0,0,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "54") (term "0,0,0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0,1,0,0"))
                                                                           (rule "mul_literals" (formula "54") (term "0,0,0,0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "54") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "54") (term "0,0,0"))
                                                                           (rule "polySimp_pullOutFactor0b" (formula "54") (term "0,0"))
                                                                           (rule "add_literals" (formula "54") (term "1,1,0,0"))
                                                                           (rule "times_zero_1" (formula "54") (term "1,0,0"))
                                                                           (rule "add_zero_right" (formula "54") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                                                           (rule "polySimp_addComm1" (formula "54") (term "0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "54") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,0,0"))
                                                                           (rule "add_literals" (formula "54") (term "1,1,0,0,0,0"))
                                                                           (rule "times_zero_1" (formula "54") (term "1,0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "54") (term "0,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "54") (term "0,0,0,0,0"))
                                                                           (rule "polySimp_pullOutFactor2b" (formula "54") (term "0,0,0,0"))
                                                                           (rule "add_literals" (formula "54") (term "1,1,0,0,0,0"))
                                                                           (rule "times_zero_1" (formula "54") (term "1,0,0,0,0"))
                                                                           (rule "add_zero_right" (formula "54") (term "0,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,0"))
                                                                           (rule "add_literals" (formula "54") (term "0,0,0,0,0"))
                                                                           (rule "add_zero_left" (formula "54") (term "0,0,0,0"))
                                                                           (rule "applyEq" (formula "54") (term "0,1,1,1,0,0,0") (ifseqformula "46"))
                                                                           (rule "polySimp_mulComm0" (formula "54") (term "1,1,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "54") (term "1,1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "54") (term "0,1,1,1,0,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "54") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "54") (term "0,1,1,0,0,0"))
                                                                           (rule "add_literals" (formula "54") (term "0,0,1,1,0,0,0"))
                                                                           (rule "applyEq" (formula "54") (term "1,0,0,0") (ifseqformula "20"))
                                                                           (rule "polySimp_pullOutFactor2" (formula "54") (term "0,0,0"))
                                                                           (rule "add_literals" (formula "54") (term "1,0,0,0"))
                                                                           (rule "polySimp_sepPosMonomial" (formula "54"))
                                                                           (rule "polySimp_mulComm0" (formula "54") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "54") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "54") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "54") (term "1,1"))
                                                                           (rule "polySimp_mulAssoc" (formula "54") (term "0,1"))
                                                                           (rule "polySimp_mulComm0" (formula "54") (term "0,0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "54") (term "0,1"))
                                                                           (rule "polySimp_elimOne" (formula "54") (term "0,1"))
                                                                           (rule "Definition_axiom_for_binarySearchInvariant_in_de_wiesler_Tree" (formula "14") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "14"))
                                                                           (rule "andLeft" (formula "14"))
                                                                           (rule "andLeft" (formula "14"))
                                                                           (rule "andLeft" (formula "14"))
                                                                           (rule "eqSymm" (formula "17") (term "0"))
                                                                           (rule "translateJavaSubInt" (formula "16") (term "0,0"))
                                                                           (rule "translateJavaSubInt" (formula "16") (term "0,2,0,1"))
                                                                           (rule "translateJavaSubInt" (formula "15") (term "1"))
                                                                           (rule "translateJavaSubInt" (formula "14") (term "0"))
                                                                           (rule "translateJavaSubInt" (formula "17") (term "0,0"))
                                                                           (rule "polySimp_elimSub" (formula "16") (term "0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                                                           (rule "polySimp_elimSub" (formula "16") (term "0,2,0,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "16") (term "1,0,2,0,1"))
                                                                           (rule "polySimp_elimSub" (formula "15") (term "1"))
                                                                           (rule "mul_literals" (formula "15") (term "1,1"))
                                                                           (rule "polySimp_elimSub" (formula "14") (term "0"))
                                                                           (rule "mul_literals" (formula "14") (term "1,0"))
                                                                           (rule "polySimp_elimSub" (formula "17") (term "0,0"))
                                                                           (rule "mul_literals" (formula "17") (term "1,0,0"))
                                                                           (rule "polySimp_homoEq" (formula "16") (term "0"))
                                                                           (rule "polySimp_homoEq" (formula "17") (term "0"))
                                                                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "16") (term "0,2,0,1"))
                                                                           (rule "polySimp_addComm0" (formula "15") (term "1"))
                                                                           (rule "polySimp_addComm0" (formula "14") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                                                                           (rule "polySimp_addComm0" (formula "17") (term "1,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "16") (term "0,1,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                                                           (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                                           (rule "polySimp_addComm0" (formula "17") (term "0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "16") (term "1"))
                                                                           (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "17") (term "1"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "14"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "15"))
                                                                           (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                                           (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "30"))
                                                                           (rule "applyEq" (formula "17") (term "0,1,0,0") (ifseqformula "30"))
                                                                           (rule "polySimp_sepNegMonomial" (formula "16") (term "0"))
                                                                           (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
                                                                           (rule "polySimp_elimOne" (formula "16") (term "0,0"))
                                                                           (rule "polySimp_sepNegMonomial" (formula "17") (term "0"))
                                                                           (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
                                                                           (rule "polySimp_elimOne" (formula "17") (term "0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1"))
                                                                           (rule "polySimp_mulComm0" (formula "16") (term "1,1"))
                                                                           (rule "polySimp_rightDist" (formula "16") (term "1,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1"))
                                                                           (rule "mul_literals" (formula "16") (term "0,1,1"))
                                                                           (rule "polySimp_elimOne" (formula "16") (term "1,1,1"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                                           (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                                           (rule "mul_literals" (formula "15") (term "0,1"))
                                                                           (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                                                           (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "7"))
                                                                           (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                                                           (rule "mul_literals" (formula "14") (term "0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                                           (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                                           (rule "add_literals" (formula "14") (term "0,0"))
                                                                           (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                                                           (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                                           (rule "inEqSimp_subsumption4" (formula "14") (ifseqformula "9"))
                                                                           (rule "greater_literals" (formula "14") (term "0,0"))
                                                                            (builtin "One Step Simplification" (formula "14"))
                                                                           (rule "mul_literals" (formula "14") (term "0,0"))
                                                                           (rule "leq_literals" (formula "14") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "14"))
                                                                           (rule "true_left" (formula "14"))
                                                                           (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
                                                                           (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0"))
                                                                           (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0"))
                                                                           (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
                                                                           (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,0"))
                                                                           (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "36") (term "0,0,0,0,0,0"))
                                                                           (rule "add_zero_left" (formula "36") (term "0,0,0,0,0"))
                                                                           (rule "nnf_notAnd" (formula "36") (term "1,0,0"))
                                                                           (rule "inEqSimp_notLeq" (formula "36") (term "0,1,0,0"))
                                                                           (rule "mul_literals" (formula "36") (term "1,0,0,0,1,0,0"))
                                                                           (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,1,0,0"))
                                                                           (rule "mul_literals" (formula "36") (term "1,0,1,0,0"))
                                                                           (rule "inEqSimp_notGeq" (formula "36") (term "1,1,0,0"))
                                                                           (rule "mul_literals" (formula "36") (term "1,0,0,1,1,0,0"))
                                                                           (rule "add_literals" (formula "36") (term "0,0,1,1,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,1,0,0"))
                                                                           (rule "mul_literals" (formula "36") (term "1,1,1,0,0"))
                                                                           (rule "nnf_notAnd" (formula "35") (term "0,0,0"))
                                                                           (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0,0"))
                                                                           (rule "mul_literals" (formula "35") (term "1,0,0,0,0,0,0"))
                                                                           (rule "add_literals" (formula "35") (term "0,0,0,0,0,0"))
                                                                           (rule "add_zero_left" (formula "35") (term "0,0,0,0,0"))
                                                                           (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,0"))
                                                                           (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,0"))
                                                                           (rule "add_zero_left" (formula "35") (term "0,0,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0"))
                                                                           (rule "nnf_notAnd" (formula "35") (term "1,0,0"))
                                                                           (rule "inEqSimp_notLeq" (formula "35") (term "0,1,0,0"))
                                                                           (rule "mul_literals" (formula "35") (term "1,0,0,0,1,0,0"))
                                                                           (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,1,0,0"))
                                                                           (rule "mul_literals" (formula "35") (term "1,0,1,0,0"))
                                                                           (rule "inEqSimp_notGeq" (formula "35") (term "1,1,0,0"))
                                                                           (rule "mul_literals" (formula "35") (term "1,0,0,1,1,0,0"))
                                                                           (rule "add_literals" (formula "35") (term "0,0,1,1,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,1,0,0"))
                                                                           (rule "mul_literals" (formula "35") (term "1,1,1,0,0"))
                                                                           (rule "Definition_axiom_for_piLemmaLeft_in_de_wiesler_Tree" (formula "53") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "53"))
                                                                           (rule "translateJavaSubInt" (formula "53") (term "0"))
                                                                           (rule "translateJavaSubInt" (formula "53") (term "0,1,1"))
                                                                           (rule "translateJavaMulInt" (formula "53") (term "0,1,0"))
                                                                           (rule "eqSymm" (formula "53"))
                                                                           (rule "polySimp_elimSub" (formula "53") (term "1"))
                                                                           (rule "polySimp_elimSub" (formula "53") (term "0,1,0"))
                                                                           (rule "mul_literals" (formula "53") (term "1,0,1,0"))
                                                                           (rule "polySimp_elimSub" (formula "53") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "53") (term "0,0,1,1"))
                                                                           (rule "polySimp_addComm0" (formula "53") (term "0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "53") (term "1,0"))
                                                                           (rule "applyEq" (formula "53") (term "0,1,0,1,0") (ifseqformula "20"))
                                                                           (rule "applyEq" (formula "23") (term "0") (ifseqformula "53"))
                                                                           (rule "polySimp_homoEq" (formula "23"))
                                                                           (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "23") (term "1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "23") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                                           (rule "polySimp_sepPosMonomial" (formula "23"))
                                                                           (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                                                           (rule "polySimp_rightDist" (formula "23") (term "1"))
                                                                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                                                           (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                                                           (rule "polySimp_mulComm0" (formula "23") (term "0,1"))
                                                                           (rule "applyEq" (formula "53") (term "0,1,1") (ifseqformula "23"))
                                                                           (rule "polySimp_mulComm0" (formula "53") (term "1,1"))
                                                                           (rule "polySimp_rightDist" (formula "53") (term "1,1"))
                                                                           (rule "polySimp_mulAssoc" (formula "53") (term "0,1,1"))
                                                                           (rule "polySimp_mulComm0" (formula "53") (term "0,0,1,1"))
                                                                           (rule "polySimp_mulLiterals" (formula "53") (term "0,1,1"))
                                                                           (rule "polySimp_elimOne" (formula "53") (term "0,1,1"))
                                                                           (rule "polySimp_addAssoc" (formula "53") (term "1"))
                                                                           (rule "polySimp_addComm0" (formula "53") (term "0,1"))
                                                                           (rule "polySimp_pullOutFactor1b" (formula "53") (term "1"))
                                                                           (rule "add_literals" (formula "53") (term "1,1,1"))
                                                                           (rule "times_zero_1" (formula "53") (term "1,1"))
                                                                           (rule "add_zero_right" (formula "53") (term "1"))
                                                                           (rule "Contract_axiom_for_piLemmaRight_in_Tree" (formula "54") (term "0"))
                                                                           (rule "translateJavaSubInt" (formula "54") (term "1,1,1,0,0,0"))
                                                                           (rule "replace_known_left" (formula "54") (term "1,0") (ifseqformula "3"))
                                                                            (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "55")))
                                                                           (rule "true_left" (formula "54"))
                                                                           (rule "Definition_axiom_for_piLemmaRight_in_de_wiesler_Tree" (formula "54") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "54"))
                                                                           (rule "translateJavaSubInt" (formula "54") (term "0"))
                                                                           (rule "translateJavaSubInt" (formula "54") (term "0,1,1"))
                                                                           (rule "translateJavaAddInt" (formula "54") (term "0,0,0"))
                                                                           (rule "eqSymm" (formula "54"))
                                                                           (rule "translateJavaMulInt" (formula "54") (term "0,0,0,1"))
                                                                           (rule "polySimp_elimSub" (formula "54") (term "0,1,0"))
                                                                           (rule "mul_literals" (formula "54") (term "1,0,1,0"))
                                                                           (rule "eqSymm" (formula "54"))
                                                                           (rule "polySimp_elimSub" (formula "54") (term "0"))
                                                                           (rule "eqSymm" (formula "54"))
                                                                           (rule "polySimp_elimSub" (formula "54") (term "1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "54") (term "0,0,0,1"))
                                                                           (rule "polySimp_addComm0" (formula "54") (term "0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "54") (term "0,0,1"))
                                                                           (rule "polySimp_addComm1" (formula "54") (term "1,0"))
                                                                           (rule "polySimp_addComm0" (formula "54") (term "1"))
                                                                           (rule "applyEq" (formula "54") (term "0,1,0,1,0") (ifseqformula "20"))
                                                                           (rule "applyEq" (formula "53") (term "0") (ifseqformula "54"))
                                                                           (rule "polySimp_homoEq" (formula "53"))
                                                                           (rule "polySimp_mulComm0" (formula "53") (term "1,0"))
                                                                           (rule "polySimp_rightDist" (formula "53") (term "1,0"))
                                                                           (rule "polySimp_mulAssoc" (formula "53") (term "0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "53") (term "0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "53") (term "0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "53") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "53") (term "0"))
                                                                           (rule "polySimp_sepNegMonomial" (formula "53"))
                                                                           (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                           (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                           (rule "applyEq" (formula "54") (term "1,1") (ifseqformula "53"))
                                                                           (rule "polySimp_addAssoc" (formula "54") (term "1"))
                                                                           (rule "polySimp_addComm0" (formula "54") (term "0,1"))
                                                                           (rule "polySimp_pullOutFactor2b" (formula "54") (term "1"))
                                                                           (rule "add_literals" (formula "54") (term "1,1,1"))
                                                                           (rule "times_zero_1" (formula "54") (term "1,1"))
                                                                           (rule "add_zero_right" (formula "54") (term "1"))
                                                                           (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "34") (term "0"))
                                                                           (rule "replace_known_right" (formula "34") (term "0,0,0") (ifseqformula "59"))
                                                                            (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "3")) (ifInst ""  (formula "35")))
                                                                           (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "35") (term "0") (inst "j=j") (inst "i=i"))
                                                                            (builtin "One Step Simplification" (formula "35"))
                                                                           (rule "expand_inInt" (formula "35") (term "1,0,0"))
                                                                           (rule "expand_inInt" (formula "35") (term "1,0,0,1,0"))
                                                                           (rule "replace_int_MIN" (formula "35") (term "0,1,1,0,0"))
                                                                           (rule "replace_int_MAX" (formula "35") (term "1,0,1,0,0"))
                                                                           (rule "replace_int_MAX" (formula "35") (term "1,0,1,0,0,1,0"))
                                                                           (rule "replace_int_MIN" (formula "35") (term "0,1,1,0,0,1,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,0"))
                                                                           (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,0"))
                                                                           (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,0"))
                                                                           (rule "inEqSimp_ltToLeq" (formula "35") (term "1,0,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,0,1,0"))
                                                                           (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,0,1,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,0,1,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "35") (term "1,0,1,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "35") (term "1,1,0,0"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "35") (term "1,1,0,0,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0"))
                                                                           (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0"))
                                                                           (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0"))
                                                                           (rule "mul_literals" (formula "35") (term "0,1,1,0,0,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0"))
                                                                           (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "35") (term "0,1,1,0,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,0,1,0"))
                                                                           (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "37") (term "1,0,2,0,1,0"))
                                                                           (rule "translateJavaSubInt" (formula "37") (term "0,1,1,1,0,2,0,1,0"))
                                                                           (rule "polySimp_elimSub" (formula "37") (term "1,0,0,1,0,2,0,1,0"))
                                                                           (rule "polySimp_elimSub" (formula "37") (term "1,1,1,0,2,0,1,0"))
                                                                           (rule "polySimp_elimSub" (formula "37") (term "0,1,1,1,0,2,0,1,0"))
                                                                           (rule "mul_literals" (formula "37") (term "1,0,1,1,1,0,2,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "37") (term "1,0,2,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "37") (term "0,1,0,1,0,2,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "37") (term "0,1,1,0,2,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,1,0,2,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "37") (term "0,0,1,1,0,2,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "37") (term "1,1,0,2,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "37") (term "0,1,1,0,2,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "37") (term "1,0,2,0,1,0"))
                                                                           (rule "polySimp_mulComm1" (formula "37") (term "1,1,0,2,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "37") (term "0,1,1,0,2,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "37") (term "0,1,0,2,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "37") (term "0,0,1,0,2,0,1,0"))
                                                                           (rule "polySimp_mulComm1" (formula "37") (term "1,0,1,0,2,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "37") (term "0,1,0,1,0,2,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "37") (term "0,2,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "37") (term "0,0,2,0,1,0"))
                                                                           (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "36") (term "0,0,1,0"))
                                                                           (rule "translateJavaSubInt" (formula "36") (term "0,1,1,0,0,1,0"))
                                                                           (rule "polySimp_elimSub" (formula "36") (term "1,0,0,0,0,1,0"))
                                                                           (rule "polySimp_elimSub" (formula "36") (term "0,1,1,0,0,1,0"))
                                                                           (rule "mul_literals" (formula "36") (term "1,0,1,1,0,0,1,0"))
                                                                           (rule "polySimp_elimSub" (formula "36") (term "1,1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "36") (term "0,1,0,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0,0,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "36") (term "1,0,0,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "36") (term "0,1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "36") (term "0,0,1,0"))
                                                                           (rule "polySimp_mulComm1" (formula "36") (term "1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "36") (term "0,1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "36") (term "0,0,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "36") (term "0,0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm1" (formula "36") (term "1,0,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "36") (term "0,1,0,0,0,1,0"))
                                                                           (rule "inEqSimp_homoInEq1" (formula "36") (term "0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "36") (term "0,1,0,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "36") (term "0,1,0,1,0"))
                                                                           (rule "mul_literals" (formula "36") (term "0,0,1,0,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "36") (term "1,0,1,0,1,0"))
                                                                           (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "36") (term "0,1,1,0"))
                                                                           (rule "translateJavaSubInt" (formula "36") (term "0,1,1,0,1,1,0"))
                                                                           (rule "polySimp_elimSub" (formula "36") (term "1,0,0,0,1,1,0"))
                                                                           (rule "polySimp_elimSub" (formula "36") (term "0,1,1,0,1,1,0"))
                                                                           (rule "mul_literals" (formula "36") (term "1,0,1,1,0,1,1,0"))
                                                                           (rule "polySimp_elimSub" (formula "36") (term "1,1,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "36") (term "0,1,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "36") (term "0,1,0,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "36") (term "0,1,0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0,1,1,0"))
                                                                           (rule "polySimp_addComm1" (formula "36") (term "1,0,1,1,0"))
                                                                           (rule "polySimp_addComm0" (formula "36") (term "0,1,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "36") (term "0,1,1,0"))
                                                                           (rule "polySimp_mulComm1" (formula "36") (term "1,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "36") (term "0,1,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "36") (term "0,0,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "36") (term "0,0,0,1,1,0"))
                                                                           (rule "polySimp_mulComm1" (formula "36") (term "1,0,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "36") (term "0,1,0,0,1,1,0"))
                                                                           (rule "inEqSimp_homoInEq0" (formula "36") (term "1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "36") (term "1,0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "36") (term "0,1,0,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0,1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0,1,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "36") (term "0,1,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,1,0"))
                                                                           (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,1,0"))
                                                                           (rule "polySimp_mulComm0" (formula "36") (term "1,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "36") (term "1,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "36") (term "0,1,1,1,0"))
                                                                           (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,1,1,0"))
                                                                           (rule "polySimp_elimOne" (formula "36") (term "1,0,1,1,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "36") (term "0,0,1,1,1,0"))
                                                                           (rule "mul_literals" (formula "36") (term "0,0,0,1,1,1,0"))
                                                                           (rule "ifthenelse_split" (formula "50") (term "1,1,0"))
                                                                           (branch "self.tree[b] <= -1 + value TRUE"
                                                                              (rule "replace_known_left" (formula "59") (term "0,0,0,0") (ifseqformula "50"))
                                                                               (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "50")))
                                                                              (rule "polySimp_pullOutFactor3" (formula "59") (term "1"))
                                                                              (rule "polySimp_elimOneLeft0" (formula "59") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "59"))
                                                                              (rule "true_left" (formula "59"))
                                                                              (rule "polySimp_addComm0" (formula "51") (term "1,0"))
                                                                              (rule "jdiv_axiom" (formula "62") (term "0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                                                                              (rule "eqSymm" (formula "1"))
                                                                              (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=mul(l_0, Z(2(#)))"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,1,0"))
                                                                              (rule "equal_literals" (formula "1") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,1,0"))
                                                                              (rule "add_literals" (formula "1") (term "1,0,0,1,0"))
                                                                              (rule "times_zero_1" (formula "1") (term "0,0,1,0"))
                                                                              (rule "div_literals" (formula "1") (term "0,1,0"))
                                                                              (rule "add_zero_left" (formula "1") (term "1,0"))
                                                                              (rule "polyDiv_pullOut" (formula "1") (term "0,2,0") (inst "polyDivCoeff=mul(l_0, Z(neglit(2(#))))"))
                                                                              (rule "equal_literals" (formula "1") (term "0,0,2,0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,2,0"))
                                                                              (rule "add_literals" (formula "1") (term "1,0,0,0,2,0"))
                                                                              (rule "times_zero_1" (formula "1") (term "0,0,0,2,0"))
                                                                              (rule "div_literals" (formula "1") (term "0,0,2,0"))
                                                                              (rule "add_zero_left" (formula "1") (term "0,2,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "2,0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "eqSymm" (formula "1"))
                                                                              (rule "applyEqRigid" (formula "49") (term "0,1,0,2,0") (ifseqformula "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "49") (term "1,0,2,0"))
                                                                              (rule "polySimp_addComm0" (formula "49") (term "0,2,0"))
                                                                              (rule "applyEq" (formula "63") (term "0,0") (ifseqformula "1"))
                                                                              (rule "applyEq" (formula "22") (term "1,0,1") (ifseqformula "1"))
                                                                              (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0,1"))
                                                                              (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                                                              (rule "nnf_imp2or" (formula "36") (term "0"))
                                                                              (rule "div_axiom" (formula "28") (term "0,1,1,1,1,1,0,0") (inst "quotient=quotient_0"))
                                                                              (rule "qeq_literals" (formula "28") (term "0,1,1"))
                                                                               (builtin "One Step Simplification" (formula "28"))
                                                                              (rule "mul_literals" (formula "28") (term "1,1,1,1"))
                                                                              (rule "equal_literals" (formula "28") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "28"))
                                                                              (rule "andLeft" (formula "28"))
                                                                              (rule "andLeft" (formula "28"))
                                                                              (rule "polySimp_addComm1" (formula "30") (term "1"))
                                                                              (rule "add_literals" (formula "30") (term "0,1"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "29"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "30"))
                                                                              (rule "polySimp_mulLiterals" (formula "30") (term "1,0"))
                                                                              (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                                              (rule "applyEq" (formula "31") (term "0,0,0,1,0,0") (ifseqformula "28"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "31") (term "0,0,1,0,0"))
                                                                              (rule "applyEq" (formula "31") (term "0,1,1,2,1,0,0") (ifseqformula "28"))
                                                                              (rule "polySimp_addComm0" (formula "31") (term "1,2,1,0,0"))
                                                                              (rule "applyEq" (formula "31") (term "0,1,1,1,1,1,0,0") (ifseqformula "28"))
                                                                              (rule "polySimp_addComm0" (formula "31") (term "1,1,1,1,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "30"))
                                                                              (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "30") (term "1"))
                                                                              (rule "mul_literals" (formula "30") (term "0,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,1,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "31") (term "1,0,1,0,0"))
                                                                              (rule "mul_literals" (formula "31") (term "0,1,0,1,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1,0,0"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "31") (term "0,1,0,0") (ifseqformula "29"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0,1,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0,1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,1,0,0"))
                                                                              (rule "mul_literals" (formula "31") (term "0,1,0,0,0,1,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0,1,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,1,0,0"))
                                                                              (rule "polySimp_addComm0" (formula "31") (term "0,0,0,0,1,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0,0,1,0,0"))
                                                                              (rule "add_literals" (formula "31") (term "1,1,0,0,0,1,0,0"))
                                                                              (rule "times_zero_1" (formula "31") (term "1,0,0,0,1,0,0"))
                                                                              (rule "add_zero_right" (formula "31") (term "0,0,0,1,0,0"))
                                                                              (rule "leq_literals" (formula "31") (term "0,0,1,0,0"))
                                                                               (builtin "One Step Simplification" (formula "31"))
                                                                              (rule "mod_axiom" (formula "31") (term "0"))
                                                                              (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                                                                              (rule "polySimp_homoEq" (formula "31"))
                                                                              (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "31") (term "0,1,0"))
                                                                              (rule "mul_literals" (formula "31") (term "0,0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                                              (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                                              (rule "polySimp_addComm1" (formula "31") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "31") (term "0,0,0,0"))
                                                                              (rule "add_zero_left" (formula "31") (term "0,0,0"))
                                                                              (rule "polySimp_sepPosMonomial" (formula "31"))
                                                                              (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "31") (term "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                                                              (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                                                                              (rule "polySimp_mulComm0" (formula "31") (term "0,1"))
                                                                              (rule "newSym_eq" (formula "31") (inst "newSymDef=add(mul(pow(Z(2(#)),
            int::final(self,
                       de.wiesler.Tree::$log_buckets)),
        Z(0(#))),
    mul(pow(Z(2(#)),
            add(mul(quotient_0, Z(neglit(2(3(#))))),
                int::final(self,
                           de.wiesler.Tree::$log_buckets))),
        Z(0(#))))") (inst "l=l_1"))
                                                                              (rule "times_zero_1" (formula "31") (term "1,1,1"))
                                                                              (rule "times_zero_1" (formula "31") (term "0,1,1"))
                                                                              (rule "add_zero_left" (formula "31") (term "1,1"))
                                                                              (rule "add_zero_right" (formula "31") (term "1"))
                                                                              (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "31"))
                                                                              (rule "polySimp_homoEq" (formula "32"))
                                                                              (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                                                                              (rule "polySimp_addComm1" (formula "32") (term "0"))
                                                                              (rule "polySimp_addComm0" (formula "32") (term "0,0"))
                                                                              (rule "polySimp_sepPosMonomial" (formula "32"))
                                                                              (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "32") (term "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                                                              (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                                                                              (rule "polySimp_mulComm0" (formula "32") (term "0,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "32") (term "0,1"))
                                                                              (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "32"))
                                                                              (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                                              (rule "polyDiv_pullOut" (formula "31") (term "0") (inst "polyDivCoeff=l_1"))
                                                                              (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,2,0"))
                                                                              (rule "equal_literals" (formula "31") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "31"))
                                                                              (rule "polySimp_homoEq" (formula "31"))
                                                                              (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                                              (rule "polySimp_addComm0" (formula "31") (term "1,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "31") (term "0,1,1,1,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "31") (term "0,0,1,1,1,0"))
                                                                              (rule "add_literals" (formula "31") (term "1,1,0,0,1,1,1,0"))
                                                                              (rule "times_zero_1" (formula "31") (term "1,0,0,1,1,1,0"))
                                                                              (rule "add_zero_right" (formula "31") (term "0,0,1,1,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "31") (term "0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "31") (term "0,0"))
                                                                              (rule "add_literals" (formula "31") (term "1,0,0"))
                                                                              (rule "times_zero_1" (formula "31") (term "0,0"))
                                                                              (rule "add_zero_left" (formula "31") (term "0"))
                                                                              (rule "polySimp_invertEq" (formula "31"))
                                                                              (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                                              (rule "times_zero_2" (formula "31") (term "1"))
                                                                              (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "34"))
                                                                              (rule "polySimp_mulAssoc" (formula "29") (term "0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "29") (term "0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "29") (term "0,0"))
                                                                              (rule "polySimp_addComm0" (formula "29") (term "0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                                              (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                              (rule "elimGcdLeq_antec" (formula "29") (inst "elimGcd=Z(2(3(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                              (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0"))
                                                                              (rule "neg_literal" (formula "29") (term "0,0,0,0,0,1,0"))
                                                                              (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,1,0"))
                                                                              (rule "leq_literals" (formula "29") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "29"))
                                                                              (rule "polySimp_addLiterals" (formula "29") (term "0,0,0,0"))
                                                                              (rule "add_literals" (formula "29") (term "0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
                                                                              (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "29") (term "0,0"))
                                                                              (rule "qeq_literals" (formula "29") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "29"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "31"))
                                                                              (rule "mul_literals" (formula "34") (term "0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                                              (rule "add_literals" (formula "34") (term "0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                                              (rule "mul_literals" (formula "34") (term "1"))
                                                                              (rule "elimGcdGeq_antec" (formula "34") (inst "elimGcd=Z(2(3(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                              (rule "leq_literals" (formula "34") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0"))
                                                                              (rule "polySimp_addLiterals" (formula "34") (term "0,0,0,0"))
                                                                              (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0"))
                                                                              (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "34") (term "0,0"))
                                                                              (rule "leq_literals" (formula "34") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "31"))
                                                                              (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                                              (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                              (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                              (rule "add_literals" (formula "3") (term "0,0,0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                              (rule "inEqSimp_antiSymm" (formula "35") (ifseqformula "30"))
                                                                              (rule "applyEqRigid" (formula "30") (term "0") (ifseqformula "35"))
                                                                              (rule "leq_literals" (formula "30"))
                                                                              (rule "true_left" (formula "30"))
                                                                              (rule "applyEq" (formula "31") (term "0,1,1") (ifseqformula "34"))
                                                                              (rule "times_zero_2" (formula "31") (term "1,1"))
                                                                              (rule "add_zero_right" (formula "31") (term "1"))
                                                                              (rule "applyEq" (formula "30") (term "0,1") (ifseqformula "34"))
                                                                              (rule "times_zero_2" (formula "30") (term "1"))
                                                                              (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "34"))
                                                                              (rule "mul_literals" (formula "3") (term "1,1"))
                                                                              (rule "add_zero_right" (formula "3") (term "1"))
                                                                              (rule "applyEq" (formula "35") (term "0") (ifseqformula "34"))
                                                                              (rule "qeq_literals" (formula "35"))
                                                                              (rule "true_left" (formula "35"))
                                                                              (rule "applyEqRigid" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                                                              (rule "times_zero_2" (formula "33") (term "0,1,0"))
                                                                              (rule "add_zero_left" (formula "33") (term "1,0"))
                                                                              (rule "polySimp_homoEq" (formula "33"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "33") (term "0"))
                                                                              (rule "add_literals" (formula "33") (term "1,1,0"))
                                                                              (rule "times_zero_1" (formula "33") (term "1,0"))
                                                                              (rule "add_zero_right" (formula "33") (term "0"))
                                                                              (rule "applyEq" (formula "29") (term "1") (ifseqformula "34"))
                                                                              (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "35"))
                                                                              (rule "leq_literals" (formula "30") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "30"))
                                                                              (rule "true_left" (formula "30"))
                                                                              (rule "inEqSimp_subsumption0" (formula "30") (ifseqformula "35"))
                                                                              (rule "leq_literals" (formula "30") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "30"))
                                                                              (rule "true_left" (formula "30"))
                                                                              (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "2"))
                                                                              (rule "leq_literals" (formula "3") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "3"))
                                                                              (rule "true_left" (formula "3"))
                                                                              (rule "elimGcdEq" (formula "30") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                               (builtin "One Step Simplification" (formula "30"))
                                                                              (rule "add_zero_left" (formula "30") (term "0,1,0"))
                                                                              (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                                                              (rule "add_zero_left" (formula "30") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "30") (term "1,0,0"))
                                                                              (rule "times_zero_1" (formula "30") (term "0,1,0"))
                                                                              (rule "add_zero_left" (formula "30") (term "0,0,1"))
                                                                               (builtin "One Step Simplification" (formula "30"))
                                                                              (rule "times_zero_1" (formula "30") (term "0,0,0"))
                                                                              (rule "qeq_literals" (formula "30") (term "1,0"))
                                                                               (builtin "One Step Simplification" (formula "30"))
                                                                              (rule "leq_literals" (formula "30") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "30"))
                                                                              (rule "arrayLengthIsAnInt" (formula "37") (term "0"))
                                                                              (rule "expand_inInt" (formula "37"))
                                                                              (rule "replace_int_MIN" (formula "37") (term "0,1"))
                                                                              (rule "replace_int_MAX" (formula "37") (term "1,0"))
                                                                              (rule "andLeft" (formula "37"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "38"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "37"))
                                                                              (rule "polySimp_mulComm0" (formula "39") (term "0,0"))
                                                                              (rule "polySimp_addComm0" (formula "39") (term "0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                                                              (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "39") (term "0"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "39"))
                                                                              (rule "polySimp_mulAssoc" (formula "53") (term "0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "53") (term "0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "53") (term "0,0"))
                                                                              (rule "polySimp_addComm0" (formula "53") (term "0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "53"))
                                                                              (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                              (rule "elimGcdLeq_antec" (formula "53") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=pow(Z(2(#)), l)") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))"))
                                                                              (rule "leq_literals" (formula "53") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "53"))
                                                                              (rule "neg_literal" (formula "53") (term "0,0,0,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0,0,0"))
                                                                              (rule "mul_literals" (formula "53") (term "1,0,0,0,0,0"))
                                                                              (rule "polySimp_addLiterals" (formula "53") (term "0,0,0,0"))
                                                                              (rule "add_literals" (formula "53") (term "0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "53") (term "0,0"))
                                                                              (rule "add_literals" (formula "53") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "53") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "53") (term "0,0"))
                                                                              (rule "qeq_literals" (formula "53") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "53"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "39"))
                                                                              (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                                                              (rule "mul_literals" (formula "16") (term "0,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                                              (rule "add_literals" (formula "16") (term "0,0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                                                              (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                                              (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "16"))
                                                                              (rule "leq_literals" (formula "8") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "8"))
                                                                              (rule "true_left" (formula "8"))
                                                                              (rule "inEqSimp_exactShadow1" (formula "20") (ifseqformula "53"))
                                                                              (rule "mul_literals" (formula "20") (term "1,0,1"))
                                                                              (rule "greater_literals" (formula "20") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "20"))
                                                                              (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                                                              (rule "mul_literals" (formula "20") (term "0,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                              (rule "add_literals" (formula "20") (term "0,0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                                                              (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                                              (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "20"))
                                                                              (rule "leq_literals" (formula "7") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "7"))
                                                                              (rule "true_left" (formula "7"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
                                                                              (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                                                              (rule "mul_literals" (formula "13") (term "0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                                              (rule "add_literals" (formula "13") (term "0,0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                                                              (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                                              (rule "inEqSimp_subsumption4" (formula "13") (ifseqformula "8"))
                                                                              (rule "greater_literals" (formula "13") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "13"))
                                                                              (rule "mul_literals" (formula "13") (term "0,0"))
                                                                              (rule "leq_literals" (formula "13") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "13"))
                                                                              (rule "true_left" (formula "13"))
                                                                              (rule "arrayLengthNotNegative" (formula "40") (term "0"))
                                                                              (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "40"))
                                                                              (rule "leq_literals" (formula "38") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "38"))
                                                                              (rule "true_left" (formula "38"))
                                                                              (rule "arrayLengthIsAnInt" (formula "36") (term "0"))
                                                                              (rule "expand_inInt" (formula "36"))
                                                                              (rule "replace_int_MIN" (formula "36") (term "0,1"))
                                                                              (rule "replace_int_MAX" (formula "36") (term "1,0"))
                                                                              (rule "andLeft" (formula "36"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "37"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "36"))
                                                                              (rule "polySimp_mulComm0" (formula "38") (term "0,0"))
                                                                              (rule "polySimp_addComm0" (formula "38") (term "0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                                                              (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                                              (rule "arrayLengthNotNegative" (formula "38") (term "0"))
                                                                              (rule "inEqSimp_subsumption1" (formula "37") (ifseqformula "38"))
                                                                              (rule "leq_literals" (formula "37") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "37"))
                                                                              (rule "true_left" (formula "37"))
                                                                              (rule "commute_or_2" (formula "46") (term "0,0"))
                                                                              (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "24") (term "0"))
                                                                              (rule "translateJavaSubInt" (formula "24") (term "0,1,1,0"))
                                                                              (rule "polySimp_elimSub" (formula "24") (term "1,0,0,0"))
                                                                              (rule "polySimp_elimSub" (formula "24") (term "0,1,1,0"))
                                                                              (rule "mul_literals" (formula "24") (term "1,0,1,1,0"))
                                                                              (rule "polySimp_elimSub" (formula "24") (term "1,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "24") (term "0"))
                                                                              (rule "polySimp_addComm0" (formula "24") (term "0,1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "24") (term "1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "24") (term "0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0"))
                                                                              (rule "polySimp_mulAssoc" (formula "24") (term "0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "24") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "24") (term "0,0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "24") (term "1,0"))
                                                                              (rule "polySimp_addComm0" (formula "24") (term "0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "24") (term "0"))
                                                                              (rule "polySimp_homoEq" (formula "24"))
                                                                              (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                                              (rule "polySimp_mulComm1" (formula "24") (term "1,1,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "24") (term "0,1,1,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "24") (term "0,1,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "24") (term "0,0,1,1,0"))
                                                                              (rule "polySimp_mulComm1" (formula "24") (term "1,0,1,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "24") (term "0,1,0,1,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "24") (term "0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                                              (rule "polySimp_addAssoc" (formula "24") (term "0,0"))
                                                                              (rule "logTimesBaseConcrete" (formula "24") (term "0,1,0,1,0,0,1,0"))
                                                                              (rule "greater_literals" (formula "24") (term "1,0,0,1,0,1,0,0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "48")))
                                                                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,0,1,0"))
                                                                              (rule "polySimp_addComm0" (formula "24") (term "1,1,0,1,0,0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                                              (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0,0,1,0,0"))
                                                                              (rule "mul_literals" (formula "24") (term "0,1,0,1,0,0,1,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "24") (term "0,1,0,0,1,0,0"))
                                                                              (rule "add_literals" (formula "24") (term "0,0,1,0,0,1,0,0"))
                                                                              (rule "logTimesBaseConcrete" (formula "24") (term "0,1,0,1,0,1,0,0,0"))
                                                                              (rule "greater_literals" (formula "24") (term "1,0,0,1,0,1,0,1,0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "48")))
                                                                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,1,0,0,0"))
                                                                              (rule "polySimp_addComm0" (formula "24") (term "1,1,0,1,0,1,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0,1,0,0,0"))
                                                                              (rule "mul_literals" (formula "24") (term "0,1,0,1,0,1,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "24") (term "0,1,0,1,0,0,0"))
                                                                              (rule "add_literals" (formula "24") (term "0,0,1,0,1,0,0,0"))
                                                                              (rule "logTimesBaseConcrete" (formula "24") (term "0,1,0,1,0,0,1,0"))
                                                                              (rule "greater_literals" (formula "24") (term "1,0,0,1,0,1,0,0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "48")))
                                                                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0,0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                                              (rule "polySimp_addComm0" (formula "24") (term "1,1,0,1,0,0,1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0,0,1,0,0"))
                                                                              (rule "mul_literals" (formula "24") (term "0,1,0,1,0,0,1,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "24") (term "0,1,0,0,1,0,0"))
                                                                              (rule "add_literals" (formula "24") (term "0,0,1,0,0,1,0,0"))
                                                                              (rule "logTimesBaseConcrete" (formula "24") (term "1,1,0,1,0"))
                                                                              (rule "greater_literals" (formula "24") (term "1,0,1,1,0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "48")))
                                                                              (rule "polySimp_addComm0" (formula "24") (term "1,1,0,1,0"))
                                                                              (rule "applyEq" (formula "24") (term "1,1,1,0,1,0") (ifseqformula "21"))
                                                                              (rule "applyEq" (formula "24") (term "1,0,1,0") (ifseqformula "51"))
                                                                              (rule "polySimp_mulAssoc" (formula "24") (term "0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0"))
                                                                              (rule "applyEq" (formula "24") (term "0,1,0,1,0,0,1,0") (ifseqformula "21"))
                                                                              (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                                              (rule "applyEq" (formula "24") (term "0,1,0,1,0,0,1,0") (ifseqformula "21"))
                                                                              (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                                              (rule "applyEq" (formula "24") (term "0,0,1,0") (ifseqformula "66"))
                                                                              (rule "polySimp_mulComm0" (formula "24") (term "0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                                              (rule "applyEq" (formula "24") (term "0,0,1,0") (ifseqformula "66"))
                                                                              (rule "polySimp_mulComm0" (formula "24") (term "0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                                              (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "22"))
                                                                              (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "24") (term "0"))
                                                                              (rule "add_literals" (formula "24") (term "1,1,0"))
                                                                              (rule "times_zero_1" (formula "24") (term "1,0"))
                                                                              (rule "add_zero_right" (formula "24") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                                                                              (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0,0,0"))
                                                                              (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                                                                              (rule "applyEq" (formula "24") (term "0,1,0,1,0,1,0") (ifseqformula "21"))
                                                                              (rule "applyEq" (formula "24") (term "0,1,0") (ifseqformula "66"))
                                                                              (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "24") (term "0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "24") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                                                              (rule "polySimp_sepPosMonomial" (formula "24"))
                                                                              (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "24") (term "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                                                              (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                                                              (rule "polySimp_rightDist" (formula "24") (term "0,1"))
                                                                              (rule "mul_literals" (formula "24") (term "0,0,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1"))
                                                                              (rule "applyEq" (formula "65") (term "1,1") (ifseqformula "24"))
                                                                              (rule "polySimp_addAssoc" (formula "65") (term "1"))
                                                                              (rule "polySimp_addAssoc" (formula "65") (term "0,1"))
                                                                              (rule "polySimp_addComm0" (formula "65") (term "0,0,1"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "65") (term "0,1"))
                                                                              (rule "add_literals" (formula "65") (term "1,1,0,1"))
                                                                              (rule "nnf_notAnd" (formula "44") (term "0,0"))
                                                                              (rule "commute_or_2" (formula "45") (term "0,0"))
                                                                              (rule "nnf_imp2or" (formula "44") (term "0,1,0"))
                                                                              (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "65") (term "0"))
                                                                              (rule "translateJavaSubInt" (formula "65") (term "0,1,1,0"))
                                                                              (rule "polySimp_elimSub" (formula "65") (term "1,0,0,0"))
                                                                              (rule "polySimp_elimSub" (formula "65") (term "0,1,1,0"))
                                                                              (rule "mul_literals" (formula "65") (term "1,0,1,1,0"))
                                                                              (rule "polySimp_elimSub" (formula "65") (term "1,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "65") (term "0"))
                                                                              (rule "polySimp_addComm0" (formula "65") (term "0,1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "65") (term "1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "65") (term "0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "65") (term "1,0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "65") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "65") (term "0,0,1,0"))
                                                                              (rule "mul_literals" (formula "65") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "65") (term "1,0,0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "65") (term "0,1,0"))
                                                                              (rule "add_literals" (formula "65") (term "0,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "65") (term "0"))
                                                                              (rule "polySimp_homoEq" (formula "65"))
                                                                              (rule "polySimp_mulComm0" (formula "65") (term "1,0"))
                                                                              (rule "polySimp_mulComm1" (formula "65") (term "1,1,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "65") (term "0,1,1,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "65") (term "0,1,1,0"))
                                                                              (rule "polySimp_mulComm1" (formula "65") (term "1,0,1,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "65") (term "0,1,0,1,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "65") (term "1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "65") (term "0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "65") (term "1,0,1,0"))
                                                                              (rule "polySimp_mulAssoc" (formula "65") (term "0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "65") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "65") (term "0,0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "65") (term "0"))
                                                                              (rule "polySimp_addAssoc" (formula "65") (term "0,0"))
                                                                              (rule "applyEq" (formula "65") (term "1,1,0,1,0") (ifseqformula "61"))
                                                                              (rule "applyEq" (formula "65") (term "1,0,1,0") (ifseqformula "51"))
                                                                              (rule "polySimp_mulAssoc" (formula "65") (term "0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "65") (term "1,0"))
                                                                              (rule "applyEq" (formula "65") (term "0,1,0,1,0,0,1,0") (ifseqformula "61"))
                                                                              (rule "polySimp_mulComm0" (formula "65") (term "1,0,1,0,0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "65") (term "0"))
                                                                              (rule "polySimp_rightDist" (formula "65") (term "1,0,1,0,0,1,0,0"))
                                                                              (rule "mul_literals" (formula "65") (term "0,1,0,1,0,0,1,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "65") (term "0,1,0,0,1,0,0"))
                                                                              (rule "add_literals" (formula "65") (term "0,0,1,0,0,1,0,0"))
                                                                              (rule "applyEq" (formula "65") (term "0,0,1,0,0") (ifseqformula "66"))
                                                                              (rule "polySimp_mulComm0" (formula "65") (term "0,1,0,0"))
                                                                              (rule "applyEq" (formula "65") (term "0,1,0,1,0,0,1,0") (ifseqformula "61"))
                                                                              (rule "polySimp_mulComm0" (formula "65") (term "1,0,1,0,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "65") (term "1,0,1,0,0,1,0"))
                                                                              (rule "mul_literals" (formula "65") (term "0,1,0,1,0,0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "65") (term "0,1,0,0,1,0"))
                                                                              (rule "add_literals" (formula "65") (term "0,0,1,0,0,1,0"))
                                                                              (rule "applyEq" (formula "65") (term "0,0,1,0") (ifseqformula "66"))
                                                                              (rule "polySimp_mulComm0" (formula "65") (term "0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "65") (term "0"))
                                                                              (rule "applyEq" (formula "65") (term "1,0") (ifseqformula "22"))
                                                                              (rule "polySimp_addAssoc" (formula "65") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "65") (term "0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "65") (term "0"))
                                                                              (rule "add_literals" (formula "65") (term "1,1,0"))
                                                                              (rule "times_zero_1" (formula "65") (term "1,0"))
                                                                              (rule "add_zero_right" (formula "65") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "65") (term "0"))
                                                                              (rule "polySimp_addAssoc" (formula "65") (term "0,0"))
                                                                              (rule "polySimp_addComm1" (formula "65") (term "0,0,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "65") (term "0,0"))
                                                                              (rule "add_literals" (formula "65") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "65") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "65") (term "0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "65") (term "0,0"))
                                                                              (rule "polySimp_addComm1" (formula "65") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "65") (term "0,0,0,0"))
                                                                              (rule "add_zero_left" (formula "65") (term "0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "65") (term "0,0"))
                                                                              (rule "add_literals" (formula "65") (term "1,0,0"))
                                                                              (rule "applyEq" (formula "65") (term "0,1,0,1,0,1,0") (ifseqformula "61"))
                                                                              (rule "polySimp_mulComm0" (formula "65") (term "1,0,1,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "65") (term "1,0,1,0,1,0"))
                                                                              (rule "mul_literals" (formula "65") (term "0,1,0,1,0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "65") (term "0,1,0,1,0"))
                                                                              (rule "add_literals" (formula "65") (term "0,0,1,0,1,0"))
                                                                              (rule "applyEq" (formula "65") (term "0,1,0") (ifseqformula "66"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "65") (term "0"))
                                                                              (rule "add_literals" (formula "65") (term "1,0"))
                                                                              (rule "times_zero_1" (formula "65") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "65"))
                                                                              (rule "true_left" (formula "65"))
                                                                              (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "43") (term "0"))
                                                                              (rule "replace_known_right" (formula "43") (term "0,0,0") (ifseqformula "69"))
                                                                               (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "4")) (ifInst ""  (formula "44")))
                                                                              (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "44") (term "0") (inst "i=i"))
                                                                               (builtin "One Step Simplification" (formula "44"))
                                                                              (rule "expand_inInt" (formula "44") (term "1,0,0"))
                                                                              (rule "replace_int_MIN" (formula "44") (term "0,1,1,0,0"))
                                                                              (rule "replace_int_MAX" (formula "44") (term "1,0,1,0,0"))
                                                                              (rule "translateJavaAddInt" (formula "44") (term "0,2,1,1,0"))
                                                                              (rule "translateJavaSubInt" (formula "44") (term "1,1,0,0,0"))
                                                                              (rule "polySimp_elimSub" (formula "44") (term "1,1,0,0,0"))
                                                                              (rule "mul_literals" (formula "44") (term "1,1,1,0,0,0"))
                                                                              (rule "polySimp_addComm0" (formula "44") (term "0,2,1,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "44") (term "1,1,0,0,0"))
                                                                              (rule "add_literals" (formula "44") (term "0,1,1,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0,0,0"))
                                                                              (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0,0,0"))
                                                                              (rule "add_literals" (formula "44") (term "0,0,0,1,0,0,0"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,0"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "44") (term "1,1,0,0"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "44") (term "1,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0"))
                                                                              (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0"))
                                                                              (rule "cut_direct" (formula "17") (term "1"))
                                                                              (branch "CUT: self.sorted_splitters[b_bin] >= value TRUE"
                                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                                 (rule "true_left" (formula "18"))
                                                                                 (rule "cut_direct" (formula "16") (term "1"))
                                                                                 (branch "CUT: self.sorted_splitters[l_0 * -4 + b_bin] <= -1 + value TRUE"
                                                                                     (builtin "One Step Simplification" (formula "17"))
                                                                                    (rule "true_left" (formula "17"))
                                                                                    (rule "nnf_notAnd" (formula "45") (term "1,0,0"))
                                                                                    (rule "inEqSimp_notGeq" (formula "45") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "45") (term "1,0,0,1,1,0,0"))
                                                                                    (rule "add_literals" (formula "45") (term "0,0,1,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "45") (term "1,1,1,0,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "45") (term "0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "45") (term "1,0,0,0,1,0,0"))
                                                                                    (rule "add_literals" (formula "45") (term "0,0,0,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "45") (term "1,0,1,0,0"))
                                                                                    (rule "nnf_notAnd" (formula "45") (term "0,0,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "45") (term "1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0"))
                                                                                    (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0"))
                                                                                    (rule "inEqSimp_notGeq" (formula "45") (term "0,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "45") (term "0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "45") (term "1,0,0,0,0"))
                                                                                    (rule "nnf_notAnd" (formula "45") (term "0,0,1,0"))
                                                                                    (rule "jdiv_axiom" (formula "72") (term "0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                                                                                    (rule "eqSymm" (formula "1"))
                                                                                    (rule "polyDiv_pullOut" (formula "1") (term "0,2,0") (inst "polyDivCoeff=mul(l_0, Z(neglit(1(#))))"))
                                                                                    (rule "equal_literals" (formula "1") (term "0,0,2,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,2,0"))
                                                                                    (rule "add_literals" (formula "1") (term "1,0,0,0,2,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "0,0,0,2,0"))
                                                                                    (rule "div_literals" (formula "1") (term "0,0,2,0"))
                                                                                    (rule "add_zero_left" (formula "1") (term "0,2,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "2,0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "2,0"))
                                                                                    (rule "elimGcdGeq" (formula "1") (term "0,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                                    (rule "add_zero_right" (formula "1") (term "0,0,0,1,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0"))
                                                                                    (rule "sub_literals" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "0,0,0,1,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0,0"))
                                                                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                                                                    (rule "qeq_literals" (formula "1") (term "0,0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,0"))
                                                                                    (rule "add_literals" (formula "1") (term "1,0,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "0,0,0,0"))
                                                                                    (rule "leq_literals" (formula "1") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=l_0"))
                                                                                    (rule "equal_literals" (formula "1") (term "0,1,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,1,0"))
                                                                                    (rule "add_literals" (formula "1") (term "1,0,0,1,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "0,0,1,0"))
                                                                                    (rule "div_literals" (formula "1") (term "0,1,0"))
                                                                                    (rule "add_zero_left" (formula "1") (term "1,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "eqSymm" (formula "1"))
                                                                                    (rule "close" (formula "73") (ifseqformula "1"))
                                                                                 )
                                                                                 (branch "CUT: self.sorted_splitters[l_0 * -4 + b_bin] <= -1 + value FALSE"
                                                                                     (builtin "One Step Simplification" (formula "16"))
                                                                                    (rule "inEqSimp_leqRight" (formula "69"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                                    (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "17"))
                                                                                    (rule "polySimp_addAssoc" (formula "16") (term "1"))
                                                                                    (rule "add_literals" (formula "16") (term "0,1"))
                                                                                    (rule "add_zero_left" (formula "16") (term "1"))
                                                                                    (rule "applyEq" (formula "14") (term "0") (ifseqformula "17"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "14"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                                                                                    (rule "add_literals" (formula "14") (term "1,0"))
                                                                                    (rule "times_zero_1" (formula "14") (term "0"))
                                                                                    (rule "leq_literals" (formula "14"))
                                                                                    (rule "true_left" (formula "14"))
                                                                                    (rule "applyEq" (formula "14") (term "0") (ifseqformula "16"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "14"))
                                                                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                                                    (rule "mul_literals" (formula "14") (term "0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                                                    (rule "add_literals" (formula "14") (term "0,0"))
                                                                                    (rule "applyEq" (formula "8") (term "0") (ifseqformula "16"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "8"))
                                                                                    (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                                                    (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                                    (rule "add_literals" (formula "8") (term "0,0"))
                                                                                    (rule "applyEq" (formula "1") (term "1,0,2,1,0") (ifseqformula "16"))
                                                                                    (rule "polySimp_addAssoc" (formula "1") (term "0,2,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0,0,2,1,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,2,1,0"))
                                                                                    (rule "add_literals" (formula "1") (term "1,1,0,2,1,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "1,0,2,1,0"))
                                                                                    (rule "add_zero_right" (formula "1") (term "0,2,1,0"))
                                                                                    (rule "applyEq" (formula "17") (term "0,2,0") (ifseqformula "16"))
                                                                                    (rule "applyEq" (formula "59") (term "1,0,2,0") (ifseqformula "16"))
                                                                                    (rule "polySimp_addAssoc" (formula "59") (term "0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "59") (term "0,0,2,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "59") (term "0,2,0"))
                                                                                    (rule "add_literals" (formula "59") (term "1,1,0,2,0"))
                                                                                    (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "16"))
                                                                                    (rule "polySimp_addAssoc" (formula "24") (term "1"))
                                                                                    (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                                                                                    (rule "add_literals" (formula "24") (term "0,0,1"))
                                                                                    (rule "add_zero_left" (formula "24") (term "0,1"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "24") (term "1"))
                                                                                    (rule "add_literals" (formula "24") (term "1,1"))
                                                                                    (rule "applyEq" (formula "22") (term "0,1,0,1") (ifseqformula "16"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "22") (term "0,1"))
                                                                                    (rule "add_literals" (formula "22") (term "1,0,1"))
                                                                                    (rule "times_zero_1" (formula "22") (term "0,1"))
                                                                                    (rule "add_zero_left" (formula "22") (term "1"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                                                                    (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                                                    (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                                    (rule "inEqSimp_subsumption4" (formula "14") (ifseqformula "9"))
                                                                                    (rule "mul_literals" (formula "14") (term "0,1,0"))
                                                                                    (rule "greater_literals" (formula "14") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "14"))
                                                                                    (rule "leq_literals" (formula "14") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "14"))
                                                                                    (rule "true_left" (formula "14"))
                                                                                    (rule "elimGcdEq" (formula "21") (inst "elimGcd=Z(4(#))") (inst "elimGcdLeftDiv=mul(l_0, pow(Z(2(#)), l))") (inst "elimGcdRightDiv=mul(l_0, b)"))
                                                                                    (rule "mul_literals" (formula "21") (term "0,1,0,1,0,0"))
                                                                                    (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "21") (term "0,0,0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "21"))
                                                                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "21") (term "0,1,1"))
                                                                                    (rule "eqSymm" (formula "21") (term "1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "21") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "21") (term "1,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "21") (term "0,0,0"))
                                                                                    (rule "leq_literals" (formula "21") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "21"))
                                                                                    (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,0,1"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "21") (term "0,0,1"))
                                                                                    (rule "add_literals" (formula "21") (term "1,0,0,1"))
                                                                                    (rule "times_zero_1" (formula "21") (term "0,0,1"))
                                                                                     (builtin "One Step Simplification" (formula "21"))
                                                                                    (rule "polySimp_mulComm0" (formula "21") (term "0,1"))
                                                                                    (rule "eqSymm" (formula "21") (term "1"))
                                                                                    (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "21") (term "0,0"))
                                                                                    (rule "add_literals" (formula "21") (term "1,0,0"))
                                                                                    (rule "times_zero_1" (formula "21") (term "0,0"))
                                                                                    (rule "qeq_literals" (formula "21") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "21"))
                                                                                    (rule "elimGcdGeq_antec" (formula "8") (inst "elimGcd=Z(4(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(neglit(1(1(9(0(7(8(6(3(5(#)))))))))))"))
                                                                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,1,0"))
                                                                                    (rule "leq_literals" (formula "8") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                                    (rule "polySimp_mulLiterals" (formula "8") (term "1,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_addLiterals" (formula "8") (term "0,0,0,0"))
                                                                                    (rule "add_literals" (formula "8") (term "0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "8") (term "0,0"))
                                                                                    (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "8") (term "0,0"))
                                                                                    (rule "leq_literals" (formula "8") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "8"))
                                                                                    (rule "leq_literals" (formula "10") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "10"))
                                                                                    (rule "true_left" (formula "10"))
                                                                                    (rule "cancel_equation" (formula "20"))
                                                                                    (branch "Case 1"
                                                                                       (rule "applyEq" (formula "16") (term "0") (ifseqformula "20"))
                                                                                       (rule "inEqSimp_homoInEq0" (formula "16"))
                                                                                       (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                                                                                       (rule "add_literals" (formula "16") (term "1,0"))
                                                                                       (rule "times_zero_1" (formula "16") (term "0"))
                                                                                       (rule "qeq_literals" (formula "16"))
                                                                                       (rule "true_left" (formula "16"))
                                                                                       (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                                                       (rule "inEqSimp_homoInEq1" (formula "17"))
                                                                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                                                                                       (rule "add_literals" (formula "17") (term "1,1,0"))
                                                                                       (rule "applyEq" (formula "47") (term "0") (ifseqformula "19"))
                                                                                       (rule "applyEq" (formula "60") (term "0,1") (ifseqformula "19"))
                                                                                       (rule "applyEq" (formula "53") (term "0,1") (ifseqformula "19"))
                                                                                       (rule "applyEq" (formula "52") (term "0") (ifseqformula "19"))
                                                                                       (rule "applyEq" (formula "50") (term "0,1") (ifseqformula "19"))
                                                                                       (rule "applyEq" (formula "48") (term "0,1") (ifseqformula "19"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                                                                       (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                                                       (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "51"))
                                                                                       (rule "leq_literals" (formula "16") (term "0"))
                                                                                        (builtin "One Step Simplification" (formula "16"))
                                                                                       (rule "true_left" (formula "16"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "35"))
                                                                                       (rule "polySimp_mulAssoc" (formula "13") (term "0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "13") (term "0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "13") (term "0,0"))
                                                                                       (rule "polySimp_addComm0" (formula "13") (term "0"))
                                                                                       (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                                                                       (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                                                       (rule "inEqSimp_subsumption4" (formula "13") (ifseqformula "9"))
                                                                                       (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                                                       (rule "greater_literals" (formula "13") (term "0,0"))
                                                                                        (builtin "One Step Simplification" (formula "13"))
                                                                                       (rule "leq_literals" (formula "13") (term "0"))
                                                                                        (builtin "One Step Simplification" (formula "13"))
                                                                                       (rule "true_left" (formula "13"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "35"))
                                                                                       (rule "polySimp_mulAssoc" (formula "51") (term "0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "51") (term "0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "51") (term "0,0"))
                                                                                       (rule "polySimp_addComm0" (formula "51") (term "0"))
                                                                                       (rule "inEqSimp_sepNegMonomial1" (formula "51"))
                                                                                       (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                                                                       (rule "inEqSimp_subsumption4" (formula "51") (ifseqformula "50"))
                                                                                       (rule "greater_literals" (formula "51") (term "0,0"))
                                                                                        (builtin "One Step Simplification" (formula "51"))
                                                                                       (rule "mul_literals" (formula "51") (term "0,0"))
                                                                                       (rule "leq_literals" (formula "51") (term "0"))
                                                                                        (builtin "One Step Simplification" (formula "51"))
                                                                                       (rule "true_left" (formula "51"))
                                                                                       (rule "nnf_notAnd" (formula "40") (term "0,0,0"))
                                                                                       (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0,0"))
                                                                                       (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,0,0"))
                                                                                       (rule "add_zero_right" (formula "40") (term "0,0,0,0,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,0"))
                                                                                       (rule "mul_literals" (formula "40") (term "1,0,0,0,0"))
                                                                                       (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0,0"))
                                                                                       (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0,0"))
                                                                                       (rule "add_literals" (formula "40") (term "0,0,0,1,0,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0"))
                                                                                       (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0"))
                                                                                       (rule "nnf_notAnd" (formula "40") (term "1,0,0"))
                                                                                       (rule "inEqSimp_notLeq" (formula "40") (term "0,1,0,0"))
                                                                                       (rule "mul_literals" (formula "40") (term "1,0,0,0,1,0,0"))
                                                                                       (rule "add_literals" (formula "40") (term "0,0,0,1,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,1,0,0"))
                                                                                       (rule "mul_literals" (formula "40") (term "1,0,1,0,0"))
                                                                                       (rule "inEqSimp_notGeq" (formula "40") (term "1,1,0,0"))
                                                                                       (rule "mul_literals" (formula "40") (term "1,0,0,1,1,0,0"))
                                                                                       (rule "add_literals" (formula "40") (term "0,0,1,1,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,1,0,0"))
                                                                                       (rule "mul_literals" (formula "40") (term "1,1,1,0,0"))
                                                                                       (rule "nnf_notAnd" (formula "40") (term "0,0,1,0"))
                                                                                       (rule "jdiv_axiom" (formula "66") (term "0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                                                                                       (rule "eqSymm" (formula "1"))
                                                                                       (rule "elimGcdGeq" (formula "1") (term "0,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                                       (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,0"))
                                                                                       (rule "add_zero_right" (formula "1") (term "0,0,0,1,0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,0,0,0"))
                                                                                       (rule "sub_literals" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0,0,0"))
                                                                                       (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,0,0"))
                                                                                       (rule "times_zero_1" (formula "1") (term "0,0,0,1,0,0,0"))
                                                                                       (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0,0"))
                                                                                       (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0"))
                                                                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0,0"))
                                                                                       (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0"))
                                                                                       (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                                                       (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                                                                       (rule "qeq_literals" (formula "1") (term "0,0,0,0"))
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,0"))
                                                                                       (rule "add_literals" (formula "1") (term "1,0,0,0,0"))
                                                                                       (rule "times_zero_1" (formula "1") (term "0,0,0,0"))
                                                                                       (rule "leq_literals" (formula "1") (term "0,0,0"))
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "polyDiv_pullOut" (formula "1") (term "0,2,0") (inst "polyDivCoeff=mul(l_0, Z(neglit(1(#))))"))
                                                                                       (rule "equal_literals" (formula "1") (term "0,0,2,0"))
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
                                                                                       (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,2,0"))
                                                                                       (rule "add_literals" (formula "1") (term "1,0,0,0,2,0"))
                                                                                       (rule "times_zero_1" (formula "1") (term "0,0,0,2,0"))
                                                                                       (rule "div_literals" (formula "1") (term "0,0,2,0"))
                                                                                       (rule "add_zero_left" (formula "1") (term "0,2,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "1") (term "2,0"))
                                                                                       (rule "polySimp_elimOne" (formula "1") (term "2,0"))
                                                                                       (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=l_0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,1,0"))
                                                                                       (rule "equal_literals" (formula "1") (term "0,1,0"))
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,1,0"))
                                                                                       (rule "add_literals" (formula "1") (term "1,0,0,1,0"))
                                                                                       (rule "times_zero_1" (formula "1") (term "0,0,1,0"))
                                                                                       (rule "div_literals" (formula "1") (term "0,1,0"))
                                                                                       (rule "add_zero_left" (formula "1") (term "1,0"))
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "eqSymm" (formula "1"))
                                                                                       (rule "close" (formula "67") (ifseqformula "1"))
                                                                                    )
                                                                                    (branch "Case 2"
                                                                                       (rule "notRight" (formula "67"))
                                                                                       (rule "applyEqRigid" (formula "21") (term "1,0") (ifseqformula "1"))
                                                                                       (rule "times_zero_1" (formula "21") (term "0"))
                                                                                       (rule "eqSymm" (formula "21"))
                                                                                       (rule "applyEqRigid" (formula "14") (term "0,1") (ifseqformula "1"))
                                                                                       (rule "times_zero_2" (formula "14") (term "1"))
                                                                                       (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "1"))
                                                                                       (rule "leq_literals" (formula "10"))
                                                                                       (rule "true_left" (formula "10"))
                                                                                       (rule "applyEq" (formula "57") (term "0,1,0,2,0") (ifseqformula "1"))
                                                                                       (rule "times_zero_2" (formula "57") (term "1,0,2,0"))
                                                                                       (rule "add_zero_right" (formula "57") (term "0,2,0"))
                                                                                       (rule "eqSymm" (formula "57"))
                                                                                       (rule "applyEqRigid" (formula "15") (term "0,1,0,2,0") (ifseqformula "1"))
                                                                                       (rule "times_zero_2" (formula "15") (term "1,0,2,0"))
                                                                                       (rule "add_zero_right" (formula "15") (term "0,2,0"))
                                                                                       (rule "applyEq" (formula "69") (term "0,0,0") (ifseqformula "1"))
                                                                                       (rule "times_zero_2" (formula "69") (term "0,0"))
                                                                                       (rule "jdiv_axiom_inline" (formula "69") (term "0"))
                                                                                       (rule "mul_literals" (formula "69") (term "0,0,2,0"))
                                                                                       (rule "qeq_literals" (formula "69") (term "0,0"))
                                                                                        (builtin "One Step Simplification" (formula "69"))
                                                                                       (rule "div_literals" (formula "69") (term "0"))
                                                                                       (rule "eqSymm" (formula "69"))
                                                                                       (rule "close" (formula "69") (ifseqformula "1"))
                                                                                    )
                                                                                 )
                                                                              )
                                                                              (branch "CUT: self.sorted_splitters[b_bin] >= value FALSE"
                                                                                  (builtin "One Step Simplification" (formula "17"))
                                                                                 (rule "inEqSimp_geqRight" (formula "69"))
                                                                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                                 (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "18"))
                                                                                 (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                                                 (rule "add_literals" (formula "30") (term "0,0,0"))
                                                                                 (rule "applyEq" (formula "58") (term "0") (ifseqformula "18"))
                                                                                 (rule "inEqSimp_commuteGeq" (formula "58"))
                                                                                 (rule "applyEq" (formula "45") (term "1,1,1,0,0,0") (ifseqformula "18"))
                                                                                 (rule "polySimp_addAssoc" (formula "45") (term "1,1,0,0,0"))
                                                                                 (rule "add_literals" (formula "45") (term "0,1,1,0,0,0"))
                                                                                 (rule "applyEq" (formula "43") (term "1") (ifseqformula "18"))
                                                                                 (rule "applyEq" (formula "39") (term "1") (ifseqformula "18"))
                                                                                 (rule "applyEq" (formula "46") (term "1,1,1,0,0,0,0") (ifseqformula "18"))
                                                                                 (rule "polySimp_addAssoc" (formula "46") (term "1,1,0,0,0,0"))
                                                                                 (rule "add_literals" (formula "46") (term "0,1,1,0,0,0,0"))
                                                                                 (rule "applyEq" (formula "47") (term "1,1,0,0") (ifseqformula "18"))
                                                                                 (rule "applyEq" (formula "16") (term "0") (ifseqformula "18"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "16"))
                                                                                 (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                                                                                 (rule "add_literals" (formula "16") (term "1,0"))
                                                                                 (rule "times_zero_1" (formula "16") (term "0"))
                                                                                 (rule "leq_literals" (formula "16"))
                                                                                 (rule "true_left" (formula "16"))
                                                                                 (rule "applyEq" (formula "35") (term "0") (ifseqformula "17"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "35"))
                                                                                 (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                                                                 (rule "mul_literals" (formula "35") (term "0,1,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                                                                 (rule "add_literals" (formula "35") (term "0,0"))
                                                                                 (rule "applyEq" (formula "43") (term "1,3,0") (ifseqformula "17"))
                                                                                 (rule "polySimp_addAssoc" (formula "43") (term "3,0"))
                                                                                 (rule "add_literals" (formula "43") (term "0,3,0"))
                                                                                 (rule "add_zero_left" (formula "43") (term "3,0"))
                                                                                 (rule "applyEq" (formula "45") (term "1,1,1,0,0,0,0,1,0") (ifseqformula "17"))
                                                                                 (rule "polySimp_addAssoc" (formula "45") (term "1,1,0,0,0,0,1,0"))
                                                                                 (rule "add_literals" (formula "45") (term "0,1,1,0,0,0,0,1,0"))
                                                                                 (rule "applyEq" (formula "40") (term "0") (ifseqformula "17"))
                                                                                 (rule "inEqSimp_homoInEq0" (formula "40"))
                                                                                 (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                                                                 (rule "mul_literals" (formula "40") (term "0,1,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                                                                 (rule "add_literals" (formula "40") (term "0,0"))
                                                                                 (rule "applyEq" (formula "47") (term "1,1,0,0") (ifseqformula "17"))
                                                                                 (rule "applyEq" (formula "34") (term "1") (ifseqformula "17"))
                                                                                 (rule "applyEq" (formula "46") (term "0,1,0,0,1,1,1,0") (ifseqformula "17"))
                                                                                 (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,1,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,1,1,0"))
                                                                                 (rule "mul_literals" (formula "46") (term "0,1,0,0,1,1,1,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,1,1,0"))
                                                                                 (rule "add_literals" (formula "46") (term "0,0,0,1,1,1,0"))
                                                                                 (rule "add_zero_left" (formula "46") (term "0,0,1,1,1,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                                                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                                                                                 (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                                                 (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                                                                 (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "40") (term "0"))
                                                                                 (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "35"))
                                                                                 (rule "leq_literals" (formula "8") (term "0"))
                                                                                  (builtin "One Step Simplification" (formula "8"))
                                                                                 (rule "true_left" (formula "8"))
                                                                                 (rule "polyDiv_pullOut" (formula "28") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                                                                 (rule "equal_literals" (formula "28") (term "0,0"))
                                                                                  (builtin "One Step Simplification" (formula "28"))
                                                                                 (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0"))
                                                                                 (rule "mul_literals" (formula "28") (term "1,0,0,0"))
                                                                                 (rule "polySimp_addComm0" (formula "28") (term "0"))
                                                                                 (rule "polySimp_addComm1" (formula "28") (term "0,1,0"))
                                                                                 (rule "add_literals" (formula "28") (term "0,0,1,0"))
                                                                                 (rule "polySimp_sepPosMonomial" (formula "28"))
                                                                                 (rule "mul_literals" (formula "28") (term "1"))
                                                                                 (rule "inEqSimp_exactShadow0" (formula "19") (ifseqformula "55"))
                                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                                 (rule "greater_literals" (formula "19") (term "0"))
                                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                                 (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                                                                 (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                                                 (rule "mul_literals" (formula "19") (term "0,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                                                                 (rule "mul_literals" (formula "19") (term "0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                                                 (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                                                                 (rule "add_literals" (formula "19") (term "0,0,0"))
                                                                                 (rule "add_zero_left" (formula "19") (term "0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                                                 (rule "polySimp_mulLiterals" (formula "19") (term "1"))
                                                                                 (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=b_bin") (inst "elimGcdRightDiv=b"))
                                                                                 (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,1,0"))
                                                                                 (rule "leq_literals" (formula "19") (term "0,0"))
                                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                                                                 (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                                                                 (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                                                 (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                                                 (rule "add_zero_right" (formula "19") (term "0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                                                                 (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                                                 (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                                                 (rule "add_zero_right" (formula "19") (term "0,0"))
                                                                                 (rule "leq_literals" (formula "19") (term "0"))
                                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                                 (rule "inEqSimp_exactShadow2" (formula "49") (ifseqformula "56"))
                                                                                 (rule "greater_literals" (formula "49") (term "0"))
                                                                                  (builtin "One Step Simplification" (formula "49"))
                                                                                 (rule "mul_literals" (formula "49") (term "1,0,0"))
                                                                                 (rule "mul_literals" (formula "49") (term "0,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                                                 (rule "add_literals" (formula "49") (term "0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                                                                 (rule "mul_literals" (formula "49") (term "1"))
                                                                                 (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "39"))
                                                                                 (rule "polySimp_rightDist" (formula "41") (term "0,0"))
                                                                                 (rule "mul_literals" (formula "41") (term "0,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "41") (term "0"))
                                                                                 (rule "add_literals" (formula "41") (term "0,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                                                                                 (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "41") (term "0"))
                                                                                 (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "36"))
                                                                                 (rule "polySimp_rightDist" (formula "38") (term "0,0"))
                                                                                 (rule "mul_literals" (formula "38") (term "0,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "38") (term "0"))
                                                                                 (rule "add_literals" (formula "38") (term "0,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                                                                 (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                                                 (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "14"))
                                                                                 (rule "polySimp_mulComm0" (formula "19") (term "0,0"))
                                                                                 (rule "polySimp_addComm0" (formula "19") (term "0"))
                                                                                 (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                                                                 (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                                                 (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "18"))
                                                                                 (rule "leq_literals" (formula "19") (term "0"))
                                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                                 (rule "true_left" (formula "19"))
                                                                                 (rule "cut_direct" (formula "15") (term "1"))
                                                                                 (branch "CUT: self.sorted_splitters[l_0 * -4 + b_bin] <= -1 + value TRUE"
                                                                                     (builtin "One Step Simplification" (formula "16"))
                                                                                    (rule "true_left" (formula "16"))
                                                                                    (rule "nnf_notAnd" (formula "44") (term "1,0,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "44") (term "0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "44") (term "1,0,0,0,1,0,0"))
                                                                                    (rule "add_literals" (formula "44") (term "0,0,0,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "44") (term "1,0,1,0,0"))
                                                                                    (rule "inEqSimp_notGeq" (formula "44") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "44") (term "1,0,0,1,1,0,0"))
                                                                                    (rule "add_literals" (formula "44") (term "0,0,1,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "44") (term "1,1,1,0,0"))
                                                                                    (rule "jdiv_axiom" (formula "71") (term "0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                                                                                    (rule "eqSymm" (formula "1"))
                                                                                    (rule "elimGcdGeq" (formula "1") (term "0,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "1") (term "0,0,0,1,0,0,0"))
                                                                                    (rule "sub_literals" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "0,0,0,1,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0,0"))
                                                                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                                                    (rule "qeq_literals" (formula "1") (term "0,0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,0"))
                                                                                    (rule "add_literals" (formula "1") (term "1,0,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "0,0,0,0"))
                                                                                    (rule "leq_literals" (formula "1") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "polyDiv_pullOut" (formula "1") (term "0,2,0") (inst "polyDivCoeff=mul(l_0, Z(neglit(1(#))))"))
                                                                                    (rule "equal_literals" (formula "1") (term "0,0,2,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,2,0"))
                                                                                    (rule "add_literals" (formula "1") (term "1,0,0,0,2,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "0,0,0,2,0"))
                                                                                    (rule "div_literals" (formula "1") (term "0,0,2,0"))
                                                                                    (rule "add_zero_left" (formula "1") (term "0,2,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "2,0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "2,0"))
                                                                                    (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=l_0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,1,0"))
                                                                                    (rule "equal_literals" (formula "1") (term "0,1,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,1,0"))
                                                                                    (rule "add_literals" (formula "1") (term "1,0,0,1,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "0,0,1,0"))
                                                                                    (rule "div_literals" (formula "1") (term "0,1,0"))
                                                                                    (rule "add_zero_left" (formula "1") (term "1,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "eqSymm" (formula "1"))
                                                                                    (rule "close" (formula "72") (ifseqformula "1"))
                                                                                 )
                                                                                 (branch "CUT: self.sorted_splitters[l_0 * -4 + b_bin] <= -1 + value FALSE"
                                                                                     (builtin "One Step Simplification" (formula "15"))
                                                                                    (rule "inEqSimp_leqRight" (formula "68"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                                    (rule "applyEq" (formula "1") (term "1,0,2,1,0") (ifseqformula "16"))
                                                                                    (rule "polySimp_addAssoc" (formula "1") (term "0,2,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0,0,2,1,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,2,1,0"))
                                                                                    (rule "add_literals" (formula "1") (term "1,1,0,2,1,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "1,0,2,1,0"))
                                                                                    (rule "add_zero_right" (formula "1") (term "0,2,1,0"))
                                                                                    (rule "applyEq" (formula "46") (term "1,1,1,0,0") (ifseqformula "16"))
                                                                                    (rule "polySimp_addAssoc" (formula "46") (term "1,1,0,0"))
                                                                                    (rule "add_literals" (formula "46") (term "0,1,1,0,0"))
                                                                                    (rule "add_zero_left" (formula "46") (term "1,1,0,0"))
                                                                                    (rule "applyEq" (formula "57") (term "1,1") (ifseqformula "16"))
                                                                                    (rule "polySimp_addAssoc" (formula "57") (term "1"))
                                                                                    (rule "add_literals" (formula "57") (term "0,1"))
                                                                                    (rule "add_zero_left" (formula "57") (term "1"))
                                                                                    (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "16"))
                                                                                    (rule "applyEq" (formula "15") (term "0") (ifseqformula "16"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "15"))
                                                                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                                                    (rule "mul_literals" (formula "15") (term "0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                                                    (rule "add_literals" (formula "15") (term "0,0"))
                                                                                    (rule "applyEq" (formula "45") (term "1,1,1,0,0,0,0") (ifseqformula "16"))
                                                                                    (rule "polySimp_addAssoc" (formula "45") (term "1,1,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "45") (term "0,1,1,0,0,0,0"))
                                                                                    (rule "applyEq" (formula "47") (term "1,1,1,0,0") (ifseqformula "16"))
                                                                                    (rule "polySimp_addAssoc" (formula "47") (term "1,1,0,0"))
                                                                                    (rule "add_literals" (formula "47") (term "0,1,1,0,0"))
                                                                                    (rule "add_zero_left" (formula "47") (term "1,1,0,0"))
                                                                                    (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "16"))
                                                                                    (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                                                    (rule "add_literals" (formula "30") (term "0,0,0"))
                                                                                    (rule "applyEq" (formula "42") (term "1,1") (ifseqformula "16"))
                                                                                    (rule "polySimp_addAssoc" (formula "42") (term "1"))
                                                                                    (rule "add_literals" (formula "42") (term "0,1"))
                                                                                    (rule "add_zero_left" (formula "42") (term "1"))
                                                                                    (rule "applyEq" (formula "14") (term "0") (ifseqformula "16"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "14"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                                                                                    (rule "add_literals" (formula "14") (term "1,0"))
                                                                                    (rule "times_zero_1" (formula "14") (term "0"))
                                                                                    (rule "leq_literals" (formula "14"))
                                                                                    (rule "true_left" (formula "14"))
                                                                                    (rule "applyEq" (formula "43") (term "1,1,1,0,0,0") (ifseqformula "15"))
                                                                                    (rule "polySimp_addAssoc" (formula "43") (term "1,1,0,0,0"))
                                                                                    (rule "add_literals" (formula "43") (term "0,1,1,0,0,0"))
                                                                                    (rule "applyEq" (formula "58") (term "1,0,2,0") (ifseqformula "15"))
                                                                                    (rule "polySimp_addAssoc" (formula "58") (term "0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "58") (term "0,0,2,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "58") (term "0,2,0"))
                                                                                    (rule "add_literals" (formula "58") (term "1,1,0,2,0"))
                                                                                    (rule "applyEq" (formula "35") (term "0") (ifseqformula "15"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "35"))
                                                                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                                                                    (rule "mul_literals" (formula "35") (term "0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                                                                    (rule "add_literals" (formula "35") (term "0,0"))
                                                                                    (rule "applyEq" (formula "19") (term "0") (ifseqformula "15"))
                                                                                    (rule "inEqSimp_commuteGeq" (formula "19"))
                                                                                    (rule "applyEq" (formula "44") (term "1,1,1,0,0,0,0,1,0") (ifseqformula "15"))
                                                                                    (rule "polySimp_addAssoc" (formula "44") (term "1,1,0,0,0,0,1,0"))
                                                                                    (rule "add_literals" (formula "44") (term "0,1,1,0,0,0,0,1,0"))
                                                                                    (rule "applyEq" (formula "42") (term "3,0") (ifseqformula "15"))
                                                                                    (rule "applyEq" (formula "38") (term "1,1") (ifseqformula "15"))
                                                                                    (rule "polySimp_addAssoc" (formula "38") (term "1"))
                                                                                    (rule "add_literals" (formula "38") (term "0,1"))
                                                                                    (rule "add_zero_left" (formula "38") (term "1"))
                                                                                    (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "15"))
                                                                                    (rule "polySimp_addAssoc" (formula "24") (term "1"))
                                                                                    (rule "polySimp_addComm1" (formula "24") (term "0,1"))
                                                                                    (rule "add_literals" (formula "24") (term "0,0,1"))
                                                                                    (rule "add_zero_left" (formula "24") (term "0,1"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "24") (term "1"))
                                                                                    (rule "add_literals" (formula "24") (term "1,1"))
                                                                                    (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "15"))
                                                                                    (rule "polySimp_addAssoc" (formula "16") (term "1"))
                                                                                    (rule "add_literals" (formula "16") (term "0,1"))
                                                                                    (rule "add_zero_left" (formula "16") (term "1"))
                                                                                    (rule "applyEq" (formula "34") (term "1,1") (ifseqformula "15"))
                                                                                    (rule "polySimp_addAssoc" (formula "34") (term "1"))
                                                                                    (rule "add_literals" (formula "34") (term "0,1"))
                                                                                    (rule "add_zero_left" (formula "34") (term "1"))
                                                                                    (rule "applyEq" (formula "45") (term "0,0,0,1,1,1,0") (ifseqformula "15"))
                                                                                    (rule "polySimp_mulComm0" (formula "45") (term "0,0,1,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "45") (term "0,0,1,1,1,0"))
                                                                                    (rule "mul_literals" (formula "45") (term "0,0,0,1,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,1,1,1,0"))
                                                                                    (rule "applyEq" (formula "22") (term "0,1,0,1") (ifseqformula "15"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "22") (term "0,1"))
                                                                                    (rule "add_literals" (formula "22") (term "1,0,1"))
                                                                                    (rule "times_zero_1" (formula "22") (term "0,1"))
                                                                                    (rule "add_zero_left" (formula "22") (term "1"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                                                                    (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "35"))
                                                                                    (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                                                    (rule "inEqSimp_subsumption4" (formula "14") (ifseqformula "9"))
                                                                                    (rule "mul_literals" (formula "14") (term "0,1,0"))
                                                                                    (rule "greater_literals" (formula "14") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "14"))
                                                                                    (rule "leq_literals" (formula "14") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "14"))
                                                                                    (rule "true_left" (formula "14"))
                                                                                    (rule "elimGcdEq" (formula "21") (inst "elimGcd=Z(4(#))") (inst "elimGcdLeftDiv=mul(l_0, pow(Z(2(#)), l))") (inst "elimGcdRightDiv=mul(l_0, b)"))
                                                                                    (rule "mul_literals" (formula "21") (term "0,1,0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                                                                                    (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "21") (term "0,1,1"))
                                                                                    (rule "eqSymm" (formula "21") (term "1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "21") (term "0,0,0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "21"))
                                                                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "21") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "21") (term "1,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "21") (term "0,0,0"))
                                                                                    (rule "leq_literals" (formula "21") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "21"))
                                                                                    (rule "polySimp_mulComm0" (formula "21") (term "0,1,1"))
                                                                                    (rule "eqSymm" (formula "21") (term "1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "21") (term "0,0,1"))
                                                                                    (rule "add_literals" (formula "21") (term "1,0,0,1"))
                                                                                    (rule "times_zero_1" (formula "21") (term "0,0,1"))
                                                                                     (builtin "One Step Simplification" (formula "21"))
                                                                                    (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "21") (term "0,0"))
                                                                                    (rule "add_literals" (formula "21") (term "1,0,0"))
                                                                                    (rule "times_zero_1" (formula "21") (term "0,0"))
                                                                                    (rule "qeq_literals" (formula "21") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "21"))
                                                                                    (rule "elimGcdLeq_antec" (formula "55") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=pow(Z(2(#)), l)") (inst "elimGcdRightDiv=mul(l_0, Z(2(#)))"))
                                                                                    (rule "leq_literals" (formula "55") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "55"))
                                                                                    (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0"))
                                                                                    (rule "neg_literal" (formula "55") (term "0,0,0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "55") (term "0,0"))
                                                                                    (rule "add_literals" (formula "55") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "55") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "55") (term "0,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "55") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "55") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "55") (term "0,0"))
                                                                                    (rule "add_literals" (formula "55") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "55") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "55") (term "0,0"))
                                                                                    (rule "qeq_literals" (formula "55") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "55"))
                                                                                    (rule "elimGcdGeq_antec" (formula "34") (inst "elimGcd=Z(4(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(1(#))"))
                                                                                    (rule "leq_literals" (formula "34") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "34"))
                                                                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_addLiterals" (formula "34") (term "0,0,0,0"))
                                                                                    (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0"))
                                                                                    (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "34") (term "0,0"))
                                                                                    (rule "leq_literals" (formula "34") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "34"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "34"))
                                                                                    (rule "leq_literals" (formula "10") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "10"))
                                                                                    (rule "true_left" (formula "10"))
                                                                                    (rule "polyDiv_pullOut" (formula "27") (term "0") (inst "polyDivCoeff=Z(neglit(1(#)))"))
                                                                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,2,0"))
                                                                                    (rule "equal_literals" (formula "27") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "27"))
                                                                                    (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                                                                    (rule "polySimp_homoEq" (formula "27"))
                                                                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "27") (term "1,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "27") (term "0,1,1,1,0"))
                                                                                    (rule "add_literals" (formula "27") (term "0,0,1,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                                                    (rule "mul_literals" (formula "27") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                                                    (rule "add_literals" (formula "27") (term "0,0"))
                                                                                    (rule "add_zero_left" (formula "27") (term "0"))
                                                                                    (rule "polySimp_invertEq" (formula "27"))
                                                                                    (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                                                    (rule "times_zero_2" (formula "27") (term "1"))
                                                                                    (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                                                    (rule "cancel_equation" (formula "20"))
                                                                                    (branch "Case 1"
                                                                                       (rule "applyEq" (formula "61") (term "0,1") (ifseqformula "20"))
                                                                                       (rule "applyEq" (formula "15") (term "0") (ifseqformula "20"))
                                                                                       (rule "inEqSimp_homoInEq0" (formula "15"))
                                                                                       (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                                                                                       (rule "add_literals" (formula "15") (term "1,0"))
                                                                                       (rule "times_zero_1" (formula "15") (term "0"))
                                                                                       (rule "qeq_literals" (formula "15"))
                                                                                       (rule "true_left" (formula "15"))
                                                                                       (rule "applyEq" (formula "52") (term "0") (ifseqformula "19"))
                                                                                       (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                                                       (rule "inEqSimp_homoInEq1" (formula "17"))
                                                                                       (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                                                                                       (rule "add_literals" (formula "17") (term "1,1,0"))
                                                                                       (rule "applyEq" (formula "53") (term "0") (ifseqformula "19"))
                                                                                       (rule "applyEq" (formula "46") (term "0") (ifseqformula "19"))
                                                                                       (rule "applyEq" (formula "49") (term "0,1") (ifseqformula "19"))
                                                                                       (rule "applyEq" (formula "47") (term "0,1") (ifseqformula "19"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "17"))
                                                                                       (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                                                       (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "50"))
                                                                                       (rule "leq_literals" (formula "15") (term "0"))
                                                                                        (builtin "One Step Simplification" (formula "15"))
                                                                                       (rule "true_left" (formula "15"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "15"))
                                                                                       (rule "mul_literals" (formula "43") (term "0,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                                                       (rule "add_literals" (formula "43") (term "0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                                                                       (rule "mul_literals" (formula "43") (term "1"))
                                                                                       (rule "inEqSimp_subsumption6" (formula "43") (ifseqformula "30"))
                                                                                       (rule "mul_literals" (formula "43") (term "1,1,0"))
                                                                                       (rule "greater_literals" (formula "43") (term "0,0"))
                                                                                        (builtin "One Step Simplification" (formula "43"))
                                                                                       (rule "leq_literals" (formula "43") (term "0"))
                                                                                        (builtin "One Step Simplification" (formula "43"))
                                                                                       (rule "true_left" (formula "43"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "34"))
                                                                                       (rule "polySimp_mulAssoc" (formula "36") (term "0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "36") (term "0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "36") (term "0,0"))
                                                                                       (rule "polySimp_addComm0" (formula "36") (term "0"))
                                                                                       (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                                                                                       (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                                                       (rule "inEqSimp_subsumption4" (formula "36") (ifseqformula "9"))
                                                                                       (rule "greater_literals" (formula "36") (term "0,0"))
                                                                                        (builtin "One Step Simplification" (formula "36"))
                                                                                       (rule "mul_literals" (formula "36") (term "0,0"))
                                                                                       (rule "leq_literals" (formula "36") (term "0"))
                                                                                        (builtin "One Step Simplification" (formula "36"))
                                                                                       (rule "true_left" (formula "36"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "31"))
                                                                                       (rule "polySimp_mulAssoc" (formula "33") (term "0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "33") (term "0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "33") (term "0,0"))
                                                                                       (rule "polySimp_addComm0" (formula "33") (term "0"))
                                                                                       (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                                                                       (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                                                       (rule "inEqSimp_subsumption4" (formula "33") (ifseqformula "9"))
                                                                                       (rule "greater_literals" (formula "33") (term "0,0"))
                                                                                        (builtin "One Step Simplification" (formula "33"))
                                                                                       (rule "mul_literals" (formula "33") (term "0,0"))
                                                                                       (rule "leq_literals" (formula "33") (term "0"))
                                                                                        (builtin "One Step Simplification" (formula "33"))
                                                                                       (rule "true_left" (formula "33"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "50"))
                                                                                       (rule "mul_literals" (formula "43") (term "0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                                                                       (rule "mul_literals" (formula "43") (term "1"))
                                                                                       (rule "inEqSimp_subsumption6" (formula "43") (ifseqformula "30"))
                                                                                       (rule "mul_literals" (formula "43") (term "1,1,0"))
                                                                                       (rule "greater_literals" (formula "43") (term "0,0"))
                                                                                        (builtin "One Step Simplification" (formula "43"))
                                                                                       (rule "leq_literals" (formula "43") (term "0"))
                                                                                        (builtin "One Step Simplification" (formula "43"))
                                                                                       (rule "true_left" (formula "43"))
                                                                                       (rule "nnf_notAnd" (formula "39") (term "1,0,0"))
                                                                                       (rule "inEqSimp_notLeq" (formula "39") (term "0,1,0,0"))
                                                                                       (rule "mul_literals" (formula "39") (term "1,0,0,0,1,0,0"))
                                                                                       (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,1,0,0"))
                                                                                       (rule "mul_literals" (formula "39") (term "1,0,1,0,0"))
                                                                                       (rule "inEqSimp_notGeq" (formula "39") (term "1,1,0,0"))
                                                                                       (rule "mul_literals" (formula "39") (term "1,0,0,1,1,0,0"))
                                                                                       (rule "add_literals" (formula "39") (term "0,0,1,1,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,1,0,0"))
                                                                                       (rule "mul_literals" (formula "39") (term "1,1,1,0,0"))
                                                                                       (rule "jdiv_axiom" (formula "65") (term "0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                                                                                       (rule "eqSymm" (formula "1"))
                                                                                       (rule "inEqSimp_subsumption6" (formula "1") (term "0,0") (ifseqformula "31"))
                                                                                       (rule "greater_literals" (formula "1") (term "0,0,0,0"))
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                                                                                       (rule "leq_literals" (formula "1") (term "0,0,0"))
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "eqSymm" (formula "1"))
                                                                                       (rule "applyEq" (formula "66") (term "0") (ifseqformula "1"))
                                                                                       (rule "polyDiv_pullOut" (formula "66") (term "0") (inst "polyDivCoeff=l_0"))
                                                                                       (rule "equal_literals" (formula "66") (term "0,0"))
                                                                                        (builtin "One Step Simplification" (formula "66"))
                                                                                       (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,0"))
                                                                                       (rule "polySimp_pullOutFactor0" (formula "66") (term "0,0,0"))
                                                                                       (rule "add_literals" (formula "66") (term "1,0,0,0"))
                                                                                       (rule "times_zero_1" (formula "66") (term "0,0,0"))
                                                                                       (rule "div_literals" (formula "66") (term "0,0"))
                                                                                       (rule "add_zero_left" (formula "66") (term "0"))
                                                                                        (builtin "One Step Simplification" (formula "66"))
                                                                                       (rule "closeTrue" (formula "66"))
                                                                                    )
                                                                                    (branch "Case 2"
                                                                                       (rule "notRight" (formula "66"))
                                                                                       (rule "applyEq" (formula "37") (term "0,1") (ifseqformula "1"))
                                                                                       (rule "times_zero_2" (formula "37") (term "1"))
                                                                                       (rule "applyEq" (formula "3") (term "0,1,0,2,0") (ifseqformula "1"))
                                                                                       (rule "mul_literals" (formula "3") (term "1,0,2,0"))
                                                                                       (rule "add_zero_right" (formula "3") (term "0,2,0"))
                                                                                       (rule "applyEqRigid" (formula "42") (term "0,1,1,1,0,0,0,0,1,0") (ifseqformula "1"))
                                                                                       (rule "times_zero_2" (formula "42") (term "1,1,1,0,0,0,0,1,0"))
                                                                                       (rule "add_zero_right" (formula "42") (term "1,1,0,0,0,0,1,0"))
                                                                                       (rule "applyEq" (formula "44") (term "0,1,1,0,0") (ifseqformula "1"))
                                                                                       (rule "times_zero_2" (formula "44") (term "1,1,0,0"))
                                                                                       (rule "applyEqRigid" (formula "54") (term "0,1") (ifseqformula "1"))
                                                                                       (rule "times_zero_2" (formula "54") (term "1"))
                                                                                       (rule "applyEq" (formula "4") (term "0,0,0") (ifseqformula "1"))
                                                                                       (rule "times_zero_2" (formula "4") (term "0,0"))
                                                                                       (rule "jdiv_axiom_inline" (formula "4") (term "0"))
                                                                                       (rule "qeq_literals" (formula "4") (term "0,0"))
                                                                                        (builtin "One Step Simplification" (formula "4"))
                                                                                       (rule "div_literals" (formula "4") (term "0"))
                                                                                       (rule "eqSymm" (formula "4"))
                                                                                       (rule "applyEqRigid" (formula "56") (term "0,1,0,2,0") (ifseqformula "1"))
                                                                                       (rule "times_zero_2" (formula "56") (term "1,0,2,0"))
                                                                                       (rule "add_zero_right" (formula "56") (term "0,2,0"))
                                                                                       (rule "eqSymm" (formula "56"))
                                                                                       (rule "applyEq" (formula "18") (term "0,1,1") (ifseqformula "1"))
                                                                                       (rule "times_zero_2" (formula "18") (term "1,1"))
                                                                                       (rule "add_zero_right" (formula "18") (term "1"))
                                                                                       (rule "applyEqRigid" (formula "69") (term "0,0,0") (ifseqformula "1"))
                                                                                       (rule "times_zero_2" (formula "69") (term "0,0"))
                                                                                       (rule "jdiv_axiom_inline" (formula "69") (term "0"))
                                                                                       (rule "mul_literals" (formula "69") (term "0,0,2,0"))
                                                                                       (rule "div_literals" (formula "69") (term "1,0"))
                                                                                       (rule "qeq_literals" (formula "69") (term "0,0"))
                                                                                        (builtin "One Step Simplification" (formula "69"))
                                                                                       (rule "eqSymm" (formula "69"))
                                                                                       (rule "close" (formula "69") (ifseqformula "1"))
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                           (branch "self.tree[b] <= -1 + value FALSE"
                                                                              (rule "add_zero_right" (formula "50") (term "1,0"))
                                                                              (rule "replace_known_right" (formula "58") (term "0,0,0,0") (ifseqformula "59"))
                                                                               (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "59")))
                                                                              (rule "times_zero_2" (formula "58") (term "0,0"))
                                                                              (rule "times_zero_2" (formula "58") (term "0"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "58") (term "1"))
                                                                              (rule "add_literals" (formula "58") (term "1,1"))
                                                                              (rule "times_zero_1" (formula "58") (term "1"))
                                                                               (builtin "One Step Simplification" (formula "58"))
                                                                              (rule "true_left" (formula "58"))
                                                                              (rule "logTimesBaseConcrete" (formula "50") (term "0"))
                                                                              (rule "greater_literals" (formula "50") (term "1,0,0"))
                                                                               (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "39")))
                                                                              (rule "polySimp_homoEq" (formula "50"))
                                                                              (rule "polySimp_mulComm0" (formula "50") (term "1,0"))
                                                                              (rule "polySimp_addComm0" (formula "50") (term "1,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "50") (term "1,0"))
                                                                              (rule "mul_literals" (formula "50") (term "0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "50") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "50") (term "0,0"))
                                                                              (rule "add_literals" (formula "50") (term "0,0,0"))
                                                                              (rule "add_zero_left" (formula "50") (term "0,0"))
                                                                              (rule "inEqSimp_leqRight" (formula "58"))
                                                                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                              (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                              (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                              (rule "applyEq" (formula "51") (term "0,1,0") (ifseqformula "21"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "51") (term "0"))
                                                                              (rule "add_literals" (formula "51") (term "1,0"))
                                                                              (rule "times_zero_1" (formula "51") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "51"))
                                                                              (rule "true_left" (formula "51"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                              (rule "jdiv_axiom" (formula "61") (term "0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                                                                              (rule "eqSymm" (formula "1"))
                                                                              (rule "elimGcdGeq" (formula "1") (term "0,0") (inst "elimGcd=Z(4(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0"))
                                                                              (rule "sub_literals" (formula "1") (term "0,0,0,0,0,0,0,0,0"))
                                                                              (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,0,0,0"))
                                                                              (rule "add_zero_right" (formula "1") (term "0,0,0,1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,0"))
                                                                              (rule "polySimp_addLiterals" (formula "1") (term "0,0,0,0,0,0,0"))
                                                                              (rule "times_zero_1" (formula "1") (term "0,0,0,1,0,0,0"))
                                                                              (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0,0"))
                                                                              (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0,0"))
                                                                              (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0"))
                                                                              (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                                              (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                                              (rule "qeq_literals" (formula "1") (term "0,0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,0"))
                                                                              (rule "add_literals" (formula "1") (term "1,0,0,0,0"))
                                                                              (rule "times_zero_1" (formula "1") (term "0,0,0,0"))
                                                                              (rule "leq_literals" (formula "1") (term "0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=mul(l_0, Z(2(#)))"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0,2,1,0"))
                                                                              (rule "equal_literals" (formula "1") (term "0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,1,0"))
                                                                              (rule "add_literals" (formula "1") (term "1,0,0,1,0"))
                                                                              (rule "times_zero_1" (formula "1") (term "0,0,1,0"))
                                                                              (rule "div_literals" (formula "1") (term "0,1,0"))
                                                                              (rule "add_zero_left" (formula "1") (term "1,0"))
                                                                              (rule "polyDiv_pullOut" (formula "1") (term "0,2,0") (inst "polyDivCoeff=mul(l_0, Z(neglit(2(#))))"))
                                                                              (rule "equal_literals" (formula "1") (term "0,0,2,0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
                                                                              (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,2,0"))
                                                                              (rule "add_literals" (formula "1") (term "1,0,0,0,2,0"))
                                                                              (rule "times_zero_1" (formula "1") (term "0,0,0,2,0"))
                                                                              (rule "div_literals" (formula "1") (term "0,0,2,0"))
                                                                              (rule "add_zero_left" (formula "1") (term "0,2,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "2,0"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "eqSymm" (formula "1"))
                                                                              (rule "applyEqRigid" (formula "62") (term "0,0") (ifseqformula "1"))
                                                                              (rule "applyEq" (formula "50") (term "0,1,0,2,0") (ifseqformula "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "50") (term "1,0,2,0"))
                                                                              (rule "polySimp_addComm0" (formula "50") (term "0,2,0"))
                                                                              (rule "applyEq" (formula "23") (term "1,0,1") (ifseqformula "1"))
                                                                              (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0,1"))
                                                                              (rule "add_literals" (formula "23") (term "1,1,0,0,1"))
                                                                              (rule "nnf_imp2or" (formula "37") (term "0"))
                                                                              (rule "div_axiom" (formula "29") (term "0,1,1,2,1,0,0") (inst "quotient=quotient_0"))
                                                                              (rule "mul_literals" (formula "29") (term "1,1,1,1,1"))
                                                                              (rule "equal_literals" (formula "29") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "29"))
                                                                              (rule "qeq_literals" (formula "29") (term "0,1"))
                                                                               (builtin "One Step Simplification" (formula "29"))
                                                                              (rule "andLeft" (formula "29"))
                                                                              (rule "andLeft" (formula "29"))
                                                                              (rule "polySimp_addComm1" (formula "31") (term "1"))
                                                                              (rule "add_literals" (formula "31") (term "0,1"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "30"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "31"))
                                                                              (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                                                                              (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                                              (rule "applyEq" (formula "32") (term "0,0,0,1,0,0") (ifseqformula "29"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "32") (term "0,1,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "32") (term "0,0,1,0,0"))
                                                                              (rule "applyEq" (formula "32") (term "0,1,1,2,1,0,0") (ifseqformula "29"))
                                                                              (rule "polySimp_addComm0" (formula "32") (term "1,2,1,0,0"))
                                                                              (rule "applyEq" (formula "32") (term "0,1,1,1,1,1,0,0") (ifseqformula "29"))
                                                                              (rule "polySimp_addComm0" (formula "32") (term "1,1,1,1,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "31"))
                                                                              (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "31") (term "1"))
                                                                              (rule "mul_literals" (formula "31") (term "0,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,1,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,1,0,0"))
                                                                              (rule "mul_literals" (formula "32") (term "0,1,0,1,0,0"))
                                                                              (rule "inEqSimp_contradInEq1" (formula "32") (term "0,1,0,0") (ifseqformula "30"))
                                                                              (rule "inEqSimp_homoInEq1" (formula "32") (term "0,0,1,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,1,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,1,0,0"))
                                                                              (rule "mul_literals" (formula "32") (term "0,1,0,0,0,1,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,1,0,0"))
                                                                              (rule "polySimp_addComm0" (formula "32") (term "0,0,0,0,1,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0,0,1,0,0"))
                                                                              (rule "add_literals" (formula "32") (term "1,1,0,0,0,1,0,0"))
                                                                              (rule "times_zero_1" (formula "32") (term "1,0,0,0,1,0,0"))
                                                                              (rule "add_zero_right" (formula "32") (term "0,0,0,1,0,0"))
                                                                              (rule "leq_literals" (formula "32") (term "0,0,1,0,0"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "mod_axiom" (formula "32") (term "0"))
                                                                              (rule "polySimp_mulLiterals" (formula "32") (term "1,0"))
                                                                              (rule "polySimp_homoEq" (formula "32"))
                                                                              (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "32") (term "0,1,0"))
                                                                              (rule "mul_literals" (formula "32") (term "0,0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                                              (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                                                              (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                                                              (rule "add_zero_left" (formula "32") (term "0,0,0"))
                                                                              (rule "polySimp_sepPosMonomial" (formula "32"))
                                                                              (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "32") (term "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                                                              (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                                                                              (rule "polySimp_mulComm0" (formula "32") (term "0,1"))
                                                                              (rule "newSym_eq" (formula "32") (inst "newSymDef=add(mul(pow(Z(2(#)),
            int::final(self,
                       de.wiesler.Tree::$log_buckets)),
        Z(0(#))),
    mul(pow(Z(2(#)),
            add(mul(quotient_0, Z(neglit(2(3(#))))),
                int::final(self,
                           de.wiesler.Tree::$log_buckets))),
        Z(0(#))))") (inst "l=l_1"))
                                                                              (rule "times_zero_1" (formula "32") (term "0,1,1"))
                                                                              (rule "times_zero_1" (formula "32") (term "1,1,1"))
                                                                              (rule "add_zero_left" (formula "32") (term "1,1"))
                                                                              (rule "add_zero_right" (formula "32") (term "1"))
                                                                              (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "32"))
                                                                              (rule "polySimp_homoEq" (formula "33"))
                                                                              (rule "polySimp_mulLiterals" (formula "33") (term "1,0"))
                                                                              (rule "polySimp_addComm1" (formula "33") (term "0"))
                                                                              (rule "polySimp_addComm0" (formula "33") (term "0,0"))
                                                                              (rule "polySimp_sepPosMonomial" (formula "33"))
                                                                              (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "33") (term "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                                                              (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                                                                              (rule "polySimp_mulComm0" (formula "33") (term "0,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "33") (term "0,1"))
                                                                              (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "33"))
                                                                              (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                                                              (rule "polyDiv_pullOut" (formula "32") (term "0") (inst "polyDivCoeff=l_1"))
                                                                              (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0,2,0"))
                                                                              (rule "equal_literals" (formula "32") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "polySimp_homoEq" (formula "32"))
                                                                              (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                                              (rule "polySimp_addComm1" (formula "32") (term "0,0,1,1,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0,0,1,1,0"))
                                                                              (rule "add_literals" (formula "32") (term "1,1,0,0,0,1,1,0"))
                                                                              (rule "times_zero_1" (formula "32") (term "1,0,0,0,1,1,0"))
                                                                              (rule "add_zero_right" (formula "32") (term "0,0,0,1,1,0"))
                                                                              (rule "polySimp_addComm0" (formula "32") (term "1,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "32") (term "0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "32") (term "0,0"))
                                                                              (rule "add_literals" (formula "32") (term "1,0,0"))
                                                                              (rule "times_zero_1" (formula "32") (term "0,0"))
                                                                              (rule "add_zero_left" (formula "32") (term "0"))
                                                                              (rule "polySimp_invertEq" (formula "32"))
                                                                              (rule "times_zero_2" (formula "32") (term "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "31"))
                                                                              (rule "mul_literals" (formula "34") (term "0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                                              (rule "add_literals" (formula "34") (term "0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                                              (rule "mul_literals" (formula "34") (term "1"))
                                                                              (rule "elimGcdGeq_antec" (formula "34") (inst "elimGcd=Z(2(3(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                              (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,0"))
                                                                              (rule "leq_literals" (formula "34") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "polySimp_addLiterals" (formula "34") (term "0,0,0,0"))
                                                                              (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "34") (term "0,0"))
                                                                              (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "34") (term "0,0"))
                                                                              (rule "leq_literals" (formula "34") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "34"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "36"))
                                                                              (rule "polySimp_mulAssoc" (formula "30") (term "0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "30") (term "0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "30") (term "0,0"))
                                                                              (rule "polySimp_addComm0" (formula "30") (term "0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "30"))
                                                                              (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                                              (rule "elimGcdLeq_antec" (formula "30") (inst "elimGcd=Z(2(3(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                              (rule "leq_literals" (formula "30") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "30"))
                                                                              (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0"))
                                                                              (rule "neg_literal" (formula "30") (term "0,0,0,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
                                                                              (rule "polySimp_addLiterals" (formula "30") (term "0,0,0,0"))
                                                                              (rule "add_literals" (formula "30") (term "0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0"))
                                                                              (rule "add_literals" (formula "30") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "30") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "30") (term "0,0"))
                                                                              (rule "qeq_literals" (formula "30") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "30"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "32"))
                                                                              (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                                              (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                              (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                                              (rule "add_literals" (formula "4") (term "0,0,0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                                              (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                              (rule "inEqSimp_antiSymm" (formula "36") (ifseqformula "31"))
                                                                              (rule "applyEqRigid" (formula "32") (term "0,1") (ifseqformula "36"))
                                                                              (rule "times_zero_2" (formula "32") (term "1"))
                                                                              (rule "applyEqRigid" (formula "4") (term "0,1,1") (ifseqformula "36"))
                                                                              (rule "times_zero_2" (formula "4") (term "1,1"))
                                                                              (rule "add_zero_right" (formula "4") (term "1"))
                                                                              (rule "applyEqRigid" (formula "31") (term "0") (ifseqformula "36"))
                                                                              (rule "leq_literals" (formula "31"))
                                                                              (rule "true_left" (formula "31"))
                                                                              (rule "applyEqRigid" (formula "36") (term "0") (ifseqformula "35"))
                                                                              (rule "qeq_literals" (formula "36"))
                                                                              (rule "true_left" (formula "36"))
                                                                              (rule "applyEq" (formula "32") (term "0,1,1") (ifseqformula "35"))
                                                                              (rule "times_zero_2" (formula "32") (term "1,1"))
                                                                              (rule "add_zero_right" (formula "32") (term "1"))
                                                                              (rule "applyEqRigid" (formula "30") (term "1") (ifseqformula "35"))
                                                                              (rule "applyEq" (formula "34") (term "0,0,1,0") (ifseqformula "35"))
                                                                              (rule "times_zero_2" (formula "34") (term "0,1,0"))
                                                                              (rule "add_zero_left" (formula "34") (term "1,0"))
                                                                              (rule "polySimp_homoEq" (formula "34"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                                                              (rule "add_literals" (formula "34") (term "1,1,0"))
                                                                              (rule "times_zero_1" (formula "34") (term "1,0"))
                                                                              (rule "add_zero_right" (formula "34") (term "0"))
                                                                              (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "37"))
                                                                              (rule "leq_literals" (formula "32") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "32"))
                                                                              (rule "true_left" (formula "32"))
                                                                              (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "35"))
                                                                              (rule "leq_literals" (formula "31") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "31"))
                                                                              (rule "true_left" (formula "31"))
                                                                              (rule "inEqSimp_subsumption0" (formula "4") (ifseqformula "3"))
                                                                              (rule "leq_literals" (formula "4") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "4"))
                                                                              (rule "true_left" (formula "4"))
                                                                              (rule "elimGcdEq" (formula "31") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                               (builtin "One Step Simplification" (formula "31"))
                                                                              (rule "add_zero_left" (formula "31") (term "0,0,0"))
                                                                              (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                                                              (rule "times_zero_1" (formula "31") (term "1,0,1,0"))
                                                                              (rule "add_literals" (formula "31") (term "1,0,0"))
                                                                              (rule "times_zero_1" (formula "31") (term "0,0,0"))
                                                                              (rule "add_zero_left" (formula "31") (term "0,0,1"))
                                                                               (builtin "One Step Simplification" (formula "31"))
                                                                              (rule "leq_literals" (formula "31") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "31"))
                                                                              (rule "add_zero_left" (formula "31") (term "0,0"))
                                                                              (rule "qeq_literals" (formula "31") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "31"))
                                                                              (rule "arrayLengthIsAnInt" (formula "38") (term "0"))
                                                                              (rule "expand_inInt" (formula "38"))
                                                                              (rule "replace_int_MIN" (formula "38") (term "0,1"))
                                                                              (rule "replace_int_MAX" (formula "38") (term "1,0"))
                                                                              (rule "andLeft" (formula "38"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "39"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "38"))
                                                                              (rule "polySimp_mulComm0" (formula "40") (term "0,0"))
                                                                              (rule "polySimp_addComm0" (formula "40") (term "0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                                                              (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "40") (term "0"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "40"))
                                                                              (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                                                              (rule "mul_literals" (formula "17") (term "0,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                                              (rule "add_literals" (formula "17") (term "0,0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                                                              (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                                              (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "17"))
                                                                              (rule "leq_literals" (formula "9") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "9"))
                                                                              (rule "true_left" (formula "9"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "54") (ifseqformula "40"))
                                                                              (rule "polySimp_mulAssoc" (formula "54") (term "0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "54") (term "0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "54") (term "0,0"))
                                                                              (rule "polySimp_addComm0" (formula "54") (term "0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "54"))
                                                                              (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                                                              (rule "elimGcdLeq_antec" (formula "54") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=pow(Z(2(#)), l)") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))"))
                                                                              (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0,0,1,0"))
                                                                              (rule "neg_literal" (formula "54") (term "0,0,0,0,0,1,0"))
                                                                              (rule "leq_literals" (formula "54") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "54"))
                                                                              (rule "mul_literals" (formula "54") (term "1,0,0,0,0,0"))
                                                                              (rule "polySimp_addLiterals" (formula "54") (term "0,0,0,0"))
                                                                              (rule "add_literals" (formula "54") (term "0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "54") (term "0,0"))
                                                                              (rule "add_literals" (formula "54") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "54") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "54") (term "0,0"))
                                                                              (rule "qeq_literals" (formula "54") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "54"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "16"))
                                                                              (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
                                                                              (rule "mul_literals" (formula "15") (term "0,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                                              (rule "add_literals" (formula "15") (term "0,0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                                              (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                                              (rule "inEqSimp_subsumption4" (formula "15") (ifseqformula "10"))
                                                                              (rule "mul_literals" (formula "15") (term "0,1,0"))
                                                                              (rule "greater_literals" (formula "15") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "15"))
                                                                              (rule "leq_literals" (formula "15") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "15"))
                                                                              (rule "true_left" (formula "15"))
                                                                              (rule "inEqSimp_exactShadow1" (formula "21") (ifseqformula "54"))
                                                                              (rule "mul_literals" (formula "21") (term "1,0,1"))
                                                                              (rule "greater_literals" (formula "21") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "21"))
                                                                              (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                                                                              (rule "mul_literals" (formula "21") (term "0,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                                              (rule "add_literals" (formula "21") (term "0,0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                                                              (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                                              (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "21"))
                                                                              (rule "leq_literals" (formula "8") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "8"))
                                                                              (rule "true_left" (formula "8"))
                                                                              (rule "arrayLengthNotNegative" (formula "41") (term "0"))
                                                                              (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "41"))
                                                                              (rule "leq_literals" (formula "39") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "39"))
                                                                              (rule "true_left" (formula "39"))
                                                                              (rule "arrayLengthIsAnInt" (formula "37") (term "0"))
                                                                              (rule "expand_inInt" (formula "37"))
                                                                              (rule "replace_int_MIN" (formula "37") (term "0,1"))
                                                                              (rule "replace_int_MAX" (formula "37") (term "1,0"))
                                                                              (rule "andLeft" (formula "37"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "38"))
                                                                              (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "37"))
                                                                              (rule "polySimp_mulComm0" (formula "39") (term "0,0"))
                                                                              (rule "polySimp_addComm0" (formula "39") (term "0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                                                              (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "39") (term "0"))
                                                                              (rule "arrayLengthNotNegative" (formula "39") (term "0"))
                                                                              (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "39"))
                                                                              (rule "leq_literals" (formula "38") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "38"))
                                                                              (rule "true_left" (formula "38"))
                                                                              (rule "commute_or_2" (formula "47") (term "0,0"))
                                                                              (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "25") (term "0"))
                                                                              (rule "translateJavaSubInt" (formula "25") (term "0,1,1,0"))
                                                                              (rule "polySimp_elimSub" (formula "25") (term "1,0,0,0"))
                                                                              (rule "polySimp_elimSub" (formula "25") (term "0,1,1,0"))
                                                                              (rule "mul_literals" (formula "25") (term "1,0,1,1,0"))
                                                                              (rule "polySimp_elimSub" (formula "25") (term "1,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "25") (term "0"))
                                                                              (rule "polySimp_addComm0" (formula "25") (term "0,1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "25") (term "1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "25") (term "0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0"))
                                                                              (rule "polySimp_mulAssoc" (formula "25") (term "0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "25") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "25") (term "0,0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "25") (term "1,0"))
                                                                              (rule "polySimp_addComm0" (formula "25") (term "0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "25") (term "0"))
                                                                              (rule "polySimp_homoEq" (formula "25"))
                                                                              (rule "polySimp_mulComm1" (formula "25") (term "1,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "25") (term "0,1,1,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "25") (term "0,1,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "25") (term "0,0,1,1,0"))
                                                                              (rule "polySimp_mulComm1" (formula "25") (term "1,0,1,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "25") (term "0,1,0,1,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "25") (term "0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "25") (term "0,0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                                              (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
                                                                              (rule "logTimesBaseConcrete" (formula "25") (term "1,1,0,1,0"))
                                                                              (rule "greater_literals" (formula "25") (term "1,0,1,1,0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "49")))
                                                                              (rule "polySimp_addComm0" (formula "25") (term "1,1,0,1,0"))
                                                                              (rule "logTimesBaseConcrete" (formula "25") (term "0,1,0,1,0,0,1,0"))
                                                                              (rule "greater_literals" (formula "25") (term "1,0,0,1,0,1,0,0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "49")))
                                                                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0,1,0"))
                                                                              (rule "polySimp_addComm0" (formula "25") (term "1,1,0,1,0,0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                                              (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,0,1,0,0"))
                                                                              (rule "mul_literals" (formula "25") (term "0,1,0,1,0,0,1,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "25") (term "0,1,0,0,1,0,0"))
                                                                              (rule "add_literals" (formula "25") (term "0,0,1,0,0,1,0,0"))
                                                                              (rule "logTimesBaseConcrete" (formula "25") (term "0,1,0,1,0,0,1,0"))
                                                                              (rule "greater_literals" (formula "25") (term "1,0,0,1,0,1,0,0,1,0"))
                                                                               (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "49")))
                                                                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0,1,0"))
                                                                              (rule "polySimp_addComm0" (formula "25") (term "1,1,0,1,0,0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                                              (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,0,1,0,0"))
                                                                              (rule "mul_literals" (formula "25") (term "0,1,0,1,0,0,1,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "25") (term "0,1,0,0,1,0,0"))
                                                                              (rule "add_literals" (formula "25") (term "0,0,1,0,0,1,0,0"))
                                                                              (rule "logTimesBaseConcrete" (formula "25") (term "0,1,0,1,0,1,0,0,0"))
                                                                              (rule "greater_literals" (formula "25") (term "1,0,0,1,0,1,0,1,0,0,0"))
                                                                               (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "49")))
                                                                              (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,1,0,0,0"))
                                                                              (rule "polySimp_addComm0" (formula "25") (term "1,1,0,1,0,1,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,1,0,0,0"))
                                                                              (rule "mul_literals" (formula "25") (term "0,1,0,1,0,1,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "25") (term "0,1,0,1,0,0,0"))
                                                                              (rule "add_literals" (formula "25") (term "0,0,1,0,1,0,0,0"))
                                                                              (rule "applyEq" (formula "25") (term "1,1,1,0,1,0") (ifseqformula "22"))
                                                                              (rule "applyEq" (formula "25") (term "1,0,1,0") (ifseqformula "52"))
                                                                              (rule "polySimp_mulAssoc" (formula "25") (term "0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                                                                              (rule "applyEq" (formula "25") (term "0,1,0,1,0,0,1,0") (ifseqformula "22"))
                                                                              (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                                              (rule "applyEq" (formula "25") (term "0,1,0,1,0,0,1,0") (ifseqformula "22"))
                                                                              (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                                              (rule "applyEq" (formula "25") (term "0,0,1,0") (ifseqformula "65"))
                                                                              (rule "polySimp_mulComm0" (formula "25") (term "0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                                              (rule "applyEq" (formula "25") (term "0,0,1,0") (ifseqformula "65"))
                                                                              (rule "polySimp_mulComm0" (formula "25") (term "0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                                              (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "23"))
                                                                              (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "25") (term "0"))
                                                                              (rule "add_literals" (formula "25") (term "1,1,0"))
                                                                              (rule "times_zero_1" (formula "25") (term "1,0"))
                                                                              (rule "add_zero_right" (formula "25") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0"))
                                                                              (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0,0"))
                                                                              (rule "add_literals" (formula "25") (term "1,1,0,0,0,0"))
                                                                              (rule "applyEq" (formula "25") (term "0,1,0,1,0,1,0") (ifseqformula "22"))
                                                                              (rule "applyEq" (formula "25") (term "0,1,0") (ifseqformula "65"))
                                                                              (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                                              (rule "polySimp_pullOutFactor0b" (formula "25") (term "0,0,0"))
                                                                              (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                                                              (rule "polySimp_sepPosMonomial" (formula "25"))
                                                                              (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                                              (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                                              (rule "polySimp_rightDist" (formula "25") (term "0,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "25") (term "1,0,1"))
                                                                              (rule "mul_literals" (formula "25") (term "0,0,1"))
                                                                              (rule "applyEq" (formula "64") (term "1,1") (ifseqformula "25"))
                                                                              (rule "polySimp_addAssoc" (formula "64") (term "1"))
                                                                              (rule "polySimp_addAssoc" (formula "64") (term "0,1"))
                                                                              (rule "polySimp_addComm0" (formula "64") (term "0,0,1"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,1"))
                                                                              (rule "add_literals" (formula "64") (term "1,1,0,1"))
                                                                              (rule "commute_or_2" (formula "46") (term "0,0"))
                                                                              (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "64") (term "0"))
                                                                              (rule "translateJavaSubInt" (formula "64") (term "0,1,1,0"))
                                                                              (rule "polySimp_elimSub" (formula "64") (term "1,0,0,0"))
                                                                              (rule "polySimp_elimSub" (formula "64") (term "0,1,1,0"))
                                                                              (rule "mul_literals" (formula "64") (term "1,0,1,1,0"))
                                                                              (rule "polySimp_elimSub" (formula "64") (term "1,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "64") (term "0"))
                                                                              (rule "polySimp_addComm0" (formula "64") (term "0,1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "64") (term "1,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "64") (term "0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "64") (term "1,0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "64") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "64") (term "0,0,1,0"))
                                                                              (rule "mul_literals" (formula "64") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "64") (term "0,1,0"))
                                                                              (rule "add_literals" (formula "64") (term "0,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "64") (term "0"))
                                                                              (rule "polySimp_homoEq" (formula "64"))
                                                                              (rule "polySimp_mulComm1" (formula "64") (term "1,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "64") (term "1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "64") (term "0,1,1,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "64") (term "0,1,1,0"))
                                                                              (rule "polySimp_mulComm1" (formula "64") (term "1,0,1,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "64") (term "0,1,0,1,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "64") (term "1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "64") (term "0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "64") (term "1,0,1,0"))
                                                                              (rule "polySimp_mulAssoc" (formula "64") (term "0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "64") (term "0,0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "64") (term "0,0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "64") (term "0"))
                                                                              (rule "polySimp_addAssoc" (formula "64") (term "0,0"))
                                                                              (rule "polySimp_sepPosMonomial" (formula "64"))
                                                                              (rule "polySimp_mulComm0" (formula "64") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "64") (term "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "64") (term "1,1"))
                                                                              (rule "polySimp_rightDist" (formula "64") (term "0,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "64") (term "1,0,1"))
                                                                              (rule "polySimp_rightDist" (formula "64") (term "0,0,1"))
                                                                              (rule "polySimp_rightDist" (formula "64") (term "0,0,0,1"))
                                                                              (rule "mul_literals" (formula "64") (term "0,0,0,0,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "64") (term "1,0,0,0,1"))
                                                                              (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0,1"))
                                                                              (rule "nnf_notAnd" (formula "45") (term "0,0"))
                                                                              (rule "Contract_axiom_for_isSortedSlice_in_Functions" (formula "44") (term "0"))
                                                                              (rule "replace_known_left" (formula "44") (term "0,1") (ifseqformula "45"))
                                                                               (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "69")) (ifInst ""  (formula "5")))
                                                                              (rule "Definition_axiom_for_isSortedSlice_in_de_wiesler_Functions" (formula "45") (term "0") (inst "i=i"))
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "expand_inInt" (formula "45") (term "1,0,0"))
                                                                              (rule "replace_int_MIN" (formula "45") (term "0,1,1,0,0"))
                                                                              (rule "replace_int_MAX" (formula "45") (term "1,0,1,0,0"))
                                                                              (rule "translateJavaSubInt" (formula "45") (term "1,1,0,0,0"))
                                                                              (rule "translateJavaAddInt" (formula "45") (term "0,2,1,1,0"))
                                                                              (rule "polySimp_elimSub" (formula "45") (term "1,1,0,0,0"))
                                                                              (rule "mul_literals" (formula "45") (term "1,1,1,0,0,0"))
                                                                              (rule "polySimp_addComm0" (formula "45") (term "0,2,1,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "45") (term "1,1,0,0,0"))
                                                                              (rule "add_literals" (formula "45") (term "0,1,1,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "45") (term "1,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0,0,0"))
                                                                              (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0,0,0"))
                                                                              (rule "add_literals" (formula "45") (term "0,0,0,1,0,0,0"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0,0,0"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "45") (term "1,1,0,0"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "45") (term "1,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "1,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "45") (term "1,1,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "45") (term "1,1,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0,0,0"))
                                                                              (rule "mul_literals" (formula "45") (term "0,1,1,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "45") (term "1,1,1,0,0,0"))
                                                                              (rule "nnf_imp2or" (formula "46") (term "0,1,0"))
                                                                              (rule "cut_direct" (formula "18") (term "1"))
                                                                              (branch "CUT: self.sorted_splitters[b_bin] >= value TRUE"
                                                                                  (builtin "One Step Simplification" (formula "19"))
                                                                                 (rule "true_left" (formula "19"))
                                                                                 (rule "cut_direct" (formula "17") (term "1"))
                                                                                 (branch "CUT: self.sorted_splitters[l_0 * -4 + b_bin] <= -1 + value TRUE"
                                                                                     (builtin "One Step Simplification" (formula "18"))
                                                                                    (rule "true_left" (formula "18"))
                                                                                    (rule "jdiv_axiom" (formula "72") (term "0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                                                                                    (rule "eqSymm" (formula "1"))
                                                                                    (rule "polyDiv_pullOut" (formula "1") (term "0,2,0") (inst "polyDivCoeff=mul(l_0, Z(neglit(1(#))))"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,2,0"))
                                                                                    (rule "equal_literals" (formula "1") (term "0,0,2,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,2,0"))
                                                                                    (rule "add_literals" (formula "1") (term "1,0,0,0,2,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "0,0,0,2,0"))
                                                                                    (rule "div_literals" (formula "1") (term "0,0,2,0"))
                                                                                    (rule "add_zero_left" (formula "1") (term "0,2,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "2,0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "2,0"))
                                                                                    (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=l_0"))
                                                                                    (rule "equal_literals" (formula "1") (term "0,1,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,1,0"))
                                                                                    (rule "add_literals" (formula "1") (term "1,0,0,1,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "0,0,1,0"))
                                                                                    (rule "div_literals" (formula "1") (term "0,1,0"))
                                                                                    (rule "add_zero_left" (formula "1") (term "1,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "eqSymm" (formula "1"))
                                                                                    (rule "close" (formula "73") (ifseqformula "1"))
                                                                                 )
                                                                                 (branch "CUT: self.sorted_splitters[l_0 * -4 + b_bin] <= -1 + value FALSE"
                                                                                     (builtin "One Step Simplification" (formula "17"))
                                                                                    (rule "inEqSimp_leqRight" (formula "69"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                                    (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "18"))
                                                                                    (rule "polySimp_addAssoc" (formula "17") (term "1"))
                                                                                    (rule "add_literals" (formula "17") (term "0,1"))
                                                                                    (rule "add_zero_left" (formula "17") (term "1"))
                                                                                    (rule "applyEq" (formula "9") (term "0") (ifseqformula "18"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "9"))
                                                                                    (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                                                    (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                                                    (rule "add_literals" (formula "9") (term "0,0"))
                                                                                    (rule "applyEq" (formula "15") (term "0") (ifseqformula "18"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "15"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                                                                                    (rule "add_literals" (formula "15") (term "1,0"))
                                                                                    (rule "times_zero_1" (formula "15") (term "0"))
                                                                                    (rule "leq_literals" (formula "15"))
                                                                                    (rule "true_left" (formula "15"))
                                                                                    (rule "applyEq" (formula "15") (term "0") (ifseqformula "17"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "15"))
                                                                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                                                    (rule "mul_literals" (formula "15") (term "0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                                                    (rule "add_literals" (formula "15") (term "0,0"))
                                                                                    (rule "applyEq" (formula "60") (term "1,0,2,0") (ifseqformula "17"))
                                                                                    (rule "polySimp_addAssoc" (formula "60") (term "0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "60") (term "0,0,2,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "60") (term "0,2,0"))
                                                                                    (rule "add_literals" (formula "60") (term "1,1,0,2,0"))
                                                                                    (rule "applyEq" (formula "18") (term "0,2,0") (ifseqformula "17"))
                                                                                    (rule "applyEq" (formula "1") (term "1,0,2,1,0") (ifseqformula "17"))
                                                                                    (rule "polySimp_addAssoc" (formula "1") (term "0,2,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0,0,2,1,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,2,1,0"))
                                                                                    (rule "add_literals" (formula "1") (term "1,1,0,2,1,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "1,0,2,1,0"))
                                                                                    (rule "add_zero_right" (formula "1") (term "0,2,1,0"))
                                                                                    (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "17"))
                                                                                    (rule "polySimp_addAssoc" (formula "25") (term "1"))
                                                                                    (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                                                                                    (rule "add_literals" (formula "25") (term "0,0,1"))
                                                                                    (rule "add_zero_left" (formula "25") (term "0,1"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "25") (term "1"))
                                                                                    (rule "add_literals" (formula "25") (term "1,1"))
                                                                                    (rule "applyEq" (formula "23") (term "0,1,0,1") (ifseqformula "17"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1"))
                                                                                    (rule "add_literals" (formula "23") (term "1,0,1"))
                                                                                    (rule "times_zero_1" (formula "23") (term "0,1"))
                                                                                    (rule "add_zero_left" (formula "23") (term "1"))
                                                                                    (rule "applyEq" (formula "65") (term "0,1,0,0,1") (ifseqformula "17"))
                                                                                    (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "65") (term "1,0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,1"))
                                                                                    (rule "mul_literals" (formula "65") (term "0,1,0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "65") (term "0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "65") (term "0,0,0,1"))
                                                                                    (rule "add_literals" (formula "65") (term "0,0,0,0,1"))
                                                                                    (rule "add_zero_left" (formula "65") (term "0,0,0,1"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "65") (term "0,0,1"))
                                                                                    (rule "add_literals" (formula "65") (term "1,0,0,1"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                                                    (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                                                    (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                                    (rule "inEqSimp_subsumption4" (formula "15") (ifseqformula "10"))
                                                                                    (rule "greater_literals" (formula "15") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "15"))
                                                                                    (rule "mul_literals" (formula "15") (term "0,0"))
                                                                                    (rule "leq_literals" (formula "15") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "15"))
                                                                                    (rule "true_left" (formula "15"))
                                                                                    (rule "elimGcdEq" (formula "22") (inst "elimGcd=Z(4(#))") (inst "elimGcdLeftDiv=mul(l_0, pow(Z(2(#)), l))") (inst "elimGcdRightDiv=mul(l_0, b)"))
                                                                                    (rule "mul_literals" (formula "22") (term "0,1,0,1,0,0"))
                                                                                    (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                                                                                    (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "0,1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "0,0,0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "22"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "22") (term "0,0,1"))
                                                                                    (rule "add_literals" (formula "22") (term "1,0,0,1"))
                                                                                    (rule "times_zero_1" (formula "22") (term "0,0,1"))
                                                                                     (builtin "One Step Simplification" (formula "22"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "22") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "22") (term "1,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "22") (term "0,0,0"))
                                                                                    (rule "leq_literals" (formula "22") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "22"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "22") (term "0,0"))
                                                                                    (rule "add_literals" (formula "22") (term "1,0,0"))
                                                                                    (rule "times_zero_1" (formula "22") (term "0,0"))
                                                                                    (rule "qeq_literals" (formula "22") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "22"))
                                                                                    (rule "elimGcdGeq_antec" (formula "9") (inst "elimGcd=Z(4(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(neglit(1(1(9(0(7(8(6(3(5(#)))))))))))"))
                                                                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "9") (term "1,0,1,0"))
                                                                                    (rule "leq_literals" (formula "9") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                                    (rule "mul_literals" (formula "9") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_addLiterals" (formula "9") (term "0,0,0,0"))
                                                                                    (rule "add_literals" (formula "9") (term "0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                                                                    (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "9") (term "0,0"))
                                                                                    (rule "leq_literals" (formula "9") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "9"))
                                                                                    (rule "leq_literals" (formula "11") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "11"))
                                                                                    (rule "true_left" (formula "11"))
                                                                                    (rule "cancel_equation" (formula "21"))
                                                                                    (branch "Case 1"
                                                                                       (rule "applyEq" (formula "55") (term "0") (ifseqformula "21"))
                                                                                       (rule "applyEq" (formula "49") (term "0") (ifseqformula "21"))
                                                                                       (rule "applyEq" (formula "60") (term "0,1") (ifseqformula "21"))
                                                                                       (rule "applyEq" (formula "55") (term "0,1") (ifseqformula "21"))
                                                                                       (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "21"))
                                                                                       (rule "inEqSimp_homoInEq1" (formula "19"))
                                                                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                                                                                       (rule "add_literals" (formula "19") (term "1,1,0"))
                                                                                       (rule "applyEq" (formula "17") (term "0") (ifseqformula "21"))
                                                                                       (rule "inEqSimp_homoInEq0" (formula "17"))
                                                                                       (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                                                                                       (rule "add_literals" (formula "17") (term "1,0"))
                                                                                       (rule "times_zero_1" (formula "17") (term "0"))
                                                                                       (rule "qeq_literals" (formula "17"))
                                                                                       (rule "true_left" (formula "17"))
                                                                                       (rule "applyEq" (formula "51") (term "0,1") (ifseqformula "20"))
                                                                                       (rule "applyEq" (formula "49") (term "0,1") (ifseqformula "20"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                                                                       (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                                                       (rule "inEqSimp_subsumption0" (formula "17") (ifseqformula "52"))
                                                                                       (rule "leq_literals" (formula "17") (term "0"))
                                                                                        (builtin "One Step Simplification" (formula "17"))
                                                                                       (rule "true_left" (formula "17"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "36"))
                                                                                       (rule "polySimp_mulAssoc" (formula "14") (term "0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "14") (term "0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "14") (term "0,0"))
                                                                                       (rule "polySimp_addComm0" (formula "14") (term "0"))
                                                                                       (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                                                                       (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                                                       (rule "inEqSimp_subsumption4" (formula "14") (ifseqformula "10"))
                                                                                       (rule "mul_literals" (formula "14") (term "0,1,0"))
                                                                                       (rule "greater_literals" (formula "14") (term "0,0"))
                                                                                        (builtin "One Step Simplification" (formula "14"))
                                                                                       (rule "leq_literals" (formula "14") (term "0"))
                                                                                        (builtin "One Step Simplification" (formula "14"))
                                                                                       (rule "true_left" (formula "14"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "36"))
                                                                                       (rule "polySimp_mulAssoc" (formula "52") (term "0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "52") (term "0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "52") (term "0,0"))
                                                                                       (rule "polySimp_addComm0" (formula "52") (term "0"))
                                                                                       (rule "inEqSimp_sepNegMonomial1" (formula "52"))
                                                                                       (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                                                                       (rule "inEqSimp_subsumption4" (formula "52") (ifseqformula "51"))
                                                                                       (rule "greater_literals" (formula "52") (term "0,0"))
                                                                                        (builtin "One Step Simplification" (formula "52"))
                                                                                       (rule "mul_literals" (formula "52") (term "0,0"))
                                                                                       (rule "leq_literals" (formula "52") (term "0"))
                                                                                        (builtin "One Step Simplification" (formula "52"))
                                                                                       (rule "true_left" (formula "52"))
                                                                                       (rule "jdiv_axiom" (formula "66") (term "0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                                                                                       (rule "eqSymm" (formula "1"))
                                                                                       (rule "polyDiv_pullOut" (formula "1") (term "0,2,0") (inst "polyDivCoeff=mul(l_0, Z(neglit(1(#))))"))
                                                                                       (rule "equal_literals" (formula "1") (term "0,0,2,0"))
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
                                                                                       (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,2,0"))
                                                                                       (rule "add_literals" (formula "1") (term "1,0,0,0,2,0"))
                                                                                       (rule "times_zero_1" (formula "1") (term "0,0,0,2,0"))
                                                                                       (rule "div_literals" (formula "1") (term "0,0,2,0"))
                                                                                       (rule "add_zero_left" (formula "1") (term "0,2,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "1") (term "2,0"))
                                                                                       (rule "polySimp_elimOne" (formula "1") (term "2,0"))
                                                                                       (rule "elimGcdGeq" (formula "1") (term "0,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0"))
                                                                                       (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,0"))
                                                                                       (rule "add_zero_right" (formula "1") (term "0,0,0,1,0,0,0"))
                                                                                       (rule "sub_literals" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                                                       (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,0,0"))
                                                                                       (rule "times_zero_1" (formula "1") (term "0,0,0,1,0,0,0"))
                                                                                       (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0,0"))
                                                                                       (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0"))
                                                                                       (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0,0"))
                                                                                       (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0"))
                                                                                       (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                                                                       (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                                                                       (rule "qeq_literals" (formula "1") (term "0,0,0,0"))
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,0"))
                                                                                       (rule "add_literals" (formula "1") (term "1,0,0,0,0"))
                                                                                       (rule "times_zero_1" (formula "1") (term "0,0,0,0"))
                                                                                       (rule "leq_literals" (formula "1") (term "0,0,0"))
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=l_0"))
                                                                                       (rule "equal_literals" (formula "1") (term "0,1,0"))
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                                                                       (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,1,0"))
                                                                                       (rule "add_literals" (formula "1") (term "1,0,0,1,0"))
                                                                                       (rule "times_zero_1" (formula "1") (term "0,0,1,0"))
                                                                                       (rule "div_literals" (formula "1") (term "0,1,0"))
                                                                                       (rule "add_zero_left" (formula "1") (term "1,0"))
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "eqSymm" (formula "1"))
                                                                                       (rule "close" (formula "67") (ifseqformula "1"))
                                                                                    )
                                                                                    (branch "Case 2"
                                                                                       (rule "notRight" (formula "67"))
                                                                                       (rule "applyEqRigid" (formula "17") (term "0,1,0,2,0") (ifseqformula "1"))
                                                                                       (rule "times_zero_2" (formula "17") (term "1,0,2,0"))
                                                                                       (rule "add_zero_right" (formula "17") (term "0,2,0"))
                                                                                       (rule "applyEq" (formula "15") (term "0,1") (ifseqformula "1"))
                                                                                       (rule "times_zero_2" (formula "15") (term "1"))
                                                                                       (rule "applyEqRigid" (formula "11") (term "0") (ifseqformula "1"))
                                                                                       (rule "leq_literals" (formula "11"))
                                                                                       (rule "true_left" (formula "11"))
                                                                                       (rule "applyEqRigid" (formula "20") (term "1,0") (ifseqformula "1"))
                                                                                       (rule "times_zero_1" (formula "20") (term "0"))
                                                                                       (rule "eqSymm" (formula "20"))
                                                                                       (rule "applyEqRigid" (formula "57") (term "0,1,0,2,0") (ifseqformula "1"))
                                                                                       (rule "times_zero_2" (formula "57") (term "1,0,2,0"))
                                                                                       (rule "add_zero_right" (formula "57") (term "0,2,0"))
                                                                                       (rule "eqSymm" (formula "57"))
                                                                                       (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "1"))
                                                                                       (rule "qeq_literals" (formula "10"))
                                                                                       (rule "true_left" (formula "10"))
                                                                                       (rule "applyEqRigid" (formula "3") (term "0,0,0") (ifseqformula "1"))
                                                                                       (rule "times_zero_2" (formula "3") (term "0,0"))
                                                                                       (rule "jdiv_axiom_inline" (formula "3") (term "0"))
                                                                                       (rule "qeq_literals" (formula "3") (term "0,0"))
                                                                                        (builtin "One Step Simplification" (formula "3"))
                                                                                       (rule "div_literals" (formula "3") (term "0"))
                                                                                       (rule "eqSymm" (formula "3"))
                                                                                       (rule "applyEq" (formula "68") (term "0,0,0") (ifseqformula "1"))
                                                                                       (rule "mul_literals" (formula "68") (term "0,0"))
                                                                                       (rule "jdiv_axiom_inline" (formula "68") (term "0"))
                                                                                       (rule "mul_literals" (formula "68") (term "0,0,2,0"))
                                                                                       (rule "div_literals" (formula "68") (term "1,0"))
                                                                                       (rule "qeq_literals" (formula "68") (term "0,0"))
                                                                                        (builtin "One Step Simplification" (formula "68"))
                                                                                       (rule "eqSymm" (formula "68"))
                                                                                       (rule "close" (formula "68") (ifseqformula "1"))
                                                                                    )
                                                                                 )
                                                                              )
                                                                              (branch "CUT: self.sorted_splitters[b_bin] >= value FALSE"
                                                                                  (builtin "One Step Simplification" (formula "18"))
                                                                                 (rule "inEqSimp_geqRight" (formula "69"))
                                                                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                                 (rule "applyEq" (formula "48") (term "1,1,0,0") (ifseqformula "19"))
                                                                                 (rule "applyEq" (formula "59") (term "0") (ifseqformula "19"))
                                                                                 (rule "inEqSimp_commuteGeq" (formula "59"))
                                                                                 (rule "applyEq" (formula "46") (term "1,1,1,0,0,0") (ifseqformula "19"))
                                                                                 (rule "polySimp_addAssoc" (formula "46") (term "1,1,0,0,0"))
                                                                                 (rule "add_literals" (formula "46") (term "0,1,1,0,0,0"))
                                                                                 (rule "applyEq" (formula "42") (term "0") (ifseqformula "19"))
                                                                                 (rule "inEqSimp_homoInEq0" (formula "42"))
                                                                                 (rule "polySimp_mulComm0" (formula "42") (term "1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "42") (term "1,0"))
                                                                                 (rule "mul_literals" (formula "42") (term "0,1,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                                                 (rule "add_literals" (formula "42") (term "0,0"))
                                                                                 (rule "applyEq" (formula "47") (term "1,1,1,0,0,0,0,1,0") (ifseqformula "19"))
                                                                                 (rule "polySimp_addAssoc" (formula "47") (term "1,1,0,0,0,0,1,0"))
                                                                                 (rule "add_literals" (formula "47") (term "0,1,1,0,0,0,0,1,0"))
                                                                                 (rule "applyEq" (formula "37") (term "0") (ifseqformula "19"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "37"))
                                                                                 (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                                                                                 (rule "mul_literals" (formula "37") (term "0,1,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "37") (term "0"))
                                                                                 (rule "add_literals" (formula "37") (term "0,0"))
                                                                                 (rule "applyEq" (formula "49") (term "1,1,0,0") (ifseqformula "19"))
                                                                                 (rule "applyEq" (formula "40") (term "1") (ifseqformula "19"))
                                                                                 (rule "applyEq" (formula "45") (term "1,3,0") (ifseqformula "19"))
                                                                                 (rule "polySimp_addAssoc" (formula "45") (term "3,0"))
                                                                                 (rule "add_literals" (formula "45") (term "0,3,0"))
                                                                                 (rule "add_zero_left" (formula "45") (term "3,0"))
                                                                                 (rule "applyEq" (formula "47") (term "1,1,1,0,0,0,0") (ifseqformula "19"))
                                                                                 (rule "polySimp_addAssoc" (formula "47") (term "1,1,0,0,0,0"))
                                                                                 (rule "add_literals" (formula "47") (term "0,1,1,0,0,0,0"))
                                                                                 (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "19"))
                                                                                 (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                                                 (rule "add_literals" (formula "31") (term "0,0,0"))
                                                                                 (rule "applyEq" (formula "44") (term "1") (ifseqformula "19"))
                                                                                 (rule "applyEq" (formula "17") (term "0") (ifseqformula "19"))
                                                                                 (rule "inEqSimp_homoInEq1" (formula "17"))
                                                                                 (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                                                                                 (rule "add_literals" (formula "17") (term "1,0"))
                                                                                 (rule "times_zero_1" (formula "17") (term "0"))
                                                                                 (rule "leq_literals" (formula "17"))
                                                                                 (rule "true_left" (formula "17"))
                                                                                 (rule "applyEq" (formula "35") (term "1") (ifseqformula "18"))
                                                                                 (rule "applyEq" (formula "47") (term "0,1,0,0,1,1,1,0") (ifseqformula "18"))
                                                                                 (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,1,1,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "47") (term "1,0,0,1,1,1,0"))
                                                                                 (rule "mul_literals" (formula "47") (term "0,1,0,0,1,1,1,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,1,1,0"))
                                                                                 (rule "add_literals" (formula "47") (term "0,0,0,1,1,1,0"))
                                                                                 (rule "add_zero_left" (formula "47") (term "0,0,1,1,1,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                                                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                                 (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                                                                                 (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "41") (term "0"))
                                                                                 (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                                                                                 (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "36") (term "0"))
                                                                                 (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "36"))
                                                                                 (rule "leq_literals" (formula "9") (term "0"))
                                                                                  (builtin "One Step Simplification" (formula "9"))
                                                                                 (rule "true_left" (formula "9"))
                                                                                 (rule "polyDiv_pullOut" (formula "29") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                                                                 (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,2,0"))
                                                                                 (rule "equal_literals" (formula "29") (term "0,0"))
                                                                                  (builtin "One Step Simplification" (formula "29"))
                                                                                 (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                                                                                 (rule "add_literals" (formula "29") (term "0,0,0,0"))
                                                                                 (rule "polySimp_addComm0" (formula "29") (term "0"))
                                                                                 (rule "polySimp_sepPosMonomial" (formula "29"))
                                                                                 (rule "mul_literals" (formula "29") (term "1"))
                                                                                 (rule "inEqSimp_exactShadow0" (formula "20") (ifseqformula "56"))
                                                                                  (builtin "One Step Simplification" (formula "20"))
                                                                                 (rule "greater_literals" (formula "20") (term "0"))
                                                                                  (builtin "One Step Simplification" (formula "20"))
                                                                                 (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                                                                                 (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                                                 (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                                                                 (rule "mul_literals" (formula "20") (term "0,0,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                                                 (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                                                                 (rule "add_literals" (formula "20") (term "0,0,0"))
                                                                                 (rule "add_zero_left" (formula "20") (term "0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                                                 (rule "polySimp_mulLiterals" (formula "20") (term "1"))
                                                                                 (rule "elimGcdGeq_antec" (formula "20") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=b_bin") (inst "elimGcdRightDiv=b"))
                                                                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                                                                                 (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                                                                                 (rule "leq_literals" (formula "20") (term "0,0"))
                                                                                  (builtin "One Step Simplification" (formula "20"))
                                                                                 (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                                                                 (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                                                 (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                                                 (rule "add_zero_right" (formula "20") (term "0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                                                 (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                                                                 (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                                                 (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                                                 (rule "add_zero_right" (formula "20") (term "0,0"))
                                                                                 (rule "leq_literals" (formula "20") (term "0"))
                                                                                  (builtin "One Step Simplification" (formula "20"))
                                                                                 (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "37"))
                                                                                 (rule "polySimp_rightDist" (formula "39") (term "0,0"))
                                                                                 (rule "mul_literals" (formula "39") (term "0,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "39") (term "0"))
                                                                                 (rule "add_literals" (formula "39") (term "0,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                                                                 (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "39") (term "0"))
                                                                                 (rule "inEqSimp_exactShadow2" (formula "50") (ifseqformula "57"))
                                                                                 (rule "mul_literals" (formula "50") (term "1,0,0,1"))
                                                                                 (rule "greater_literals" (formula "50") (term "0"))
                                                                                  (builtin "One Step Simplification" (formula "50"))
                                                                                 (rule "mul_literals" (formula "50") (term "0,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "50") (term "0"))
                                                                                 (rule "add_literals" (formula "50") (term "0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial1" (formula "50"))
                                                                                 (rule "mul_literals" (formula "50") (term "1"))
                                                                                 (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "40"))
                                                                                 (rule "polySimp_rightDist" (formula "42") (term "0,0"))
                                                                                 (rule "mul_literals" (formula "42") (term "0,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "42") (term "0"))
                                                                                 (rule "add_literals" (formula "42") (term "0,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                                                                 (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                                                 (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "15"))
                                                                                 (rule "polySimp_mulComm0" (formula "20") (term "0,0"))
                                                                                 (rule "polySimp_addComm0" (formula "20") (term "0"))
                                                                                 (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                                                                 (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                                                 (rule "inEqSimp_subsumption0" (formula "20") (ifseqformula "19"))
                                                                                 (rule "leq_literals" (formula "20") (term "0"))
                                                                                  (builtin "One Step Simplification" (formula "20"))
                                                                                 (rule "true_left" (formula "20"))
                                                                                 (rule "cut_direct" (formula "16") (term "1"))
                                                                                 (branch "CUT: self.sorted_splitters[l_0 * -4 + b_bin] <= -1 + value TRUE"
                                                                                     (builtin "One Step Simplification" (formula "17"))
                                                                                    (rule "true_left" (formula "17"))
                                                                                    (rule "jdiv_axiom" (formula "71") (term "0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                                                                                    (rule "eqSymm" (formula "1"))
                                                                                    (rule "elimGcdGeq" (formula "1") (term "0,0") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "1") (term "0,0,0,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "0,0,0,1,0,0,0"))
                                                                                    (rule "sub_literals" (formula "1") (term "0,0,0,0,0,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,0,0"))
                                                                                    (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "1") (term "0,1,0,0,0"))
                                                                                    (rule "add_literals" (formula "1") (term "1,0,1,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "0,1,0,0,0"))
                                                                                    (rule "leq_literals" (formula "1") (term "1,0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0,0,0"))
                                                                                    (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                                                                    (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "polyDiv_pullOut" (formula "1") (term "1,0") (inst "polyDivCoeff=l_0"))
                                                                                    (rule "equal_literals" (formula "1") (term "0,1,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,1,0"))
                                                                                    (rule "add_literals" (formula "1") (term "1,0,0,1,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "0,0,1,0"))
                                                                                    (rule "div_literals" (formula "1") (term "0,1,0"))
                                                                                    (rule "add_zero_left" (formula "1") (term "1,0"))
                                                                                    (rule "polyDiv_pullOut" (formula "1") (term "0,2,0") (inst "polyDivCoeff=mul(l_0, Z(neglit(1(#))))"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,2,0,2,0"))
                                                                                    (rule "equal_literals" (formula "1") (term "0,0,2,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,2,0"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "1") (term "0,0,0,2,0"))
                                                                                    (rule "add_literals" (formula "1") (term "1,0,0,0,2,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "0,0,0,2,0"))
                                                                                    (rule "div_literals" (formula "1") (term "0,0,2,0"))
                                                                                    (rule "add_zero_left" (formula "1") (term "0,2,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "2,0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "2,0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "eqSymm" (formula "1"))
                                                                                    (rule "close" (formula "72") (ifseqformula "1"))
                                                                                 )
                                                                                 (branch "CUT: self.sorted_splitters[l_0 * -4 + b_bin] <= -1 + value FALSE"
                                                                                     (builtin "One Step Simplification" (formula "16"))
                                                                                    (rule "inEqSimp_leqRight" (formula "68"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                                    (rule "applyEq" (formula "43") (term "1,1") (ifseqformula "17"))
                                                                                    (rule "polySimp_addAssoc" (formula "43") (term "1"))
                                                                                    (rule "add_literals" (formula "43") (term "0,1"))
                                                                                    (rule "add_zero_left" (formula "43") (term "1"))
                                                                                    (rule "applyEq" (formula "60") (term "1,0,2,0") (ifseqformula "17"))
                                                                                    (rule "polySimp_addAssoc" (formula "60") (term "0,2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "60") (term "0,0,2,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "60") (term "0,2,0"))
                                                                                    (rule "add_literals" (formula "60") (term "1,1,0,2,0"))
                                                                                    (rule "applyEq" (formula "21") (term "0") (ifseqformula "17"))
                                                                                    (rule "inEqSimp_commuteGeq" (formula "21"))
                                                                                    (rule "applyEq" (formula "31") (term "1,0,0") (ifseqformula "17"))
                                                                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                                                    (rule "add_literals" (formula "31") (term "0,0,0"))
                                                                                    (rule "applyEq" (formula "47") (term "1,1,1,0,0") (ifseqformula "17"))
                                                                                    (rule "polySimp_addAssoc" (formula "47") (term "1,1,0,0"))
                                                                                    (rule "add_literals" (formula "47") (term "0,1,1,0,0"))
                                                                                    (rule "add_zero_left" (formula "47") (term "1,1,0,0"))
                                                                                    (rule "applyEq" (formula "46") (term "1,1,1,0,0,0,0,1,0") (ifseqformula "17"))
                                                                                    (rule "polySimp_addAssoc" (formula "46") (term "1,1,0,0,0,0,1,0"))
                                                                                    (rule "add_literals" (formula "46") (term "0,1,1,0,0,0,0,1,0"))
                                                                                    (rule "applyEq" (formula "1") (term "1,0,2,1,0") (ifseqformula "17"))
                                                                                    (rule "polySimp_addAssoc" (formula "1") (term "0,2,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0,0,2,1,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,2,1,0"))
                                                                                    (rule "add_literals" (formula "1") (term "1,1,0,2,1,0"))
                                                                                    (rule "times_zero_1" (formula "1") (term "1,0,2,1,0"))
                                                                                    (rule "add_zero_right" (formula "1") (term "0,2,1,0"))
                                                                                    (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "17"))
                                                                                    (rule "applyEq" (formula "40") (term "1,1") (ifseqformula "17"))
                                                                                    (rule "polySimp_addAssoc" (formula "40") (term "1"))
                                                                                    (rule "add_literals" (formula "40") (term "0,1"))
                                                                                    (rule "add_zero_left" (formula "40") (term "1"))
                                                                                    (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "16"))
                                                                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                                                                    (rule "mul_literals" (formula "16") (term "0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                                                    (rule "add_literals" (formula "16") (term "0,0"))
                                                                                    (rule "applyEq" (formula "58") (term "1,1") (ifseqformula "17"))
                                                                                    (rule "polySimp_addAssoc" (formula "58") (term "1"))
                                                                                    (rule "add_literals" (formula "58") (term "0,1"))
                                                                                    (rule "add_zero_left" (formula "58") (term "1"))
                                                                                    (rule "applyEq" (formula "15") (term "0") (ifseqformula "17"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "15"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                                                                                    (rule "add_literals" (formula "15") (term "1,0"))
                                                                                    (rule "times_zero_1" (formula "15") (term "0"))
                                                                                    (rule "leq_literals" (formula "15"))
                                                                                    (rule "true_left" (formula "15"))
                                                                                    (rule "applyEq" (formula "43") (term "3,0") (ifseqformula "16"))
                                                                                    (rule "applyEq" (formula "44") (term "1,1,1,0,0,0") (ifseqformula "16"))
                                                                                    (rule "polySimp_addAssoc" (formula "44") (term "1,1,0,0,0"))
                                                                                    (rule "add_literals" (formula "44") (term "0,1,1,0,0,0"))
                                                                                    (rule "applyEq" (formula "45") (term "1,1,1,0,0,0,0") (ifseqformula "16"))
                                                                                    (rule "polySimp_addAssoc" (formula "45") (term "1,1,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "45") (term "0,1,1,0,0,0,0"))
                                                                                    (rule "applyEq" (formula "47") (term "1,1,1,0,0") (ifseqformula "16"))
                                                                                    (rule "polySimp_addAssoc" (formula "47") (term "1,1,0,0"))
                                                                                    (rule "add_literals" (formula "47") (term "0,1,1,0,0"))
                                                                                    (rule "add_zero_left" (formula "47") (term "1,1,0,0"))
                                                                                    (rule "applyEq" (formula "36") (term "0") (ifseqformula "16"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "36"))
                                                                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                                                                    (rule "mul_literals" (formula "36") (term "0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "36") (term "0"))
                                                                                    (rule "add_literals" (formula "36") (term "0,0"))
                                                                                    (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "16"))
                                                                                    (rule "polySimp_addAssoc" (formula "25") (term "1"))
                                                                                    (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                                                                                    (rule "add_literals" (formula "25") (term "0,0,1"))
                                                                                    (rule "add_zero_left" (formula "25") (term "0,1"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "25") (term "1"))
                                                                                    (rule "add_literals" (formula "25") (term "1,1"))
                                                                                    (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "16"))
                                                                                    (rule "polySimp_addAssoc" (formula "35") (term "1"))
                                                                                    (rule "add_literals" (formula "35") (term "0,1"))
                                                                                    (rule "add_zero_left" (formula "35") (term "1"))
                                                                                    (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "16"))
                                                                                    (rule "polySimp_addAssoc" (formula "17") (term "1"))
                                                                                    (rule "add_literals" (formula "17") (term "0,1"))
                                                                                    (rule "add_zero_left" (formula "17") (term "1"))
                                                                                    (rule "applyEq" (formula "23") (term "0,1,0,1") (ifseqformula "16"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1"))
                                                                                    (rule "add_literals" (formula "23") (term "1,0,1"))
                                                                                    (rule "times_zero_1" (formula "23") (term "0,1"))
                                                                                    (rule "add_zero_left" (formula "23") (term "1"))
                                                                                    (rule "applyEq" (formula "46") (term "0,0,0,1,1,1,0") (ifseqformula "16"))
                                                                                    (rule "polySimp_mulComm0" (formula "46") (term "0,0,1,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "46") (term "0,0,1,1,1,0"))
                                                                                    (rule "mul_literals" (formula "46") (term "0,0,0,1,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,1,1,1,0"))
                                                                                    (rule "applyEq" (formula "64") (term "0,1,0,0,1") (ifseqformula "16"))
                                                                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,1"))
                                                                                    (rule "mul_literals" (formula "64") (term "0,1,0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "64") (term "0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "64") (term "0,0,0,1"))
                                                                                    (rule "add_literals" (formula "64") (term "0,0,0,0,1"))
                                                                                    (rule "add_zero_left" (formula "64") (term "0,0,0,1"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "64") (term "0,0,1"))
                                                                                    (rule "add_literals" (formula "64") (term "1,0,0,1"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                                                    (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "36"))
                                                                                    (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                                                                                    (rule "inEqSimp_subsumption4" (formula "15") (ifseqformula "10"))
                                                                                    (rule "mul_literals" (formula "15") (term "0,1,0"))
                                                                                    (rule "greater_literals" (formula "15") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "15"))
                                                                                    (rule "leq_literals" (formula "15") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "15"))
                                                                                    (rule "true_left" (formula "15"))
                                                                                    (rule "elimGcdEq" (formula "22") (inst "elimGcd=Z(4(#))") (inst "elimGcdLeftDiv=mul(l_0, pow(Z(2(#)), l))") (inst "elimGcdRightDiv=mul(l_0, b)"))
                                                                                    (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                                                                                    (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "22") (term "0,1,0,1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "0,0,0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "22"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "22") (term "0,1,0"))
                                                                                    (rule "add_literals" (formula "22") (term "1,0,1,0"))
                                                                                    (rule "times_zero_1" (formula "22") (term "0,1,0"))
                                                                                    (rule "qeq_literals" (formula "22") (term "1,0"))
                                                                                     (builtin "One Step Simplification" (formula "22"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "22") (term "0,0,1"))
                                                                                    (rule "add_literals" (formula "22") (term "1,0,0,1"))
                                                                                    (rule "times_zero_1" (formula "22") (term "0,0,1"))
                                                                                     (builtin "One Step Simplification" (formula "22"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "22") (term "0,0"))
                                                                                    (rule "add_literals" (formula "22") (term "1,0,0"))
                                                                                    (rule "times_zero_1" (formula "22") (term "0,0"))
                                                                                    (rule "leq_literals" (formula "22") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "22"))
                                                                                    (rule "polyDiv_pullOut" (formula "29") (term "0") (inst "polyDivCoeff=Z(neglit(1(#)))"))
                                                                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,2,0"))
                                                                                    (rule "equal_literals" (formula "29") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "29"))
                                                                                    (rule "mul_literals" (formula "29") (term "1,0,0,0"))
                                                                                    (rule "polySimp_homoEq" (formula "29"))
                                                                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "29") (term "0,0,1,1,0"))
                                                                                    (rule "add_literals" (formula "29") (term "0,0,0,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "29") (term "1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                                                    (rule "mul_literals" (formula "29") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                                                    (rule "add_literals" (formula "29") (term "0,0"))
                                                                                    (rule "add_zero_left" (formula "29") (term "0"))
                                                                                    (rule "polySimp_invertEq" (formula "29"))
                                                                                    (rule "times_zero_2" (formula "29") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                                    (rule "elimGcdGeq_antec" (formula "35") (inst "elimGcd=Z(4(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(1(#))"))
                                                                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,0,1,0"))
                                                                                    (rule "leq_literals" (formula "35") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                                    (rule "mul_literals" (formula "35") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_addLiterals" (formula "35") (term "0,0,0,0"))
                                                                                    (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                                                                                    (rule "add_literals" (formula "35") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "35") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "35") (term "0,0"))
                                                                                    (rule "leq_literals" (formula "35") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "35"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "35"))
                                                                                    (rule "leq_literals" (formula "11") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "11"))
                                                                                    (rule "true_left" (formula "11"))
                                                                                    (rule "elimGcdLeq_antec" (formula "55") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=pow(Z(2(#)), l)") (inst "elimGcdRightDiv=mul(l_0, Z(2(#)))"))
                                                                                    (rule "polySimp_mulLiterals" (formula "55") (term "1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,1,0"))
                                                                                    (rule "neg_literal" (formula "55") (term "0,0,0,0,0,1,0"))
                                                                                    (rule "leq_literals" (formula "55") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "55"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "55") (term "0,0"))
                                                                                    (rule "add_literals" (formula "55") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "55") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "55") (term "0,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "55") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "55") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "55") (term "0,0"))
                                                                                    (rule "add_literals" (formula "55") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "55") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "55") (term "0,0"))
                                                                                    (rule "qeq_literals" (formula "55") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "55"))
                                                                                    (rule "cancel_equation" (formula "21"))
                                                                                    (branch "Case 1"
                                                                                       (rule "applyEq" (formula "16") (term "0") (ifseqformula "21"))
                                                                                       (rule "inEqSimp_homoInEq0" (formula "16"))
                                                                                       (rule "polySimp_pullOutFactor1" (formula "16") (term "0"))
                                                                                       (rule "add_literals" (formula "16") (term "1,0"))
                                                                                       (rule "times_zero_1" (formula "16") (term "0"))
                                                                                       (rule "qeq_literals" (formula "16"))
                                                                                       (rule "true_left" (formula "16"))
                                                                                       (rule "applyEq" (formula "59") (term "0,1") (ifseqformula "20"))
                                                                                       (rule "applyEq" (formula "47") (term "0") (ifseqformula "20"))
                                                                                       (rule "applyEq" (formula "52") (term "0") (ifseqformula "20"))
                                                                                       (rule "applyEq" (formula "53") (term "0") (ifseqformula "20"))
                                                                                       (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                                                                       (rule "inEqSimp_homoInEq1" (formula "18"))
                                                                                       (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                                                                       (rule "add_literals" (formula "18") (term "1,1,0"))
                                                                                       (rule "applyEq" (formula "50") (term "0,1") (ifseqformula "20"))
                                                                                       (rule "applyEq" (formula "48") (term "0,1") (ifseqformula "20"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                                                                       (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                                                       (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "51"))
                                                                                       (rule "leq_literals" (formula "16") (term "0"))
                                                                                        (builtin "One Step Simplification" (formula "16"))
                                                                                       (rule "true_left" (formula "16"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "32"))
                                                                                       (rule "polySimp_mulAssoc" (formula "34") (term "0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "34") (term "0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "34") (term "0,0"))
                                                                                       (rule "polySimp_addComm0" (formula "34") (term "0"))
                                                                                       (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                                                       (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                                                       (rule "inEqSimp_subsumption4" (formula "34") (ifseqformula "10"))
                                                                                       (rule "mul_literals" (formula "34") (term "0,1,0"))
                                                                                       (rule "greater_literals" (formula "34") (term "0,0"))
                                                                                        (builtin "One Step Simplification" (formula "34"))
                                                                                       (rule "leq_literals" (formula "34") (term "0"))
                                                                                        (builtin "One Step Simplification" (formula "34"))
                                                                                       (rule "true_left" (formula "34"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "35"))
                                                                                       (rule "polySimp_mulAssoc" (formula "37") (term "0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "37") (term "0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "37") (term "0,0"))
                                                                                       (rule "polySimp_addComm0" (formula "37") (term "0"))
                                                                                       (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                                                                       (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                                                       (rule "inEqSimp_subsumption4" (formula "37") (ifseqformula "10"))
                                                                                       (rule "mul_literals" (formula "37") (term "0,1,0"))
                                                                                       (rule "greater_literals" (formula "37") (term "0,0"))
                                                                                        (builtin "One Step Simplification" (formula "37"))
                                                                                       (rule "leq_literals" (formula "37") (term "0"))
                                                                                        (builtin "One Step Simplification" (formula "37"))
                                                                                       (rule "true_left" (formula "37"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "16"))
                                                                                       (rule "mul_literals" (formula "44") (term "0,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "44") (term "0"))
                                                                                       (rule "add_literals" (formula "44") (term "0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                                                       (rule "mul_literals" (formula "44") (term "1"))
                                                                                       (rule "inEqSimp_subsumption6" (formula "44") (ifseqformula "31"))
                                                                                       (rule "mul_literals" (formula "44") (term "1,1,0"))
                                                                                       (rule "greater_literals" (formula "44") (term "0,0"))
                                                                                        (builtin "One Step Simplification" (formula "44"))
                                                                                       (rule "leq_literals" (formula "44") (term "0"))
                                                                                        (builtin "One Step Simplification" (formula "44"))
                                                                                       (rule "true_left" (formula "44"))
                                                                                       (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "51"))
                                                                                       (rule "mul_literals" (formula "44") (term "0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial1" (formula "44"))
                                                                                       (rule "mul_literals" (formula "44") (term "1"))
                                                                                       (rule "inEqSimp_subsumption6" (formula "44") (ifseqformula "31"))
                                                                                       (rule "mul_literals" (formula "44") (term "1,1,0"))
                                                                                       (rule "greater_literals" (formula "44") (term "0,0"))
                                                                                        (builtin "One Step Simplification" (formula "44"))
                                                                                       (rule "leq_literals" (formula "44") (term "0"))
                                                                                        (builtin "One Step Simplification" (formula "44"))
                                                                                       (rule "true_left" (formula "44"))
                                                                                       (rule "jdiv_axiom" (formula "65") (term "0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "1") (term "0,0,2,1"))
                                                                                       (rule "eqSymm" (formula "1"))
                                                                                       (rule "inEqSimp_subsumption6" (formula "1") (term "0,0") (ifseqformula "32"))
                                                                                       (rule "mul_literals" (formula "1") (term "1,1,0,0,0"))
                                                                                       (rule "greater_literals" (formula "1") (term "0,0,0,0"))
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "leq_literals" (formula "1") (term "0,0,0"))
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "eqSymm" (formula "1"))
                                                                                       (rule "applyEqRigid" (formula "66") (term "0") (ifseqformula "1"))
                                                                                       (rule "polyDiv_pullOut" (formula "66") (term "0") (inst "polyDivCoeff=l_0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "66") (term "1,0,0,2,0"))
                                                                                       (rule "equal_literals" (formula "66") (term "0,0"))
                                                                                        (builtin "One Step Simplification" (formula "66"))
                                                                                       (rule "polySimp_homoEq" (formula "66"))
                                                                                       (rule "polySimp_pullOutFactor0" (formula "66") (term "0,0,0,1,0"))
                                                                                       (rule "add_literals" (formula "66") (term "1,0,0,0,1,0"))
                                                                                       (rule "times_zero_1" (formula "66") (term "0,0,0,1,0"))
                                                                                       (rule "div_literals" (formula "66") (term "0,0,1,0"))
                                                                                       (rule "add_zero_left" (formula "66") (term "0,1,0"))
                                                                                       (rule "polySimp_pullOutFactor1" (formula "66") (term "0"))
                                                                                       (rule "add_literals" (formula "66") (term "1,0"))
                                                                                       (rule "times_zero_1" (formula "66") (term "0"))
                                                                                        (builtin "One Step Simplification" (formula "66"))
                                                                                       (rule "closeTrue" (formula "66"))
                                                                                    )
                                                                                    (branch "Case 2"
                                                                                       (rule "notRight" (formula "66"))
                                                                                       (rule "applyEqRigid" (formula "56") (term "0,1") (ifseqformula "1"))
                                                                                       (rule "times_zero_2" (formula "56") (term "1"))
                                                                                       (rule "applyEqRigid" (formula "45") (term "0,1,1,0,0") (ifseqformula "1"))
                                                                                       (rule "times_zero_2" (formula "45") (term "1,1,0,0"))
                                                                                       (rule "applyEq" (formula "70") (term "0,0,0") (ifseqformula "1"))
                                                                                       (rule "times_zero_2" (formula "70") (term "0,0"))
                                                                                       (rule "jdiv_axiom_inline" (formula "70") (term "0"))
                                                                                       (rule "times_zero_2" (formula "70") (term "0,0,2,0"))
                                                                                       (rule "qeq_literals" (formula "70") (term "0,0"))
                                                                                        (builtin "One Step Simplification" (formula "70"))
                                                                                       (rule "div_literals" (formula "70") (term "0"))
                                                                                       (rule "eqSymm" (formula "70"))
                                                                                       (rule "close" (formula "70") (ifseqformula "1"))
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                               (branch "Case 2"
                                                                   (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "closeTrue" (formula "44"))
                                                               )
                                                            )
                                                            (branch "Precondition"
                                                               (rule "andRight" (formula "43"))
                                                               (branch "Case 1"
                                                                  (rule "andRight" (formula "43"))
                                                                  (branch "Case 1"
                                                                      (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "15")))
                                                                     (rule "closeTrue" (formula "43"))
                                                                  )
                                                                  (branch "Case 2"
                                                                      (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "2")))
                                                                     (rule "closeTrue" (formula "43"))
                                                                  )
                                                               )
                                                               (branch "Case 2"
                                                                  (rule "andRight" (formula "43"))
                                                                  (branch "Case 1"
                                                                     (rule "andRight" (formula "43"))
                                                                     (branch "Case 1"
                                                                         (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "42")))
                                                                        (rule "closeTrue" (formula "43"))
                                                                     )
                                                                     (branch "Case 2"
                                                                         (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "3")))
                                                                        (rule "closeTrue" (formula "43"))
                                                                     )
                                                                  )
                                                                  (branch "Case 2"
                                                                      (builtin "One Step Simplification" (formula "43") (ifInst ""  (formula "4")))
                                                                     (rule "closeTrue" (formula "43"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "Usage"
                                                                (builtin "One Step Simplification" (formula "42"))
                                                                (builtin "One Step Simplification" (formula "44"))
                                                               (rule "andLeft" (formula "42"))
                                                               (rule "andLeft" (formula "42"))
                                                               (rule "translateJavaDivInt" (formula "43") (term "1"))
                                                               (rule "translateJavaSubInt" (formula "43") (term "0,1,0"))
                                                               (rule "replace_known_left" (formula "44") (term "0") (ifseqformula "42"))
                                                                (builtin "One Step Simplification" (formula "44"))
                                                               (rule "true_left" (formula "44"))
                                                               (rule "polySimp_elimSub" (formula "43") (term "1,0"))
                                                               (rule "polySimp_elimSub" (formula "43") (term "0,1,0"))
                                                               (rule "mul_literals" (formula "43") (term "1,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "43") (term "0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "43") (term "1,0"))
                                                               (rule "applyEq" (formula "41") (term "1,0") (ifseqformula "43"))
                                                               (rule "applyEq" (formula "41") (term "0,2,0") (ifseqformula "43"))
                                                               (rule "elim_double_block_2" (formula "45") (term "1"))
                                                               (rule "ifUnfold" (formula "45") (term "1") (inst "#boolv=x"))
                                                               (rule "variableDeclaration" (formula "45") (term "1") (newnames "x_13"))
                                                               (rule "inequality_comparison_simple" (formula "45") (term "1"))
                                                                (builtin "One Step Simplification" (formula "45"))
                                                               (rule "replace_known_left" (formula "45") (term "0,0,1,0") (ifseqformula "42"))
                                                                (builtin "One Step Simplification" (formula "45"))
                                                               (rule "ifSplit" (formula "45"))
                                                               (branch "if x_13 true"
                                                                   (builtin "One Step Simplification" (formula "46"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                               (branch "if x_13 false"
                                                                   (builtin "One Step Simplification" (formula "46"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "true_left" (formula "1"))
                                                                  (rule "blockEmpty" (formula "45") (term "1"))
                                                                  (rule "emptyStatement" (formula "45") (term "1"))
                                                                  (rule "blockEmpty" (formula "45") (term "1"))
                                                                  (rule "methodCallReturn" (formula "45") (term "1"))
                                                                  (rule "assignment" (formula "45") (term "1"))
                                                                   (builtin "One Step Simplification" (formula "45"))
                                                                  (rule "methodCallEmpty" (formula "45") (term "1"))
                                                                  (rule "tryEmpty" (formula "45") (term "1"))
                                                                  (rule "emptyModality" (formula "45") (term "1"))
                                                                  (rule "andRight" (formula "45"))
                                                                  (branch "Case 1"
                                                                     (rule "andRight" (formula "45"))
                                                                     (branch "Case 1"
                                                                        (rule "andRight" (formula "45"))
                                                                        (branch "Case 1"
                                                                            (builtin "One Step Simplification" (formula "45"))
                                                                           (rule "Definition_axiom_for_treeSearchInvariant_in_de_wiesler_Tree" (formula "45") (term "0") (userinteraction))
                                                                            (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "35")))
                                                                           (rule "andRight" (formula "45"))
                                                                           (branch "Case 1"
                                                                              (rule "andRight" (formula "45"))
                                                                              (branch "Case 1"
                                                                                 (rule "andRight" (formula "45"))
                                                                                 (branch "Case 1"
                                                                                    (rule "inEqSimp_leqRight" (formula "45"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0"))
                                                                                    (rule "polySimp_homoEq" (formula "42"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "42") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                                    (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "20"))
                                                                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "0,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "42") (term "0"))
                                                                                    (rule "applyEq" (formula "1") (term "1,0,0") (ifseqformula "28"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "42"))
                                                                                    (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "36") (term "0,1,0,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,0,1,1,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                                                                                    (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,1,0,1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,0,1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,1,0,1,1"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,1,0,1,0,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1,0,1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,0,1,0,1,1"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "2"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                                                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "20") (term "0,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "20") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                                                                    (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "20") (term "0,0"))
                                                                                    (rule "qeq_literals" (formula "20") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "20"))
                                                                                    (rule "true_left" (formula "20"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "19"))
                                                                                    (rule "leq_literals" (formula "9") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                                    (rule "true_left" (formula "9"))
                                                                                    (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "21") (inst "i=i") (inst "i_0=i_0"))
                                                                                     (builtin "One Step Simplification" (formula "21"))
                                                                                    (rule "expand_inInt" (formula "21") (term "1,0,0,1,0"))
                                                                                    (rule "expand_inInt" (formula "21") (term "1,0,0,1"))
                                                                                    (rule "replace_int_MAX" (formula "21") (term "1,0,1,0,0,1,0"))
                                                                                    (rule "replace_int_MIN" (formula "21") (term "0,1,1,0,0,1,0"))
                                                                                    (rule "replace_int_MIN" (formula "21") (term "0,1,1,0,0,1"))
                                                                                    (rule "replace_int_MAX" (formula "21") (term "1,0,1,0,0,1"))
                                                                                    (rule "andLeft" (formula "21"))
                                                                                    (rule "andLeft" (formula "21"))
                                                                                    (rule "andLeft" (formula "21"))
                                                                                    (rule "andLeft" (formula "21"))
                                                                                    (rule "andLeft" (formula "21"))
                                                                                    (rule "andLeft" (formula "22"))
                                                                                    (rule "andLeft" (formula "21"))
                                                                                    (rule "andLeft" (formula "21"))
                                                                                    (rule "andLeft" (formula "21"))
                                                                                    (rule "andLeft" (formula "23"))
                                                                                    (rule "notLeft" (formula "22"))
                                                                                    (rule "notLeft" (formula "21"))
                                                                                    (rule "eqSymm" (formula "29") (term "1,0"))
                                                                                    (rule "translateJavaSubInt" (formula "27") (term "3,0"))
                                                                                    (rule "translateJavaShiftLeftInt" (formula "23") (term "1"))
                                                                                    (rule "translateJavaSubInt" (formula "29") (term "0,2,0,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "27") (term "3,0"))
                                                                                    (rule "mul_literals" (formula "27") (term "1,3,0"))
                                                                                    (rule "polySimp_elimSub" (formula "29") (term "0,2,0,1,0"))
                                                                                    (rule "mul_literals" (formula "29") (term "1,0,2,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "27") (term "3,0"))
                                                                                    (rule "polySimp_addComm0" (formula "29") (term "0,2,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "28") (term "1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "29") (term "1,1,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "28") (term "1,1,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "28") (term "0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "26"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "24"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "25"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "21"))
                                                                                    (rule "applyEq" (formula "26") (term "1") (ifseqformula "23"))
                                                                                    (rule "applyEq" (formula "24") (term "0") (ifseqformula "23"))
                                                                                    (rule "applyEq" (formula "25") (term "1") (ifseqformula "20"))
                                                                                    (rule "applyEq" (formula "23") (term "0") (ifseqformula "20"))
                                                                                    (rule "eqSymm" (formula "23"))
                                                                                    (rule "applyEq" (formula "27") (term "1,3,0") (ifseqformula "20"))
                                                                                    (rule "applyEq" (formula "28") (term "0,1,0,0,1,1,0") (ifseqformula "20"))
                                                                                    (rule "applyEq" (formula "28") (term "0,1,0,0,1,0,0,0") (ifseqformula "20"))
                                                                                    (rule "applyEq" (formula "29") (term "0,1,0,0,1,0,0,0") (ifseqformula "20"))
                                                                                    (rule "applyEq" (formula "26") (term "1") (ifseqformula "23"))
                                                                                    (rule "applyEq" (formula "24") (term "0") (ifseqformula "23"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "28") (term "1,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "28") (term "1,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,1,0"))
                                                                                    (rule "mul_literals" (formula "28") (term "0,1,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,1,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0"))
                                                                                    (rule "javaShiftLeftIntDef" (formula "23") (term "0"))
                                                                                    (rule "mod_axiom" (formula "23") (term "1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0"))
                                                                                    (rule "shiftLeftDef" (formula "23") (term "0,0"))
                                                                                    (rule "polySimp_elimNeg" (formula "23") (term "1,1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "23") (term "0,1,1,0,0"))
                                                                                    (rule "shiftLeftPositiveShiftDef" (formula "23") (term "2,0,0"))
                                                                                    (rule "polySimp_elimOneLeft0" (formula "23") (term "2,0,0"))
                                                                                    (rule "shiftRightPositiveShiftDef" (formula "23") (term "1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                                                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "22"))
                                                                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                    (rule "add_literals" (formula "2") (term "0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                    (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "2"))
                                                                                    (rule "leq_literals" (formula "9") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                                    (rule "true_left" (formula "9"))
                                                                                    (rule "nnf_imp2or" (formula "28") (term "0"))
                                                                                    (rule "nnf_imp2or" (formula "29") (term "0"))
                                                                                    (rule "expand_moduloInteger" (formula "23") (term "0"))
                                                                                    (rule "replace_int_RANGE" (formula "23") (term "1,1,0"))
                                                                                    (rule "replace_int_MIN" (formula "23") (term "0,0"))
                                                                                    (rule "replace_int_HALFRANGE" (formula "23") (term "0,0,1,0"))
                                                                                    (rule "polySimp_homoEq" (formula "23"))
                                                                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                                                    (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "23"))
                                                                                    (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                                                    (rule "nnf_notAnd" (formula "28") (term "0,0"))
                                                                                    (rule "nnf_notAnd" (formula "29") (term "0,0"))
                                                                                    (rule "nnf_notAnd" (formula "28") (term "1,0,0"))
                                                                                    (rule "inEqSimp_notGeq" (formula "28") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "28") (term "1,0,0,1,1,0,0"))
                                                                                    (rule "add_literals" (formula "28") (term "0,0,1,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "28") (term "1,1,1,0,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "28") (term "0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "28") (term "1,0,0,0,1,0,0"))
                                                                                    (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "28") (term "1,0,1,0,0"))
                                                                                    (rule "nnf_notAnd" (formula "28") (term "0,0,0"))
                                                                                    (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
                                                                                    (rule "add_zero_left" (formula "28") (term "0,0,0,0,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0"))
                                                                                    (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0"))
                                                                                    (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                                                                                    (rule "nnf_notAnd" (formula "29") (term "1,0,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "29") (term "0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "29") (term "1,0,0,0,1,0,0"))
                                                                                    (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "29") (term "1,0,1,0,0"))
                                                                                    (rule "inEqSimp_notGeq" (formula "29") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "29") (term "1,0,0,1,1,0,0"))
                                                                                    (rule "add_literals" (formula "29") (term "0,0,1,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "29") (term "1,1,1,0,0"))
                                                                                    (rule "nnf_notAnd" (formula "29") (term "0,0,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0"))
                                                                                    (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0"))
                                                                                    (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                                                                                    (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "29") (term "1,0,0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "29") (term "0,0,0,0,0,0"))
                                                                                    (rule "add_zero_left" (formula "29") (term "0,0,0,0,0"))
                                                                                    (rule "Definition_axiom_for_treeSearchInvariant_in_de_wiesler_Tree" (formula "17") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "17"))
                                                                                    (rule "andLeft" (formula "17"))
                                                                                    (rule "andLeft" (formula "17"))
                                                                                    (rule "andLeft" (formula "17"))
                                                                                    (rule "andLeft" (formula "17"))
                                                                                    (rule "eqSymm" (formula "21") (term "0"))
                                                                                    (rule "eqSymm" (formula "21") (term "1"))
                                                                                    (rule "eqSymm" (formula "20") (term "1"))
                                                                                    (rule "translateJavaAddInt" (formula "18") (term "1,1"))
                                                                                    (rule "translateJavaSubInt" (formula "20") (term "0,1"))
                                                                                    (rule "translateJavaSubInt" (formula "20") (term "1,1"))
                                                                                    (rule "translateJavaDivInt" (formula "20") (term "1,1,1"))
                                                                                    (rule "polySimp_elimSub" (formula "21") (term "0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "20") (term "0,1"))
                                                                                    (rule "mul_literals" (formula "20") (term "1,0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "20") (term "1,1"))
                                                                                    (rule "polySimp_homoEq" (formula "21") (term "1"))
                                                                                    (rule "polySimp_homoEq" (formula "20") (term "1"))
                                                                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "18") (term "1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "20") (term "1,1,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "21") (term "1,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "21") (term "1,1,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "21") (term "0,1,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,1"))
                                                                                    (rule "mul_literals" (formula "20") (term "0,1,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "21") (term "0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "21") (term "0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "20") (term "0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "20") (term "0,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "20") (term "0,0,0,1"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "20") (term "0"))
                                                                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "18"))
                                                                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                                                    (rule "applyEq" (formula "18") (term "0,1,0") (ifseqformula "38"))
                                                                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                                                                    (rule "applyEq" (formula "54") (term "0,1,0,1,0") (ifseqformula "19"))
                                                                                    (rule "polySimp_sepPosMonomial" (formula "21") (term "1"))
                                                                                    (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                                                                                    (rule "polySimp_mulAssoc" (formula "21") (term "0,1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "21") (term "0,1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "21") (term "0,1,1"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "20") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "20") (term "0,1"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "20") (term "0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "20") (term "0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "18"))
                                                                                    (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                                                    (rule "inEqSimp_contradEq7" (formula "21") (term "0") (ifseqformula "3"))
                                                                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                                                                    (rule "leq_literals" (formula "21") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "21"))
                                                                                    (rule "true_left" (formula "21"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "20") (term "0") (ifseqformula "3"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                                                                                    (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "20") (term "0,0,0"))
                                                                                    (rule "qeq_literals" (formula "20") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "20"))
                                                                                    (rule "applyEq" (formula "51") (term "0,0,1") (ifseqformula "20"))
                                                                                    (rule "polySimp_mulComm0" (formula "51") (term "0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "51") (term "0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "51") (term "1,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "51") (term "0,0,1"))
                                                                                    (rule "mul_literals" (formula "51") (term "0,0,0,1"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "17"))
                                                                                    (rule "mul_literals" (formula "35") (term "0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                                                    (rule "mul_literals" (formula "35") (term "1"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "35"))
                                                                                    (rule "leq_literals" (formula "8") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                                    (rule "true_left" (formula "8"))
                                                                                    (rule "inEqSimp_exactShadow1" (formula "17") (ifseqformula "16"))
                                                                                    (rule "greater_literals" (formula "17") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "17"))
                                                                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                                                                                    (rule "mul_literals" (formula "17") (term "0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "17") (term "0"))
                                                                                    (rule "add_literals" (formula "17") (term "1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "17") (term "1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                                                    (rule "mul_literals" (formula "17") (term "1"))
                                                                                    (rule "Definition_axiom_for_binarySearchInvariant_in_de_wiesler_Tree" (formula "15") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "15"))
                                                                                    (rule "andLeft" (formula "15"))
                                                                                    (rule "andLeft" (formula "15"))
                                                                                    (rule "andLeft" (formula "15"))
                                                                                    (rule "eqSymm" (formula "18") (term "0"))
                                                                                    (rule "translateJavaSubInt" (formula "17") (term "0,0"))
                                                                                    (rule "translateJavaSubInt" (formula "17") (term "0,2,0,1"))
                                                                                    (rule "translateJavaSubInt" (formula "15") (term "0"))
                                                                                    (rule "translateJavaSubInt" (formula "16") (term "1"))
                                                                                    (rule "translateJavaSubInt" (formula "18") (term "0,0"))
                                                                                    (rule "polySimp_elimSub" (formula "17") (term "0,0"))
                                                                                    (rule "polySimp_elimSub" (formula "17") (term "0,2,0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "15") (term "0"))
                                                                                    (rule "mul_literals" (formula "15") (term "1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "16") (term "1"))
                                                                                    (rule "mul_literals" (formula "16") (term "1,1"))
                                                                                    (rule "polySimp_elimSub" (formula "18") (term "0,0"))
                                                                                    (rule "mul_literals" (formula "18") (term "1,0,0"))
                                                                                    (rule "polySimp_homoEq" (formula "17") (term "0"))
                                                                                    (rule "polySimp_homoEq" (formula "18") (term "0"))
                                                                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "15") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "16") (term "1"))
                                                                                    (rule "polySimp_addComm0" (formula "18") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "17") (term "0,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "18") (term "0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "17") (term "1"))
                                                                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "18") (term "1"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "15"))
                                                                                    (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                                                    (rule "mul_literals" (formula "15") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "15") (term "0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "16"))
                                                                                    (rule "polySimp_addComm1" (formula "16") (term "0"))
                                                                                    (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "25"))
                                                                                    (rule "applyEq" (formula "18") (term "0,1,0,0") (ifseqformula "25"))
                                                                                    (rule "polySimp_sepPosMonomial" (formula "17") (term "0"))
                                                                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                                                                    (rule "mul_literals" (formula "17") (term "0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,0"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "18") (term "0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "18") (term "0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "18") (term "0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1"))
                                                                                    (rule "polySimp_mulComm0" (formula "17") (term "1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "17") (term "1,1"))
                                                                                    (rule "mul_literals" (formula "17") (term "0,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,1"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                                                    (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                                                    (rule "polySimp_mulComm0" (formula "16") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "16") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "16") (term "1,1"))
                                                                                    (rule "mul_literals" (formula "16") (term "0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "16") (term "1,1"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "15"))
                                                                                    (rule "mul_literals" (formula "11") (term "0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                                                                    (rule "add_literals" (formula "11") (term "0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                                                                    (rule "mul_literals" (formula "11") (term "1"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "9"))
                                                                                    (rule "leq_literals" (formula "11") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "11"))
                                                                                    (rule "true_left" (formula "11"))
                                                                                    (rule "Definition_axiom_for_piLemma_in_de_wiesler_Tree" (formula "52") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "52"))
                                                                                    (rule "andLeft" (formula "52"))
                                                                                    (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "35"))
                                                                                    (rule "true_left" (formula "35"))
                                                                                    (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "54") (term "1,1"))
                                                                                    (rule "translateJavaSubInt" (formula "54") (term "0,1,1,1,1"))
                                                                                    (rule "polySimp_elimSub" (formula "54") (term "1,0,0,1,1"))
                                                                                    (rule "polySimp_elimSub" (formula "54") (term "1,1,1,1"))
                                                                                    (rule "polySimp_elimSub" (formula "54") (term "0,1,1,1,1"))
                                                                                    (rule "mul_literals" (formula "54") (term "1,0,1,1,1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "54") (term "1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "54") (term "0,1,0,1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "54") (term "0,1,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1,1,1"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "1,1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "54") (term "0,0,1,1,1"))
                                                                                    (rule "polySimp_mulAssoc" (formula "54") (term "0,0,0,1,1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "54") (term "0,0,0,0,1,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "54") (term "0,0,0,1,1,1"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0,1,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "54") (term "0,0,1,1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "54") (term "1,1"))
                                                                                    (rule "polySimp_mulComm1" (formula "54") (term "1,1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "54") (term "0,1,1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "54") (term "0,1,1"))
                                                                                    (rule "polySimp_mulComm1" (formula "54") (term "1,0,1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "54") (term "0,1,0,1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "54") (term "0,0,1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "54") (term "0,0,0,1,1"))
                                                                                    (rule "polySimp_mulComm1" (formula "54") (term "1,0,0,1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "54") (term "0,1,0,0,1,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "54") (term "1"))
                                                                                    (rule "polySimp_addAssoc" (formula "54") (term "0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "54") (term "0,0,1"))
                                                                                    (rule "polySimp_homoEq" (formula "54"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0,0,0"))
                                                                                    (rule "applyEq" (formula "54") (term "1,1,0,1,0") (ifseqformula "47"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                                                    (rule "applyEq" (formula "54") (term "0,1,1,0,0,1,0") (ifseqformula "47"))
                                                                                    (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "54") (term "0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "54") (term "1,1,1,0,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "54") (term "0,1,1,1,0,1,0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "1,1,0,1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "54") (term "0,1,1,0,1,0,0,0"))
                                                                                    (rule "add_literals" (formula "54") (term "0,0,1,1,0,1,0,0,0"))
                                                                                    (rule "applyEq" (formula "54") (term "0,1,1,0,0,1,0") (ifseqformula "47"))
                                                                                    (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "54") (term "0,1,1,0,0,1,0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "1,0,0,1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "54") (term "0,1,0,0,1,0,0,0"))
                                                                                    (rule "add_literals" (formula "54") (term "0,0,1,0,0,1,0,0,0"))
                                                                                    (rule "applyEq" (formula "54") (term "0,1,1,0,0,1,0") (ifseqformula "47"))
                                                                                    (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                                                    (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "54") (term "0,1,1,0,0,1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "1,0,0,1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "54") (term "0,1,0,0,1,0,0,0"))
                                                                                    (rule "add_literals" (formula "54") (term "0,0,1,0,0,1,0,0,0"))
                                                                                    (rule "applyEq" (formula "54") (term "1,0,1,0") (ifseqformula "56"))
                                                                                    (rule "applyEq" (formula "54") (term "1,0,1,0,0") (ifseqformula "39"))
                                                                                    (rule "polySimp_mulAssoc" (formula "54") (term "0,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0"))
                                                                                    (rule "applyEq" (formula "54") (term "0,0,1,0,0") (ifseqformula "56"))
                                                                                    (rule "polySimp_mulComm0" (formula "54") (term "0,1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                                                                    (rule "applyEq" (formula "54") (term "0,0,1,0,0") (ifseqformula "56"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                                                                    (rule "applyEq" (formula "54") (term "0,1,1,1,0,0,0,0,0") (ifseqformula "47"))
                                                                                    (rule "polySimp_mulComm0" (formula "54") (term "1,1,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "54") (term "1,1,1,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "54") (term "0,1,1,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "54") (term "0,1,1,0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "54") (term "0,0,1,1,0,0,0,0,0"))
                                                                                    (rule "applyEq" (formula "54") (term "1,0,0,0,0,0") (ifseqformula "56"))
                                                                                    (rule "polySimp_sepPosMonomial" (formula "54"))
                                                                                    (rule "polySimp_mulComm0" (formula "54") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "54") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "54") (term "1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "54") (term "0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "54") (term "0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "54") (term "1,0,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "54") (term "0,0,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "54") (term "0,0,0,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "54") (term "0,0,0,0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0,0,0,1"))
                                                                                    (rule "mul_literals" (formula "54") (term "0,0,0,0,0,0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "54") (term "1,0,0,0,0,0,1"))
                                                                                    (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "32") (term "0") (inst "i=i") (inst "j=j"))
                                                                                     (builtin "One Step Simplification" (formula "32"))
                                                                                    (rule "expand_inInt" (formula "32") (term "1,0,0,1,0"))
                                                                                    (rule "expand_inInt" (formula "32") (term "1,0,0"))
                                                                                    (rule "replace_int_MAX" (formula "32") (term "1,0,1,0,0,1,0"))
                                                                                    (rule "replace_int_MIN" (formula "32") (term "0,1,1,0,0,1,0"))
                                                                                    (rule "replace_int_MAX" (formula "32") (term "1,0,1,0,0"))
                                                                                    (rule "replace_int_MIN" (formula "32") (term "0,1,1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0"))
                                                                                    (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,0,1,0"))
                                                                                    (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "32") (term "1,0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "32") (term "1,1,0,0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "32") (term "1,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0,1,0"))
                                                                                    (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "33") (term "0,0,1,0"))
                                                                                    (rule "translateJavaSubInt" (formula "33") (term "0,1,1,0,0,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "33") (term "1,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "33") (term "1,1,0,0,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "33") (term "0,1,1,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "33") (term "1,0,1,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "33") (term "0,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "33") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "33") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "33") (term "0,0,1,0"))
                                                                                    (rule "polySimp_mulComm1" (formula "33") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "33") (term "0,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "33") (term "0,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm1" (formula "33") (term "1,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0,0,1,0"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "33") (term "0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "33") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "33") (term "0,1,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "33") (term "0,0,1,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "33") (term "1,0,1,0,1,0"))
                                                                                    (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "33") (term "0,1,1,0"))
                                                                                    (rule "translateJavaSubInt" (formula "33") (term "0,1,1,0,1,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "33") (term "1,0,0,0,1,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "33") (term "1,1,0,1,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "33") (term "0,1,1,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "33") (term "1,0,1,1,0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "33") (term "0,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "33") (term "0,1,0,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "33") (term "0,1,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0,1,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "33") (term "1,0,1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "33") (term "0,1,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "33") (term "0,1,1,0"))
                                                                                    (rule "polySimp_mulComm1" (formula "33") (term "1,0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "33") (term "0,0,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "33") (term "0,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulComm1" (formula "33") (term "1,0,0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "33") (term "0,1,0,0,1,1,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "33") (term "1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "33") (term "0,1,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0,1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "33") (term "0,1,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "33") (term "1,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "33") (term "1,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "33") (term "0,1,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "33") (term "1,0,1,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "33") (term "0,0,1,1,1,0"))
                                                                                    (rule "mul_literals" (formula "33") (term "0,0,0,1,1,1,0"))
                                                                                    (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "34") (term "1,0,2,0,1,0"))
                                                                                    (rule "translateJavaSubInt" (formula "34") (term "0,1,1,1,0,2,0,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "34") (term "1,0,0,1,0,2,0,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "34") (term "0,1,1,1,0,2,0,1,0"))
                                                                                    (rule "mul_literals" (formula "34") (term "1,0,1,1,1,0,2,0,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "34") (term "1,1,1,0,2,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,2,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "34") (term "0,1,0,1,0,2,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "34") (term "0,1,1,0,2,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,0,1,1,0,2,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,1,0,2,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "34") (term "1,1,0,2,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "34") (term "0,1,1,0,2,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "34") (term "1,0,2,0,1,0"))
                                                                                    (rule "polySimp_mulComm1" (formula "34") (term "1,1,0,2,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "34") (term "0,1,1,0,2,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "34") (term "0,1,0,2,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "34") (term "0,0,1,0,2,0,1,0"))
                                                                                    (rule "polySimp_mulComm1" (formula "34") (term "1,0,1,0,2,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "34") (term "0,1,0,1,0,2,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "34") (term "0,2,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0,2,0,1,0"))
                                                                                    (rule "jdiv_axiom" (formula "56") (term "1"))
                                                                                    (rule "eqSymm" (formula "56"))
                                                                                    (rule "jdiv_axiom" (formula "45") (term "0,1,0,2,0"))
                                                                                    (rule "eqSymm" (formula "45"))
                                                                                    (rule "polyDiv_pullOut" (formula "45") (term "0,2,0") (inst "polyDivCoeff=mul(d_bin, Z(neglit(1(#))))"))
                                                                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,2,0,2,0"))
                                                                                    (rule "equal_literals" (formula "45") (term "0,0,2,0"))
                                                                                     (builtin "One Step Simplification" (formula "45"))
                                                                                    (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0,2,0"))
                                                                                    (rule "polySimp_pullOutFactor0" (formula "45") (term "0,0,0,2,0"))
                                                                                    (rule "add_literals" (formula "45") (term "1,0,0,0,2,0"))
                                                                                    (rule "polySimp_elimOne" (formula "45") (term "0,0,0,2,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "45") (term "2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "45") (term "1,2,0"))
                                                                                    (rule "polySimp_rightDist" (formula "45") (term "2,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "45") (term "0,2,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "45") (term "0,0,2,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "45") (term "0,2,0"))
                                                                                    (rule "polySimp_elimOne" (formula "45") (term "0,2,0"))
                                                                                    (rule "commute_or_2" (formula "33") (term "0,0"))
                                                                                    (rule "commute_or_2" (formula "34") (term "0,0"))
                                                                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                                    (branch "self.tree[b] <= -1 + value TRUE"
                                                                                       (rule "replace_known_left" (formula "56") (term "0,0,0,0") (ifseqformula "1"))
                                                                                        (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "1")))
                                                                                       (rule "replace_known_left" (formula "49") (term "0,1,1,0") (ifseqformula "1"))
                                                                                        (builtin "One Step Simplification" (formula "49"))
                                                                                       (rule "polySimp_homoEq" (formula "56"))
                                                                                       (rule "polySimp_mulLiterals" (formula "56") (term "1,0"))
                                                                                       (rule "polySimp_pullOutFactor2b" (formula "56") (term "0,0,0,0"))
                                                                                       (rule "add_literals" (formula "56") (term "1,1,0,0,0,0"))
                                                                                       (rule "times_zero_1" (formula "56") (term "1,0,0,0,0"))
                                                                                       (rule "add_zero_right" (formula "56") (term "0,0,0,0"))
                                                                                       (rule "polySimp_elimOneLeft0" (formula "56") (term "0,1,0"))
                                                                                       (rule "polySimp_addComm0" (formula "49") (term "1,0"))
                                                                                       (rule "polySimp_addComm1" (formula "56") (term "0"))
                                                                                       (rule "polySimp_addComm1" (formula "56") (term "0,0"))
                                                                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                                       (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                       (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                                       (rule "polySimp_sepPosMonomial" (formula "56"))
                                                                                       (rule "polySimp_mulComm0" (formula "56") (term "1"))
                                                                                       (rule "polySimp_rightDist" (formula "56") (term "1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "56") (term "1,1"))
                                                                                       (rule "polySimp_rightDist" (formula "56") (term "0,1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "56") (term "1,0,1"))
                                                                                       (rule "polySimp_rightDist" (formula "56") (term "0,0,1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0,1"))
                                                                                       (rule "polySimp_elimOne" (formula "56") (term "1,0,0,1"))
                                                                                       (rule "polySimp_rightDist" (formula "56") (term "0,0,0,1"))
                                                                                       (rule "mul_literals" (formula "56") (term "0,0,0,0,1"))
                                                                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                                                                       (rule "inEqSimp_contradInEq3" (formula "2") (ifseqformula "20"))
                                                                                       (rule "greater_literals" (formula "2") (term "0,0"))
                                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                                       (rule "andLeft" (formula "2"))
                                                                                       (rule "polySimp_mulComm0" (formula "2") (term "0"))
                                                                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                                                                                       (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                                       (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                                       (rule "add_zero_right" (formula "2") (term "0"))
                                                                                       (rule "leq_literals" (formula "2"))
                                                                                       (rule "closeFalse" (formula "2"))
                                                                                    )
                                                                                    (branch "self.tree[b] <= -1 + value FALSE"
                                                                                       (rule "replace_known_right" (formula "55") (term "0,0,0,0") (ifseqformula "59"))
                                                                                        (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "59")))
                                                                                       (rule "times_zero_2" (formula "55") (term "0,0"))
                                                                                       (rule "times_zero_2" (formula "55") (term "0"))
                                                                                       (rule "replace_known_right" (formula "48") (term "0,1,1,0") (ifseqformula "59"))
                                                                                        (builtin "One Step Simplification" (formula "48"))
                                                                                       (rule "add_zero_right" (formula "48") (term "1,0"))
                                                                                       (rule "polySimp_pullOutFactor0b" (formula "55") (term "0,0,1"))
                                                                                       (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                                                                       (rule "polySimp_homoEq" (formula "55"))
                                                                                       (rule "times_zero_2" (formula "55") (term "1,0"))
                                                                                       (rule "add_zero_right" (formula "55") (term "0"))
                                                                                       (rule "logTimesBaseConcrete" (formula "48") (term "0"))
                                                                                       (rule "greater_literals" (formula "48") (term "1,0,0"))
                                                                                        (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "36")))
                                                                                       (rule "polySimp_homoEq" (formula "48"))
                                                                                       (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                                                                       (rule "polySimp_addComm0" (formula "48") (term "1,1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                                                                       (rule "mul_literals" (formula "48") (term "0,1,0"))
                                                                                       (rule "inEqSimp_leqRight" (formula "59"))
                                                                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                                                       (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                                                                       (rule "add_literals" (formula "49") (term "0,0,0"))
                                                                                       (rule "add_zero_left" (formula "49") (term "0,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                                       (rule "inEqSimp_homoInEq0" (formula "2"))
                                                                                       (rule "times_zero_2" (formula "2") (term "1,0"))
                                                                                       (rule "add_zero_right" (formula "2") (term "0"))
                                                                                       (rule "applyEq" (formula "49") (term "0,1,0") (ifseqformula "22"))
                                                                                       (rule "polySimp_pullOutFactor1" (formula "49") (term "0"))
                                                                                       (rule "add_literals" (formula "49") (term "1,0"))
                                                                                       (rule "times_zero_1" (formula "49") (term "0"))
                                                                                        (builtin "One Step Simplification" (formula "49"))
                                                                                       (rule "true_left" (formula "49"))
                                                                                       (rule "polySimp_sepPosMonomial" (formula "55"))
                                                                                       (rule "polySimp_mulComm0" (formula "55") (term "1"))
                                                                                       (rule "polySimp_rightDist" (formula "55") (term "1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "55") (term "1,1"))
                                                                                       (rule "polySimp_rightDist" (formula "55") (term "0,1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "55") (term "1,0,1"))
                                                                                       (rule "polySimp_rightDist" (formula "55") (term "0,0,1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,1"))
                                                                                       (rule "polySimp_elimOne" (formula "55") (term "1,0,0,1"))
                                                                                       (rule "polySimp_rightDist" (formula "55") (term "0,0,0,1"))
                                                                                       (rule "mul_literals" (formula "55") (term "0,0,0,0,1"))
                                                                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                                       (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                                                                       (rule "inEqSimp_contradInEq3" (formula "2") (ifseqformula "20"))
                                                                                       (rule "greater_literals" (formula "2") (term "0,0"))
                                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                                       (rule "andLeft" (formula "2"))
                                                                                       (rule "polySimp_mulComm0" (formula "2") (term "0"))
                                                                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                                                                                       (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                                       (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                                       (rule "add_zero_right" (formula "2") (term "0"))
                                                                                       (rule "leq_literals" (formula "2"))
                                                                                       (rule "closeFalse" (formula "2"))
                                                                                    )
                                                                                 )
                                                                                 (branch "Case 2"
                                                                                    (rule "translateJavaAddInt" (formula "45") (term "1,1"))
                                                                                    (rule "polySimp_addComm1" (formula "45") (term "1,1"))
                                                                                    (rule "add_literals" (formula "45") (term "0,1,1"))
                                                                                    (rule "inEqSimp_ltRight" (formula "45"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                                    (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                                    (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0"))
                                                                                    (rule "polySimp_homoEq" (formula "42"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "42") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "20"))
                                                                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "1") (term "0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "42") (term "0,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "42") (term "0"))
                                                                                    (rule "applyEq" (formula "1") (term "0,1,0,0") (ifseqformula "30"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "42"))
                                                                                    (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "36") (term "0,1,0,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,0,1,1,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "20"))
                                                                                    (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,1,0"))
                                                                                    (rule "mul_literals" (formula "1") (term "0,1,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,1,0,1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,0,1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,1,0,1,1"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,1,0,1,0,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1,0,1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,0,1,0,1,1"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "42") (term "0,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                                    (rule "polySimp_mulAssoc" (formula "1") (term "0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "19"))
                                                                                    (rule "leq_literals" (formula "9") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                                    (rule "true_left" (formula "9"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "2"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                                                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "19") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                                                                    (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "19") (term "0,0"))
                                                                                    (rule "qeq_literals" (formula "19") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "19"))
                                                                                    (rule "true_left" (formula "19"))
                                                                                    (rule "Definition_axiom_for_binarySearchInvariant_in_de_wiesler_Tree" (formula "16") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "16"))
                                                                                    (rule "andLeft" (formula "16"))
                                                                                    (rule "andLeft" (formula "16"))
                                                                                    (rule "andLeft" (formula "16"))
                                                                                    (rule "eqSymm" (formula "19") (term "0"))
                                                                                    (rule "translateJavaSubInt" (formula "18") (term "0,0"))
                                                                                    (rule "translateJavaSubInt" (formula "18") (term "0,2,0,1"))
                                                                                    (rule "translateJavaSubInt" (formula "16") (term "0"))
                                                                                    (rule "translateJavaSubInt" (formula "17") (term "1"))
                                                                                    (rule "translateJavaSubInt" (formula "19") (term "0,0"))
                                                                                    (rule "polySimp_elimSub" (formula "18") (term "0,0"))
                                                                                    (rule "polySimp_elimSub" (formula "18") (term "0,2,0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "16") (term "0"))
                                                                                    (rule "mul_literals" (formula "16") (term "1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "17") (term "1"))
                                                                                    (rule "mul_literals" (formula "17") (term "1,1"))
                                                                                    (rule "polySimp_elimSub" (formula "19") (term "0,0"))
                                                                                    (rule "mul_literals" (formula "19") (term "1,0,0"))
                                                                                    (rule "polySimp_homoEq" (formula "18") (term "0"))
                                                                                    (rule "polySimp_homoEq" (formula "19") (term "0"))
                                                                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "16") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "17") (term "1"))
                                                                                    (rule "polySimp_addComm0" (formula "19") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "19") (term "0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "18") (term "1"))
                                                                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "19") (term "1"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "16"))
                                                                                    (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                                                                    (rule "mul_literals" (formula "16") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "17"))
                                                                                    (rule "polySimp_addComm1" (formula "17") (term "0"))
                                                                                    (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "23"))
                                                                                    (rule "applyEq" (formula "19") (term "0,1,0,0") (ifseqformula "23"))
                                                                                    (rule "polySimp_sepPosMonomial" (formula "18") (term "0"))
                                                                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
                                                                                    (rule "mul_literals" (formula "18") (term "0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,0"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "19") (term "0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "19") (term "0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "19") (term "0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1"))
                                                                                    (rule "polySimp_mulComm0" (formula "18") (term "1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "18") (term "1,1"))
                                                                                    (rule "mul_literals" (formula "18") (term "0,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,1"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                                                                    (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                                                    (rule "polySimp_mulComm0" (formula "17") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "17") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                                                                                    (rule "mul_literals" (formula "17") (term "0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "16"))
                                                                                    (rule "mul_literals" (formula "12") (term "0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                                                    (rule "add_literals" (formula "12") (term "0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                                                    (rule "mul_literals" (formula "12") (term "1"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "10"))
                                                                                    (rule "leq_literals" (formula "12") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                                    (rule "true_left" (formula "12"))
                                                                                    (rule "Contract_axiom_for_piLemma_in_Tree" (formula "41") (term "0"))
                                                                                    (rule "translateJavaSubInt" (formula "41") (term "1,1,1,0,0,0"))
                                                                                    (rule "translateJavaDivInt" (formula "46") (term "0,1"))
                                                                                    (rule "translateJavaDivInt" (formula "44") (term "0,0,2,0"))
                                                                                    (rule "translateJavaDivInt" (formula "44") (term "0,1,0"))
                                                                                    (rule "replace_known_left" (formula "41") (term "1") (ifseqformula "42"))
                                                                                     (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "3")))
                                                                                    (rule "true_left" (formula "41"))
                                                                                    (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "43") (term "0,0,1"))
                                                                                    (rule "translateJavaSubInt" (formula "43") (term "0,1,1,0,0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "43") (term "1,0,0,0,0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "43") (term "1,1,0,0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "43") (term "0,1,1,0,0,1"))
                                                                                    (rule "mul_literals" (formula "43") (term "1,0,1,1,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "43") (term "0,0,1"))
                                                                                    (rule "polySimp_mulComm1" (formula "43") (term "0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "43") (term "0,1,0,0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "43") (term "1,0,0,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "43") (term "0,1,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "43") (term "0,0,1,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "43") (term "1,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "43") (term "0,1,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "43") (term "0,1"))
                                                                                    (rule "polySimp_mulAssoc" (formula "43") (term "1,0,1"))
                                                                                    (rule "polySimp_mulComm1" (formula "43") (term "0,1,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "43") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "43") (term "0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0,1"))
                                                                                    (rule "polySimp_mulComm1" (formula "43") (term "1,0,0,1"))
                                                                                    (rule "polySimp_mulAssoc" (formula "43") (term "0,1,0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0,1"))
                                                                                    (rule "polySimp_homoEq" (formula "43"))
                                                                                    (rule "polySimp_mulComm0" (formula "43") (term "0,1,0,0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "43") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "43") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "43") (term "0,0"))
                                                                                    (rule "polySimp_sepPosMonomial" (formula "43"))
                                                                                    (rule "polySimp_mulComm0" (formula "43") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "43") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "43") (term "0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "43") (term "1,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "43") (term "0,0,1"))
                                                                                    (rule "polySimp_mulAssoc" (formula "43") (term "0,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "43") (term "0,0,0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "43") (term "0,0,0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "43") (term "0,0,0,1"))
                                                                                    (rule "Definition_axiom_for_treeSearchInvariant_in_de_wiesler_Tree" (formula "20") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "20"))
                                                                                    (rule "andLeft" (formula "20"))
                                                                                    (rule "andLeft" (formula "20"))
                                                                                    (rule "andLeft" (formula "20"))
                                                                                    (rule "andLeft" (formula "20"))
                                                                                    (rule "eqSymm" (formula "24") (term "1"))
                                                                                    (rule "eqSymm" (formula "24") (term "0"))
                                                                                    (rule "eqSymm" (formula "23") (term "1"))
                                                                                    (rule "translateJavaAddInt" (formula "21") (term "1,1"))
                                                                                    (rule "translateJavaSubInt" (formula "23") (term "0,1"))
                                                                                    (rule "translateJavaSubInt" (formula "23") (term "1,1"))
                                                                                    (rule "translateJavaDivInt" (formula "23") (term "1,1,1"))
                                                                                    (rule "polySimp_elimSub" (formula "24") (term "0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "23") (term "0,1"))
                                                                                    (rule "mul_literals" (formula "23") (term "1,0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "23") (term "1,1"))
                                                                                    (rule "polySimp_homoEq" (formula "24") (term "1"))
                                                                                    (rule "polySimp_homoEq" (formula "23") (term "1"))
                                                                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "21") (term "1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "23") (term "1,1,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "24") (term "1,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "24") (term "1,1,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "24") (term "0,1,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,1"))
                                                                                    (rule "mul_literals" (formula "23") (term "0,1,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "24") (term "0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "24") (term "0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "23") (term "0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "23") (term "0,0,0,1"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "23") (term "0"))
                                                                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "21"))
                                                                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                                                    (rule "applyEq" (formula "47") (term "1,1,0,0") (ifseqformula "22"))
                                                                                    (rule "applyEq" (formula "21") (term "0,1,0") (ifseqformula "33"))
                                                                                    (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                                                                                    (rule "applyEq" (formula "47") (term "0,1,0,1,0,0,0") (ifseqformula "22"))
                                                                                    (rule "polySimp_homoEq" (formula "47"))
                                                                                    (rule "polySimp_mulLiterals" (formula "47") (term "1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                                                    (rule "applyEq" (formula "49") (term "0,1,0,1,0") (ifseqformula "22"))
                                                                                    (rule "applyEq" (formula "47") (term "0,1,0,1,0,0,1,0") (ifseqformula "22"))
                                                                                    (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                                                    (rule "applyEq" (formula "47") (term "0,1,0,1,0,0,0,0,0") (ifseqformula "22"))
                                                                                    (rule "polySimp_sepPosMonomial" (formula "24") (term "1"))
                                                                                    (rule "polySimp_mulComm0" (formula "24") (term "1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "24") (term "1,1"))
                                                                                    (rule "polySimp_mulAssoc" (formula "24") (term "0,1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "24") (term "0,1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "24") (term "0,1,1"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "23") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "23") (term "0,1"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "47"))
                                                                                    (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "23") (term "0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "21"))
                                                                                    (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                                                    (rule "inEqSimp_contradEq7" (formula "24") (term "0") (ifseqformula "2"))
                                                                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                                                                    (rule "leq_literals" (formula "24") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "24"))
                                                                                    (rule "true_left" (formula "24"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "23") (term "0") (ifseqformula "2"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                                                                    (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                                                                    (rule "qeq_literals" (formula "23") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "23"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "20"))
                                                                                    (rule "mul_literals" (formula "30") (term "0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                                                                    (rule "mul_literals" (formula "30") (term "1"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "30"))
                                                                                    (rule "leq_literals" (formula "7") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "7"))
                                                                                    (rule "true_left" (formula "7"))
                                                                                    (rule "inEqSimp_exactShadow1" (formula "20") (ifseqformula "19"))
                                                                                    (rule "greater_literals" (formula "20") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "20"))
                                                                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                                                                    (rule "mul_literals" (formula "20") (term "0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "20") (term "0"))
                                                                                    (rule "add_literals" (formula "20") (term "1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "20") (term "1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                                                    (rule "mul_literals" (formula "20") (term "1"))
                                                                                    (rule "Definition_axiom_for_piLemma_in_de_wiesler_Tree" (formula "44") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "44"))
                                                                                    (rule "andLeft" (formula "44"))
                                                                                    (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "26") (inst "i=i") (inst "i_0=i_0"))
                                                                                     (builtin "One Step Simplification" (formula "26"))
                                                                                    (rule "expand_inInt" (formula "26") (term "1,0,0,1"))
                                                                                    (rule "expand_inInt" (formula "26") (term "1,0,0,1,0"))
                                                                                    (rule "replace_int_MAX" (formula "26") (term "1,0,1,0,0,1"))
                                                                                    (rule "replace_int_MIN" (formula "26") (term "0,1,1,0,0,1"))
                                                                                    (rule "replace_int_MIN" (formula "26") (term "0,1,1,0,0,1,0"))
                                                                                    (rule "replace_int_MAX" (formula "26") (term "1,0,1,0,0,1,0"))
                                                                                    (rule "andLeft" (formula "26"))
                                                                                    (rule "andLeft" (formula "26"))
                                                                                    (rule "andLeft" (formula "26"))
                                                                                    (rule "andLeft" (formula "26"))
                                                                                    (rule "andLeft" (formula "26"))
                                                                                    (rule "andLeft" (formula "27"))
                                                                                    (rule "andLeft" (formula "26"))
                                                                                    (rule "andLeft" (formula "26"))
                                                                                    (rule "andLeft" (formula "26"))
                                                                                    (rule "andLeft" (formula "28"))
                                                                                    (rule "notLeft" (formula "27"))
                                                                                    (rule "notLeft" (formula "26"))
                                                                                    (rule "eqSymm" (formula "34") (term "1,0"))
                                                                                    (rule "translateJavaSubInt" (formula "32") (term "3,0"))
                                                                                    (rule "translateJavaShiftLeftInt" (formula "28") (term "1"))
                                                                                    (rule "translateJavaSubInt" (formula "34") (term "0,2,0,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "32") (term "3,0"))
                                                                                    (rule "mul_literals" (formula "32") (term "1,3,0"))
                                                                                    (rule "polySimp_elimSub" (formula "34") (term "0,2,0,1,0"))
                                                                                    (rule "mul_literals" (formula "34") (term "1,0,2,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "32") (term "3,0"))
                                                                                    (rule "polySimp_addComm0" (formula "34") (term "0,2,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "33") (term "1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "34") (term "1,1,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "33") (term "0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "33") (term "1,1,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "31"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "29"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "30"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "26"))
                                                                                    (rule "applyEq" (formula "29") (term "0") (ifseqformula "25"))
                                                                                    (rule "applyEq" (formula "31") (term "1") (ifseqformula "25"))
                                                                                    (rule "applyEq" (formula "32") (term "1,3,0") (ifseqformula "25"))
                                                                                    (rule "applyEq" (formula "28") (term "0") (ifseqformula "25"))
                                                                                    (rule "eqSymm" (formula "28"))
                                                                                    (rule "applyEq" (formula "30") (term "1") (ifseqformula "25"))
                                                                                    (rule "applyEq" (formula "33") (term "0,1,0,0,1,0,0,0") (ifseqformula "25"))
                                                                                    (rule "applyEq" (formula "34") (term "0,1,0,0,1,0,0,0") (ifseqformula "25"))
                                                                                    (rule "applyEq" (formula "33") (term "0,1,0,0,1,1,0") (ifseqformula "25"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "33") (term "1,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "33") (term "1,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,1,0"))
                                                                                    (rule "mul_literals" (formula "33") (term "0,1,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "33") (term "1,1,1,1,0"))
                                                                                    (rule "javaShiftLeftIntDef" (formula "28") (term "0"))
                                                                                    (rule "mod_axiom" (formula "28") (term "1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0"))
                                                                                    (rule "shiftLeftDef" (formula "28") (term "0,0"))
                                                                                    (rule "polySimp_elimNeg" (formula "28") (term "1,1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "28") (term "0,1,1,0,0"))
                                                                                    (rule "shiftLeftPositiveShiftDef" (formula "28") (term "2,0,0"))
                                                                                    (rule "polySimp_elimOneLeft0" (formula "28") (term "2,0,0"))
                                                                                    (rule "shiftRightPositiveShiftDef" (formula "28") (term "1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                                                                    (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "28") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "27"))
                                                                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                    (rule "add_literals" (formula "2") (term "0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                    (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "2"))
                                                                                    (rule "leq_literals" (formula "8") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                                    (rule "true_left" (formula "8"))
                                                                                    (rule "nnf_imp2or" (formula "34") (term "0"))
                                                                                    (rule "nnf_imp2or" (formula "33") (term "0"))
                                                                                    (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "35"))
                                                                                    (rule "true_left" (formula "35"))
                                                                                    (rule "expand_moduloInteger" (formula "28") (term "0"))
                                                                                    (rule "replace_int_RANGE" (formula "28") (term "1,1,0"))
                                                                                    (rule "replace_int_HALFRANGE" (formula "28") (term "0,0,1,0"))
                                                                                    (rule "replace_int_MIN" (formula "28") (term "0,0"))
                                                                                    (rule "polySimp_homoEq" (formula "28"))
                                                                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                                                    (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "28") (term "0,0"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "28"))
                                                                                    (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                                                    (rule "nnf_notAnd" (formula "34") (term "0,0"))
                                                                                    (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                                                                    (rule "nnf_notAnd" (formula "34") (term "0,0,0"))
                                                                                    (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "34") (term "1,0,0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "34") (term "0,0,0,0,0,0"))
                                                                                    (rule "add_zero_left" (formula "34") (term "0,0,0,0,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,0"))
                                                                                    (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,0"))
                                                                                    (rule "add_zero_left" (formula "34") (term "0,0,1,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0"))
                                                                                    (rule "nnf_notAnd" (formula "34") (term "1,0,0"))
                                                                                    (rule "inEqSimp_notGeq" (formula "34") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "34") (term "1,0,0,1,1,0,0"))
                                                                                    (rule "add_literals" (formula "34") (term "0,0,1,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "34") (term "1,1,1,0,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "34") (term "0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "34") (term "1,0,0,0,1,0,0"))
                                                                                    (rule "add_literals" (formula "34") (term "0,0,0,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "34") (term "1,0,1,0,0"))
                                                                                    (rule "nnf_notAnd" (formula "33") (term "0,0,0"))
                                                                                    (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "33") (term "0,0,0,0,0,0"))
                                                                                    (rule "add_zero_left" (formula "33") (term "0,0,0,0,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0"))
                                                                                    (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,0"))
                                                                                    (rule "add_zero_left" (formula "33") (term "0,0,1,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0"))
                                                                                    (rule "nnf_notAnd" (formula "33") (term "1,0,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "33") (term "0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "33") (term "1,0,0,0,1,0,0"))
                                                                                    (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,1,0,0"))
                                                                                    (rule "mul_literals" (formula "33") (term "1,0,1,0,0"))
                                                                                    (rule "inEqSimp_notGeq" (formula "33") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "33") (term "1,0,0,1,1,0,0"))
                                                                                    (rule "add_literals" (formula "33") (term "0,0,1,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "33") (term "1,1,1,0,0"))
                                                                                    (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "54") (term "0,1,0,0,1"))
                                                                                    (rule "translateJavaSubInt" (formula "54") (term "0,1,1,0,1,0,0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "54") (term "1,0,0,0,1,0,0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "54") (term "1,1,0,1,0,0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "54") (term "0,1,1,0,1,0,0,1"))
                                                                                    (rule "mul_literals" (formula "54") (term "1,0,1,1,0,1,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "54") (term "0,1,0,0,1"))
                                                                                    (rule "polySimp_mulComm1" (formula "54") (term "1,0,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "54") (term "0,1,0,0,1,0,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "54") (term "0,1,1,0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1,1,0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "1,1,0,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "54") (term "0,0,1,1,0,0,1"))
                                                                                    (rule "polySimp_mulAssoc" (formula "54") (term "0,0,0,1,1,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "54") (term "0,0,0,0,1,1,0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "54") (term "0,0,0,1,1,0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0,1,1,0,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "54") (term "0,0,1,1,0,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "54") (term "1,0,0,1"))
                                                                                    (rule "polySimp_mulAssoc" (formula "54") (term "1,1,0,0,1"))
                                                                                    (rule "polySimp_mulComm1" (formula "54") (term "0,1,1,0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "54") (term "0,1,1,0,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "54") (term "0,1,0,0,1"))
                                                                                    (rule "polySimp_mulComm1" (formula "54") (term "1,0,1,0,0,1"))
                                                                                    (rule "polySimp_mulAssoc" (formula "54") (term "0,1,0,1,0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "54") (term "0,1,0,1,0,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "54") (term "0,0,1,0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "54") (term "0,0,0,1,0,0,1"))
                                                                                    (rule "polySimp_mulComm1" (formula "54") (term "1,0,0,1,0,0,1"))
                                                                                    (rule "polySimp_mulAssoc" (formula "54") (term "0,1,0,0,1,0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,1,0,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "54") (term "0,1,0,0,1,0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "54") (term "0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "1"))
                                                                                    (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,0,1"))
                                                                                    (rule "polySimp_homoEq" (formula "54"))
                                                                                    (rule "polySimp_mulLiterals" (formula "54") (term "1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0,0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0,0,0"))
                                                                                    (rule "applyEq" (formula "54") (term "0,1,1,0,0,1,0") (ifseqformula "47"))
                                                                                    (rule "polySimp_mulComm0" (formula "54") (term "0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "54") (term "1,1,1,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "54") (term "1,1,1,0,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "54") (term "0,1,1,1,0,1,0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "1,1,0,1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "54") (term "0,1,1,0,1,0,0,0"))
                                                                                    (rule "add_literals" (formula "54") (term "0,0,1,1,0,1,0,0,0"))
                                                                                    (rule "applyEq" (formula "54") (term "0,1,1,0,0,1,0") (ifseqformula "47"))
                                                                                    (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "54") (term "0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "54") (term "1,1,1,0,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "54") (term "0,1,1,1,0,1,0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "1,1,0,1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "54") (term "0,1,1,0,1,0,0,0"))
                                                                                    (rule "add_literals" (formula "54") (term "0,0,1,1,0,1,0,0,0"))
                                                                                    (rule "applyEq" (formula "54") (term "0,1,1,0,0,1,0") (ifseqformula "47"))
                                                                                    (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "54") (term "0,1,1,0,0,1,0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "1,0,0,1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "54") (term "0,1,0,0,1,0,0,0"))
                                                                                    (rule "add_literals" (formula "54") (term "0,0,1,0,0,1,0,0,0"))
                                                                                    (rule "applyEq" (formula "54") (term "1,0,1,0") (ifseqformula "56"))
                                                                                    (rule "applyEq" (formula "54") (term "1,0,0,1,0") (ifseqformula "47"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0,0,0,0"))
                                                                                    (rule "applyEq" (formula "54") (term "1,0,1,0") (ifseqformula "56"))
                                                                                    (rule "applyEq" (formula "54") (term "0,0,1,0,0") (ifseqformula "56"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0,0,0,0"))
                                                                                    (rule "applyEq" (formula "54") (term "0,0,1,0,0,0,0") (ifseqformula "39"))
                                                                                    (rule "polySimp_mulComm1" (formula "54") (term "0,1,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0,0"))
                                                                                    (rule "applyEq" (formula "54") (term "0,1,1,0,1,0,0,0,0,0,0,0") (ifseqformula "47"))
                                                                                    (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,1,0,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "54") (term "1,1,0,1,0,0,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "54") (term "0,1,1,0,1,0,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "1,0,1,0,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "54") (term "0,1,0,1,0,0,0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "54") (term "0,0,1,0,1,0,0,0,0,0,0,0"))
                                                                                    (rule "applyEq" (formula "54") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "56"))
                                                                                    (rule "polySimp_addComm0" (formula "54") (term "0,0,0,0,0,0,0"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "54"))
                                                                                    (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                                                                    (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "22") (term "0"))
                                                                                    (rule "translateJavaSubInt" (formula "22") (term "0,1,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "22") (term "1,0,0,0"))
                                                                                    (rule "polySimp_elimSub" (formula "22") (term "1,1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "22") (term "0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "22") (term "1,0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "22") (term "0,1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "22") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "22") (term "0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "22") (term "1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "22") (term "0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "22") (term "0"))
                                                                                    (rule "polySimp_homoEq" (formula "22"))
                                                                                    (rule "polySimp_mulComm1" (formula "22") (term "1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "22") (term "0,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "22") (term "0,0,1,1,0"))
                                                                                    (rule "polySimp_mulComm1" (formula "22") (term "1,0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "22") (term "0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                                                    (rule "applyEq" (formula "22") (term "1,1,0,1,0") (ifseqformula "21"))
                                                                                    (rule "applyEq" (formula "22") (term "0,1,0,1,0,0,1,0") (ifseqformula "21"))
                                                                                    (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                                                    (rule "applyEq" (formula "22") (term "0,1,0,1,0,0,1,0") (ifseqformula "21"))
                                                                                    (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                                                    (rule "applyEq" (formula "22") (term "0,1,0,1,0,1,0,0,0") (ifseqformula "21"))
                                                                                    (rule "polySimp_sepPosMonomial" (formula "22"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "22") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "22") (term "0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "22") (term "1,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "22") (term "0,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "22") (term "1,0,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "22") (term "0,0,0,1"))
                                                                                    (rule "mul_literals" (formula "22") (term "0,0,0,0,1"))
                                                                                    (rule "apply_eq_monomials" (formula "54") (term "1,1") (ifseqformula "22"))
                                                                                    (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0,1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "54") (term "0,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1,1"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "54") (term "1,1"))
                                                                                    (rule "add_literals" (formula "54") (term "1,1,1,1"))
                                                                                    (rule "times_zero_1" (formula "54") (term "1,1,1"))
                                                                                    (rule "add_zero_right" (formula "54") (term "1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "54") (term "1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "54") (term "0,1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "54") (term "0,0,1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "54") (term "0,0,0,1,1"))
                                                                                    (rule "mul_literals" (formula "54") (term "0,0,0,0,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0,1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "54") (term "1,0,0,0,1,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "54") (term "1"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0,1"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "54") (term "1"))
                                                                                    (rule "add_literals" (formula "54") (term "1,1,1"))
                                                                                    (rule "times_zero_1" (formula "54") (term "1,1"))
                                                                                    (rule "add_zero_right" (formula "54") (term "1"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "1"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "54") (term "0,0,0,1"))
                                                                                    (rule "polySimp_addComm1" (formula "54") (term "0,0,0,0,1"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "54") (term "0,0,0,1"))
                                                                                    (rule "add_literals" (formula "54") (term "1,1,0,0,0,1"))
                                                                                    (rule "times_zero_1" (formula "54") (term "1,0,0,0,1"))
                                                                                    (rule "add_zero_right" (formula "54") (term "0,0,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "54") (term "0,0,0,1"))
                                                                                    (rule "Definition_axiom_for_piLemmaLeft_in_de_wiesler_Tree" (formula "51") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "51"))
                                                                                    (rule "translateJavaSubInt" (formula "51") (term "0,1,1"))
                                                                                    (rule "translateJavaSubInt" (formula "51") (term "0"))
                                                                                    (rule "eqSymm" (formula "51"))
                                                                                    (rule "translateJavaMulInt" (formula "51") (term "0,1,1"))
                                                                                    (rule "polySimp_elimSub" (formula "51") (term "0,1,0"))
                                                                                    (rule "mul_literals" (formula "51") (term "1,0,1,0"))
                                                                                    (rule "eqSymm" (formula "51"))
                                                                                    (rule "polySimp_elimSub" (formula "51") (term "1,1"))
                                                                                    (rule "polySimp_elimSub" (formula "51") (term "0"))
                                                                                    (rule "eqSymm" (formula "51"))
                                                                                    (rule "polySimp_mulComm0" (formula "51") (term "0,0,1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "51") (term "0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "51") (term "1,0"))
                                                                                    (rule "applyEq" (formula "51") (term "0,1,0,1,0") (ifseqformula "21"))
                                                                                    (rule "applyEq" (formula "51") (term "0") (ifseqformula "56"))
                                                                                    (rule "polySimp_homoEq" (formula "51"))
                                                                                    (rule "polySimp_addComm1" (formula "51") (term "0"))
                                                                                    (rule "polySimp_addComm0" (formula "51") (term "0,0"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "51"))
                                                                                    (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "51") (term "0"))
                                                                                    (rule "Definition_axiom_for_piLemmaRight_in_de_wiesler_Tree" (formula "52") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "52"))
                                                                                    (rule "eqSymm" (formula "52"))
                                                                                    (rule "translateJavaSubInt" (formula "52") (term "1"))
                                                                                    (rule "translateJavaSubInt" (formula "52") (term "0,1,0"))
                                                                                    (rule "translateJavaAddInt" (formula "52") (term "0,0,1"))
                                                                                    (rule "translateJavaMulInt" (formula "52") (term "0,0,0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "52") (term "0,1,0"))
                                                                                    (rule "mul_literals" (formula "52") (term "1,0,1,0"))
                                                                                    (rule "eqSymm" (formula "52"))
                                                                                    (rule "polySimp_elimSub" (formula "52") (term "0"))
                                                                                    (rule "eqSymm" (formula "52"))
                                                                                    (rule "polySimp_elimSub" (formula "52") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "52") (term "0,0,0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "52") (term "0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "52") (term "1"))
                                                                                    (rule "polySimp_addComm1" (formula "52") (term "1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "52") (term "0,1,1"))
                                                                                    (rule "applyEq" (formula "52") (term "0,1,0,1,0") (ifseqformula "21"))
                                                                                    (rule "applyEq" (formula "56") (term "0") (ifseqformula "52"))
                                                                                    (rule "polySimp_homoEq" (formula "56"))
                                                                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "56") (term "1,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "56") (term "0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "56") (term "0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "56") (term "0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "56") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "56") (term "0"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "56"))
                                                                                    (rule "polySimp_mulLiterals" (formula "56") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "56") (term "0"))
                                                                                    (rule "applyEq" (formula "52") (term "1,1") (ifseqformula "56"))
                                                                                    (rule "polySimp_addAssoc" (formula "52") (term "1"))
                                                                                    (rule "polySimp_addComm0" (formula "52") (term "0,1"))
                                                                                    (rule "polySimp_pullOutFactor2b" (formula "52") (term "1"))
                                                                                    (rule "add_literals" (formula "52") (term "1,1,1"))
                                                                                    (rule "times_zero_1" (formula "52") (term "1,1"))
                                                                                    (rule "add_zero_right" (formula "52") (term "1"))
                                                                                    (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "32") (term "0"))
                                                                                    (rule "replace_known_right" (formula "32") (term "0,0,0") (ifseqformula "58"))
                                                                                     (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "4")) (ifInst ""  (formula "33")))
                                                                                    (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "33") (term "0") (inst "i=i") (inst "j=j"))
                                                                                     (builtin "One Step Simplification" (formula "33"))
                                                                                    (rule "expand_inInt" (formula "33") (term "1,0,0,1,0"))
                                                                                    (rule "expand_inInt" (formula "33") (term "1,0,0"))
                                                                                    (rule "replace_int_MAX" (formula "33") (term "1,0,1,0,0,1,0"))
                                                                                    (rule "replace_int_MIN" (formula "33") (term "0,1,1,0,0,1,0"))
                                                                                    (rule "replace_int_MAX" (formula "33") (term "1,0,1,0,0"))
                                                                                    (rule "replace_int_MIN" (formula "33") (term "0,1,1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0"))
                                                                                    (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0,1,0"))
                                                                                    (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "33") (term "1,1,0,0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "33") (term "1,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0,1,0"))
                                                                                    (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0,1,0"))
                                                                                    (rule "ifthenelse_split" (formula "1") (term "0"))
                                                                                    (branch "self.tree[b] <= -1 + value TRUE"
                                                                                       (rule "replace_known_left" (formula "56") (term "0,0,0,0") (ifseqformula "1"))
                                                                                        (builtin "One Step Simplification" (formula "56") (ifInst ""  (formula "1")))
                                                                                       (rule "replace_known_left" (formula "49") (term "0,1,1,0") (ifseqformula "1"))
                                                                                        (builtin "One Step Simplification" (formula "49"))
                                                                                       (rule "polySimp_pullOutFactor2b" (formula "56") (term "0,0,1"))
                                                                                       (rule "add_literals" (formula "56") (term "1,1,0,0,1"))
                                                                                       (rule "times_zero_1" (formula "56") (term "1,0,0,1"))
                                                                                       (rule "add_zero_right" (formula "56") (term "0,0,1"))
                                                                                       (rule "polySimp_elimOneLeft0" (formula "56") (term "0,0"))
                                                                                       (rule "polySimp_homoEq" (formula "56"))
                                                                                       (rule "polySimp_mulLiterals" (formula "56") (term "1,0"))
                                                                                       (rule "polySimp_addComm0" (formula "49") (term "1,0"))
                                                                                       (rule "polySimp_addComm1" (formula "56") (term "0"))
                                                                                       (rule "polySimp_addComm1" (formula "56") (term "0,0"))
                                                                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                                       (rule "mul_literals" (formula "2") (term "1,0"))
                                                                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                       (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                                                       (rule "polySimp_sepPosMonomial" (formula "56"))
                                                                                       (rule "polySimp_mulComm0" (formula "56") (term "1"))
                                                                                       (rule "polySimp_rightDist" (formula "56") (term "1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "56") (term "1,1"))
                                                                                       (rule "polySimp_rightDist" (formula "56") (term "0,1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "56") (term "1,0,1"))
                                                                                       (rule "polySimp_rightDist" (formula "56") (term "0,0,1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "56") (term "1,0,0,1"))
                                                                                       (rule "polySimp_elimOne" (formula "56") (term "1,0,0,1"))
                                                                                       (rule "polySimp_rightDist" (formula "56") (term "0,0,0,1"))
                                                                                       (rule "mul_literals" (formula "56") (term "0,0,0,0,1"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                                       (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                                                                       (rule "inEqSimp_contradInEq4" (formula "2") (ifseqformula "21"))
                                                                                       (rule "greater_literals" (formula "2") (term "0,1,0"))
                                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                                       (rule "greater_literals" (formula "2") (term "0,0"))
                                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                                       (rule "andLeft" (formula "2"))
                                                                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                                                                       (rule "polySimp_rightDist" (formula "2") (term "0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                                                       (rule "mul_literals" (formula "2") (term "0,0"))
                                                                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                                                       (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                                       (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                                                                                       (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                                       (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                                       (rule "add_zero_right" (formula "2") (term "0"))
                                                                                       (rule "leq_literals" (formula "2"))
                                                                                       (rule "closeFalse" (formula "2"))
                                                                                    )
                                                                                    (branch "self.tree[b] <= -1 + value FALSE"
                                                                                       (rule "replace_known_right" (formula "48") (term "0,1,1,0") (ifseqformula "58"))
                                                                                        (builtin "One Step Simplification" (formula "48"))
                                                                                       (rule "add_zero_right" (formula "48") (term "1,0"))
                                                                                       (rule "replace_known_right" (formula "55") (term "0,1,0,0,1") (ifseqformula "58"))
                                                                                        (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "58")))
                                                                                       (rule "times_zero_2" (formula "55") (term "0,0"))
                                                                                       (rule "times_zero_2" (formula "55") (term "0"))
                                                                                       (rule "polySimp_pullOutFactor0b" (formula "55") (term "0,0,1"))
                                                                                       (rule "add_literals" (formula "55") (term "1,1,0,0,1"))
                                                                                       (rule "polySimp_homoEq" (formula "55"))
                                                                                       (rule "times_zero_2" (formula "55") (term "1,0"))
                                                                                       (rule "add_zero_right" (formula "55") (term "0"))
                                                                                       (rule "logTimesBaseConcrete" (formula "48") (term "0"))
                                                                                       (rule "greater_literals" (formula "48") (term "1,0,0"))
                                                                                        (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "37")))
                                                                                       (rule "polySimp_homoEq" (formula "48"))
                                                                                       (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                                                                       (rule "polySimp_addComm0" (formula "48") (term "1,1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                                                                       (rule "mul_literals" (formula "48") (term "0,1,0"))
                                                                                       (rule "inEqSimp_leqRight" (formula "58"))
                                                                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                                                       (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                                                                       (rule "add_literals" (formula "49") (term "0,0,0"))
                                                                                       (rule "add_zero_left" (formula "49") (term "0,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                                       (rule "times_zero_2" (formula "2") (term "1,0"))
                                                                                       (rule "add_zero_right" (formula "2") (term "0"))
                                                                                       (rule "applyEq" (formula "49") (term "0,1,0") (ifseqformula "22"))
                                                                                       (rule "polySimp_pullOutFactor1" (formula "49") (term "0"))
                                                                                       (rule "add_literals" (formula "49") (term "1,0"))
                                                                                       (rule "times_zero_1" (formula "49") (term "0"))
                                                                                        (builtin "One Step Simplification" (formula "49"))
                                                                                       (rule "true_left" (formula "49"))
                                                                                       (rule "polySimp_sepPosMonomial" (formula "55"))
                                                                                       (rule "polySimp_mulComm0" (formula "55") (term "1"))
                                                                                       (rule "polySimp_rightDist" (formula "55") (term "1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "55") (term "1,1"))
                                                                                       (rule "polySimp_rightDist" (formula "55") (term "0,1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "55") (term "1,0,1"))
                                                                                       (rule "polySimp_rightDist" (formula "55") (term "0,0,1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,1"))
                                                                                       (rule "polySimp_elimOne" (formula "55") (term "1,0,0,1"))
                                                                                       (rule "polySimp_rightDist" (formula "55") (term "0,0,0,1"))
                                                                                       (rule "mul_literals" (formula "55") (term "0,0,0,0,1"))
                                                                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                                                       (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                                                                       (rule "inEqSimp_contradInEq4" (formula "2") (ifseqformula "21"))
                                                                                       (rule "greater_literals" (formula "2") (term "0,1,0"))
                                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                                       (rule "greater_literals" (formula "2") (term "0,0"))
                                                                                        (builtin "One Step Simplification" (formula "2"))
                                                                                       (rule "andLeft" (formula "2"))
                                                                                       (rule "polySimp_mulAssoc" (formula "2") (term "0"))
                                                                                       (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                       (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                                       (rule "mul_literals" (formula "2") (term "0,1"))
                                                                                       (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                                       (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                                                       (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                                                                                       (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                                       (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                                       (rule "add_zero_right" (formula "2") (term "0"))
                                                                                       (rule "leq_literals" (formula "2"))
                                                                                       (rule "closeFalse" (formula "2"))
                                                                                    )
                                                                                 )
                                                                              )
                                                                              (branch "Case 2"
                                                                                 (rule "impRight" (formula "45"))
                                                                                 (rule "applyEq" (formula "46") (term "0,0,0,0") (ifseqformula "34") (userinteraction))
                                                                                 (rule "translateJavaDivInt" (formula "46") (term "1,0") (userinteraction))
                                                                                 (rule "translateJavaDivInt" (formula "44") (term "0,1") (userinteraction))
                                                                                 (rule "applyEqReverse" (formula "46") (term "1,0") (ifseqformula "44") (userinteraction))
                                                                                 (rule "Definition_axiom_for_treeSearchInvariant_in_de_wiesler_Tree" (formula "18") (term "0") (userinteraction))
                                                                                  (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "20")) (userinteraction))
                                                                                 (rule "andLeft" (formula "18"))
                                                                                 (rule "andLeft" (formula "18"))
                                                                                 (rule "andLeft" (formula "18"))
                                                                                 (rule "andLeft" (formula "18"))
                                                                                 (rule "powSplitFactor" (formula "25") (term "0") (userinteraction))
                                                                                 (rule "impLeft" (formula "25") (userinteraction))
                                                                                 (branch "Case 1"
                                                                                    (rule "greater_literals" (formula "49") (term "1"))
                                                                                     (builtin "One Step Simplification" (formula "49"))
                                                                                    (rule "translateJavaAddInt" (formula "19") (term "1,1"))
                                                                                    (rule "eqSymm" (formula "21"))
                                                                                    (rule "translateJavaSubInt" (formula "51") (term "0"))
                                                                                    (rule "translateJavaSubInt" (formula "51") (term "1"))
                                                                                    (rule "eqSymm" (formula "22") (term "0"))
                                                                                    (rule "eqSymm" (formula "22") (term "1"))
                                                                                    (rule "translateJavaDivInt" (formula "46") (term "0,1,0"))
                                                                                    (rule "translateJavaDivInt" (formula "46") (term "0,0,2,0"))
                                                                                    (rule "translateJavaSubInt" (formula "21") (term "1"))
                                                                                    (rule "translateJavaSubInt" (formula "21") (term "0"))
                                                                                    (rule "translateJavaDivInt" (formula "21") (term "1,1"))
                                                                                    (rule "polySimp_elimSub" (formula "51") (term "0"))
                                                                                    (rule "polySimp_elimSub" (formula "51") (term "1"))
                                                                                    (rule "mul_literals" (formula "51") (term "1,1"))
                                                                                    (rule "polySimp_elimSub" (formula "22") (term "0,1"))
                                                                                    (rule "polySimp_elimSub" (formula "21") (term "0"))
                                                                                    (rule "mul_literals" (formula "21") (term "1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "21") (term "1"))
                                                                                    (rule "polySimp_homoEq" (formula "51"))
                                                                                    (rule "polySimp_homoEq" (formula "22") (term "1"))
                                                                                    (rule "polySimp_homoEq" (formula "21"))
                                                                                    (rule "polySimp_mulComm0" (formula "51") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "19") (term "1,1"))
                                                                                    (rule "polySimp_addComm0" (formula "51") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "51") (term "1,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "21") (term "1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,0,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "51") (term "1,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "51") (term "0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "51") (term "0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "51") (term "0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "51") (term "0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                                                    (rule "mul_literals" (formula "21") (term "0,1,0"))
                                                                                    (rule "inEqSimp_geqRight" (formula "49"))
                                                                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                    (rule "add_literals" (formula "1") (term "0,0"))
                                                                                    (rule "add_zero_left" (formula "1") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "47") (term "0,1,0,1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,1,0,1,1"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                                    (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "41") (term "0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,1,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "47") (term "0,0"))
                                                                                    (rule "polySimp_homoEq" (formula "47"))
                                                                                    (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "25"))
                                                                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "23") (term "0,1"))
                                                                                    (rule "polySimp_addComm0" (formula "23") (term "0,0,1"))
                                                                                    (rule "polySimp_addAssoc" (formula "51") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "51") (term "0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                                                    (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "22") (term "0,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                                    (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "20"))
                                                                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                                    (rule "add_literals" (formula "3") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "50") (term "0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "50") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "50") (term "0,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "50") (term "0"))
                                                                                    (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "32"))
                                                                                    (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                                                                    (rule "applyEq" (formula "48") (term "0,1,0,1,0") (ifseqformula "20"))
                                                                                    (rule "applyEq" (formula "50") (term "0,1,0,1,1,0,0,0") (ifseqformula "20"))
                                                                                    (rule "applyEq" (formula "50") (term "1,0,0,0") (ifseqformula "48"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "46"))
                                                                                    (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "46") (term "0"))
                                                                                    (rule "polySimp_sepPosMonomial" (formula "22") (term "1"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                                                                                    (rule "polySimp_mulAssoc" (formula "22") (term "0,1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "22") (term "0,1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "22") (term "0,1,1"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "21"))
                                                                                    (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                                                    (rule "applyEq" (formula "46") (term "0,0,1") (ifseqformula "21"))
                                                                                    (rule "polySimp_mulComm0" (formula "46") (term "0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "46") (term "0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "46") (term "1,0,1"))
                                                                                    (rule "polySimp_rightDist" (formula "46") (term "0,0,1"))
                                                                                    (rule "mul_literals" (formula "46") (term "0,0,0,1"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "50"))
                                                                                    (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "50") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,1,0"))
                                                                                    (rule "mul_literals" (formula "40") (term "0,1,0,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "40") (term "1,1,0,1,1,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                                                                                    (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                                    (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                                                                                    (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,1,0,1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,1,0,1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "46") (term "1,0,1,0,1,1"))
                                                                                    (rule "mul_literals" (formula "46") (term "0,1,0,1,0,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,1,0,1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "46") (term "1,1,0,1,0,1,1"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "46") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "46") (term "0,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "46") (term "1,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,1,0,1,1"))
                                                                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0,1,1"))
                                                                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0,1,1"))
                                                                                    (rule "mul_literals" (formula "50") (term "0,1,0,1,0,1,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,1,0,1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "50") (term "1,1,0,1,0,1,1"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "50") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "50") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "50") (term "0,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0"))
                                                                                    (rule "inEqSimp_contradEq7" (formula "22") (term "0") (ifseqformula "2"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                                                                    (rule "leq_literals" (formula "22") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "22"))
                                                                                    (rule "true_left" (formula "22"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "22"))
                                                                                    (rule "leq_literals" (formula "9") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                                    (rule "true_left" (formula "9"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "2"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                                                                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                                                                    (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "22") (term "0,0"))
                                                                                    (rule "qeq_literals" (formula "22") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "22"))
                                                                                    (rule "true_left" (formula "22"))
                                                                                    (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                                                                                    (rule "andLeft" (formula "2"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                                                    (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                                    (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                                    (rule "add_zero_right" (formula "2") (term "0"))
                                                                                    (rule "leq_literals" (formula "2"))
                                                                                    (rule "closeFalse" (formula "2"))
                                                                                 )
                                                                                 (branch "Case 2"
                                                                                    (rule "powPositive" (formula "26") (term "0") (userinteraction))
                                                                                    (rule "impLeft" (formula "26") (userinteraction))
                                                                                    (branch "Case 1"
                                                                                       (rule "greater_literals" (formula "50") (term "1"))
                                                                                        (builtin "One Step Simplification" (formula "50"))
                                                                                       (rule "translateJavaAddInt" (formula "19") (term "1,1"))
                                                                                       (rule "eqSymm" (formula "21"))
                                                                                       (rule "translateJavaSubInt" (formula "52") (term "0"))
                                                                                       (rule "translateJavaSubInt" (formula "52") (term "1"))
                                                                                       (rule "eqSymm" (formula "22") (term "0"))
                                                                                       (rule "eqSymm" (formula "22") (term "1"))
                                                                                       (rule "translateJavaDivInt" (formula "47") (term "0,1,0"))
                                                                                       (rule "translateJavaDivInt" (formula "47") (term "0,0,2,0"))
                                                                                       (rule "translateJavaSubInt" (formula "21") (term "1"))
                                                                                       (rule "translateJavaSubInt" (formula "21") (term "0"))
                                                                                       (rule "translateJavaDivInt" (formula "21") (term "1,1"))
                                                                                       (rule "polySimp_elimSub" (formula "25") (term "1,1,1"))
                                                                                       (rule "mul_literals" (formula "25") (term "1,1,1,1"))
                                                                                       (rule "polySimp_elimSub" (formula "52") (term "0"))
                                                                                       (rule "polySimp_elimSub" (formula "52") (term "1"))
                                                                                       (rule "mul_literals" (formula "52") (term "1,1"))
                                                                                       (rule "polySimp_elimSub" (formula "22") (term "0,1"))
                                                                                       (rule "polySimp_elimSub" (formula "21") (term "0"))
                                                                                       (rule "mul_literals" (formula "21") (term "1,0"))
                                                                                       (rule "polySimp_elimSub" (formula "21") (term "1"))
                                                                                       (rule "polySimp_homoEq" (formula "52"))
                                                                                       (rule "polySimp_homoEq" (formula "22") (term "1"))
                                                                                       (rule "polySimp_homoEq" (formula "21"))
                                                                                       (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                                                       (rule "eqSymm" (formula "25"))
                                                                                       (rule "polySimp_mulComm0" (formula "52") (term "1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,1"))
                                                                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                                                       (rule "polySimp_addComm0" (formula "19") (term "1,1"))
                                                                                       (rule "polySimp_addComm0" (formula "52") (term "0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "25") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm0" (formula "52") (term "1,1,0"))
                                                                                       (rule "polySimp_addComm0" (formula "21") (term "1,1,0"))
                                                                                       (rule "polySimp_addComm0" (formula "25") (term "0,1,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "22") (term "1,0,1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1"))
                                                                                       (rule "polySimp_elimOne" (formula "22") (term "1,1,0,1"))
                                                                                       (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,1"))
                                                                                       (rule "polySimp_rightDist" (formula "52") (term "1,0"))
                                                                                       (rule "polySimp_mulAssoc" (formula "52") (term "0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "52") (term "0,0,1,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0"))
                                                                                       (rule "polySimp_elimOne" (formula "52") (term "0,1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                                                       (rule "mul_literals" (formula "21") (term "0,1,0"))
                                                                                       (rule "inEqSimp_geqRight" (formula "50"))
                                                                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "25"))
                                                                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "48") (term "0,0"))
                                                                                       (rule "polySimp_homoEq" (formula "48"))
                                                                                       (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0,1,0"))
                                                                                       (rule "polySimp_addComm1" (formula "48") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                                       (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "42") (term "0,1,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,1,1,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                                       (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "23") (term "0,1"))
                                                                                       (rule "polySimp_addComm0" (formula "23") (term "0,0,1"))
                                                                                       (rule "polySimp_addAssoc" (formula "52") (term "0"))
                                                                                       (rule "polySimp_addComm1" (formula "52") (term "0,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                                                       (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                                                                       (rule "polySimp_addComm0" (formula "22") (term "0,0,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                                       (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                                       (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "20"))
                                                                                       (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                                       (rule "add_literals" (formula "3") (term "0,0,0"))
                                                                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "47") (term "0,1,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,1,0,1,0"))
                                                                                       (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "51") (term "0,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,0,1,0"))
                                                                                       (rule "polySimp_addComm1" (formula "51") (term "0"))
                                                                                       (rule "inEqSimp_ltToLeq" (formula "51") (term "0,1,0,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0,1,0,1,0"))
                                                                                       (rule "polySimp_addComm1" (formula "51") (term "0"))
                                                                                       (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "33"))
                                                                                       (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                                                                       (rule "applyEq" (formula "25") (term "1") (ifseqformula "26"))
                                                                                       (rule "applyEq" (formula "49") (term "0,1,0,1,0") (ifseqformula "20"))
                                                                                       (rule "applyEq" (formula "51") (term "0,1,0,1,1,0,0,0") (ifseqformula "20"))
                                                                                       (rule "applyEq" (formula "51") (term "1,0,0,0") (ifseqformula "49"))
                                                                                       (rule "polySimp_sepPosMonomial" (formula "22") (term "1"))
                                                                                       (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                                                                                       (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                                                                                       (rule "polySimp_mulAssoc" (formula "22") (term "0,1,1"))
                                                                                       (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "22") (term "0,1,1"))
                                                                                       (rule "polySimp_elimOne" (formula "22") (term "0,1,1"))
                                                                                       (rule "polySimp_sepNegMonomial" (formula "21"))
                                                                                       (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                                                       (rule "applyEq" (formula "47") (term "0,0,0,0") (ifseqformula "21"))
                                                                                       (rule "polySimp_mulComm0" (formula "47") (term "0,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "47") (term "0,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "47") (term "1,0,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "47") (term "0,0,0,0"))
                                                                                       (rule "mul_literals" (formula "47") (term "0,0,0,0,0"))
                                                                                       (rule "polySimp_sepNegMonomial" (formula "51"))
                                                                                       (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "51") (term "0"))
                                                                                       (rule "polySimp_sepNegMonomial" (formula "47"))
                                                                                       (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                                                                                       (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,1,1,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,1,1,0"))
                                                                                       (rule "mul_literals" (formula "41") (term "0,1,0,1,1,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,1,0"))
                                                                                       (rule "polySimp_elimOne" (formula "41") (term "1,1,0,1,1,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                                                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                                       (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                       (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                       (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                                                                                       (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,1,0,1,1"))
                                                                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,1,0,1,1"))
                                                                                       (rule "polySimp_rightDist" (formula "51") (term "1,0,1,0,1,1"))
                                                                                       (rule "mul_literals" (formula "51") (term "0,1,0,1,0,1,1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,1,0,1,1"))
                                                                                       (rule "polySimp_elimOne" (formula "51") (term "1,1,0,1,0,1,1"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                                                                                       (rule "mul_literals" (formula "51") (term "0,1,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "51") (term "1,1,0,0"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,1,0,1,1"))
                                                                                       (rule "polySimp_mulComm0" (formula "47") (term "1,0,1,0,1,1"))
                                                                                       (rule "polySimp_rightDist" (formula "47") (term "1,0,1,0,1,1"))
                                                                                       (rule "mul_literals" (formula "47") (term "0,1,0,1,0,1,1"))
                                                                                       (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,1,0,1,1"))
                                                                                       (rule "polySimp_elimOne" (formula "47") (term "1,1,0,1,0,1,1"))
                                                                                       (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "0,0"))
                                                                                       (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                                                                                       (rule "polySimp_rightDist" (formula "47") (term "1,0,0"))
                                                                                       (rule "mul_literals" (formula "47") (term "0,1,0,0"))
                                                                                       (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,0"))
                                                                                       (rule "polySimp_elimOne" (formula "47") (term "1,1,0,0"))
                                                                                       (rule "inEqSimp_contradEq3" (formula "22") (term "0") (ifseqformula "1"))
                                                                                       (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                                                                       (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                                                                       (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                                                                       (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                                                                       (rule "qeq_literals" (formula "22") (term "0,0"))
                                                                                        (builtin "One Step Simplification" (formula "22"))
                                                                                       (rule "true_left" (formula "22"))
                                                                                       (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "22"))
                                                                                       (rule "leq_literals" (formula "9") (term "0"))
                                                                                        (builtin "One Step Simplification" (formula "9"))
                                                                                       (rule "true_left" (formula "9"))
                                                                                       (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "22"))
                                                                                       (rule "andLeft" (formula "1"))
                                                                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                                                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                                                       (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                                       (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                                                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                                                                       (rule "add_zero_right" (formula "1") (term "0"))
                                                                                       (rule "leq_literals" (formula "1"))
                                                                                       (rule "closeFalse" (formula "1"))
                                                                                    )
                                                                                    (branch "Case 2"
                                                                                       (rule "translateJavaDivInt" (formula "48") (term "0,0,2,0") (userinteraction))
                                                                                       (rule "translateJavaDivInt" (formula "48") (term "0,1,0") (userinteraction))
                                                                                       (rule "applyEq" (formula "52") (term "1,0") (ifseqformula "50") (userinteraction))
                                                                                       (rule "ifthenelse_split" (formula "52") (term "0,0") (userinteraction))
                                                                                       (branch "self.tree[b] < value TRUE"
                                                                                          (rule "translateJavaAddInt" (formula "20") (term "1,1"))
                                                                                          (rule "eqSymm" (formula "22"))
                                                                                          (rule "eqSymm" (formula "53"))
                                                                                          (rule "eqSymm" (formula "23") (term "0"))
                                                                                          (rule "eqSymm" (formula "23") (term "1"))
                                                                                          (rule "translateJavaSubInt" (formula "22") (term "1"))
                                                                                          (rule "translateJavaSubInt" (formula "22") (term "0"))
                                                                                          (rule "translateJavaSubInt" (formula "53") (term "1"))
                                                                                          (rule "translateJavaSubInt" (formula "53") (term "0"))
                                                                                          (rule "translateJavaDivInt" (formula "22") (term "1,1"))
                                                                                          (rule "replace_known_left" (formula "49") (term "0,0") (ifseqformula "1"))
                                                                                           (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "1")))
                                                                                          (rule "replace_known_left" (formula "43") (term "0,1,1,0") (ifseqformula "1"))
                                                                                           (builtin "One Step Simplification" (formula "43"))
                                                                                          (rule "replace_known_left" (formula "53") (term "0,1,0,0,0") (ifseqformula "1"))
                                                                                           (builtin "One Step Simplification" (formula "53"))
                                                                                          (rule "polySimp_elimSub" (formula "26") (term "1,1,1"))
                                                                                          (rule "mul_literals" (formula "26") (term "1,1,1,1"))
                                                                                          (rule "polySimp_elimSub" (formula "23") (term "0,1"))
                                                                                          (rule "polySimp_elimSub" (formula "22") (term "0"))
                                                                                          (rule "mul_literals" (formula "22") (term "1,0"))
                                                                                          (rule "polySimp_elimSub" (formula "22") (term "1"))
                                                                                          (rule "polySimp_homoEq" (formula "49"))
                                                                                          (rule "polySimp_elimSub" (formula "53") (term "1"))
                                                                                          (rule "polySimp_elimSub" (formula "53") (term "0"))
                                                                                          (rule "mul_literals" (formula "53") (term "1,0"))
                                                                                          (rule "polySimp_homoEq" (formula "23") (term "1"))
                                                                                          (rule "polySimp_homoEq" (formula "22"))
                                                                                          (rule "polySimp_homoEq" (formula "53"))
                                                                                          (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                                                          (rule "eqSymm" (formula "26"))
                                                                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,1"))
                                                                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "53") (term "1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "20") (term "1,1"))
                                                                                          (rule "polySimp_addComm0" (formula "43") (term "1,0"))
                                                                                          (rule "polySimp_addComm1" (formula "49") (term "0"))
                                                                                          (rule "polySimp_addComm1" (formula "26") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm0" (formula "22") (term "1,1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "53") (term "1,1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "49") (term "0,0"))
                                                                                          (rule "polySimp_addComm0" (formula "49") (term "0,1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "26") (term "0,1,0,0"))
                                                                                          (rule "polySimp_addComm0" (formula "53") (term "0,1,1,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,1"))
                                                                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,0,1"))
                                                                                          (rule "polySimp_mulComm0" (formula "23") (term "0,1,0,1"))
                                                                                          (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                                                          (rule "mul_literals" (formula "22") (term "0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "53") (term "1,0"))
                                                                                          (rule "mul_literals" (formula "53") (term "0,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "25"))
                                                                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                          (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                                          (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "1"))
                                                                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "23") (term "0,1"))
                                                                                          (rule "polySimp_addComm0" (formula "23") (term "0,0,1"))
                                                                                          (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                                                          (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                                                                          (rule "polySimp_addComm0" (formula "22") (term "0,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "53") (term "0"))
                                                                                          (rule "polySimp_addComm1" (formula "53") (term "0,0"))
                                                                                          (rule "polySimp_addComm0" (formula "53") (term "0,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                                          (rule "add_literals" (formula "3") (term "0,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                                          (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "19"))
                                                                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                                                          (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                                                                          (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "34"))
                                                                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                                                                          (rule "applyEq" (formula "50") (term "0,1,0,1,0") (ifseqformula "20"))
                                                                                          (rule "applyEq" (formula "25") (term "1") (ifseqformula "27"))
                                                                                          (rule "polySimp_sepPosMonomial" (formula "48"))
                                                                                          (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                                                          (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                                                          (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                                                                          (rule "polySimp_mulAssoc" (formula "48") (term "0,1"))
                                                                                          (rule "polySimp_mulComm0" (formula "48") (term "0,0,1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "48") (term "0,1"))
                                                                                          (rule "polySimp_elimOne" (formula "48") (term "0,1"))
                                                                                          (rule "applyEq" (formula "52") (term "0,1,0") (ifseqformula "48"))
                                                                                          (rule "polySimp_mulComm0" (formula "52") (term "1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "52") (term "1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "52") (term "0,1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "52") (term "0"))
                                                                                          (rule "polySimp_pullOutFactor0b" (formula "52") (term "0,0"))
                                                                                          (rule "add_literals" (formula "52") (term "1,1,0,0"))
                                                                                          (rule "polySimp_sepPosMonomial" (formula "22") (term "1"))
                                                                                          (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                                                                                          (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                                                                                          (rule "polySimp_mulAssoc" (formula "22") (term "0,1,1"))
                                                                                          (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "22") (term "0,1,1"))
                                                                                          (rule "polySimp_elimOne" (formula "22") (term "0,1,1"))
                                                                                          (rule "polySimp_sepNegMonomial" (formula "21"))
                                                                                          (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                                                          (rule "applyEq" (formula "52") (term "0,1,0") (ifseqformula "21"))
                                                                                          (rule "polySimp_mulComm0" (formula "52") (term "1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "52") (term "1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "52") (term "1,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "52") (term "0,1,0"))
                                                                                          (rule "mul_literals" (formula "52") (term "0,0,1,0"))
                                                                                          (rule "polySimp_addComm1" (formula "52") (term "0"))
                                                                                          (rule "polySimp_addAssoc" (formula "52") (term "0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "52") (term "0,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "52") (term "0,0,0,0"))
                                                                                          (rule "add_literals" (formula "52") (term "0,0,0,0,0"))
                                                                                          (rule "add_zero_left" (formula "52") (term "0,0,0,0"))
                                                                                          (rule "polySimp_pullOutFactor1" (formula "52") (term "0,0,0"))
                                                                                          (rule "add_literals" (formula "52") (term "1,0,0,0"))
                                                                                          (rule "times_zero_1" (formula "52") (term "0,0,0"))
                                                                                          (rule "add_zero_left" (formula "52") (term "0,0"))
                                                                                          (rule "applyEq" (formula "48") (term "1,1") (ifseqformula "21"))
                                                                                          (rule "polySimp_addComm0" (formula "48") (term "1"))
                                                                                          (rule "polySimp_sepNegMonomial" (formula "52"))
                                                                                          (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                                                                                          (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                                                                                          (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                                                          (rule "inEqSimp_contradEq7" (formula "22") (term "0") (ifseqformula "2"))
                                                                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                                                                          (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                                                                          (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                                                                          (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                                                                          (rule "leq_literals" (formula "22") (term "0,0"))
                                                                                           (builtin "One Step Simplification" (formula "22"))
                                                                                          (rule "true_left" (formula "22"))
                                                                                          (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "25"))
                                                                                          (rule "leq_literals" (formula "13") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "13"))
                                                                                          (rule "true_left" (formula "13"))
                                                                                          (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "21"))
                                                                                          (rule "leq_literals" (formula "9") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "9"))
                                                                                          (rule "true_left" (formula "9"))
                                                                                          (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "2"))
                                                                                          (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                                                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "21") (term "1,0,0"))
                                                                                          (rule "mul_literals" (formula "21") (term "0,1,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "21") (term "0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "21") (term "0,0,0"))
                                                                                          (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                                                                          (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                                                          (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                                                          (rule "add_zero_right" (formula "21") (term "0,0"))
                                                                                          (rule "qeq_literals" (formula "21") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "21"))
                                                                                          (rule "true_left" (formula "21"))
                                                                                          (rule "newSym_eq" (formula "21") (inst "newSymDef=mul(d_bin, Z(0(#)))") (inst "l=l_0"))
                                                                                          (rule "times_zero_1" (formula "21") (term "1,1"))
                                                                                          (rule "add_zero_right" (formula "21") (term "1"))
                                                                                          (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "21"))
                                                                                          (rule "eqSymm" (formula "22"))
                                                                                          (rule "applyEq" (formula "37") (term "0,0,1,0,2,0") (ifseqformula "22"))
                                                                                          (rule "applyEq" (formula "11") (term "0") (ifseqformula "22"))
                                                                                          (rule "applyEq" (formula "15") (term "3,0") (ifseqformula "22"))
                                                                                          (rule "applyEq" (formula "23") (term "0") (ifseqformula "22"))
                                                                                          (rule "applyEq" (formula "49") (term "0,0,0,0") (ifseqformula "22"))
                                                                                          (rule "applyEq" (formula "49") (term "0,1") (ifseqformula "22"))
                                                                                          (rule "applyEq" (formula "47") (term "0,0,1") (ifseqformula "22"))
                                                                                          (rule "applyEq" (formula "19") (term "0,0,1,1") (ifseqformula "22"))
                                                                                          (rule "applyEq" (formula "24") (term "1") (ifseqformula "22"))
                                                                                          (rule "applyEq" (formula "45") (term "0,0,1,1") (ifseqformula "22"))
                                                                                          (rule "applyEq" (formula "45") (term "0,0,1,0,1") (ifseqformula "22"))
                                                                                          (rule "elimGcdGeq_antec" (formula "23") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(1(#))"))
                                                                                          (rule "leq_literals" (formula "23") (term "0,0"))
                                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0,0,0,0"))
                                                                                          (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                                                                                          (rule "polySimp_addLiterals" (formula "23") (term "0,0,0,0"))
                                                                                          (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                                                                          (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                                                                                          (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                                                          (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                                                          (rule "add_zero_right" (formula "23") (term "0,0"))
                                                                                          (rule "leq_literals" (formula "23") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "23"))
                                                                                          (rule "elimGcdLeq_antec" (formula "11") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))"))
                                                                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
                                                                                          (rule "neg_literal" (formula "11") (term "0,0,0,0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,1,0"))
                                                                                          (rule "leq_literals" (formula "11") (term "0,0"))
                                                                                           (builtin "One Step Simplification" (formula "11"))
                                                                                          (rule "mul_literals" (formula "11") (term "1,0,0,0,0,0"))
                                                                                          (rule "polySimp_addLiterals" (formula "11") (term "0,0,0,0"))
                                                                                          (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                                                                          (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
                                                                                          (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                                                          (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                                                          (rule "add_zero_right" (formula "11") (term "0,0"))
                                                                                          (rule "qeq_literals" (formula "11") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "11"))
                                                                                          (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "16"))
                                                                                          (rule "mul_literals" (formula "29") (term "0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                                                                          (rule "mul_literals" (formula "29") (term "1"))
                                                                                          (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "29"))
                                                                                          (rule "leq_literals" (formula "7") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                                          (rule "true_left" (formula "7"))
                                                                                          (rule "inEqSimp_exactShadow1" (formula "16") (ifseqformula "15"))
                                                                                          (rule "greater_literals" (formula "16") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "16"))
                                                                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                                                                          (rule "mul_literals" (formula "16") (term "0,0,0"))
                                                                                          (rule "polySimp_pullOutFactor0b" (formula "16") (term "0"))
                                                                                          (rule "add_literals" (formula "16") (term "1,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "16") (term "1,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                                                          (rule "mul_literals" (formula "16") (term "1"))
                                                                                          (rule "Definition_axiom_for_piLemma_in_de_wiesler_Tree" (formula "43") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "43"))
                                                                                          (rule "andLeft" (formula "43"))
                                                                                          (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "26"))
                                                                                          (rule "true_left" (formula "26"))
                                                                                          (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "25") (inst "i_0=i_0") (inst "i=i"))
                                                                                           (builtin "One Step Simplification" (formula "25"))
                                                                                          (rule "expand_inInt" (formula "25") (term "1,0,0,1"))
                                                                                          (rule "expand_inInt" (formula "25") (term "1,0,0,1,0"))
                                                                                          (rule "replace_int_MAX" (formula "25") (term "1,0,1,0,0,1"))
                                                                                          (rule "replace_int_MIN" (formula "25") (term "0,1,1,0,0,1"))
                                                                                          (rule "replace_int_MAX" (formula "25") (term "1,0,1,0,0,1,0"))
                                                                                          (rule "replace_int_MIN" (formula "25") (term "0,1,1,0,0,1,0"))
                                                                                          (rule "andLeft" (formula "25"))
                                                                                          (rule "andLeft" (formula "25"))
                                                                                          (rule "andLeft" (formula "25"))
                                                                                          (rule "andLeft" (formula "25"))
                                                                                          (rule "andLeft" (formula "25"))
                                                                                          (rule "andLeft" (formula "26"))
                                                                                          (rule "andLeft" (formula "25"))
                                                                                          (rule "andLeft" (formula "25"))
                                                                                          (rule "andLeft" (formula "25"))
                                                                                          (rule "andLeft" (formula "27"))
                                                                                          (rule "notLeft" (formula "25"))
                                                                                          (rule "notLeft" (formula "25"))
                                                                                          (rule "eqSymm" (formula "33") (term "1,0"))
                                                                                          (rule "translateJavaSubInt" (formula "31") (term "3,0"))
                                                                                          (rule "translateJavaShiftLeftInt" (formula "27") (term "1"))
                                                                                          (rule "translateJavaSubInt" (formula "33") (term "0,2,0,1,0"))
                                                                                          (rule "polySimp_elimSub" (formula "31") (term "3,0"))
                                                                                          (rule "mul_literals" (formula "31") (term "1,3,0"))
                                                                                          (rule "polySimp_elimSub" (formula "33") (term "0,2,0,1,0"))
                                                                                          (rule "mul_literals" (formula "33") (term "1,0,2,0,1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "31") (term "3,0"))
                                                                                          (rule "polySimp_addComm0" (formula "33") (term "0,2,0,1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "32") (term "1,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "32") (term "1,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,1,1,0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "33") (term "1,1,0,0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "32") (term "0,0,0,0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "32") (term "1,1,0,0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "32") (term "0,1,0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "30"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "28"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "29"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "25"))
                                                                                          (rule "applyEq" (formula "30") (term "1") (ifseqformula "27"))
                                                                                          (rule "applyEq" (formula "31") (term "1,3,0") (ifseqformula "24"))
                                                                                          (rule "applyEq" (formula "24") (term "0") (ifseqformula "27"))
                                                                                          (rule "applyEq" (formula "29") (term "1") (ifseqformula "27"))
                                                                                          (rule "applyEq" (formula "28") (term "0") (ifseqformula "27"))
                                                                                          (rule "applyEq" (formula "30") (term "1") (ifseqformula "24"))
                                                                                          (rule "applyEq" (formula "33") (term "0,1,0,0,1,0,0,0") (ifseqformula "27"))
                                                                                          (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,0") (ifseqformula "27"))
                                                                                          (rule "applyEq" (formula "32") (term "0,1,0,0,1,1,0") (ifseqformula "27"))
                                                                                          (rule "applyEq" (formula "29") (term "1") (ifseqformula "24"))
                                                                                          (rule "applyEq" (formula "28") (term "0") (ifseqformula "24"))
                                                                                          (rule "applyEq" (formula "27") (term "1") (ifseqformula "24"))
                                                                                          (rule "applyEq" (formula "33") (term "0,1,0,0,1,0,0,0") (ifseqformula "24"))
                                                                                          (rule "applyEq" (formula "32") (term "0,1,0,0,1,0,0,0") (ifseqformula "24"))
                                                                                          (rule "applyEq" (formula "32") (term "0,1,0,0,1,1,0") (ifseqformula "24"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0"))
                                                                                          (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "32") (term "1,1,0,0,0"))
                                                                                          (rule "mul_literals" (formula "32") (term "0,1,1,0,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "32") (term "1,1,1,0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "1,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "32") (term "1,1,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "32") (term "1,1,1,0"))
                                                                                          (rule "mul_literals" (formula "32") (term "0,1,1,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "32") (term "1,1,1,1,0"))
                                                                                          (rule "javaShiftLeftIntDef" (formula "24") (term "0"))
                                                                                          (rule "mod_axiom" (formula "24") (term "1,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0"))
                                                                                          (rule "shiftLeftDef" (formula "24") (term "0,0"))
                                                                                          (rule "polySimp_elimNeg" (formula "24") (term "1,1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "24") (term "0,1,1,0,0"))
                                                                                          (rule "shiftLeftPositiveShiftDef" (formula "24") (term "2,0,0"))
                                                                                          (rule "polySimp_elimOneLeft0" (formula "24") (term "2,0,0"))
                                                                                          (rule "shiftRightPositiveShiftDef" (formula "24") (term "1,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0"))
                                                                                          (rule "times_zero_1" (formula "24") (term "1,0,0,0,0,0"))
                                                                                          (rule "add_zero_right" (formula "24") (term "0,0,0,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                                                                                          (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,0"))
                                                                                          (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "26"))
                                                                                          (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                                          (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                          (rule "add_literals" (formula "2") (term "0,0"))
                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                                          (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "2"))
                                                                                          (rule "leq_literals" (formula "8") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "8"))
                                                                                          (rule "true_left" (formula "8"))
                                                                                          (rule "nnf_imp2or" (formula "33") (term "0"))
                                                                                          (rule "nnf_imp2or" (formula "32") (term "0"))
                                                                                          (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "53") (term "0"))
                                                                                          (rule "translateJavaSubInt" (formula "53") (term "0,1,1,0"))
                                                                                          (rule "polySimp_elimSub" (formula "53") (term "1,0,0,0"))
                                                                                          (rule "polySimp_elimSub" (formula "53") (term "1,1,0"))
                                                                                          (rule "polySimp_elimSub" (formula "53") (term "0,1,1,0"))
                                                                                          (rule "mul_literals" (formula "53") (term "1,0,1,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "53") (term "0"))
                                                                                          (rule "polySimp_addComm0" (formula "53") (term "0,1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "53") (term "1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "53") (term "0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,0"))
                                                                                          (rule "polySimp_addComm1" (formula "53") (term "1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "53") (term "0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,1,0"))
                                                                                          (rule "mul_literals" (formula "53") (term "0,0,0,1,0"))
                                                                                          (rule "polySimp_addComm1" (formula "53") (term "0,1,0"))
                                                                                          (rule "add_literals" (formula "53") (term "0,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "53") (term "0"))
                                                                                          (rule "polySimp_homoEq" (formula "53"))
                                                                                          (rule "polySimp_mulComm0" (formula "53") (term "1,0"))
                                                                                          (rule "polySimp_mulComm1" (formula "53") (term "1,1,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "53") (term "0,1,1,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "53") (term "0,1,1,0"))
                                                                                          (rule "polySimp_mulComm1" (formula "53") (term "1,0,1,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "53") (term "0,1,0,1,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "53") (term "1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "53") (term "0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,0"))
                                                                                          (rule "polySimp_mulAssoc" (formula "53") (term "0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "53") (term "0,0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "53") (term "0,0,1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "53") (term "0"))
                                                                                          (rule "polySimp_addAssoc" (formula "53") (term "0,0"))
                                                                                          (rule "applyEq" (formula "53") (term "1,1,0,1,0") (ifseqformula "46"))
                                                                                          (rule "applyEq" (formula "53") (term "1,0,1,0") (ifseqformula "38"))
                                                                                          (rule "polySimp_mulAssoc" (formula "53") (term "0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,0"))
                                                                                          (rule "applyEq" (formula "53") (term "0,1,0,1,0,0,1,0") (ifseqformula "46"))
                                                                                          (rule "polySimp_mulComm0" (formula "53") (term "1,0,1,0,0,1,0"))
                                                                                          (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                                                          (rule "polySimp_rightDist" (formula "53") (term "1,0,1,0,0,1,0,0"))
                                                                                          (rule "mul_literals" (formula "53") (term "0,1,0,1,0,0,1,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "53") (term "0,1,0,0,1,0,0"))
                                                                                          (rule "add_literals" (formula "53") (term "0,0,1,0,0,1,0,0"))
                                                                                          (rule "applyEq" (formula "53") (term "0,0,1,0,0") (ifseqformula "55"))
                                                                                          (rule "polySimp_mulComm0" (formula "53") (term "0,1,0,0"))
                                                                                          (rule "applyEq" (formula "53") (term "0,1,0,1,0,0,1,0") (ifseqformula "46"))
                                                                                          (rule "polySimp_mulComm0" (formula "53") (term "1,0,1,0,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "53") (term "1,0,1,0,0,1,0"))
                                                                                          (rule "mul_literals" (formula "53") (term "0,1,0,1,0,0,1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "53") (term "0,1,0,0,1,0"))
                                                                                          (rule "add_literals" (formula "53") (term "0,0,1,0,0,1,0"))
                                                                                          (rule "applyEq" (formula "53") (term "0,0,1,0") (ifseqformula "55"))
                                                                                          (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                                                          (rule "applyEq" (formula "53") (term "0,1,0,1,0,1,0,0,0") (ifseqformula "46"))
                                                                                          (rule "polySimp_mulComm0" (formula "53") (term "1,0,1,0,1,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "53") (term "1,0,1,0,1,0,0,0"))
                                                                                          (rule "mul_literals" (formula "53") (term "0,1,0,1,0,1,0,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "53") (term "0,1,0,1,0,0,0"))
                                                                                          (rule "add_literals" (formula "53") (term "0,0,1,0,1,0,0,0"))
                                                                                          (rule "applyEq" (formula "53") (term "0,1,0,0,0") (ifseqformula "55"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0,0"))
                                                                                          (rule "add_literals" (formula "53") (term "1,1,0,0,0"))
                                                                                          (rule "polySimp_sepPosMonomial" (formula "53"))
                                                                                          (rule "polySimp_mulComm0" (formula "53") (term "1"))
                                                                                          (rule "polySimp_rightDist" (formula "53") (term "1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,1"))
                                                                                          (rule "polySimp_rightDist" (formula "53") (term "0,1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1"))
                                                                                          (rule "polySimp_rightDist" (formula "53") (term "0,0,1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,1"))
                                                                                          (rule "polySimp_elimOne" (formula "53") (term "1,0,0,1"))
                                                                                          (rule "polySimp_rightDist" (formula "53") (term "0,0,0,1"))
                                                                                          (rule "mul_literals" (formula "53") (term "0,0,0,0,1"))
                                                                                          (rule "expand_moduloInteger" (formula "24") (term "0"))
                                                                                          (rule "replace_int_HALFRANGE" (formula "24") (term "0,0,1,0"))
                                                                                          (rule "replace_int_MIN" (formula "24") (term "0,0"))
                                                                                          (rule "replace_int_RANGE" (formula "24") (term "1,1,0"))
                                                                                          (rule "polySimp_homoEq" (formula "24"))
                                                                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                                                          (rule "mul_literals" (formula "24") (term "0,1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                                                          (rule "polySimp_addComm0" (formula "24") (term "0,0"))
                                                                                          (rule "polySimp_sepNegMonomial" (formula "24"))
                                                                                          (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                                                          (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "18") (term "0"))
                                                                                          (rule "translateJavaSubInt" (formula "18") (term "0,1,1,0"))
                                                                                          (rule "polySimp_elimSub" (formula "18") (term "1,0,0,0"))
                                                                                          (rule "polySimp_elimSub" (formula "18") (term "0,1,1,0"))
                                                                                          (rule "mul_literals" (formula "18") (term "1,0,1,1,0"))
                                                                                          (rule "polySimp_elimSub" (formula "18") (term "1,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "18") (term "0"))
                                                                                          (rule "polySimp_addComm0" (formula "18") (term "0,1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "18") (term "1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "18") (term "0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0"))
                                                                                          (rule "polySimp_addComm1" (formula "18") (term "1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "18") (term "0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "18") (term "0"))
                                                                                          (rule "polySimp_homoEq" (formula "18"))
                                                                                          (rule "polySimp_mulComm1" (formula "18") (term "1,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "18") (term "0,1,1,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "18") (term "0,1,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "18") (term "0,0,1,1,0"))
                                                                                          (rule "polySimp_mulComm1" (formula "18") (term "1,0,1,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,1,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "18") (term "0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                                                          (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                                                          (rule "applyEq" (formula "18") (term "1,1,0,1,0") (ifseqformula "17"))
                                                                                          (rule "applyEq" (formula "18") (term "0,1,0,1,0,0,1,0") (ifseqformula "17"))
                                                                                          (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                                                          (rule "applyEq" (formula "18") (term "0,0,1,0,0") (ifseqformula "20"))
                                                                                          (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,0"))
                                                                                          (rule "applyEq" (formula "18") (term "0,1,0,1,0,0,1,0") (ifseqformula "17"))
                                                                                          (rule "applyEq" (formula "18") (term "0,0,1,0") (ifseqformula "20"))
                                                                                          (rule "polySimp_mulComm0" (formula "18") (term "0,1,0"))
                                                                                          (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                                                          (rule "applyEq" (formula "18") (term "0,1,0,1,0,1,0,0,0") (ifseqformula "17"))
                                                                                          (rule "applyEq" (formula "18") (term "0,1,0,0,0") (ifseqformula "20"))
                                                                                          (rule "polySimp_addComm1" (formula "18") (term "0,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0"))
                                                                                          (rule "polySimp_sepPosMonomial" (formula "18"))
                                                                                          (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                                                          (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                                                          (rule "polySimp_rightDist" (formula "18") (term "0,1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1"))
                                                                                          (rule "polySimp_elimOne" (formula "18") (term "1,0,1"))
                                                                                          (rule "polySimp_rightDist" (formula "18") (term "0,0,1"))
                                                                                          (rule "polySimp_rightDist" (formula "18") (term "0,0,0,1"))
                                                                                          (rule "mul_literals" (formula "18") (term "0,0,0,0,1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0,0,1"))
                                                                                          (rule "polySimp_elimOne" (formula "18") (term "1,0,0,0,1"))
                                                                                          (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                                                                          (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                                                                          (rule "Definition_axiom_for_binarySearchInvariant_in_de_wiesler_Tree" (formula "14") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "14"))
                                                                                          (rule "andLeft" (formula "14"))
                                                                                          (rule "andLeft" (formula "14"))
                                                                                          (rule "andLeft" (formula "14"))
                                                                                          (rule "translateJavaSubInt" (formula "17") (term "1,0"))
                                                                                          (rule "translateJavaSubInt" (formula "16") (term "0,2,0,1"))
                                                                                          (rule "translateJavaSubInt" (formula "16") (term "0,0"))
                                                                                          (rule "translateJavaSubInt" (formula "15") (term "1"))
                                                                                          (rule "translateJavaSubInt" (formula "14") (term "0"))
                                                                                          (rule "eqSymm" (formula "17") (term "0"))
                                                                                          (rule "polySimp_elimSub" (formula "16") (term "0,2,0,1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,0,2,0,1"))
                                                                                          (rule "polySimp_elimSub" (formula "16") (term "0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0"))
                                                                                          (rule "polySimp_elimSub" (formula "15") (term "1"))
                                                                                          (rule "mul_literals" (formula "15") (term "1,1"))
                                                                                          (rule "polySimp_elimSub" (formula "14") (term "0"))
                                                                                          (rule "mul_literals" (formula "14") (term "1,0"))
                                                                                          (rule "polySimp_elimSub" (formula "17") (term "0,0"))
                                                                                          (rule "mul_literals" (formula "17") (term "1,0,0"))
                                                                                          (rule "polySimp_homoEq" (formula "16") (term "0"))
                                                                                          (rule "polySimp_homoEq" (formula "17") (term "0"))
                                                                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "17") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm0" (formula "16") (term "0,2,0,1"))
                                                                                          (rule "polySimp_addComm0" (formula "15") (term "1"))
                                                                                          (rule "polySimp_addComm0" (formula "14") (term "0"))
                                                                                          (rule "polySimp_addComm0" (formula "16") (term "1,1,0,0"))
                                                                                          (rule "polySimp_addComm0" (formula "17") (term "1,1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "16") (term "0,1,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "17") (term "1,0,0"))
                                                                                          (rule "mul_literals" (formula "17") (term "0,1,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                                                                                          (rule "polySimp_addComm0" (formula "17") (term "0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "16") (term "1"))
                                                                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "17") (term "1"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "14"))
                                                                                          (rule "inEqSimp_homoInEq0" (formula "15"))
                                                                                          (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                                                          (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "30"))
                                                                                          (rule "applyEq" (formula "17") (term "0,1,0,0") (ifseqformula "30"))
                                                                                          (rule "polySimp_sepNegMonomial" (formula "16") (term "0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "16") (term "0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "16") (term "0,0"))
                                                                                          (rule "polySimp_sepNegMonomial" (formula "17") (term "0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "17") (term "0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "17") (term "0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1"))
                                                                                          (rule "polySimp_mulComm0" (formula "16") (term "1,1"))
                                                                                          (rule "polySimp_rightDist" (formula "16") (term "1,1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1"))
                                                                                          (rule "mul_literals" (formula "16") (term "0,1,1"))
                                                                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,1"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                                                          (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                                                          (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                                                          (rule "mul_literals" (formula "15") (term "0,1"))
                                                                                          (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                                                                          (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "8"))
                                                                                          (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                                                          (rule "mul_literals" (formula "14") (term "0,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                                                          (rule "add_literals" (formula "14") (term "0,0"))
                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                                                                          (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                                                          (rule "inEqSimp_subsumption4" (formula "14") (ifseqformula "10"))
                                                                                          (rule "mul_literals" (formula "14") (term "0,1,0"))
                                                                                          (rule "greater_literals" (formula "14") (term "0,0"))
                                                                                           (builtin "One Step Simplification" (formula "14"))
                                                                                          (rule "leq_literals" (formula "14") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "14"))
                                                                                          (rule "true_left" (formula "14"))
                                                                                          (rule "Definition_axiom_for_piLemmaRight_in_de_wiesler_Tree" (formula "54") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "54"))
                                                                                          (rule "translateJavaAddInt" (formula "54") (term "0,0,0"))
                                                                                          (rule "translateJavaSubInt" (formula "54") (term "0,1,1"))
                                                                                          (rule "translateJavaSubInt" (formula "54") (term "0"))
                                                                                          (rule "translateJavaMulInt" (formula "54") (term "0,0,0,0"))
                                                                                          (rule "eqSymm" (formula "54"))
                                                                                          (rule "polySimp_elimSub" (formula "54") (term "0,1,0"))
                                                                                          (rule "mul_literals" (formula "54") (term "1,0,1,0"))
                                                                                          (rule "eqSymm" (formula "54"))
                                                                                          (rule "polySimp_elimSub" (formula "54") (term "1,1"))
                                                                                          (rule "polySimp_elimSub" (formula "54") (term "0"))
                                                                                          (rule "eqSymm" (formula "54"))
                                                                                          (rule "polySimp_mulComm0" (formula "54") (term "0,0,0,1"))
                                                                                          (rule "polySimp_addComm0" (formula "54") (term "0,1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "54") (term "0,0,1"))
                                                                                          (rule "polySimp_addComm1" (formula "54") (term "1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "54") (term "1"))
                                                                                          (rule "applyEq" (formula "54") (term "0,1,0,1,0") (ifseqformula "20"))
                                                                                          (rule "applyEq" (formula "58") (term "0") (ifseqformula "54"))
                                                                                          (rule "polySimp_homoEq" (formula "58"))
                                                                                          (rule "polySimp_mulComm0" (formula "58") (term "1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "58") (term "1,0"))
                                                                                          (rule "polySimp_mulAssoc" (formula "58") (term "0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "58") (term "0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "58") (term "0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "58") (term "0,1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "58") (term "0"))
                                                                                          (rule "polySimp_sepNegMonomial" (formula "58"))
                                                                                          (rule "polySimp_mulLiterals" (formula "58") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "58") (term "0"))
                                                                                          (rule "applyEq" (formula "54") (term "1,1") (ifseqformula "58"))
                                                                                          (rule "polySimp_addAssoc" (formula "54") (term "1"))
                                                                                          (rule "polySimp_addComm0" (formula "54") (term "0,1"))
                                                                                          (rule "polySimp_pullOutFactor2b" (formula "54") (term "1"))
                                                                                          (rule "add_literals" (formula "54") (term "1,1,1"))
                                                                                          (rule "times_zero_1" (formula "54") (term "1,1"))
                                                                                          (rule "add_zero_right" (formula "54") (term "1"))
                                                                                          (rule "Contract_axiom_for_piLemmaLeft_in_Tree" (formula "53") (term "0"))
                                                                                          (rule "translateJavaSubInt" (formula "53") (term "1,1,1,0,0,0"))
                                                                                          (rule "replace_known_left" (formula "53") (term "1") (ifseqformula "54"))
                                                                                           (builtin "One Step Simplification" (formula "53") (ifInst ""  (formula "4")))
                                                                                          (rule "true_left" (formula "53"))
                                                                                          (rule "Definition_axiom_for_piLemmaLeft_in_de_wiesler_Tree" (formula "53") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "53"))
                                                                                          (rule "translateJavaSubInt" (formula "53") (term "0"))
                                                                                          (rule "translateJavaSubInt" (formula "53") (term "0,1,1"))
                                                                                          (rule "translateJavaMulInt" (formula "53") (term "0,1,0"))
                                                                                          (rule "eqSymm" (formula "53"))
                                                                                          (rule "polySimp_elimSub" (formula "53") (term "1"))
                                                                                          (rule "polySimp_elimSub" (formula "53") (term "0,1,0"))
                                                                                          (rule "mul_literals" (formula "53") (term "1,0,1,0"))
                                                                                          (rule "polySimp_elimSub" (formula "53") (term "1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "53") (term "0,0,1,1"))
                                                                                          (rule "polySimp_addComm0" (formula "53") (term "0,1,0"))
                                                                                          (rule "polySimp_addComm1" (formula "53") (term "1,0"))
                                                                                          (rule "applyEq" (formula "53") (term "0,1,0,1,0") (ifseqformula "20"))
                                                                                          (rule "applyEq" (formula "54") (term "0") (ifseqformula "53"))
                                                                                          (rule "polySimp_homoEq" (formula "54"))
                                                                                          (rule "polySimp_mulComm0" (formula "54") (term "1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "54") (term "1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "54") (term "1,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "54") (term "1,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "54") (term "0,1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "54") (term "0"))
                                                                                          (rule "polySimp_sepPosMonomial" (formula "54"))
                                                                                          (rule "polySimp_mulComm0" (formula "54") (term "1"))
                                                                                          (rule "polySimp_rightDist" (formula "54") (term "1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "54") (term "1,1"))
                                                                                          (rule "polySimp_elimOne" (formula "54") (term "1,1"))
                                                                                          (rule "polySimp_mulComm0" (formula "54") (term "0,1"))
                                                                                          (rule "applyEq" (formula "53") (term "0,1,1") (ifseqformula "54"))
                                                                                          (rule "polySimp_mulComm0" (formula "53") (term "1,1"))
                                                                                          (rule "polySimp_rightDist" (formula "53") (term "1,1"))
                                                                                          (rule "polySimp_mulAssoc" (formula "53") (term "0,1,1"))
                                                                                          (rule "polySimp_mulComm0" (formula "53") (term "0,0,1,1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "53") (term "0,1,1"))
                                                                                          (rule "polySimp_elimOne" (formula "53") (term "0,1,1"))
                                                                                          (rule "polySimp_addAssoc" (formula "53") (term "1"))
                                                                                          (rule "polySimp_addComm0" (formula "53") (term "0,1"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "53") (term "1"))
                                                                                          (rule "add_literals" (formula "53") (term "1,1,1"))
                                                                                          (rule "times_zero_1" (formula "53") (term "1,1"))
                                                                                          (rule "add_zero_right" (formula "53") (term "1"))
                                                                                          (rule "nnf_notAnd" (formula "36") (term "1,0,0"))
                                                                                          (rule "inEqSimp_notGeq" (formula "36") (term "1,1,0,0"))
                                                                                          (rule "mul_literals" (formula "36") (term "1,0,0,1,1,0,0"))
                                                                                          (rule "add_literals" (formula "36") (term "0,0,1,1,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,1,0,0"))
                                                                                          (rule "mul_literals" (formula "36") (term "1,1,1,0,0"))
                                                                                          (rule "inEqSimp_notLeq" (formula "36") (term "0,1,0,0"))
                                                                                          (rule "mul_literals" (formula "36") (term "1,0,0,0,1,0,0"))
                                                                                          (rule "add_literals" (formula "36") (term "0,0,0,1,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,1,0,0"))
                                                                                          (rule "mul_literals" (formula "36") (term "1,0,1,0,0"))
                                                                                          (rule "nnf_notAnd" (formula "36") (term "0,0,0"))
                                                                                          (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,0,1,0,0,0"))
                                                                                          (rule "mul_literals" (formula "36") (term "0,1,0,0,1,0,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "36") (term "0,0,1,0,0,0"))
                                                                                          (rule "add_literals" (formula "36") (term "0,0,0,1,0,0,0"))
                                                                                          (rule "add_zero_left" (formula "36") (term "0,0,1,0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
                                                                                          (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,0"))
                                                                                          (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0,0"))
                                                                                          (rule "add_literals" (formula "36") (term "0,0,0,0,0,0"))
                                                                                          (rule "add_zero_left" (formula "36") (term "0,0,0,0,0"))
                                                                                          (rule "nnf_notAnd" (formula "35") (term "0,0,0"))
                                                                                          (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,0"))
                                                                                          (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,0"))
                                                                                          (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,0"))
                                                                                          (rule "add_zero_left" (formula "35") (term "0,0,1,0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0"))
                                                                                          (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0,0"))
                                                                                          (rule "mul_literals" (formula "35") (term "1,0,0,0,0,0,0"))
                                                                                          (rule "add_literals" (formula "35") (term "0,0,0,0,0,0"))
                                                                                          (rule "add_zero_left" (formula "35") (term "0,0,0,0,0"))
                                                                                          (rule "nnf_notAnd" (formula "35") (term "1,0,0"))
                                                                                          (rule "inEqSimp_notGeq" (formula "35") (term "1,1,0,0"))
                                                                                          (rule "mul_literals" (formula "35") (term "1,0,0,1,1,0,0"))
                                                                                          (rule "add_literals" (formula "35") (term "0,0,1,1,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,1,0,0"))
                                                                                          (rule "mul_literals" (formula "35") (term "1,1,1,0,0"))
                                                                                          (rule "inEqSimp_notLeq" (formula "35") (term "0,1,0,0"))
                                                                                          (rule "mul_literals" (formula "35") (term "1,0,0,0,1,0,0"))
                                                                                          (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,1,0,0"))
                                                                                          (rule "mul_literals" (formula "35") (term "1,0,1,0,0"))
                                                                                          (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "34") (term "0") (inst "j=j") (inst "i=i"))
                                                                                           (builtin "One Step Simplification" (formula "34"))
                                                                                          (rule "expand_inInt" (formula "34") (term "1,0,0,1,0"))
                                                                                          (rule "expand_inInt" (formula "34") (term "1,0,0"))
                                                                                          (rule "replace_int_MIN" (formula "34") (term "0,1,1,0,0,1,0"))
                                                                                          (rule "replace_int_MAX" (formula "34") (term "1,0,1,0,0,1,0"))
                                                                                          (rule "replace_int_MIN" (formula "34") (term "0,1,1,0,0"))
                                                                                          (rule "replace_int_MAX" (formula "34") (term "1,0,1,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,0"))
                                                                                          (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,0"))
                                                                                          (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "34") (term "1,0,0,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,0,1,0"))
                                                                                          (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,0,1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,0,1,0"))
                                                                                          (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,0,1,0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0,0,1,0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "34") (term "1,0,1,0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "34") (term "1,1,0,0,1,0"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "34") (term "1,1,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0"))
                                                                                          (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,0,1,0"))
                                                                                          (rule "mul_literals" (formula "34") (term "0,1,1,0,0,0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,0,1,0"))
                                                                                          (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "36") (term "1,0,2,0,1,0"))
                                                                                          (rule "translateJavaSubInt" (formula "36") (term "0,1,1,1,0,2,0,1,0"))
                                                                                          (rule "polySimp_elimSub" (formula "36") (term "1,0,0,1,0,2,0,1,0"))
                                                                                          (rule "polySimp_elimSub" (formula "36") (term "1,1,1,0,2,0,1,0"))
                                                                                          (rule "polySimp_elimSub" (formula "36") (term "0,1,1,1,0,2,0,1,0"))
                                                                                          (rule "mul_literals" (formula "36") (term "1,0,1,1,1,0,2,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "36") (term "1,0,2,0,1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "36") (term "0,1,0,1,0,2,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "36") (term "0,1,1,0,2,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,1,0,2,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,1,0,2,0,1,0"))
                                                                                          (rule "polySimp_addComm1" (formula "36") (term "1,1,0,2,0,1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "36") (term "0,1,1,0,2,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,2,0,1,0"))
                                                                                          (rule "polySimp_mulComm1" (formula "36") (term "1,1,0,2,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "36") (term "0,1,1,0,2,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "36") (term "0,1,0,2,0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "36") (term "0,0,1,0,2,0,1,0"))
                                                                                          (rule "polySimp_mulComm1" (formula "36") (term "1,0,1,0,2,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "36") (term "0,1,0,1,0,2,0,1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "36") (term "0,2,0,1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "36") (term "0,0,2,0,1,0"))
                                                                                          (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "35") (term "0,1,1,0"))
                                                                                          (rule "translateJavaSubInt" (formula "35") (term "0,1,1,0,1,1,0"))
                                                                                          (rule "polySimp_elimSub" (formula "35") (term "1,0,0,0,1,1,0"))
                                                                                          (rule "polySimp_elimSub" (formula "35") (term "1,1,0,1,1,0"))
                                                                                          (rule "polySimp_elimSub" (formula "35") (term "0,1,1,0,1,1,0"))
                                                                                          (rule "mul_literals" (formula "35") (term "1,0,1,1,0,1,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "35") (term "0,1,1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "35") (term "0,1,0,0,1,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "35") (term "0,1,0,1,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,1,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0,1,1,0"))
                                                                                          (rule "polySimp_addComm1" (formula "35") (term "1,0,1,1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "35") (term "0,1,0,1,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "35") (term "0,1,1,0"))
                                                                                          (rule "polySimp_mulComm1" (formula "35") (term "1,0,1,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,1,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "35") (term "0,0,1,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "35") (term "0,0,0,1,1,0"))
                                                                                          (rule "polySimp_mulComm1" (formula "35") (term "1,0,0,1,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,0,1,1,0"))
                                                                                          (rule "inEqSimp_homoInEq0" (formula "35") (term "1,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "35") (term "1,0,1,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "35") (term "0,1,0,1,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,1,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0,1,1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "35") (term "0,1,1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,1,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "35") (term "1,1,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "35") (term "1,1,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "35") (term "0,1,1,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,1,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "35") (term "1,0,1,1,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "35") (term "0,0,1,1,1,0"))
                                                                                          (rule "mul_literals" (formula "35") (term "0,0,0,1,1,1,0"))
                                                                                          (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "35") (term "0,0,1,0"))
                                                                                          (rule "translateJavaSubInt" (formula "35") (term "0,1,1,0,0,1,0"))
                                                                                          (rule "polySimp_elimSub" (formula "35") (term "1,0,0,0,0,1,0"))
                                                                                          (rule "polySimp_elimSub" (formula "35") (term "1,1,0,0,1,0"))
                                                                                          (rule "polySimp_elimSub" (formula "35") (term "0,1,1,0,0,1,0"))
                                                                                          (rule "mul_literals" (formula "35") (term "1,0,1,1,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "35") (term "0,1,0,0,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0,0,1,0"))
                                                                                          (rule "polySimp_addComm1" (formula "35") (term "1,0,0,1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "35") (term "0,1,0,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "35") (term "0,0,1,0"))
                                                                                          (rule "polySimp_mulComm1" (formula "35") (term "1,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "35") (term "0,0,0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "35") (term "0,0,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm1" (formula "35") (term "1,0,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "35") (term "0,1,0,0,0,1,0"))
                                                                                          (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "35") (term "0,1,0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "35") (term "0,0,1,0,0,1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,1,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "35") (term "1,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "35") (term "0,1,0,1,0"))
                                                                                          (rule "mul_literals" (formula "35") (term "0,0,1,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "35") (term "1,0,1,0,1,0"))
                                                                                          (rule "jdiv_axiom" (formula "47") (term "0,1,0,2,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "47") (term "0,0,2,1"))
                                                                                          (rule "eqSymm" (formula "47"))
                                                                                          (rule "inEqSimp_subsumption6" (formula "47") (term "0,0") (ifseqformula "25"))
                                                                                          (rule "mul_literals" (formula "47") (term "1,1,0,0,0"))
                                                                                          (rule "greater_literals" (formula "47") (term "0,0,0,0"))
                                                                                           (builtin "One Step Simplification" (formula "47"))
                                                                                          (rule "leq_literals" (formula "47") (term "0,0,0"))
                                                                                           (builtin "One Step Simplification" (formula "47"))
                                                                                          (rule "eqSymm" (formula "47"))
                                                                                          (rule "applyEq" (formula "63") (term "0,0,0") (ifseqformula "47"))
                                                                                          (rule "applyEqRigid" (formula "57") (term "0,1,0,0") (ifseqformula "47"))
                                                                                          (rule "applyEqRigid" (formula "48") (term "0,1,0,2,0") (ifseqformula "47"))
                                                                                          (rule "applyEq" (formula "54") (term "0,1") (ifseqformula "47"))
                                                                                          (rule "applyEq" (formula "63") (term "1") (ifseqformula "47"))
                                                                                          (rule "applyEqRigid" (formula "57") (term "0,0,0,1,1") (ifseqformula "47"))
                                                                                          (rule "applyEqRigid" (formula "59") (term "0,0,1") (ifseqformula "47"))
                                                                                          (rule "applyEqRigid" (formula "57") (term "0,0,1,0,1") (ifseqformula "47"))
                                                                                          (rule "applyEqRigid" (formula "21") (term "1,0,1") (ifseqformula "47"))
                                                                                          (rule "applyEqRigid" (formula "55") (term "0,0,0,1") (ifseqformula "47"))
                                                                                          (rule "applyEqRigid" (formula "57") (term "1,0,0,1") (ifseqformula "47"))
                                                                                          (rule "polyDiv_pullOut" (formula "57") (term "1,0,0,1") (inst "polyDivCoeff=l_0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,2,1,0,0,1"))
                                                                                          (rule "equal_literals" (formula "57") (term "0,1,0,0,1"))
                                                                                           (builtin "One Step Simplification" (formula "57"))
                                                                                          (rule "polySimp_pullOutFactor0" (formula "57") (term "0,0,1,0,0,1"))
                                                                                          (rule "add_literals" (formula "57") (term "1,0,0,1,0,0,1"))
                                                                                          (rule "times_zero_1" (formula "57") (term "0,0,1,0,0,1"))
                                                                                          (rule "div_literals" (formula "57") (term "0,1,0,0,1"))
                                                                                          (rule "add_zero_left" (formula "57") (term "1,0,0,1"))
                                                                                          (rule "polySimp_addComm1" (formula "57") (term "0,0,1"))
                                                                                          (rule "polyDiv_pullOut" (formula "55") (term "0,0,0,1") (inst "polyDivCoeff=l_0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0,2,0,0,0,1"))
                                                                                          (rule "equal_literals" (formula "55") (term "0,0,0,0,1"))
                                                                                           (builtin "One Step Simplification" (formula "55"))
                                                                                          (rule "polySimp_pullOutFactor0" (formula "55") (term "0,0,0,0,0,1"))
                                                                                          (rule "add_literals" (formula "55") (term "1,0,0,0,0,0,1"))
                                                                                          (rule "times_zero_1" (formula "55") (term "0,0,0,0,0,1"))
                                                                                          (rule "div_literals" (formula "55") (term "0,0,0,0,1"))
                                                                                          (rule "add_zero_left" (formula "55") (term "0,0,0,1"))
                                                                                          (rule "polyDiv_pullOut" (formula "21") (term "1,0,1") (inst "polyDivCoeff=l_0"))
                                                                                          (rule "equal_literals" (formula "21") (term "0,1,0,1"))
                                                                                           (builtin "One Step Simplification" (formula "21"))
                                                                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,1,0,1"))
                                                                                          (rule "polySimp_pullOutFactor0" (formula "21") (term "0,0,1,0,1"))
                                                                                          (rule "add_literals" (formula "21") (term "1,0,0,1,0,1"))
                                                                                          (rule "times_zero_1" (formula "21") (term "0,0,1,0,1"))
                                                                                          (rule "div_literals" (formula "21") (term "0,1,0,1"))
                                                                                          (rule "add_zero_left" (formula "21") (term "1,0,1"))
                                                                                          (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                                                                                          (rule "polySimp_pullOutFactor3b" (formula "21") (term "0,0,1"))
                                                                                          (rule "polyDiv_pullOut" (formula "59") (term "0,0,1") (inst "polyDivCoeff=l_0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0,2,0,0,1"))
                                                                                          (rule "equal_literals" (formula "59") (term "0,0,0,1"))
                                                                                           (builtin "One Step Simplification" (formula "59"))
                                                                                          (rule "polySimp_pullOutFactor0" (formula "59") (term "0,0,0,0,1"))
                                                                                          (rule "add_literals" (formula "59") (term "1,0,0,0,0,1"))
                                                                                          (rule "times_zero_1" (formula "59") (term "0,0,0,0,1"))
                                                                                          (rule "div_literals" (formula "59") (term "0,0,0,1"))
                                                                                          (rule "add_zero_left" (formula "59") (term "0,0,1"))
                                                                                          (rule "polyDiv_pullOut" (formula "63") (term "1") (inst "polyDivCoeff=l_0"))
                                                                                          (rule "equal_literals" (formula "63") (term "0,1"))
                                                                                           (builtin "One Step Simplification" (formula "63"))
                                                                                          (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,1"))
                                                                                          (rule "polySimp_pullOutFactor0" (formula "63") (term "0,0,1"))
                                                                                          (rule "add_literals" (formula "63") (term "1,0,0,1"))
                                                                                          (rule "times_zero_1" (formula "63") (term "0,0,1"))
                                                                                          (rule "div_literals" (formula "63") (term "0,1"))
                                                                                          (rule "add_zero_left" (formula "63") (term "1"))
                                                                                          (rule "polyDiv_pullOut" (formula "54") (term "0,1") (inst "polyDivCoeff=l_0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,2,0,1"))
                                                                                          (rule "equal_literals" (formula "54") (term "0,0,1"))
                                                                                           (builtin "One Step Simplification" (formula "54"))
                                                                                          (rule "polySimp_pullOutFactor0" (formula "54") (term "0,0,0,1"))
                                                                                          (rule "add_literals" (formula "54") (term "1,0,0,0,1"))
                                                                                          (rule "times_zero_1" (formula "54") (term "0,0,0,1"))
                                                                                          (rule "div_literals" (formula "54") (term "0,0,1"))
                                                                                          (rule "add_zero_left" (formula "54") (term "0,1"))
                                                                                          (rule "polyDiv_pullOut" (formula "48") (term "0,1,0,2,0") (inst "polyDivCoeff=l_0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,2,0,1,0,2,0"))
                                                                                          (rule "equal_literals" (formula "48") (term "0,0,1,0,2,0"))
                                                                                           (builtin "One Step Simplification" (formula "48"))
                                                                                          (rule "polySimp_pullOutFactor0" (formula "48") (term "0,0,0,1,0,2,0"))
                                                                                          (rule "add_literals" (formula "48") (term "1,0,0,0,1,0,2,0"))
                                                                                          (rule "times_zero_1" (formula "48") (term "0,0,0,1,0,2,0"))
                                                                                          (rule "div_literals" (formula "48") (term "0,0,1,0,2,0"))
                                                                                          (rule "add_zero_left" (formula "48") (term "0,1,0,2,0"))
                                                                                          (rule "polySimp_addComm0" (formula "48") (term "0,2,0"))
                                                                                          (rule "polyDiv_pullOut" (formula "47") (term "1") (inst "polyDivCoeff=l_0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,2,1"))
                                                                                          (rule "equal_literals" (formula "47") (term "0,1"))
                                                                                           (builtin "One Step Simplification" (formula "47"))
                                                                                          (rule "polySimp_pullOutFactor0" (formula "47") (term "0,0,1"))
                                                                                          (rule "add_literals" (formula "47") (term "1,0,0,1"))
                                                                                          (rule "times_zero_1" (formula "47") (term "0,0,1"))
                                                                                          (rule "div_literals" (formula "47") (term "0,1"))
                                                                                          (rule "add_zero_left" (formula "47") (term "1"))
                                                                                          (rule "polyDiv_pullOut" (formula "63") (term "0,0,0") (inst "polyDivCoeff=l_0"))
                                                                                          (rule "equal_literals" (formula "63") (term "0,0,0,0"))
                                                                                           (builtin "One Step Simplification" (formula "63"))
                                                                                          (rule "polySimp_mulLiterals" (formula "63") (term "1,0,0,0,0,0"))
                                                                                          (rule "polySimp_pullOutFactor0" (formula "63") (term "0,0,0,0,0"))
                                                                                          (rule "add_literals" (formula "63") (term "1,0,0,0,0,0"))
                                                                                          (rule "times_zero_1" (formula "63") (term "0,0,0,0,0"))
                                                                                          (rule "div_literals" (formula "63") (term "0,0,0,0"))
                                                                                          (rule "add_zero_left" (formula "63") (term "0,0,0"))
                                                                                          (rule "polyDiv_pullOut" (formula "57") (term "0,0,0,1,1") (inst "polyDivCoeff=l_0"))
                                                                                          (rule "equal_literals" (formula "57") (term "0,0,0,0,1,1"))
                                                                                           (builtin "One Step Simplification" (formula "57"))
                                                                                          (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,0,0,0,1,1"))
                                                                                          (rule "polySimp_pullOutFactor0" (formula "57") (term "0,0,0,0,0,1,1"))
                                                                                          (rule "add_literals" (formula "57") (term "1,0,0,0,0,0,1,1"))
                                                                                          (rule "times_zero_1" (formula "57") (term "0,0,0,0,0,1,1"))
                                                                                          (rule "div_literals" (formula "57") (term "0,0,0,0,1,1"))
                                                                                          (rule "add_zero_left" (formula "57") (term "0,0,0,1,1"))
                                                                                          (rule "polyDiv_pullOut" (formula "57") (term "0,0,1,0,1") (inst "polyDivCoeff=l_0"))
                                                                                          (rule "equal_literals" (formula "57") (term "0,0,0,1,0,1"))
                                                                                           (builtin "One Step Simplification" (formula "57"))
                                                                                          (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,0,0,1,0,1"))
                                                                                          (rule "polySimp_pullOutFactor0" (formula "57") (term "0,0,0,0,1,0,1"))
                                                                                          (rule "add_literals" (formula "57") (term "1,0,0,0,0,1,0,1"))
                                                                                          (rule "times_zero_1" (formula "57") (term "0,0,0,0,1,0,1"))
                                                                                          (rule "div_literals" (formula "57") (term "0,0,0,1,0,1"))
                                                                                          (rule "add_zero_left" (formula "57") (term "0,0,1,0,1"))
                                                                                          (rule "polyDiv_pullOut" (formula "57") (term "0,1,0,0") (inst "polyDivCoeff=l_0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "57") (term "1,0,0,2,0,1,0,0"))
                                                                                          (rule "equal_literals" (formula "57") (term "0,0,1,0,0"))
                                                                                           (builtin "One Step Simplification" (formula "57"))
                                                                                          (rule "polySimp_pullOutFactor0" (formula "57") (term "0,0,0,1,0,0"))
                                                                                          (rule "add_literals" (formula "57") (term "1,0,0,0,1,0,0"))
                                                                                          (rule "times_zero_1" (formula "57") (term "0,0,0,1,0,0"))
                                                                                          (rule "div_literals" (formula "57") (term "0,0,1,0,0"))
                                                                                          (rule "add_zero_left" (formula "57") (term "0,1,0,0"))
                                                                                          (rule "nnf_imp2or" (formula "34") (term "0"))
                                                                                          (rule "arrayLengthIsAnInt" (formula "33") (term "0"))
                                                                                          (rule "expand_inInt" (formula "33"))
                                                                                          (rule "replace_int_MIN" (formula "33") (term "0,1"))
                                                                                          (rule "replace_int_MAX" (formula "33") (term "1,0"))
                                                                                          (rule "andLeft" (formula "33"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "34"))
                                                                                          (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "33"))
                                                                                          (rule "polySimp_mulComm0" (formula "35") (term "0,0"))
                                                                                          (rule "polySimp_addComm0" (formula "35") (term "0"))
                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                                                                                          (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "35") (term "0"))
                                                                                          (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "35"))
                                                                                          (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                                                                          (rule "mul_literals" (formula "15") (term "0,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                                                          (rule "add_literals" (formula "15") (term "0,0"))
                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                                                          (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                                                          (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "15"))
                                                                                          (rule "leq_literals" (formula "8") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "8"))
                                                                                          (rule "true_left" (formula "8"))
                                                                                          (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "35"))
                                                                                          (rule "polySimp_mulAssoc" (formula "48") (term "0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "48") (term "0,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "48") (term "0,0"))
                                                                                          (rule "polySimp_addComm0" (formula "48") (term "0"))
                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "48"))
                                                                                          (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                                                                          (rule "elimGcdLeq_antec" (formula "48") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=pow(Z(2(#)), l)") (inst "elimGcdRightDiv=Z(3(2(8(1(4(7(3(7(0(1(#)))))))))))"))
                                                                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,0"))
                                                                                          (rule "neg_literal" (formula "48") (term "0,0,0,0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0,0,0,1,0"))
                                                                                          (rule "leq_literals" (formula "48") (term "0,0"))
                                                                                           (builtin "One Step Simplification" (formula "48"))
                                                                                          (rule "mul_literals" (formula "48") (term "1,0,0,0,0,0"))
                                                                                          (rule "polySimp_addLiterals" (formula "48") (term "0,0,0,0"))
                                                                                          (rule "add_literals" (formula "48") (term "0,0,0,0"))
                                                                                          (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0"))
                                                                                          (rule "add_literals" (formula "48") (term "1,1,0,0"))
                                                                                          (rule "times_zero_1" (formula "48") (term "1,0,0"))
                                                                                          (rule "add_zero_right" (formula "48") (term "0,0"))
                                                                                          (rule "qeq_literals" (formula "48") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "48"))
                                                                                          (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "14"))
                                                                                          (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                                                                          (rule "mul_literals" (formula "13") (term "0,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                                                          (rule "add_literals" (formula "13") (term "0,0"))
                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                                                                          (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                                                          (rule "inEqSimp_subsumption4" (formula "13") (ifseqformula "9"))
                                                                                          (rule "greater_literals" (formula "13") (term "0,0"))
                                                                                           (builtin "One Step Simplification" (formula "13"))
                                                                                          (rule "mul_literals" (formula "13") (term "0,0"))
                                                                                          (rule "leq_literals" (formula "13") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "13"))
                                                                                          (rule "true_left" (formula "13"))
                                                                                          (rule "inEqSimp_exactShadow1" (formula "19") (ifseqformula "48"))
                                                                                          (rule "mul_literals" (formula "19") (term "1,0,1"))
                                                                                          (rule "greater_literals" (formula "19") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "19"))
                                                                                          (rule "polySimp_rightDist" (formula "19") (term "0,0"))
                                                                                          (rule "mul_literals" (formula "19") (term "0,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                                                          (rule "add_literals" (formula "19") (term "0,0"))
                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                                                                          (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                                                          (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "19"))
                                                                                          (rule "leq_literals" (formula "7") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "7"))
                                                                                          (rule "true_left" (formula "7"))
                                                                                          (rule "arrayLengthNotNegative" (formula "36") (term "0"))
                                                                                          (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "36"))
                                                                                          (rule "leq_literals" (formula "34") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "34"))
                                                                                          (rule "true_left" (formula "34"))
                                                                                          (rule "arrayLengthIsAnInt" (formula "32") (term "0"))
                                                                                          (rule "expand_inInt" (formula "32"))
                                                                                          (rule "replace_int_MAX" (formula "32") (term "1,0"))
                                                                                          (rule "replace_int_MIN" (formula "32") (term "0,1"))
                                                                                          (rule "andLeft" (formula "32"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "33"))
                                                                                          (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "32"))
                                                                                          (rule "polySimp_mulComm0" (formula "34") (term "0,0"))
                                                                                          (rule "polySimp_addComm0" (formula "34") (term "0"))
                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                                                          (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                                                          (rule "arrayLengthNotNegative" (formula "34") (term "0"))
                                                                                          (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "34"))
                                                                                          (rule "leq_literals" (formula "33") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "33"))
                                                                                          (rule "true_left" (formula "33"))
                                                                                          (rule "div_axiom" (formula "27") (term "0,0,0,1,0,0") (inst "quotient=quotient_0"))
                                                                                          (rule "mul_literals" (formula "27") (term "1,1,1,1,1"))
                                                                                          (rule "equal_literals" (formula "27") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "27"))
                                                                                          (rule "qeq_literals" (formula "27") (term "0,1"))
                                                                                           (builtin "One Step Simplification" (formula "27"))
                                                                                          (rule "andLeft" (formula "27"))
                                                                                          (rule "andLeft" (formula "27"))
                                                                                          (rule "polySimp_addComm1" (formula "29") (term "1"))
                                                                                          (rule "add_literals" (formula "29") (term "0,1"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "28"))
                                                                                          (rule "inEqSimp_homoInEq1" (formula "29"))
                                                                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,0"))
                                                                                          (rule "polySimp_addComm1" (formula "29") (term "0"))
                                                                                          (rule "applyEq" (formula "30") (term "0,0,0,1,0,0") (ifseqformula "27"))
                                                                                          (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "30") (term "0,0,1,0,0"))
                                                                                          (rule "applyEq" (formula "30") (term "0,1,1,2,1,0,0") (ifseqformula "27"))
                                                                                          (rule "polySimp_addComm0" (formula "30") (term "1,2,1,0,0"))
                                                                                          (rule "applyEq" (formula "30") (term "0,1,1,1,1,1,0,0") (ifseqformula "27"))
                                                                                          (rule "polySimp_addComm0" (formula "30") (term "1,1,1,1,0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "29"))
                                                                                          (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                                                          (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                                                                          (rule "mul_literals" (formula "29") (term "0,1"))
                                                                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,1,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,1,0,0"))
                                                                                          (rule "mul_literals" (formula "30") (term "0,1,0,1,0,0"))
                                                                                          (rule "inEqSimp_contradInEq1" (formula "30") (term "0,1,0,0") (ifseqformula "28"))
                                                                                          (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0,1,0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,1,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,1,0,0"))
                                                                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,0,1,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,1,0,0"))
                                                                                          (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0,1,0,0"))
                                                                                          (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,0,1,0,0"))
                                                                                          (rule "add_literals" (formula "30") (term "1,1,0,0,0,1,0,0"))
                                                                                          (rule "times_zero_1" (formula "30") (term "1,0,0,0,1,0,0"))
                                                                                          (rule "add_zero_right" (formula "30") (term "0,0,0,1,0,0"))
                                                                                          (rule "leq_literals" (formula "30") (term "0,0,1,0,0"))
                                                                                           (builtin "One Step Simplification" (formula "30"))
                                                                                          (rule "mod_axiom" (formula "30") (term "0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,0"))
                                                                                          (rule "polySimp_homoEq" (formula "30"))
                                                                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "30") (term "0,1,0"))
                                                                                          (rule "mul_literals" (formula "30") (term "0,0,1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                                                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "30") (term "0,0,0"))
                                                                                          (rule "add_literals" (formula "30") (term "0,0,0,0"))
                                                                                          (rule "add_zero_left" (formula "30") (term "0,0,0"))
                                                                                          (rule "polySimp_sepPosMonomial" (formula "30"))
                                                                                          (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                                                                          (rule "polySimp_rightDist" (formula "30") (term "1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                                                                          (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                                                                                          (rule "polySimp_mulComm0" (formula "30") (term "0,1"))
                                                                                          (rule "newSym_eq" (formula "30") (inst "newSymDef=add(mul(pow(Z(2(#)),
            int::final(self,
                       de.wiesler.Tree::$log_buckets)),
        Z(0(#))),
    mul(pow(Z(2(#)),
            add(mul(quotient_0, Z(neglit(2(3(#))))),
                int::final(self,
                           de.wiesler.Tree::$log_buckets))),
        Z(0(#))))") (inst "l=l_1"))
                                                                                          (rule "times_zero_1" (formula "30") (term "1,1,1"))
                                                                                          (rule "times_zero_1" (formula "30") (term "0,1,1"))
                                                                                          (rule "add_zero_right" (formula "30") (term "1,1"))
                                                                                          (rule "add_zero_right" (formula "30") (term "1"))
                                                                                          (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "30"))
                                                                                          (rule "polySimp_homoEq" (formula "31"))
                                                                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                                                                                          (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                                                          (rule "polySimp_addComm0" (formula "31") (term "0,0"))
                                                                                          (rule "polySimp_sepPosMonomial" (formula "31"))
                                                                                          (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                                                                          (rule "polySimp_rightDist" (formula "31") (term "1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                                                                          (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                                                                                          (rule "polySimp_mulComm0" (formula "31") (term "0,1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "31") (term "0,1"))
                                                                                          (rule "applyEq" (formula "30") (term "1,0,0") (ifseqformula "31"))
                                                                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0"))
                                                                                          (rule "polyDiv_pullOut" (formula "30") (term "0") (inst "polyDivCoeff=l_1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0,2,0"))
                                                                                          (rule "equal_literals" (formula "30") (term "0,0"))
                                                                                           (builtin "One Step Simplification" (formula "30"))
                                                                                          (rule "polySimp_homoEq" (formula "30"))
                                                                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "30") (term "1,1,0"))
                                                                                          (rule "polySimp_addComm1" (formula "30") (term "0,1,1,1,0"))
                                                                                          (rule "polySimp_pullOutFactor0b" (formula "30") (term "0,0,1,1,1,0"))
                                                                                          (rule "add_literals" (formula "30") (term "1,1,0,0,1,1,1,0"))
                                                                                          (rule "times_zero_1" (formula "30") (term "1,0,0,1,1,1,0"))
                                                                                          (rule "add_literals" (formula "30") (term "0,0,1,1,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "30") (term "0,1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                                                                          (rule "polySimp_pullOutFactor1" (formula "30") (term "0,0"))
                                                                                          (rule "add_literals" (formula "30") (term "1,0,0"))
                                                                                          (rule "times_zero_1" (formula "30") (term "0,0"))
                                                                                          (rule "add_zero_left" (formula "30") (term "0"))
                                                                                          (rule "polySimp_invertEq" (formula "30"))
                                                                                          (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                                                                          (rule "times_zero_2" (formula "30") (term "1"))
                                                                                          (rule "polySimp_elimOne" (formula "30") (term "0"))
                                                                                          (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "29"))
                                                                                          (rule "mul_literals" (formula "32") (term "0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                                                          (rule "add_literals" (formula "32") (term "0,0"))
                                                                                          (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                                                                          (rule "mul_literals" (formula "32") (term "1"))
                                                                                          (rule "elimGcdGeq_antec" (formula "32") (inst "elimGcd=Z(2(3(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                                          (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,1,0"))
                                                                                          (rule "leq_literals" (formula "32") (term "0,0"))
                                                                                           (builtin "One Step Simplification" (formula "32"))
                                                                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,0,0"))
                                                                                          (rule "polySimp_addLiterals" (formula "32") (term "0,0,0,0"))
                                                                                          (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                                                                          (rule "polySimp_pullOutFactor0b" (formula "32") (term "0,0"))
                                                                                          (rule "add_literals" (formula "32") (term "1,1,0,0"))
                                                                                          (rule "times_zero_1" (formula "32") (term "1,0,0"))
                                                                                          (rule "add_zero_right" (formula "32") (term "0,0"))
                                                                                          (rule "leq_literals" (formula "32") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "32"))
                                                                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "29"))
                                                                                          (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                                                          (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                                          (rule "add_literals" (formula "3") (term "0,0,0"))
                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                                                          (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "35"))
                                                                                          (rule "polySimp_mulAssoc" (formula "29") (term "0,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "29") (term "0,0,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "29") (term "0,0"))
                                                                                          (rule "polySimp_addComm0" (formula "29") (term "0"))
                                                                                          (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                                                          (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                                          (rule "elimGcdLeq_antec" (formula "29") (inst "elimGcd=Z(2(3(#)))") (inst "elimGcdLeftDiv=quotient_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                                          (rule "neg_literal" (formula "29") (term "0,0,0,0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0"))
                                                                                          (rule "times_zero_1" (formula "29") (term "1,0,0,0,0,1,0"))
                                                                                          (rule "leq_literals" (formula "29") (term "0,0"))
                                                                                           (builtin "One Step Simplification" (formula "29"))
                                                                                          (rule "polySimp_addLiterals" (formula "29") (term "0,0,0,0"))
                                                                                          (rule "add_literals" (formula "29") (term "0,0,0,0"))
                                                                                          (rule "polySimp_pullOutFactor0b" (formula "29") (term "0,0"))
                                                                                          (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                                                                          (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                                                                          (rule "add_zero_right" (formula "29") (term "0,0"))
                                                                                          (rule "qeq_literals" (formula "29") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "29"))
                                                                                          (rule "inEqSimp_antiSymm" (formula "34") (ifseqformula "29"))
                                                                                          (rule "applyEq" (formula "35") (term "0") (ifseqformula "34"))
                                                                                          (rule "qeq_literals" (formula "35"))
                                                                                          (rule "true_left" (formula "35"))
                                                                                          (rule "applyEqRigid" (formula "30") (term "0,1") (ifseqformula "34"))
                                                                                          (rule "times_zero_2" (formula "30") (term "1"))
                                                                                          (rule "applyEqRigid" (formula "29") (term "0") (ifseqformula "34"))
                                                                                          (rule "leq_literals" (formula "29"))
                                                                                          (rule "true_left" (formula "29"))
                                                                                          (rule "applyEq" (formula "30") (term "0,1,1") (ifseqformula "33"))
                                                                                          (rule "times_zero_2" (formula "30") (term "1,1"))
                                                                                          (rule "add_literals" (formula "30") (term "1"))
                                                                                          (rule "applyEqRigid" (formula "3") (term "0,1,1") (ifseqformula "33"))
                                                                                          (rule "times_zero_2" (formula "3") (term "1,1"))
                                                                                          (rule "add_literals" (formula "3") (term "1"))
                                                                                          (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                                                                          (rule "times_zero_2" (formula "32") (term "0,1,0"))
                                                                                          (rule "add_zero_left" (formula "32") (term "1,0"))
                                                                                          (rule "polySimp_homoEq" (formula "32"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "32") (term "0"))
                                                                                          (rule "add_literals" (formula "32") (term "1,1,0"))
                                                                                          (rule "times_zero_1" (formula "32") (term "1,0"))
                                                                                          (rule "add_zero_right" (formula "32") (term "0"))
                                                                                          (rule "applyEq" (formula "28") (term "1") (ifseqformula "33"))
                                                                                          (rule "inEqSimp_subsumption0" (formula "30") (ifseqformula "35"))
                                                                                          (rule "leq_literals" (formula "30") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "30"))
                                                                                          (rule "true_left" (formula "30"))
                                                                                          (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "33"))
                                                                                          (rule "leq_literals" (formula "29") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "29"))
                                                                                          (rule "true_left" (formula "29"))
                                                                                          (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "2"))
                                                                                          (rule "leq_literals" (formula "3") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "3"))
                                                                                          (rule "true_left" (formula "3"))
                                                                                          (rule "elimGcdEq" (formula "29") (inst "elimGcd=Z(6(9(2(7(6(9(4(9(2(4(#)))))))))))") (inst "elimGcdLeftDiv=l_1") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                                           (builtin "One Step Simplification" (formula "29"))
                                                                                          (rule "add_zero_left" (formula "29") (term "0,1,0"))
                                                                                          (rule "add_zero_left" (formula "29") (term "0,0,1"))
                                                                                          (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                                                                          (rule "add_literals" (formula "29") (term "1,0,0"))
                                                                                          (rule "times_zero_1" (formula "29") (term "0,1,0"))
                                                                                          (rule "times_zero_1" (formula "29") (term "0,0,1"))
                                                                                           (builtin "One Step Simplification" (formula "29"))
                                                                                          (rule "add_zero_left" (formula "29") (term "0,0,0"))
                                                                                          (rule "qeq_literals" (formula "29") (term "1,0"))
                                                                                           (builtin "One Step Simplification" (formula "29"))
                                                                                          (rule "leq_literals" (formula "29") (term "0"))
                                                                                           (builtin "One Step Simplification" (formula "29"))
                                                                                          (rule "commute_or_2" (formula "44") (term "0,0"))
                                                                                          (rule "nnf_notAnd" (formula "42") (term "0,0"))
                                                                                          (rule "commute_or_2" (formula "43") (term "0,0"))
                                                                                          (rule "nnf_imp2or" (formula "42") (term "0,1,0"))
                                                                                          (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "64") (term "0"))
                                                                                          (rule "translateJavaSubInt" (formula "64") (term "0,1,1,0"))
                                                                                          (rule "polySimp_elimSub" (formula "64") (term "1,0,0,0"))
                                                                                          (rule "polySimp_elimSub" (formula "64") (term "0,1,1,0"))
                                                                                          (rule "mul_literals" (formula "64") (term "1,0,1,1,0"))
                                                                                          (rule "polySimp_elimSub" (formula "64") (term "1,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "64") (term "0"))
                                                                                          (rule "polySimp_addComm0" (formula "64") (term "0,1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "64") (term "1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "64") (term "0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "64") (term "1,0,1,0"))
                                                                                          (rule "polySimp_mulAssoc" (formula "64") (term "0,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "64") (term "0,0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "64") (term "0,0,1,0"))
                                                                                          (rule "polySimp_addComm1" (formula "64") (term "1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "64") (term "0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "64") (term "0"))
                                                                                          (rule "polySimp_homoEq" (formula "64"))
                                                                                          (rule "polySimp_mulComm0" (formula "64") (term "1,0"))
                                                                                          (rule "polySimp_mulComm1" (formula "64") (term "1,1,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "64") (term "0,1,1,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "64") (term "0,1,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "64") (term "0,0,1,1,0"))
                                                                                          (rule "polySimp_mulComm1" (formula "64") (term "1,0,1,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "64") (term "0,1,0,1,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "64") (term "1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "64") (term "0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "64") (term "1,0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "64") (term "0,0,1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "64") (term "0"))
                                                                                          (rule "polySimp_addAssoc" (formula "64") (term "0,0"))
                                                                                          (rule "logTimesBaseConcrete" (formula "64") (term "0,1,0,1,0,0,1,0"))
                                                                                          (rule "greater_literals" (formula "64") (term "1,0,0,1,0,1,0,0,1,0"))
                                                                                           (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "46")))
                                                                                          (rule "polySimp_mulComm0" (formula "64") (term "1,0,1,0,0,1,0"))
                                                                                          (rule "polySimp_addComm1" (formula "64") (term "0"))
                                                                                          (rule "polySimp_addComm0" (formula "64") (term "1,1,0,1,0,0,1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "64") (term "1,0,1,0,0,1,0,0"))
                                                                                          (rule "mul_literals" (formula "64") (term "0,1,0,1,0,0,1,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "64") (term "0,1,0,0,1,0,0"))
                                                                                          (rule "add_literals" (formula "64") (term "0,0,1,0,0,1,0,0"))
                                                                                          (rule "logTimesBaseConcrete" (formula "64") (term "1,1,0,1,0,0"))
                                                                                          (rule "greater_literals" (formula "64") (term "1,0,1,1,0,1,0,0"))
                                                                                           (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "46")))
                                                                                          (rule "polySimp_addComm0" (formula "64") (term "1,1,0,1,0,0"))
                                                                                          (rule "logTimesBaseConcrete" (formula "64") (term "0,1,0,1,0,0,1,0"))
                                                                                          (rule "greater_literals" (formula "64") (term "1,0,0,1,0,1,0,0,1,0"))
                                                                                           (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "46")))
                                                                                          (rule "polySimp_mulComm0" (formula "64") (term "1,0,1,0,0,1,0"))
                                                                                          (rule "polySimp_addComm1" (formula "64") (term "0"))
                                                                                          (rule "polySimp_addComm0" (formula "64") (term "1,1,0,1,0,0,1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "64") (term "1,0,1,0,0,1,0,0"))
                                                                                          (rule "mul_literals" (formula "64") (term "0,1,0,1,0,0,1,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "64") (term "0,1,0,0,1,0,0"))
                                                                                          (rule "add_literals" (formula "64") (term "0,0,1,0,0,1,0,0"))
                                                                                          (rule "logTimesBaseConcrete" (formula "64") (term "0,1,0,1,0,1,0,0,0"))
                                                                                          (rule "greater_literals" (formula "64") (term "1,0,0,1,0,1,0,1,0,0,0"))
                                                                                           (builtin "One Step Simplification" (formula "64") (ifInst ""  (formula "46")))
                                                                                          (rule "polySimp_mulComm0" (formula "64") (term "1,0,1,0,1,0,0,0"))
                                                                                          (rule "polySimp_addComm0" (formula "64") (term "1,1,0,1,0,1,0,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "64") (term "1,0,1,0,1,0,0,0"))
                                                                                          (rule "mul_literals" (formula "64") (term "0,1,0,1,0,1,0,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "64") (term "0,1,0,1,0,0,0"))
                                                                                          (rule "add_literals" (formula "64") (term "0,0,1,0,1,0,0,0"))
                                                                                          (rule "applyEq" (formula "64") (term "1,1,1,0,1,0") (ifseqformula "20"))
                                                                                          (rule "applyEq" (formula "64") (term "1,0,1,0") (ifseqformula "49"))
                                                                                          (rule "polySimp_mulAssoc" (formula "64") (term "0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "64") (term "1,0"))
                                                                                          (rule "applyEq" (formula "64") (term "0,1,0,1,0,0,1,0") (ifseqformula "20"))
                                                                                          (rule "polySimp_addComm1" (formula "64") (term "0"))
                                                                                          (rule "applyEq" (formula "64") (term "0,1,0,1,0,0,1,0") (ifseqformula "20"))
                                                                                          (rule "polySimp_addComm1" (formula "64") (term "0"))
                                                                                          (rule "applyEq" (formula "64") (term "0,0,1,0") (ifseqformula "63"))
                                                                                          (rule "polySimp_mulComm0" (formula "64") (term "0,1,0"))
                                                                                          (rule "polySimp_addComm1" (formula "64") (term "0"))
                                                                                          (rule "applyEq" (formula "64") (term "0,0,1,0") (ifseqformula "63"))
                                                                                          (rule "polySimp_addComm1" (formula "64") (term "0"))
                                                                                          (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "66"))
                                                                                          (rule "polySimp_addAssoc" (formula "64") (term "0"))
                                                                                          (rule "polySimp_addComm1" (formula "64") (term "0,0"))
                                                                                          (rule "polySimp_pullOutFactor0b" (formula "64") (term "0"))
                                                                                          (rule "add_literals" (formula "64") (term "1,1,0"))
                                                                                          (rule "times_zero_1" (formula "64") (term "1,0"))
                                                                                          (rule "add_zero_right" (formula "64") (term "0"))
                                                                                          (rule "polySimp_addComm1" (formula "64") (term "0"))
                                                                                          (rule "polySimp_addComm1" (formula "64") (term "0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "64") (term "0,0,0"))
                                                                                          (rule "polySimp_addComm0" (formula "64") (term "0,0,0,0"))
                                                                                          (rule "polySimp_pullOutFactor0b" (formula "64") (term "0,0,0"))
                                                                                          (rule "add_literals" (formula "64") (term "1,1,0,0,0"))
                                                                                          (rule "polySimp_elimOne" (formula "64") (term "1,0,0,0"))
                                                                                          (rule "applyEq" (formula "64") (term "0,1,0,1,0,1,0") (ifseqformula "20"))
                                                                                          (rule "applyEq" (formula "64") (term "0,1,0") (ifseqformula "63"))
                                                                                          (rule "polySimp_addComm1" (formula "64") (term "0"))
                                                                                          (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0"))
                                                                                          (rule "add_literals" (formula "64") (term "1,1,0,0"))
                                                                                          (rule "times_zero_1" (formula "64") (term "1,0,0"))
                                                                                          (rule "add_zero_right" (formula "64") (term "0,0"))
                                                                                          (rule "polySimp_sepPosMonomial" (formula "64"))
                                                                                          (rule "polySimp_mulComm0" (formula "64") (term "1"))
                                                                                          (rule "polySimp_rightDist" (formula "64") (term "1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "64") (term "1,1"))
                                                                                          (rule "polySimp_elimOne" (formula "64") (term "1,1"))
                                                                                          (rule "polySimp_rightDist" (formula "64") (term "0,1"))
                                                                                          (rule "mul_literals" (formula "64") (term "0,0,1"))
                                                                                          (rule "applyEq" (formula "68") (term "1,1") (ifseqformula "64"))
                                                                                          (rule "polySimp_addComm0" (formula "68") (term "1"))
                                                                                          (rule "cut_direct" (formula "16") (term "1"))
                                                                                          (branch "CUT: self.sorted_splitters[b_bin] >= value TRUE"
                                                                                              (builtin "One Step Simplification" (formula "17"))
                                                                                             (rule "true_left" (formula "17"))
                                                                                             (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "68") (term "0"))
                                                                                             (rule "translateJavaSubInt" (formula "68") (term "0,1,1,0"))
                                                                                             (rule "polySimp_elimSub" (formula "68") (term "1,0,0,0"))
                                                                                             (rule "polySimp_elimSub" (formula "68") (term "1,1,0"))
                                                                                             (rule "polySimp_elimSub" (formula "68") (term "0,1,1,0"))
                                                                                             (rule "mul_literals" (formula "68") (term "1,0,1,1,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "68") (term "0"))
                                                                                             (rule "polySimp_addComm0" (formula "68") (term "0,1,0,0"))
                                                                                             (rule "polySimp_addComm1" (formula "68") (term "1,0,0"))
                                                                                             (rule "polySimp_rightDist" (formula "68") (term "0,1,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "68") (term "1,0,1,0"))
                                                                                             (rule "polySimp_addComm1" (formula "68") (term "1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "68") (term "0,0,1,0"))
                                                                                             (rule "mul_literals" (formula "68") (term "0,0,0,1,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0,1,0"))
                                                                                             (rule "polySimp_addComm1" (formula "68") (term "0,1,0"))
                                                                                             (rule "add_literals" (formula "68") (term "0,0,1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "68") (term "0"))
                                                                                             (rule "polySimp_homoEq" (formula "68"))
                                                                                             (rule "polySimp_mulComm0" (formula "68") (term "1,0"))
                                                                                             (rule "polySimp_mulComm1" (formula "68") (term "1,1,1,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "68") (term "0,1,1,1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "68") (term "0,1,1,0"))
                                                                                             (rule "polySimp_mulComm1" (formula "68") (term "1,0,1,1,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "68") (term "0,1,0,1,1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "68") (term "1,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "68") (term "0,1,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "68") (term "1,0,1,0"))
                                                                                             (rule "polySimp_mulAssoc" (formula "68") (term "0,0,1,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "68") (term "0,0,0,1,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "68") (term "0,0,1,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "68") (term "0"))
                                                                                             (rule "polySimp_addAssoc" (formula "68") (term "0,0"))
                                                                                             (rule "applyEq" (formula "68") (term "1,1,0,1,0") (ifseqformula "59"))
                                                                                             (rule "applyEq" (formula "68") (term "1,0,1,0") (ifseqformula "49"))
                                                                                             (rule "polySimp_mulAssoc" (formula "68") (term "0,1,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "68") (term "1,0"))
                                                                                             (rule "applyEq" (formula "68") (term "0,1,0,1,0,0,1,0") (ifseqformula "59"))
                                                                                             (rule "polySimp_mulComm0" (formula "68") (term "1,0,1,0,0,1,0"))
                                                                                             (rule "polySimp_addComm1" (formula "68") (term "0"))
                                                                                             (rule "polySimp_rightDist" (formula "68") (term "1,0,1,0,0,1,0,0"))
                                                                                             (rule "mul_literals" (formula "68") (term "0,1,0,1,0,0,1,0,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "68") (term "0,1,0,0,1,0,0"))
                                                                                             (rule "add_literals" (formula "68") (term "0,0,1,0,0,1,0,0"))
                                                                                             (rule "applyEq" (formula "68") (term "0,1,0,1,0,0,1,0") (ifseqformula "59"))
                                                                                             (rule "polySimp_mulComm0" (formula "68") (term "1,0,1,0,0,1,0"))
                                                                                             (rule "polySimp_addComm1" (formula "68") (term "0"))
                                                                                             (rule "polySimp_rightDist" (formula "68") (term "1,0,1,0,0,1,0,0"))
                                                                                             (rule "mul_literals" (formula "68") (term "0,1,0,1,0,0,1,0,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "68") (term "0,1,0,0,1,0,0"))
                                                                                             (rule "add_literals" (formula "68") (term "0,0,1,0,0,1,0,0"))
                                                                                             (rule "applyEq" (formula "68") (term "0,0,1,0") (ifseqformula "63"))
                                                                                             (rule "polySimp_mulComm0" (formula "68") (term "0,1,0"))
                                                                                             (rule "polySimp_addComm1" (formula "68") (term "0"))
                                                                                             (rule "applyEq" (formula "68") (term "0,0,1,0") (ifseqformula "63"))
                                                                                             (rule "polySimp_addComm1" (formula "68") (term "0"))
                                                                                             (rule "applyEq" (formula "68") (term "1,0") (ifseqformula "66"))
                                                                                             (rule "polySimp_addAssoc" (formula "68") (term "0"))
                                                                                             (rule "polySimp_addComm1" (formula "68") (term "0,0"))
                                                                                             (rule "polySimp_pullOutFactor0b" (formula "68") (term "0"))
                                                                                             (rule "add_literals" (formula "68") (term "1,1,0"))
                                                                                             (rule "times_zero_1" (formula "68") (term "1,0"))
                                                                                             (rule "add_zero_right" (formula "68") (term "0"))
                                                                                             (rule "polySimp_addComm1" (formula "68") (term "0"))
                                                                                             (rule "polySimp_addAssoc" (formula "68") (term "0,0"))
                                                                                             (rule "polySimp_addComm1" (formula "68") (term "0,0,0"))
                                                                                             (rule "polySimp_pullOutFactor1b" (formula "68") (term "0,0"))
                                                                                             (rule "add_literals" (formula "68") (term "1,1,0,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "68") (term "0,0,0"))
                                                                                             (rule "polySimp_addComm1" (formula "68") (term "0,0,0,0"))
                                                                                             (rule "polySimp_pullOutFactor1b" (formula "68") (term "0,0,0"))
                                                                                             (rule "add_literals" (formula "68") (term "1,1,0,0,0"))
                                                                                             (rule "times_zero_1" (formula "68") (term "1,0,0,0"))
                                                                                             (rule "add_zero_right" (formula "68") (term "0,0,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "68") (term "0,0,0"))
                                                                                             (rule "polySimp_addComm1" (formula "68") (term "0,0,0,0"))
                                                                                             (rule "add_literals" (formula "68") (term "0,0,0,0,0"))
                                                                                             (rule "add_zero_left" (formula "68") (term "0,0,0,0"))
                                                                                             (rule "polySimp_pullOutFactor2" (formula "68") (term "0,0,0"))
                                                                                             (rule "add_literals" (formula "68") (term "1,0,0,0"))
                                                                                             (rule "times_zero_1" (formula "68") (term "0,0,0"))
                                                                                             (rule "add_zero_left" (formula "68") (term "0,0"))
                                                                                             (rule "applyEq" (formula "68") (term "0,1,0,1,0,1,0") (ifseqformula "59"))
                                                                                             (rule "polySimp_mulComm0" (formula "68") (term "1,0,1,0,1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "68") (term "1,0,1,0,1,0"))
                                                                                             (rule "mul_literals" (formula "68") (term "0,1,0,1,0,1,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "68") (term "0,1,0,1,0"))
                                                                                             (rule "add_literals" (formula "68") (term "0,0,1,0,1,0"))
                                                                                             (rule "applyEq" (formula "68") (term "0,1,0") (ifseqformula "63"))
                                                                                             (rule "polySimp_pullOutFactor0" (formula "68") (term "0"))
                                                                                             (rule "add_literals" (formula "68") (term "1,0"))
                                                                                             (rule "times_zero_1" (formula "68") (term "0"))
                                                                                              (builtin "One Step Simplification" (formula "68"))
                                                                                             (rule "true_left" (formula "68"))
                                                                                             (rule "cut_direct" (formula "15") (term "1"))
                                                                                             (branch "CUT: self.sorted_splitters[l_0 * -2 + b_bin] <= -1 + value TRUE"
                                                                                                 (builtin "One Step Simplification" (formula "16"))
                                                                                                (rule "true_left" (formula "16"))
                                                                                                (rule "nnf_notAnd" (formula "42") (term "0,0,0"))
                                                                                                (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0"))
                                                                                                (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0"))
                                                                                                (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0"))
                                                                                                (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0"))
                                                                                                (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,0"))
                                                                                                (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0,0"))
                                                                                                (rule "add_literals" (formula "42") (term "0,0,0,0,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0"))
                                                                                                (rule "mul_literals" (formula "42") (term "1,0,0,0,0"))
                                                                                                (rule "nnf_notAnd" (formula "42") (term "1,0,0"))
                                                                                                (rule "inEqSimp_notLeq" (formula "42") (term "0,1,0,0"))
                                                                                                (rule "mul_literals" (formula "42") (term "1,0,0,0,1,0,0"))
                                                                                                (rule "add_literals" (formula "42") (term "0,0,0,1,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,1,0,0"))
                                                                                                (rule "mul_literals" (formula "42") (term "1,0,1,0,0"))
                                                                                                (rule "inEqSimp_notGeq" (formula "42") (term "1,1,0,0"))
                                                                                                (rule "mul_literals" (formula "42") (term "1,0,0,1,1,0,0"))
                                                                                                (rule "add_literals" (formula "42") (term "0,0,1,1,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,1,0,0"))
                                                                                                (rule "mul_literals" (formula "42") (term "1,1,1,0,0"))
                                                                                                (rule "nnf_notAnd" (formula "42") (term "0,0,1,0"))
                                                                                                (rule "jdiv_axiom" (formula "63") (term "1"))
                                                                                                (rule "eqSymm" (formula "63"))
                                                                                                (rule "inEqSimp_subsumption1" (formula "63") (term "0,0") (ifseqformula "25"))
                                                                                                (rule "leq_literals" (formula "63") (term "0,0,0"))
                                                                                                 (builtin "One Step Simplification" (formula "63"))
                                                                                                (rule "eqSymm" (formula "63"))
                                                                                                (rule "applyEq" (formula "72") (term "0,0") (ifseqformula "63"))
                                                                                                (rule "applyEq" (formula "67") (term "1,0,0") (ifseqformula "63"))
                                                                                                (rule "applyEqRigid" (formula "64") (term "1") (ifseqformula "63"))
                                                                                                (rule "applyEqRigid" (formula "67") (term "0,0,1,1") (ifseqformula "63"))
                                                                                                (rule "applyEqRigid" (formula "67") (term "0,1,0,1") (ifseqformula "63"))
                                                                                                (rule "nnf_notAnd" (formula "42") (term "1,0,0,1,0"))
                                                                                                (rule "inEqSimp_notLeq" (formula "42") (term "0,1,0,0,1,0"))
                                                                                                (rule "mul_literals" (formula "42") (term "1,0,0,0,1,0,0,1,0"))
                                                                                                (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,1,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,1,0,0,1,0"))
                                                                                                (rule "mul_literals" (formula "42") (term "1,0,1,0,0,1,0"))
                                                                                                (rule "inEqSimp_notGeq" (formula "42") (term "1,1,0,0,1,0"))
                                                                                                (rule "mul_literals" (formula "42") (term "1,0,0,1,1,0,0,1,0"))
                                                                                                (rule "add_literals" (formula "42") (term "0,0,1,1,0,0,1,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,1,0,0,1,0"))
                                                                                                (rule "mul_literals" (formula "42") (term "1,1,1,0,0,1,0"))
                                                                                                (rule "nnf_notAnd" (formula "42") (term "0,0,0,1,0"))
                                                                                                (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,0,0,1,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,1,0"))
                                                                                                (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0,0,1,0"))
                                                                                                (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0,0,1,0"))
                                                                                                (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,0,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0,0,0,1,0"))
                                                                                                (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0,0,0,1,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0,0,0,1,0"))
                                                                                                (rule "add_literals" (formula "42") (term "0,0,0,1,0,0,0,1,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                                                                (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0,1,0"))
                                                                                                (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0,1,0"))
                                                                                                (rule "onlyCreatedObjectsAreReferencedFinal" (formula "1") (term "1,0") (ifseqformula "4") (ifseqformula "5"))
                                                                                                (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "70"))
                                                                                                 (builtin "One Step Simplification" (formula "1"))
                                                                                                (rule "onlyCreatedObjectsAreReferencedFinal" (formula "42") (term "0,0") (ifseqformula "5") (ifseqformula "6"))
                                                                                                (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "72"))
                                                                                                 (builtin "One Step Simplification" (formula "42"))
                                                                                                (rule "commute_or" (formula "46") (term "1,0,0,0"))
                                                                                                (rule "commute_or" (formula "45") (term "1,0,0,0"))
                                                                                                (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "67") (term "0"))
                                                                                                (rule "translateJavaSubInt" (formula "67") (term "0,1,1,0"))
                                                                                                (rule "polySimp_elimSub" (formula "67") (term "1,0,0,0"))
                                                                                                (rule "polySimp_elimSub" (formula "67") (term "1,1,0"))
                                                                                                (rule "polySimp_elimSub" (formula "67") (term "0,1,1,0"))
                                                                                                (rule "mul_literals" (formula "67") (term "1,0,1,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "67") (term "0"))
                                                                                                (rule "polySimp_addComm0" (formula "67") (term "0,1,0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "67") (term "1,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "67") (term "0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "67") (term "1,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "67") (term "0,0,1,0"))
                                                                                                (rule "polySimp_addComm1" (formula "67") (term "1,0"))
                                                                                                (rule "polySimp_addComm0" (formula "67") (term "0,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "67") (term "0"))
                                                                                                (rule "polySimp_homoEq" (formula "67"))
                                                                                                (rule "polySimp_mulComm0" (formula "67") (term "1,0"))
                                                                                                (rule "polySimp_mulComm1" (formula "67") (term "1,1,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "67") (term "0,1,1,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "67") (term "0,1,1,0"))
                                                                                                (rule "polySimp_elimOne" (formula "67") (term "0,0,1,1,0"))
                                                                                                (rule "polySimp_mulComm1" (formula "67") (term "1,0,1,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "67") (term "0,1,0,1,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "67") (term "1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "67") (term "0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "67") (term "1,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "67") (term "0,0,1,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "67") (term "0"))
                                                                                                (rule "polySimp_addAssoc" (formula "67") (term "0,0"))
                                                                                                (rule "applyEq" (formula "67") (term "1,1,0,1,0") (ifseqformula "21"))
                                                                                                (rule "applyEq" (formula "67") (term "0,1,0,1,0,0,1,0") (ifseqformula "21"))
                                                                                                (rule "polySimp_addComm1" (formula "67") (term "0"))
                                                                                                (rule "applyEq" (formula "67") (term "0,0,1,0,0") (ifseqformula "24"))
                                                                                                (rule "polySimp_mulComm0" (formula "67") (term "0,1,0,0"))
                                                                                                (rule "applyEq" (formula "67") (term "0,1,0,1,0,0,1,0") (ifseqformula "21"))
                                                                                                (rule "applyEq" (formula "67") (term "0,0,1,0") (ifseqformula "24"))
                                                                                                (rule "polySimp_mulComm0" (formula "67") (term "0,1,0"))
                                                                                                (rule "polySimp_addComm1" (formula "67") (term "0"))
                                                                                                (rule "applyEq" (formula "67") (term "1,0") (ifseqformula "22"))
                                                                                                (rule "polySimp_addAssoc" (formula "67") (term "0"))
                                                                                                (rule "polySimp_addComm1" (formula "67") (term "0,0"))
                                                                                                (rule "polySimp_pullOutFactor0b" (formula "67") (term "0"))
                                                                                                (rule "add_literals" (formula "67") (term "1,1,0"))
                                                                                                (rule "times_zero_1" (formula "67") (term "1,0"))
                                                                                                (rule "add_zero_right" (formula "67") (term "0"))
                                                                                                (rule "polySimp_addComm1" (formula "67") (term "0"))
                                                                                                (rule "polySimp_addAssoc" (formula "67") (term "0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "67") (term "0,0,0"))
                                                                                                (rule "polySimp_pullOutFactor1b" (formula "67") (term "0,0"))
                                                                                                (rule "add_literals" (formula "67") (term "1,1,0,0"))
                                                                                                (rule "times_zero_1" (formula "67") (term "1,0,0"))
                                                                                                (rule "add_zero_right" (formula "67") (term "0,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "67") (term "0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "67") (term "0,0,0"))
                                                                                                (rule "add_literals" (formula "67") (term "0,0,0,0"))
                                                                                                (rule "add_zero_left" (formula "67") (term "0,0,0"))
                                                                                                (rule "polySimp_pullOutFactor0" (formula "67") (term "0,0"))
                                                                                                (rule "add_literals" (formula "67") (term "1,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "67") (term "0,0"))
                                                                                                (rule "applyEq" (formula "67") (term "0,1,0,1,0,1,0") (ifseqformula "21"))
                                                                                                (rule "applyEq" (formula "67") (term "0,1,0") (ifseqformula "24"))
                                                                                                (rule "polySimp_pullOutFactor1" (formula "67") (term "0"))
                                                                                                (rule "add_literals" (formula "67") (term "1,0"))
                                                                                                (rule "times_zero_1" (formula "67") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "67"))
                                                                                                (rule "true_left" (formula "67"))
                                                                                                (rule "div_axiom" (formula "29") (term "0") (inst "quotient=quotient_1"))
                                                                                                (rule "equal_literals" (formula "29") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "29"))
                                                                                                (rule "qeq_literals" (formula "29") (term "0,1"))
                                                                                                 (builtin "One Step Simplification" (formula "29"))
                                                                                                (rule "mul_literals" (formula "29") (term "1,1,1"))
                                                                                                (rule "andLeft" (formula "29"))
                                                                                                (rule "andLeft" (formula "29"))
                                                                                                (rule "polySimp_addAssoc" (formula "31") (term "0,1"))
                                                                                                (rule "add_literals" (formula "31") (term "0,0,1"))
                                                                                                (rule "polySimp_addComm1" (formula "31") (term "1"))
                                                                                                (rule "add_literals" (formula "31") (term "0,1"))
                                                                                                (rule "inEqSimp_homoInEq0" (formula "30"))
                                                                                                (rule "polySimp_mulLiterals" (formula "30") (term "1,0"))
                                                                                                (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                                                                (rule "inEqSimp_homoInEq1" (formula "31"))
                                                                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                                                                                                (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                                                                (rule "applyEq" (formula "29") (term "0") (ifseqformula "32"))
                                                                                                (rule "eqSymm" (formula "29"))
                                                                                                (rule "applyEqRigid" (formula "31") (term "0,1,0,0") (ifseqformula "29"))
                                                                                                (rule "times_zero_2" (formula "31") (term "1,0,0"))
                                                                                                (rule "add_zero_right" (formula "31") (term "0,0"))
                                                                                                (rule "applyEq" (formula "30") (term "0,1,0,0") (ifseqformula "29"))
                                                                                                (rule "times_zero_2" (formula "30") (term "1,0,0"))
                                                                                                (rule "add_zero_right" (formula "30") (term "0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "31"))
                                                                                                (rule "mul_literals" (formula "31") (term "1"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                                                                                (rule "mul_literals" (formula "30") (term "1"))
                                                                                                (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "37"))
                                                                                                (rule "leq_literals" (formula "30") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "30"))
                                                                                                (rule "true_left" (formula "30"))
                                                                                                (rule "commute_or_2" (formula "45") (term "0,0"))
                                                                                                (rule "commute_or" (formula "45") (term "1,0,0,1,0"))
                                                                                                (rule "shift_paren_or" (formula "47") (term "0,0,0"))
                                                                                                (rule "shift_paren_or" (formula "46") (term "0,0,0"))
                                                                                                (rule "commute_or" (formula "45") (term "0,0,0,1,0"))
                                                                                                (rule "cnf_rightDist" (formula "46") (term "0"))
                                                                                                (rule "distr_forallAnd" (formula "46"))
                                                                                                (rule "andLeft" (formula "46"))
                                                                                                (rule "commute_or" (formula "47") (term "0"))
                                                                                                (rule "commute_or" (formula "45") (term "1,0,0,0"))
                                                                                                (rule "commute_or" (formula "48") (term "0,0,0,0"))
                                                                                                (rule "inEqSimp_or_subsumption0" (formula "48") (term "0,0,0,0"))
                                                                                                (rule "qeq_literals" (formula "48") (term "0,0,0,0,0,0"))
                                                                                                 (builtin "One Step Simplification" (formula "48"))
                                                                                                (rule "commute_or_2" (formula "45") (term "0,0,1,0"))
                                                                                                (rule "commute_or" (formula "46") (term "0,0,0,0"))
                                                                                                (rule "inEqSimp_or_subsumption0" (formula "46") (term "0,0,0,0"))
                                                                                                (rule "qeq_literals" (formula "46") (term "0,0,0,0,0,0"))
                                                                                                 (builtin "One Step Simplification" (formula "46"))
                                                                                                (rule "commute_or" (formula "47") (term "0,0,0,0"))
                                                                                                (rule "inEqSimp_or_subsumption0" (formula "47") (term "0,0,0,0"))
                                                                                                (rule "qeq_literals" (formula "47") (term "0,0,0,0,0,0"))
                                                                                                 (builtin "One Step Simplification" (formula "47"))
                                                                                                (rule "shift_paren_or" (formula "45") (term "0,0,0"))
                                                                                                (rule "commute_or" (formula "45") (term "0,0,0,0"))
                                                                                                (rule "inEqSimp_or_subsumption0" (formula "45") (term "0,0,0,0"))
                                                                                                (rule "qeq_literals" (formula "45") (term "0,0,0,0,0,0"))
                                                                                                 (builtin "One Step Simplification" (formula "45"))
                                                                                                (rule "div_axiom" (formula "67") (term "1") (inst "quotient=quotient_2"))
                                                                                                (rule "mul_literals" (formula "67") (term "1,1,1,1,1"))
                                                                                                (rule "qeq_literals" (formula "67") (term "0,1,1"))
                                                                                                 (builtin "One Step Simplification" (formula "67"))
                                                                                                (rule "equal_literals" (formula "67") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "67"))
                                                                                                (rule "andLeft" (formula "67"))
                                                                                                (rule "andLeft" (formula "67"))
                                                                                                (rule "polySimp_addComm1" (formula "69") (term "1"))
                                                                                                (rule "add_literals" (formula "69") (term "0,1"))
                                                                                                (rule "inEqSimp_commuteLeq" (formula "68"))
                                                                                                (rule "inEqSimp_homoInEq1" (formula "69"))
                                                                                                (rule "polySimp_mulLiterals" (formula "69") (term "1,0"))
                                                                                                (rule "polySimp_addComm1" (formula "69") (term "0"))
                                                                                                (rule "applyEqRigid" (formula "73") (term "1,0,0") (ifseqformula "67"))
                                                                                                (rule "polySimp_homoEq" (formula "73"))
                                                                                                (rule "polySimp_mulLiterals" (formula "73") (term "1,0"))
                                                                                                (rule "polySimp_addComm1" (formula "73") (term "0"))
                                                                                                (rule "applyEq" (formula "78") (term "0,0") (ifseqformula "67"))
                                                                                                (rule "eqSymm" (formula "78"))
                                                                                                (rule "applyEq" (formula "71") (term "1") (ifseqformula "67"))
                                                                                                (rule "applyEq" (formula "70") (term "1") (ifseqformula "67"))
                                                                                                (rule "applyEq" (formula "73") (term "0,0,1,0") (ifseqformula "67"))
                                                                                                (rule "polySimp_mulComm0" (formula "73") (term "0,1,0"))
                                                                                                (rule "polySimp_addComm1" (formula "73") (term "0"))
                                                                                                (rule "applyEq" (formula "73") (term "0,1,0,0,0") (ifseqformula "67"))
                                                                                                (rule "polySimp_addComm1" (formula "73") (term "0,0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "73") (term "0,0,0,0"))
                                                                                                (rule "polySimp_sepNegMonomial" (formula "73"))
                                                                                                (rule "polySimp_mulLiterals" (formula "73") (term "0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "69"))
                                                                                                (rule "polySimp_mulComm0" (formula "69") (term "1"))
                                                                                                (rule "polySimp_rightDist" (formula "69") (term "1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "69") (term "1,1"))
                                                                                                (rule "mul_literals" (formula "69") (term "0,1"))
                                                                                                (rule "inEqSimp_strengthen1" (formula "68") (ifseqformula "78"))
                                                                                                (rule "inEqSimp_contradEq7" (formula "78") (ifseqformula "68"))
                                                                                                (rule "polySimp_mulAssoc" (formula "78") (term "1,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "78") (term "0,1,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "78") (term "1,0,0"))
                                                                                                (rule "polySimp_pullOutFactor0b" (formula "78") (term "0,0"))
                                                                                                (rule "add_literals" (formula "78") (term "1,1,0,0"))
                                                                                                (rule "times_zero_1" (formula "78") (term "1,0,0"))
                                                                                                (rule "add_zero_right" (formula "78") (term "0,0"))
                                                                                                (rule "leq_literals" (formula "78") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "78"))
                                                                                                (rule "false_right" (formula "78"))
                                                                                                (rule "inEqSimp_antiSymm" (formula "68") (ifseqformula "69"))
                                                                                                (rule "applyEqRigid" (formula "22") (term "1,0,0") (ifseqformula "68"))
                                                                                                (rule "polySimp_mulComm1" (formula "22") (term "0"))
                                                                                                (rule "polySimp_homoEq" (formula "22"))
                                                                                                (rule "polySimp_mulComm1" (formula "22") (term "1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                                                                                                (rule "polySimp_mulComm1" (formula "22") (term "1,1,0"))
                                                                                                (rule "polySimp_mulAssoc" (formula "22") (term "0,1,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "22") (term "0,1,1,0"))
                                                                                                (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                                                                (rule "applyEq" (formula "70") (term "0") (ifseqformula "68"))
                                                                                                (rule "inEqSimp_homoInEq0" (formula "70"))
                                                                                                (rule "polySimp_pullOutFactor1" (formula "70") (term "0"))
                                                                                                (rule "add_literals" (formula "70") (term "1,0"))
                                                                                                (rule "times_zero_1" (formula "70") (term "0"))
                                                                                                (rule "qeq_literals" (formula "70"))
                                                                                                (rule "true_left" (formula "70"))
                                                                                                (rule "applyEq" (formula "9") (term "0") (ifseqformula "68"))
                                                                                                (rule "inEqSimp_homoInEq0" (formula "9"))
                                                                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                                                                                (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                                                                (rule "add_literals" (formula "9") (term "0,0"))
                                                                                                (rule "applyEq" (formula "13") (term "0,1,1") (ifseqformula "68"))
                                                                                                (rule "polySimp_mulComm0" (formula "13") (term "1,1"))
                                                                                                (rule "polySimp_rightDist" (formula "13") (term "1,1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1"))
                                                                                                (rule "mul_literals" (formula "13") (term "0,1,1"))
                                                                                                (rule "polySimp_addAssoc" (formula "13") (term "1"))
                                                                                                (rule "add_literals" (formula "13") (term "0,1"))
                                                                                                (rule "applyEq" (formula "60") (term "0,0,0") (ifseqformula "68"))
                                                                                                (rule "polySimp_mulComm0" (formula "60") (term "0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "60") (term "0,0"))
                                                                                                (rule "mul_literals" (formula "60") (term "0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0"))
                                                                                                (rule "applyEqRigid" (formula "26") (term "0") (ifseqformula "68"))
                                                                                                (rule "inEqSimp_homoInEq1" (formula "26"))
                                                                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0"))
                                                                                                (rule "mul_literals" (formula "26") (term "0,1,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                                                                (rule "add_literals" (formula "26") (term "0,0"))
                                                                                                (rule "add_zero_left" (formula "26") (term "0"))
                                                                                                (rule "applyEqRigid" (formula "70") (term "0,0") (ifseqformula "68"))
                                                                                                (rule "applyEqRigid" (formula "69") (term "0") (ifseqformula "68"))
                                                                                                (rule "inEqSimp_homoInEq1" (formula "69"))
                                                                                                (rule "polySimp_pullOutFactor1" (formula "69") (term "0"))
                                                                                                (rule "add_literals" (formula "69") (term "1,0"))
                                                                                                (rule "times_zero_1" (formula "69") (term "0"))
                                                                                                (rule "leq_literals" (formula "69"))
                                                                                                (rule "true_left" (formula "69"))
                                                                                                (rule "applyEqRigid" (formula "67") (term "0,0") (ifseqformula "68"))
                                                                                                (rule "applyEqRigid" (formula "22") (term "1,0,1,0") (ifseqformula "68"))
                                                                                                (rule "polySimp_mulComm1" (formula "22") (term "1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                                                                                                (rule "polySimp_mulAssoc" (formula "22") (term "1,1,0"))
                                                                                                (rule "polySimp_mulComm1" (formula "22") (term "0,1,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "22") (term "0,1,1,0"))
                                                                                                (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0"))
                                                                                                (rule "applyEqRigid" (formula "27") (term "0,1") (ifseqformula "68"))
                                                                                                (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                                                                                (rule "polySimp_rightDist" (formula "27") (term "1"))
                                                                                                (rule "mul_literals" (formula "27") (term "0,1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                                                                                (rule "applyEq" (formula "24") (term "1") (ifseqformula "68"))
                                                                                                (rule "applyEqRigid" (formula "61") (term "0,0,0,2,0") (ifseqformula "68"))
                                                                                                (rule "polySimp_mulComm0" (formula "61") (term "0,0,2,0"))
                                                                                                (rule "polySimp_rightDist" (formula "61") (term "0,0,2,0"))
                                                                                                (rule "mul_literals" (formula "61") (term "0,0,0,2,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "61") (term "1,0,0,2,0"))
                                                                                                (rule "applyEq" (formula "25") (term "0,1") (ifseqformula "68"))
                                                                                                (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                                                                (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                                                                (rule "mul_literals" (formula "25") (term "0,1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                                                                (rule "applyEqRigid" (formula "16") (term "0,0,0,2,0") (ifseqformula "68"))
                                                                                                (rule "polySimp_mulComm0" (formula "16") (term "0,0,2,0"))
                                                                                                (rule "polySimp_rightDist" (formula "16") (term "0,0,2,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "16") (term "1,0,0,2,0"))
                                                                                                (rule "mul_literals" (formula "16") (term "0,0,0,2,0"))
                                                                                                (rule "applyEqRigid" (formula "60") (term "1") (ifseqformula "68"))
                                                                                                (rule "applyEqRigid" (formula "72") (term "1,0,0,1") (ifseqformula "68"))
                                                                                                (rule "polySimp_addAssoc" (formula "72") (term "0,0,1"))
                                                                                                (rule "polySimp_addComm1" (formula "72") (term "0,0,0,1"))
                                                                                                (rule "add_literals" (formula "72") (term "0,0,0,0,1"))
                                                                                                (rule "add_zero_left" (formula "72") (term "0,0,0,1"))
                                                                                                (rule "polySimp_pullOutFactor0" (formula "72") (term "0,0,1"))
                                                                                                (rule "add_literals" (formula "72") (term "1,0,0,1"))
                                                                                                (rule "apply_eq_monomials" (formula "22") (term "1,0") (ifseqformula "72"))
                                                                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "22") (term "0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                                                                                                (rule "polySimp_pullOutFactor0b" (formula "22") (term "1,0"))
                                                                                                (rule "add_literals" (formula "22") (term "1,1,1,0"))
                                                                                                (rule "times_zero_1" (formula "22") (term "1,1,0"))
                                                                                                (rule "add_zero_right" (formula "22") (term "1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "22") (term "0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                                                                                                (rule "polySimp_elimOne" (formula "22") (term "1,0,1,0"))
                                                                                                (rule "polySimp_mulAssoc" (formula "22") (term "0,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "22") (term "0,0,0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                                                                (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                                                                                (rule "polySimp_pullOutFactor0b" (formula "22") (term "0"))
                                                                                                (rule "add_literals" (formula "22") (term "1,1,0"))
                                                                                                (rule "times_zero_1" (formula "22") (term "1,0"))
                                                                                                (rule "add_zero_right" (formula "22") (term "0"))
                                                                                                (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                                                                                                (rule "polySimp_pullOutFactor2b" (formula "22") (term "0,0"))
                                                                                                (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                                                                (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                                                                (rule "add_zero_right" (formula "22") (term "0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                                                                                                (rule "applyEq" (formula "22") (term "0,1,0,0,0") (ifseqformula "68"))
                                                                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                                                                                (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0"))
                                                                                                (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                                                                                                (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0,0"))
                                                                                                (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                                                                                (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                                                                                (rule "add_literals" (formula "22") (term "0,0,0"))
                                                                                                (rule "polySimp_sepNegMonomial" (formula "22"))
                                                                                                (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                                                                (rule "applyEq" (formula "58") (term "1") (ifseqformula "22"))
                                                                                                (rule "applyEq" (formula "65") (term "1") (ifseqformula "22"))
                                                                                                (rule "applyEq" (formula "20") (term "0") (ifseqformula "22"))
                                                                                                (rule "inEqSimp_homoInEq1" (formula "20"))
                                                                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                                                                (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                                                                (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                                                                                (rule "add_literals" (formula "20") (term "0,0,0"))
                                                                                                (rule "add_zero_left" (formula "20") (term "0,0"))
                                                                                                (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                                                                                (rule "add_literals" (formula "20") (term "1,0"))
                                                                                                (rule "applyEq" (formula "53") (term "1") (ifseqformula "22"))
                                                                                                (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                                                                (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                                                (rule "inEqSimp_invertInEq0" (formula "26"))
                                                                                                (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                                                                (rule "times_zero_2" (formula "26") (term "1"))
                                                                                                (rule "inEqSimp_invertInEq0" (formula "20"))
                                                                                                (rule "times_zero_2" (formula "20") (term "1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                                                                (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                                                                (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "50"))
                                                                                                (rule "leq_literals" (formula "20") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "20"))
                                                                                                (rule "true_left" (formula "20"))
                                                                                                (rule "elimGcdEq" (formula "21") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=pow(Z(2(#)), l)") (inst "elimGcdRightDiv=add(Z(0(#)), b)"))
                                                                                                 (builtin "One Step Simplification" (formula "21"))
                                                                                                (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                                                                (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                                                                                                (rule "add_zero_left" (formula "21") (term "1,1,0,0,0"))
                                                                                                (rule "add_zero_left" (formula "21") (term "1,1,1"))
                                                                                                (rule "add_literals" (formula "21") (term "1,0,0"))
                                                                                                (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                                                                                                (rule "add_zero_left" (formula "21") (term "1,1,0,1,0"))
                                                                                                (rule "add_zero_left" (formula "21") (term "1,1,0,0,1"))
                                                                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                                                                (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0,0"))
                                                                                                (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                                                                                (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                                                                                (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                                                                                (rule "leq_literals" (formula "21") (term "0,0"))
                                                                                                 (builtin "One Step Simplification" (formula "21"))
                                                                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                                                                                (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                                                                                (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                                                                (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                                                                (rule "add_zero_right" (formula "21") (term "0,0"))
                                                                                                (rule "qeq_literals" (formula "21") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "21"))
                                                                                                (rule "andLeft" (formula "21"))
                                                                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                                                                (rule "polySimp_pullOutFactor0b" (formula "21") (term "0"))
                                                                                                (rule "add_literals" (formula "21") (term "1,1,0"))
                                                                                                (rule "times_zero_1" (formula "21") (term "1,0"))
                                                                                                (rule "add_literals" (formula "21") (term "0"))
                                                                                                (rule "equal_literals" (formula "21"))
                                                                                                (rule "closeFalse" (formula "21"))
                                                                                             )
                                                                                             (branch "CUT: self.sorted_splitters[l_0 * -2 + b_bin] <= -1 + value FALSE"
                                                                                                 (builtin "One Step Simplification" (formula "15"))
                                                                                                (rule "inEqSimp_leqRight" (formula "68"))
                                                                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                                                (rule "applyEq" (formula "8") (term "0") (ifseqformula "16"))
                                                                                                (rule "inEqSimp_homoInEq1" (formula "8"))
                                                                                                (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                                                                (rule "mul_literals" (formula "8") (term "0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                                                                (rule "add_literals" (formula "8") (term "0,0"))
                                                                                                (rule "applyEq" (formula "58") (term "1,0,2,0") (ifseqformula "16"))
                                                                                                (rule "polySimp_addAssoc" (formula "58") (term "0,2,0"))
                                                                                                (rule "polySimp_addComm0" (formula "58") (term "0,0,2,0"))
                                                                                                (rule "polySimp_pullOutFactor0b" (formula "58") (term "0,2,0"))
                                                                                                (rule "add_literals" (formula "58") (term "1,1,0,2,0"))
                                                                                                (rule "polySimp_elimOne" (formula "58") (term "1,0,2,0"))
                                                                                                (rule "applyEq" (formula "13") (term "0") (ifseqformula "16"))
                                                                                                (rule "inEqSimp_homoInEq1" (formula "13"))
                                                                                                (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                                                                                                (rule "add_literals" (formula "13") (term "1,0"))
                                                                                                (rule "times_zero_1" (formula "13") (term "0"))
                                                                                                (rule "leq_literals" (formula "13"))
                                                                                                (rule "true_left" (formula "13"))
                                                                                                (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "15"))
                                                                                                (rule "polySimp_addAssoc" (formula "14") (term "1"))
                                                                                                (rule "add_literals" (formula "14") (term "0,1"))
                                                                                                (rule "add_zero_left" (formula "14") (term "1"))
                                                                                                (rule "applyEq" (formula "13") (term "0") (ifseqformula "15"))
                                                                                                (rule "inEqSimp_homoInEq0" (formula "13"))
                                                                                                (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                                                                                (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                                                                (rule "add_literals" (formula "13") (term "0,0"))
                                                                                                (rule "applyEq" (formula "16") (term "0,2,0") (ifseqformula "15"))
                                                                                                (rule "applyEq" (formula "1") (term "1,0,2,1,0") (ifseqformula "15"))
                                                                                                (rule "polySimp_addAssoc" (formula "1") (term "0,2,1,0"))
                                                                                                (rule "polySimp_addComm0" (formula "1") (term "0,0,2,1,0"))
                                                                                                (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,2,1,0"))
                                                                                                (rule "add_literals" (formula "1") (term "1,1,0,2,1,0"))
                                                                                                (rule "times_zero_1" (formula "1") (term "1,0,2,1,0"))
                                                                                                (rule "add_zero_right" (formula "1") (term "0,2,1,0"))
                                                                                                (rule "applyEq" (formula "64") (term "1,1") (ifseqformula "15"))
                                                                                                (rule "polySimp_addAssoc" (formula "64") (term "1"))
                                                                                                (rule "polySimp_addComm1" (formula "64") (term "0,1"))
                                                                                                (rule "add_literals" (formula "64") (term "0,0,1"))
                                                                                                (rule "add_zero_left" (formula "64") (term "0,1"))
                                                                                                (rule "polySimp_pullOutFactor0" (formula "64") (term "1"))
                                                                                                (rule "add_literals" (formula "64") (term "1,1"))
                                                                                                (rule "polySimp_elimOne" (formula "64") (term "1"))
                                                                                                (rule "applyEq" (formula "21") (term "0,1,0,1") (ifseqformula "15"))
                                                                                                (rule "polySimp_pullOutFactor1" (formula "21") (term "0,1"))
                                                                                                (rule "add_literals" (formula "21") (term "1,0,1"))
                                                                                                (rule "times_zero_1" (formula "21") (term "0,1"))
                                                                                                (rule "add_zero_left" (formula "21") (term "1"))
                                                                                                (rule "applyEq" (formula "66") (term "0,1,0,0,1") (ifseqformula "15"))
                                                                                                (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,1"))
                                                                                                (rule "polySimp_rightDist" (formula "66") (term "1,0,0,1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,1"))
                                                                                                (rule "mul_literals" (formula "66") (term "0,1,0,0,1"))
                                                                                                (rule "polySimp_addAssoc" (formula "66") (term "0,0,1"))
                                                                                                (rule "polySimp_addComm1" (formula "66") (term "0,0,0,1"))
                                                                                                (rule "add_literals" (formula "66") (term "0,0,0,0,1"))
                                                                                                (rule "add_zero_left" (formula "66") (term "0,0,0,1"))
                                                                                                (rule "polySimp_pullOutFactor1" (formula "66") (term "0,0,1"))
                                                                                                (rule "add_literals" (formula "66") (term "1,0,0,1"))
                                                                                                (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                                                                (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                                                (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                                                                                (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                                                (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                                                (rule "inEqSimp_subsumption4" (formula "13") (ifseqformula "9"))
                                                                                                (rule "mul_literals" (formula "13") (term "0,1,0"))
                                                                                                (rule "greater_literals" (formula "13") (term "0,0"))
                                                                                                 (builtin "One Step Simplification" (formula "13"))
                                                                                                (rule "leq_literals" (formula "13") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "13"))
                                                                                                (rule "true_left" (formula "13"))
                                                                                                (rule "inEqSimp_subsumption6" (formula "8") (ifseqformula "24"))
                                                                                                (rule "greater_literals" (formula "8") (term "0,0"))
                                                                                                 (builtin "One Step Simplification" (formula "8"))
                                                                                                (rule "mul_literals" (formula "8") (term "1,0"))
                                                                                                (rule "leq_literals" (formula "8") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "8"))
                                                                                                (rule "true_left" (formula "8"))
                                                                                                (rule "elimGcdEq" (formula "19") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=mul(l_0, pow(Z(2(#)), l))") (inst "elimGcdRightDiv=mul(l_0, b)"))
                                                                                                (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                                                                                                (rule "mul_literals" (formula "19") (term "0,1,0,0,1"))
                                                                                                (rule "mul_literals" (formula "19") (term "0,1,0,1,0,0"))
                                                                                                (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,1,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "19") (term "0,0,0,0,0"))
                                                                                                 (builtin "One Step Simplification" (formula "19"))
                                                                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                                                                                                (rule "polySimp_pullOutFactor0" (formula "19") (term "0,1,0"))
                                                                                                (rule "add_literals" (formula "19") (term "1,0,1,0"))
                                                                                                (rule "times_zero_1" (formula "19") (term "0,1,0"))
                                                                                                (rule "qeq_literals" (formula "19") (term "1,0"))
                                                                                                 (builtin "One Step Simplification" (formula "19"))
                                                                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                                                                                (rule "polySimp_pullOutFactor0" (formula "19") (term "0,0"))
                                                                                                (rule "add_literals" (formula "19") (term "1,0,0"))
                                                                                                (rule "times_zero_1" (formula "19") (term "0,0"))
                                                                                                (rule "leq_literals" (formula "19") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "19"))
                                                                                                (rule "andLeft" (formula "19"))
                                                                                                (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "20") (term "0"))
                                                                                                (rule "eqSymm" (formula "20"))
                                                                                                (rule "polySimp_mulComm0" (formula "19") (term "0,1,0"))
                                                                                                (rule "polySimp_pullOutFactor0" (formula "19") (term "0"))
                                                                                                (rule "add_literals" (formula "19") (term "1,0"))
                                                                                                (rule "times_zero_1" (formula "19") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "19"))
                                                                                                (rule "true_left" (formula "19"))
                                                                                                (rule "polySimp_mulComm0" (formula "19") (term "0"))
                                                                                                (rule "eqSymm" (formula "19"))
                                                                                                (rule "cancel_equation" (formula "19"))
                                                                                                (branch "Case 1"
                                                                                                   (rule "applyEq" (formula "17") (term "0,0") (ifseqformula "19"))
                                                                                                   (rule "inEqSimp_homoInEq1" (formula "17"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "17") (term "1,0"))
                                                                                                   (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                                                                                                   (rule "add_literals" (formula "17") (term "1,1,0"))
                                                                                                   (rule "applyEq" (formula "59") (term "0,1") (ifseqformula "19"))
                                                                                                   (rule "applyEq" (formula "15") (term "0") (ifseqformula "19"))
                                                                                                   (rule "inEqSimp_homoInEq0" (formula "15"))
                                                                                                   (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                                                                                                   (rule "add_literals" (formula "15") (term "1,0"))
                                                                                                   (rule "times_zero_1" (formula "15") (term "0"))
                                                                                                   (rule "qeq_literals" (formula "15"))
                                                                                                   (rule "true_left" (formula "15"))
                                                                                                   (rule "applyEq" (formula "50") (term "0") (ifseqformula "18"))
                                                                                                   (rule "applyEq" (formula "44") (term "0") (ifseqformula "18"))
                                                                                                   (rule "applyEq" (formula "62") (term "0,0,0") (ifseqformula "18"))
                                                                                                   (rule "polySimp_homoEq" (formula "62"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "62") (term "1,0"))
                                                                                                   (rule "polySimp_mulComm0" (formula "62") (term "0,1,0"))
                                                                                                   (rule "polySimp_pullOutFactor0b" (formula "62") (term "0"))
                                                                                                   (rule "add_literals" (formula "62") (term "1,1,0"))
                                                                                                   (rule "times_zero_1" (formula "62") (term "1,0"))
                                                                                                   (rule "add_zero_right" (formula "62") (term "0"))
                                                                                                   (rule "applyEq" (formula "50") (term "0,1") (ifseqformula "18"))
                                                                                                   (rule "applyEq" (formula "45") (term "0,1") (ifseqformula "18"))
                                                                                                   (rule "applyEq" (formula "47") (term "0,1") (ifseqformula "18"))
                                                                                                   (rule "polySimp_sepPosMonomial" (formula "62"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "62") (term "1"))
                                                                                                   (rule "polySimp_elimOne" (formula "62") (term "1"))
                                                                                                   (rule "close" (formula "67") (ifseqformula "62"))
                                                                                                )
                                                                                                (branch "Case 2"
                                                                                                   (rule "notRight" (formula "66"))
                                                                                                   (rule "applyEqRigid" (formula "70") (term "0,0,0") (ifseqformula "1"))
                                                                                                   (rule "jdiv_axiom_inline" (formula "70") (term "0,0"))
                                                                                                   (rule "qeq_literals" (formula "70") (term "0,0,0"))
                                                                                                    (builtin "One Step Simplification" (formula "70"))
                                                                                                   (rule "div_literals" (formula "70") (term "0,0"))
                                                                                                   (rule "times_zero_2" (formula "70") (term "0"))
                                                                                                   (rule "eqSymm" (formula "70"))
                                                                                                   (rule "close" (formula "70") (ifseqformula "1"))
                                                                                                )
                                                                                             )
                                                                                          )
                                                                                          (branch "CUT: self.sorted_splitters[b_bin] >= value FALSE"
                                                                                              (builtin "One Step Simplification" (formula "16"))
                                                                                             (rule "inEqSimp_geqRight" (formula "69"))
                                                                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                                             (rule "applyEq" (formula "45") (term "1,1,0,0") (ifseqformula "17"))
                                                                                             (rule "applyEq" (formula "43") (term "1,1,1,0,0,0,0") (ifseqformula "17"))
                                                                                             (rule "polySimp_addAssoc" (formula "43") (term "1,1,0,0,0,0"))
                                                                                             (rule "add_literals" (formula "43") (term "0,1,1,0,0,0,0"))
                                                                                             (rule "applyEq" (formula "44") (term "1,1,0,0") (ifseqformula "17"))
                                                                                             (rule "applyEq" (formula "38") (term "1") (ifseqformula "17"))
                                                                                             (rule "applyEq" (formula "40") (term "0") (ifseqformula "17"))
                                                                                             (rule "inEqSimp_homoInEq0" (formula "40"))
                                                                                             (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                                                                             (rule "mul_literals" (formula "40") (term "0,1,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                                                                             (rule "add_literals" (formula "40") (term "0,0"))
                                                                                             (rule "applyEq" (formula "55") (term "0") (ifseqformula "17"))
                                                                                             (rule "inEqSimp_commuteGeq" (formula "55"))
                                                                                             (rule "applyEq" (formula "15") (term "0") (ifseqformula "17"))
                                                                                             (rule "inEqSimp_homoInEq1" (formula "15"))
                                                                                             (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                                                                                             (rule "add_literals" (formula "15") (term "1,0"))
                                                                                             (rule "times_zero_1" (formula "15") (term "0"))
                                                                                             (rule "leq_literals" (formula "15"))
                                                                                             (rule "true_left" (formula "15"))
                                                                                             (rule "applyEq" (formula "41") (term "1") (ifseqformula "16"))
                                                                                             (rule "applyEq" (formula "34") (term "0") (ifseqformula "16"))
                                                                                             (rule "inEqSimp_homoInEq1" (formula "34"))
                                                                                             (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                                                                             (rule "mul_literals" (formula "34") (term "0,1,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                                                             (rule "add_literals" (formula "34") (term "0,0"))
                                                                                             (rule "applyEq" (formula "42") (term "1,1,1,0,0,0,0,1,0") (ifseqformula "16"))
                                                                                             (rule "polySimp_addAssoc" (formula "42") (term "1,1,0,0,0,0,1,0"))
                                                                                             (rule "add_literals" (formula "42") (term "0,1,1,0,0,0,0,1,0"))
                                                                                             (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "16"))
                                                                                             (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                                                             (rule "add_literals" (formula "28") (term "0,0,0"))
                                                                                             (rule "applyEq" (formula "33") (term "1") (ifseqformula "16"))
                                                                                             (rule "applyEq" (formula "43") (term "0,1,0,0,1,1,1,0") (ifseqformula "16"))
                                                                                             (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,1,1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,1,1,0"))
                                                                                             (rule "mul_literals" (formula "43") (term "0,1,0,0,1,1,1,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,1,1,0"))
                                                                                             (rule "add_literals" (formula "43") (term "0,0,0,1,1,1,0"))
                                                                                             (rule "add_zero_left" (formula "43") (term "0,0,1,1,1,0"))
                                                                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                                                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                                                             (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                                                                             (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                                                                             (rule "polySimp_elimOne" (formula "39") (term "0"))
                                                                                             (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                                                                                             (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                                                             (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                                                             (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "34"))
                                                                                             (rule "leq_literals" (formula "8") (term "0"))
                                                                                              (builtin "One Step Simplification" (formula "8"))
                                                                                             (rule "true_left" (formula "8"))
                                                                                             (rule "polyDiv_pullOut" (formula "27") (term "0") (inst "polyDivCoeff=Z(1(#))"))
                                                                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,2,0"))
                                                                                             (rule "equal_literals" (formula "27") (term "0,0"))
                                                                                              (builtin "One Step Simplification" (formula "27"))
                                                                                             (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                                                                             (rule "polySimp_addComm0" (formula "27") (term "0"))
                                                                                             (rule "polySimp_addComm1" (formula "27") (term "0,1,0"))
                                                                                             (rule "add_literals" (formula "27") (term "0,0,1,0"))
                                                                                             (rule "polySimp_sepPosMonomial" (formula "27"))
                                                                                             (rule "mul_literals" (formula "27") (term "1"))
                                                                                             (rule "inEqSimp_exactShadow0" (formula "18") (ifseqformula "52"))
                                                                                              (builtin "One Step Simplification" (formula "18"))
                                                                                             (rule "greater_literals" (formula "18") (term "0"))
                                                                                              (builtin "One Step Simplification" (formula "18"))
                                                                                             (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                                                             (rule "mul_literals" (formula "18") (term "0,1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                                                                             (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                                                                             (rule "polySimp_rightDist" (formula "18") (term "0,0"))
                                                                                             (rule "mul_literals" (formula "18") (term "0,0,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                                                             (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                                                                             (rule "add_literals" (formula "18") (term "0,0,0"))
                                                                                             (rule "add_zero_left" (formula "18") (term "0,0"))
                                                                                             (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                                                             (rule "polySimp_mulLiterals" (formula "18") (term "1"))
                                                                                             (rule "elimGcdGeq_antec" (formula "18") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=b_bin") (inst "elimGcdRightDiv=b"))
                                                                                             (rule "leq_literals" (formula "18") (term "0,0"))
                                                                                              (builtin "One Step Simplification" (formula "18"))
                                                                                             (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                                                                             (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                                                                                             (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                                                                             (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                                                             (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                                                             (rule "add_zero_right" (formula "18") (term "0,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                                                             (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                                                                             (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                                                             (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                                                             (rule "add_zero_right" (formula "18") (term "0,0"))
                                                                                             (rule "leq_literals" (formula "18") (term "0"))
                                                                                              (builtin "One Step Simplification" (formula "18"))
                                                                                             (rule "inEqSimp_exactShadow2" (formula "46") (ifseqformula "53"))
                                                                                             (rule "greater_literals" (formula "46") (term "0"))
                                                                                              (builtin "One Step Simplification" (formula "46"))
                                                                                             (rule "mul_literals" (formula "46") (term "1,0,0"))
                                                                                             (rule "mul_literals" (formula "46") (term "0,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "46") (term "0"))
                                                                                             (rule "add_literals" (formula "46") (term "0,0"))
                                                                                             (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                                                                                             (rule "mul_literals" (formula "46") (term "1"))
                                                                                             (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "35"))
                                                                                             (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                                                                                             (rule "mul_literals" (formula "37") (term "0,0,0"))
                                                                                             (rule "polySimp_addComm1" (formula "37") (term "0"))
                                                                                             (rule "add_literals" (formula "37") (term "0,0"))
                                                                                             (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                                                                                             (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                                                                                             (rule "polySimp_elimOne" (formula "37") (term "0"))
                                                                                             (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "38"))
                                                                                             (rule "polySimp_rightDist" (formula "40") (term "0,0"))
                                                                                             (rule "mul_literals" (formula "40") (term "0,0,0"))
                                                                                             (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                                                             (rule "add_literals" (formula "40") (term "0,0"))
                                                                                             (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                                                                             (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                                                                             (rule "polySimp_elimOne" (formula "40") (term "0"))
                                                                                             (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "13"))
                                                                                             (rule "polySimp_mulComm0" (formula "18") (term "0,0"))
                                                                                             (rule "polySimp_addComm0" (formula "18") (term "0"))
                                                                                             (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                                                                             (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                                                             (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                                                             (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "17"))
                                                                                             (rule "leq_literals" (formula "18") (term "0"))
                                                                                              (builtin "One Step Simplification" (formula "18"))
                                                                                             (rule "true_left" (formula "18"))
                                                                                             (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "67") (term "0"))
                                                                                             (rule "translateJavaSubInt" (formula "67") (term "0,1,1,0"))
                                                                                             (rule "polySimp_elimSub" (formula "67") (term "1,0,0,0"))
                                                                                             (rule "polySimp_elimSub" (formula "67") (term "1,1,0"))
                                                                                             (rule "polySimp_elimSub" (formula "67") (term "0,1,1,0"))
                                                                                             (rule "mul_literals" (formula "67") (term "1,0,1,1,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "67") (term "0"))
                                                                                             (rule "polySimp_addComm0" (formula "67") (term "0,1,0,0"))
                                                                                             (rule "polySimp_addComm1" (formula "67") (term "1,0,0"))
                                                                                             (rule "polySimp_rightDist" (formula "67") (term "0,1,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "67") (term "1,0,1,0"))
                                                                                             (rule "polySimp_addComm1" (formula "67") (term "1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "67") (term "0,0,1,0"))
                                                                                             (rule "mul_literals" (formula "67") (term "0,0,0,1,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "67") (term "1,0,0,1,0"))
                                                                                             (rule "polySimp_addComm1" (formula "67") (term "0,1,0"))
                                                                                             (rule "add_literals" (formula "67") (term "0,0,1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "67") (term "0"))
                                                                                             (rule "polySimp_homoEq" (formula "67"))
                                                                                             (rule "polySimp_mulComm0" (formula "67") (term "1,0"))
                                                                                             (rule "polySimp_mulComm1" (formula "67") (term "1,1,1,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "67") (term "0,1,1,1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "67") (term "0,1,1,0"))
                                                                                             (rule "polySimp_mulComm1" (formula "67") (term "1,0,1,1,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "67") (term "0,1,0,1,1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "67") (term "1,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "67") (term "0,1,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "67") (term "1,0,1,0"))
                                                                                             (rule "polySimp_mulAssoc" (formula "67") (term "0,0,1,0"))
                                                                                             (rule "polySimp_mulComm0" (formula "67") (term "0,0,0,1,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "67") (term "0,0,1,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "67") (term "0"))
                                                                                             (rule "polySimp_addAssoc" (formula "67") (term "0,0"))
                                                                                             (rule "applyEq" (formula "67") (term "1,1,0,1,0") (ifseqformula "58"))
                                                                                             (rule "applyEq" (formula "67") (term "1,0,1,0") (ifseqformula "48"))
                                                                                             (rule "polySimp_mulAssoc" (formula "67") (term "0,1,0"))
                                                                                             (rule "polySimp_mulLiterals" (formula "67") (term "1,0"))
                                                                                             (rule "applyEq" (formula "67") (term "0,1,0,1,0,0,1,0") (ifseqformula "58"))
                                                                                             (rule "polySimp_mulComm0" (formula "67") (term "1,0,1,0,0,1,0"))
                                                                                             (rule "polySimp_addComm1" (formula "67") (term "0"))
                                                                                             (rule "polySimp_rightDist" (formula "67") (term "1,0,1,0,0,1,0,0"))
                                                                                             (rule "mul_literals" (formula "67") (term "0,1,0,1,0,0,1,0,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "67") (term "0,1,0,0,1,0,0"))
                                                                                             (rule "add_literals" (formula "67") (term "0,0,1,0,0,1,0,0"))
                                                                                             (rule "applyEq" (formula "67") (term "0,1,0,1,0,0,1,0") (ifseqformula "58"))
                                                                                             (rule "polySimp_mulComm0" (formula "67") (term "1,0,1,0,0,1,0"))
                                                                                             (rule "polySimp_addComm1" (formula "67") (term "0"))
                                                                                             (rule "polySimp_rightDist" (formula "67") (term "1,0,1,0,0,1,0,0"))
                                                                                             (rule "mul_literals" (formula "67") (term "0,1,0,1,0,0,1,0,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "67") (term "0,1,0,0,1,0,0"))
                                                                                             (rule "add_literals" (formula "67") (term "0,0,1,0,0,1,0,0"))
                                                                                             (rule "applyEq" (formula "67") (term "0,0,1,0") (ifseqformula "62"))
                                                                                             (rule "polySimp_mulComm0" (formula "67") (term "0,1,0"))
                                                                                             (rule "polySimp_addComm1" (formula "67") (term "0"))
                                                                                             (rule "applyEq" (formula "67") (term "0,0,1,0") (ifseqformula "62"))
                                                                                             (rule "polySimp_addComm1" (formula "67") (term "0"))
                                                                                             (rule "applyEq" (formula "67") (term "1,0") (ifseqformula "65"))
                                                                                             (rule "polySimp_addAssoc" (formula "67") (term "0"))
                                                                                             (rule "polySimp_addComm1" (formula "67") (term "0,0"))
                                                                                             (rule "polySimp_pullOutFactor0b" (formula "67") (term "0"))
                                                                                             (rule "add_literals" (formula "67") (term "1,1,0"))
                                                                                             (rule "times_zero_1" (formula "67") (term "1,0"))
                                                                                             (rule "add_zero_right" (formula "67") (term "0"))
                                                                                             (rule "polySimp_addComm1" (formula "67") (term "0"))
                                                                                             (rule "polySimp_addAssoc" (formula "67") (term "0,0"))
                                                                                             (rule "polySimp_addComm1" (formula "67") (term "0,0,0"))
                                                                                             (rule "polySimp_pullOutFactor1b" (formula "67") (term "0,0"))
                                                                                             (rule "add_literals" (formula "67") (term "1,1,0,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "67") (term "0,0,0"))
                                                                                             (rule "polySimp_addComm1" (formula "67") (term "0,0,0,0"))
                                                                                             (rule "polySimp_pullOutFactor1b" (formula "67") (term "0,0,0"))
                                                                                             (rule "add_literals" (formula "67") (term "1,1,0,0,0"))
                                                                                             (rule "times_zero_1" (formula "67") (term "1,0,0,0"))
                                                                                             (rule "add_zero_right" (formula "67") (term "0,0,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "67") (term "0,0,0"))
                                                                                             (rule "polySimp_addComm1" (formula "67") (term "0,0,0,0"))
                                                                                             (rule "add_literals" (formula "67") (term "0,0,0,0,0"))
                                                                                             (rule "add_zero_left" (formula "67") (term "0,0,0,0"))
                                                                                             (rule "polySimp_pullOutFactor2" (formula "67") (term "0,0,0"))
                                                                                             (rule "add_literals" (formula "67") (term "1,0,0,0"))
                                                                                             (rule "times_zero_1" (formula "67") (term "0,0,0"))
                                                                                             (rule "add_zero_left" (formula "67") (term "0,0"))
                                                                                             (rule "applyEq" (formula "67") (term "0,1,0,1,0,1,0") (ifseqformula "58"))
                                                                                             (rule "polySimp_mulComm0" (formula "67") (term "1,0,1,0,1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "67") (term "1,0,1,0,1,0"))
                                                                                             (rule "mul_literals" (formula "67") (term "0,1,0,1,0,1,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "67") (term "0,1,0,1,0"))
                                                                                             (rule "add_literals" (formula "67") (term "0,0,1,0,1,0"))
                                                                                             (rule "applyEq" (formula "67") (term "0,1,0") (ifseqformula "62"))
                                                                                             (rule "polySimp_pullOutFactor0" (formula "67") (term "0"))
                                                                                             (rule "add_literals" (formula "67") (term "1,0"))
                                                                                             (rule "times_zero_1" (formula "67") (term "0"))
                                                                                              (builtin "One Step Simplification" (formula "67"))
                                                                                             (rule "true_left" (formula "67"))
                                                                                             (rule "cut_direct" (formula "14") (term "1"))
                                                                                             (branch "CUT: self.sorted_splitters[l_0 * -2 + b_bin] <= -1 + value TRUE"
                                                                                                 (builtin "One Step Simplification" (formula "15"))
                                                                                                (rule "true_left" (formula "15"))
                                                                                                (rule "nnf_notAnd" (formula "41") (term "1,0,0"))
                                                                                                (rule "inEqSimp_notGeq" (formula "41") (term "1,1,0,0"))
                                                                                                (rule "mul_literals" (formula "41") (term "1,0,0,1,1,0,0"))
                                                                                                (rule "add_literals" (formula "41") (term "0,0,1,1,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,1,0,0"))
                                                                                                (rule "mul_literals" (formula "41") (term "1,1,1,0,0"))
                                                                                                (rule "inEqSimp_notLeq" (formula "41") (term "0,1,0,0"))
                                                                                                (rule "mul_literals" (formula "41") (term "1,0,0,0,1,0,0"))
                                                                                                (rule "add_literals" (formula "41") (term "0,0,0,1,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "0,1,0,0"))
                                                                                                (rule "mul_literals" (formula "41") (term "1,0,1,0,0"))
                                                                                                (rule "jdiv_axiom" (formula "62") (term "1"))
                                                                                                (rule "eqSymm" (formula "62"))
                                                                                                (rule "inEqSimp_subsumption1" (formula "62") (term "0,0") (ifseqformula "25"))
                                                                                                (rule "leq_literals" (formula "62") (term "0,0,0"))
                                                                                                 (builtin "One Step Simplification" (formula "62"))
                                                                                                (rule "eqSymm" (formula "62"))
                                                                                                (rule "applyEq" (formula "71") (term "0,0") (ifseqformula "62"))
                                                                                                (rule "applyEq" (formula "66") (term "1,0,0") (ifseqformula "62"))
                                                                                                (rule "applyEq" (formula "63") (term "1") (ifseqformula "62"))
                                                                                                (rule "applyEq" (formula "66") (term "0,0,1,1") (ifseqformula "62"))
                                                                                                (rule "applyEq" (formula "66") (term "0,1,0,1") (ifseqformula "62"))
                                                                                                (rule "nnf_notAnd" (formula "41") (term "0,0,0"))
                                                                                                (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0,0"))
                                                                                                (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,0,0"))
                                                                                                (rule "add_literals" (formula "41") (term "0,0,0,0,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,0"))
                                                                                                (rule "mul_literals" (formula "41") (term "1,0,0,0,0"))
                                                                                                (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0,0,0"))
                                                                                                (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0,0,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0,0,0"))
                                                                                                (rule "add_literals" (formula "41") (term "0,0,0,1,0,0,0"))
                                                                                                (rule "add_zero_left" (formula "41") (term "0,0,1,0,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0,0"))
                                                                                                (rule "nnf_notAnd" (formula "41") (term "0,0,1,0"))
                                                                                                (rule "onlyCreatedObjectsAreReferencedFinal" (formula "2") (term "1,0") (ifseqformula "5") (ifseqformula "6"))
                                                                                                (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "69"))
                                                                                                 (builtin "One Step Simplification" (formula "2"))
                                                                                                (rule "onlyCreatedObjectsAreReferencedFinal" (formula "41") (term "0,0") (ifseqformula "6") (ifseqformula "7"))
                                                                                                (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "71"))
                                                                                                 (builtin "One Step Simplification" (formula "41"))
                                                                                                (rule "shift_paren_or" (formula "45") (term "0,0,0"))
                                                                                                (rule "commute_or" (formula "44") (term "1,0,0,0"))
                                                                                                (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "66") (term "0"))
                                                                                                (rule "translateJavaSubInt" (formula "66") (term "0,1,1,0"))
                                                                                                (rule "polySimp_elimSub" (formula "66") (term "1,0,0,0"))
                                                                                                (rule "polySimp_elimSub" (formula "66") (term "0,1,1,0"))
                                                                                                (rule "mul_literals" (formula "66") (term "1,0,1,1,0"))
                                                                                                (rule "polySimp_elimSub" (formula "66") (term "1,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "66") (term "0"))
                                                                                                (rule "polySimp_addComm0" (formula "66") (term "0,1,0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "66") (term "1,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "66") (term "0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "66") (term "1,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "66") (term "0,0,1,0"))
                                                                                                (rule "polySimp_addComm1" (formula "66") (term "1,0"))
                                                                                                (rule "polySimp_addComm0" (formula "66") (term "0,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "66") (term "0"))
                                                                                                (rule "polySimp_homoEq" (formula "66"))
                                                                                                (rule "polySimp_mulComm0" (formula "66") (term "1,0"))
                                                                                                (rule "polySimp_mulComm1" (formula "66") (term "1,1,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "66") (term "0,1,1,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "66") (term "0,1,1,0"))
                                                                                                (rule "polySimp_elimOne" (formula "66") (term "0,0,1,1,0"))
                                                                                                (rule "polySimp_mulComm1" (formula "66") (term "1,0,1,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "66") (term "0,1,0,1,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "66") (term "1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "66") (term "0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "66") (term "1,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "66") (term "0,0,1,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "66") (term "0"))
                                                                                                (rule "polySimp_addAssoc" (formula "66") (term "0,0"))
                                                                                                (rule "applyEq" (formula "66") (term "1,1,0,1,0") (ifseqformula "21"))
                                                                                                (rule "applyEq" (formula "66") (term "0,1,0,1,0,0,1,0") (ifseqformula "21"))
                                                                                                (rule "polySimp_addComm1" (formula "66") (term "0"))
                                                                                                (rule "applyEq" (formula "66") (term "0,0,1,0,0") (ifseqformula "24"))
                                                                                                (rule "polySimp_mulComm0" (formula "66") (term "0,1,0,0"))
                                                                                                (rule "applyEq" (formula "66") (term "0,1,0,1,0,0,1,0") (ifseqformula "21"))
                                                                                                (rule "applyEq" (formula "66") (term "0,0,1,0") (ifseqformula "24"))
                                                                                                (rule "polySimp_mulComm0" (formula "66") (term "0,1,0"))
                                                                                                (rule "polySimp_addComm1" (formula "66") (term "0"))
                                                                                                (rule "applyEq" (formula "66") (term "1,0") (ifseqformula "22"))
                                                                                                (rule "polySimp_addAssoc" (formula "66") (term "0"))
                                                                                                (rule "polySimp_addComm1" (formula "66") (term "0,0"))
                                                                                                (rule "polySimp_pullOutFactor0b" (formula "66") (term "0"))
                                                                                                (rule "add_literals" (formula "66") (term "1,1,0"))
                                                                                                (rule "times_zero_1" (formula "66") (term "1,0"))
                                                                                                (rule "add_zero_right" (formula "66") (term "0"))
                                                                                                (rule "polySimp_addComm1" (formula "66") (term "0"))
                                                                                                (rule "polySimp_addAssoc" (formula "66") (term "0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "66") (term "0,0,0"))
                                                                                                (rule "polySimp_pullOutFactor1b" (formula "66") (term "0,0"))
                                                                                                (rule "add_literals" (formula "66") (term "1,1,0,0"))
                                                                                                (rule "times_zero_1" (formula "66") (term "1,0,0"))
                                                                                                (rule "add_zero_right" (formula "66") (term "0,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "66") (term "0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "66") (term "0,0,0"))
                                                                                                (rule "add_literals" (formula "66") (term "0,0,0,0"))
                                                                                                (rule "add_zero_left" (formula "66") (term "0,0,0"))
                                                                                                (rule "polySimp_pullOutFactor0" (formula "66") (term "0,0"))
                                                                                                (rule "add_literals" (formula "66") (term "1,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "66") (term "0,0"))
                                                                                                (rule "applyEq" (formula "66") (term "0,1,0,1,0,1,0") (ifseqformula "21"))
                                                                                                (rule "applyEq" (formula "66") (term "0,1,0") (ifseqformula "24"))
                                                                                                (rule "polySimp_pullOutFactor1" (formula "66") (term "0"))
                                                                                                (rule "add_literals" (formula "66") (term "1,0"))
                                                                                                (rule "times_zero_1" (formula "66") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "66"))
                                                                                                (rule "true_left" (formula "66"))
                                                                                                (rule "nnf_notAnd" (formula "43") (term "0,0,0,1,0"))
                                                                                                (rule "inEqSimp_notLeq" (formula "43") (term "1,0,0,0,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "43") (term "1,0,0,1,0,0,0,1,0"))
                                                                                                (rule "mul_literals" (formula "43") (term "0,1,0,0,1,0,0,0,1,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "43") (term "0,0,1,0,0,0,1,0"))
                                                                                                (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,0,1,0"))
                                                                                                (rule "add_zero_left" (formula "43") (term "0,0,1,0,0,0,1,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "1,0,0,0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,1,0"))
                                                                                                (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,1,0"))
                                                                                                (rule "inEqSimp_notGeq" (formula "43") (term "0,0,0,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,0,0,1,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "0,0,0,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,0,0,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "43") (term "1,0,0,0,0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0,0,0,0,1,0"))
                                                                                                (rule "mul_literals" (formula "43") (term "0,1,0,0,0,0,1,0"))
                                                                                                (rule "polySimp_elimOne" (formula "43") (term "1,1,0,0,0,0,1,0"))
                                                                                                (rule "nnf_notAnd" (formula "43") (term "1,0,0,1,0"))
                                                                                                (rule "inEqSimp_notLeq" (formula "43") (term "0,1,0,0,1,0"))
                                                                                                (rule "mul_literals" (formula "43") (term "1,0,0,0,1,0,0,1,0"))
                                                                                                (rule "add_literals" (formula "43") (term "0,0,0,1,0,0,1,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "43") (term "0,1,0,0,1,0"))
                                                                                                (rule "mul_literals" (formula "43") (term "1,0,1,0,0,1,0"))
                                                                                                (rule "inEqSimp_notGeq" (formula "43") (term "1,1,0,0,1,0"))
                                                                                                (rule "mul_literals" (formula "43") (term "1,0,0,1,1,0,0,1,0"))
                                                                                                (rule "add_literals" (formula "43") (term "0,0,1,1,0,0,1,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "43") (term "1,1,0,0,1,0"))
                                                                                                (rule "mul_literals" (formula "43") (term "1,1,1,0,0,1,0"))
                                                                                                (rule "commute_or" (formula "43") (term "1,0,0"))
                                                                                                (rule "div_axiom" (formula "29") (term "0") (inst "quotient=quotient_1"))
                                                                                                (rule "qeq_literals" (formula "29") (term "0,1,1"))
                                                                                                 (builtin "One Step Simplification" (formula "29"))
                                                                                                (rule "mul_literals" (formula "29") (term "1,1,1,1"))
                                                                                                (rule "equal_literals" (formula "29") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "29"))
                                                                                                (rule "andLeft" (formula "29"))
                                                                                                (rule "andLeft" (formula "29"))
                                                                                                (rule "polySimp_addAssoc" (formula "31") (term "0,1"))
                                                                                                (rule "add_literals" (formula "31") (term "0,0,1"))
                                                                                                (rule "polySimp_addComm1" (formula "31") (term "1"))
                                                                                                (rule "add_literals" (formula "31") (term "0,1"))
                                                                                                (rule "inEqSimp_homoInEq0" (formula "30"))
                                                                                                (rule "polySimp_mulLiterals" (formula "30") (term "1,0"))
                                                                                                (rule "polySimp_addComm1" (formula "30") (term "0"))
                                                                                                (rule "inEqSimp_homoInEq1" (formula "31"))
                                                                                                (rule "polySimp_mulLiterals" (formula "31") (term "1,0"))
                                                                                                (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                                                                (rule "applyEq" (formula "29") (term "0") (ifseqformula "32"))
                                                                                                (rule "eqSymm" (formula "29"))
                                                                                                (rule "applyEqRigid" (formula "30") (term "0,1,0,0") (ifseqformula "29"))
                                                                                                (rule "mul_literals" (formula "30") (term "1,0,0"))
                                                                                                (rule "add_literals" (formula "30") (term "0,0"))
                                                                                                (rule "applyEq" (formula "31") (term "0,1,0,0") (ifseqformula "29"))
                                                                                                (rule "mul_literals" (formula "31") (term "1,0,0"))
                                                                                                (rule "add_literals" (formula "31") (term "0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                                                                                (rule "mul_literals" (formula "30") (term "1"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "31"))
                                                                                                (rule "mul_literals" (formula "31") (term "1"))
                                                                                                (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "37"))
                                                                                                (rule "leq_literals" (formula "30") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "30"))
                                                                                                (rule "true_left" (formula "30"))
                                                                                                (rule "commute_or_2" (formula "46") (term "0,0,0"))
                                                                                                (rule "shift_paren_or" (formula "45") (term "0,0,0"))
                                                                                                (rule "commute_or_2" (formula "44") (term "0,0"))
                                                                                                (rule "commute_or_2" (formula "44") (term "0,0,1,0"))
                                                                                                (rule "cnf_rightDist" (formula "45") (term "0"))
                                                                                                (rule "distr_forallAnd" (formula "45"))
                                                                                                (rule "andLeft" (formula "45"))
                                                                                                (rule "commute_or" (formula "46") (term "0"))
                                                                                                (rule "commute_or" (formula "47") (term "0,0,0,0"))
                                                                                                (rule "inEqSimp_or_subsumption0" (formula "47") (term "0,0,0,0"))
                                                                                                (rule "qeq_literals" (formula "47") (term "0,0,0,0,0,0"))
                                                                                                 (builtin "One Step Simplification" (formula "47"))
                                                                                                (rule "shift_paren_or" (formula "44") (term "0,0,0"))
                                                                                                (rule "commute_or" (formula "45") (term "0,0,0,0"))
                                                                                                (rule "inEqSimp_or_subsumption0" (formula "45") (term "0,0,0,0"))
                                                                                                (rule "qeq_literals" (formula "45") (term "0,0,0,0,0,0"))
                                                                                                 (builtin "One Step Simplification" (formula "45"))
                                                                                                (rule "commute_or" (formula "46") (term "0,0,0,0"))
                                                                                                (rule "inEqSimp_or_subsumption0" (formula "46") (term "0,0,0,0"))
                                                                                                (rule "qeq_literals" (formula "46") (term "0,0,0,0,0,0"))
                                                                                                 (builtin "One Step Simplification" (formula "46"))
                                                                                                (rule "div_axiom" (formula "66") (term "1") (inst "quotient=quotient_2"))
                                                                                                (rule "equal_literals" (formula "66") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "66"))
                                                                                                (rule "mul_literals" (formula "66") (term "1,1,1,1"))
                                                                                                (rule "qeq_literals" (formula "66") (term "0,1"))
                                                                                                 (builtin "One Step Simplification" (formula "66"))
                                                                                                (rule "andLeft" (formula "66"))
                                                                                                (rule "andLeft" (formula "66"))
                                                                                                (rule "polySimp_addComm1" (formula "68") (term "1"))
                                                                                                (rule "add_literals" (formula "68") (term "0,1"))
                                                                                                (rule "inEqSimp_commuteLeq" (formula "67"))
                                                                                                (rule "inEqSimp_homoInEq1" (formula "68"))
                                                                                                (rule "polySimp_mulLiterals" (formula "68") (term "1,0"))
                                                                                                (rule "polySimp_addComm1" (formula "68") (term "0"))
                                                                                                (rule "applyEq" (formula "72") (term "1,0,0") (ifseqformula "66"))
                                                                                                (rule "polySimp_homoEq" (formula "72"))
                                                                                                (rule "polySimp_mulLiterals" (formula "72") (term "1,0"))
                                                                                                (rule "polySimp_addComm1" (formula "72") (term "0"))
                                                                                                (rule "applyEqRigid" (formula "77") (term "0,0") (ifseqformula "66"))
                                                                                                (rule "eqSymm" (formula "77"))
                                                                                                (rule "applyEq" (formula "69") (term "1") (ifseqformula "66"))
                                                                                                (rule "applyEq" (formula "70") (term "1") (ifseqformula "66"))
                                                                                                (rule "applyEqRigid" (formula "72") (term "0,0,1,0") (ifseqformula "66"))
                                                                                                (rule "polySimp_mulComm0" (formula "72") (term "0,1,0"))
                                                                                                (rule "polySimp_addComm1" (formula "72") (term "0"))
                                                                                                (rule "applyEqRigid" (formula "72") (term "0,1,0,0,0") (ifseqformula "66"))
                                                                                                (rule "polySimp_addComm1" (formula "72") (term "0,0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "72") (term "0,0,0,0"))
                                                                                                (rule "polySimp_sepNegMonomial" (formula "72"))
                                                                                                (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "68"))
                                                                                                (rule "polySimp_mulComm0" (formula "68") (term "1"))
                                                                                                (rule "polySimp_rightDist" (formula "68") (term "1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "68") (term "1,1"))
                                                                                                (rule "mul_literals" (formula "68") (term "0,1"))
                                                                                                (rule "inEqSimp_strengthen1" (formula "67") (ifseqformula "77"))
                                                                                                (rule "inEqSimp_contradEq7" (formula "77") (ifseqformula "67"))
                                                                                                (rule "polySimp_mulAssoc" (formula "77") (term "1,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "77") (term "0,1,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "77") (term "1,0,0"))
                                                                                                (rule "polySimp_pullOutFactor0b" (formula "77") (term "0,0"))
                                                                                                (rule "add_literals" (formula "77") (term "1,1,0,0"))
                                                                                                (rule "times_zero_1" (formula "77") (term "1,0,0"))
                                                                                                (rule "add_zero_right" (formula "77") (term "0,0"))
                                                                                                (rule "leq_literals" (formula "77") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "77"))
                                                                                                (rule "false_right" (formula "77"))
                                                                                                (rule "inEqSimp_antiSymm" (formula "67") (ifseqformula "68"))
                                                                                                (rule "applyEq" (formula "22") (term "1,0,0") (ifseqformula "67"))
                                                                                                (rule "polySimp_mulComm1" (formula "22") (term "0"))
                                                                                                (rule "polySimp_homoEq" (formula "22"))
                                                                                                (rule "polySimp_mulComm1" (formula "22") (term "1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                                                                                                (rule "polySimp_mulComm1" (formula "22") (term "1,1,0"))
                                                                                                (rule "polySimp_mulAssoc" (formula "22") (term "0,1,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "22") (term "0,1,1,0"))
                                                                                                (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                                                                (rule "applyEq" (formula "66") (term "0,0") (ifseqformula "67"))
                                                                                                (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "67"))
                                                                                                (rule "inEqSimp_homoInEq0" (formula "9"))
                                                                                                (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0"))
                                                                                                (rule "mul_literals" (formula "9") (term "0,1,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                                                                (rule "add_literals" (formula "9") (term "0,0"))
                                                                                                (rule "applyEqRigid" (formula "69") (term "0") (ifseqformula "67"))
                                                                                                (rule "inEqSimp_homoInEq0" (formula "69"))
                                                                                                (rule "polySimp_pullOutFactor1" (formula "69") (term "0"))
                                                                                                (rule "add_literals" (formula "69") (term "1,0"))
                                                                                                (rule "times_zero_1" (formula "69") (term "0"))
                                                                                                (rule "qeq_literals" (formula "69"))
                                                                                                (rule "true_left" (formula "69"))
                                                                                                (rule "applyEqRigid" (formula "26") (term "0") (ifseqformula "67"))
                                                                                                (rule "inEqSimp_homoInEq1" (formula "26"))
                                                                                                (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                                                                (rule "mul_literals" (formula "26") (term "0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                                                                (rule "add_literals" (formula "26") (term "0,0"))
                                                                                                (rule "add_zero_left" (formula "26") (term "0"))
                                                                                                (rule "applyEqRigid" (formula "69") (term "0,0") (ifseqformula "67"))
                                                                                                (rule "applyEq" (formula "68") (term "0") (ifseqformula "67"))
                                                                                                (rule "inEqSimp_homoInEq1" (formula "68"))
                                                                                                (rule "polySimp_pullOutFactor1" (formula "68") (term "0"))
                                                                                                (rule "add_literals" (formula "68") (term "1,0"))
                                                                                                (rule "times_zero_1" (formula "68") (term "0"))
                                                                                                (rule "leq_literals" (formula "68"))
                                                                                                (rule "true_left" (formula "68"))
                                                                                                (rule "applyEq" (formula "59") (term "0,0,0") (ifseqformula "67"))
                                                                                                (rule "polySimp_mulComm0" (formula "59") (term "0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "59") (term "0,0"))
                                                                                                (rule "mul_literals" (formula "59") (term "0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "59") (term "1,0,0"))
                                                                                                (rule "applyEqRigid" (formula "13") (term "0,1,1") (ifseqformula "67"))
                                                                                                (rule "polySimp_mulComm0" (formula "13") (term "1,1"))
                                                                                                (rule "polySimp_rightDist" (formula "13") (term "1,1"))
                                                                                                (rule "mul_literals" (formula "13") (term "0,1,1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1"))
                                                                                                (rule "polySimp_addAssoc" (formula "13") (term "1"))
                                                                                                (rule "add_literals" (formula "13") (term "0,1"))
                                                                                                (rule "applyEqRigid" (formula "22") (term "1,0,1,0") (ifseqformula "67"))
                                                                                                (rule "polySimp_mulComm1" (formula "22") (term "1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                                                                                                (rule "polySimp_mulAssoc" (formula "22") (term "1,1,0"))
                                                                                                (rule "polySimp_mulComm1" (formula "22") (term "0,1,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "22") (term "0,1,1,0"))
                                                                                                (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0"))
                                                                                                (rule "applyEqRigid" (formula "15") (term "0,0,0,2,0") (ifseqformula "67"))
                                                                                                (rule "polySimp_mulComm0" (formula "15") (term "0,0,2,0"))
                                                                                                (rule "polySimp_rightDist" (formula "15") (term "0,0,2,0"))
                                                                                                (rule "mul_literals" (formula "15") (term "0,0,0,2,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,2,0"))
                                                                                                (rule "applyEqRigid" (formula "24") (term "1") (ifseqformula "67"))
                                                                                                (rule "applyEq" (formula "25") (term "0,1") (ifseqformula "67"))
                                                                                                (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                                                                (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                                                                (rule "mul_literals" (formula "25") (term "0,1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                                                                (rule "applyEq" (formula "27") (term "0,1") (ifseqformula "67"))
                                                                                                (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                                                                                (rule "polySimp_rightDist" (formula "27") (term "1"))
                                                                                                (rule "mul_literals" (formula "27") (term "0,1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                                                                                (rule "applyEqRigid" (formula "59") (term "1") (ifseqformula "67"))
                                                                                                (rule "applyEqRigid" (formula "60") (term "0,0,0,2,0") (ifseqformula "67"))
                                                                                                (rule "polySimp_mulComm0" (formula "60") (term "0,0,2,0"))
                                                                                                (rule "polySimp_rightDist" (formula "60") (term "0,0,2,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,2,0"))
                                                                                                (rule "mul_literals" (formula "60") (term "0,0,0,2,0"))
                                                                                                (rule "applyEqRigid" (formula "71") (term "1,0,0,1") (ifseqformula "67"))
                                                                                                (rule "polySimp_addAssoc" (formula "71") (term "0,0,1"))
                                                                                                (rule "polySimp_addComm1" (formula "71") (term "0,0,0,1"))
                                                                                                (rule "add_literals" (formula "71") (term "0,0,0,0,1"))
                                                                                                (rule "add_zero_left" (formula "71") (term "0,0,0,1"))
                                                                                                (rule "polySimp_pullOutFactor0" (formula "71") (term "0,0,1"))
                                                                                                (rule "add_literals" (formula "71") (term "1,0,0,1"))
                                                                                                (rule "apply_eq_monomials" (formula "22") (term "1,0") (ifseqformula "71"))
                                                                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "22") (term "0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                                                                                                (rule "polySimp_pullOutFactor0b" (formula "22") (term "1,0"))
                                                                                                (rule "add_literals" (formula "22") (term "1,1,1,0"))
                                                                                                (rule "times_zero_1" (formula "22") (term "1,1,0"))
                                                                                                (rule "add_zero_right" (formula "22") (term "1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "22") (term "0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                                                                                                (rule "polySimp_elimOne" (formula "22") (term "1,0,1,0"))
                                                                                                (rule "polySimp_mulAssoc" (formula "22") (term "0,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "22") (term "0,0,0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                                                                (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                                                                                (rule "polySimp_pullOutFactor0b" (formula "22") (term "0"))
                                                                                                (rule "add_literals" (formula "22") (term "1,1,0"))
                                                                                                (rule "times_zero_1" (formula "22") (term "1,0"))
                                                                                                (rule "add_zero_right" (formula "22") (term "0"))
                                                                                                (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                                                                                                (rule "polySimp_pullOutFactor2b" (formula "22") (term "0,0"))
                                                                                                (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                                                                (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                                                                (rule "add_zero_right" (formula "22") (term "0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "22") (term "0,0,0"))
                                                                                                (rule "applyEqRigid" (formula "22") (term "0,1,0,0,0") (ifseqformula "67"))
                                                                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                                                                                (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0"))
                                                                                                (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                                                                                                (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0,0"))
                                                                                                (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                                                                                (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                                                                                (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                                                                                (rule "polySimp_sepNegMonomial" (formula "22"))
                                                                                                (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                                                                (rule "applyEq" (formula "20") (term "0") (ifseqformula "22"))
                                                                                                (rule "inEqSimp_homoInEq1" (formula "20"))
                                                                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                                                                (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                                                                (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                                                                                (rule "add_literals" (formula "20") (term "0,0,0"))
                                                                                                (rule "add_zero_left" (formula "20") (term "0,0"))
                                                                                                (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                                                                                (rule "add_literals" (formula "20") (term "1,0"))
                                                                                                (rule "applyEq" (formula "64") (term "1") (ifseqformula "22"))
                                                                                                (rule "applyEq" (formula "57") (term "0") (ifseqformula "22"))
                                                                                                (rule "inEqSimp_homoInEq0" (formula "57"))
                                                                                                (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                                                                                                (rule "mul_literals" (formula "57") (term "0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0"))
                                                                                                (rule "polySimp_addComm1" (formula "57") (term "0"))
                                                                                                (rule "polySimp_addAssoc" (formula "57") (term "0,0"))
                                                                                                (rule "add_literals" (formula "57") (term "0,0,0"))
                                                                                                (rule "add_zero_left" (formula "57") (term "0,0"))
                                                                                                (rule "applyEq" (formula "52") (term "1") (ifseqformula "22"))
                                                                                                (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                                                                (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                                                (rule "inEqSimp_invertInEq0" (formula "26"))
                                                                                                (rule "mul_literals" (formula "26") (term "1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                                                                (rule "inEqSimp_invertInEq0" (formula "20"))
                                                                                                (rule "times_zero_2" (formula "20") (term "1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                                                                (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "57"))
                                                                                                (rule "polySimp_mulLiterals" (formula "57") (term "1"))
                                                                                                (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "49"))
                                                                                                (rule "leq_literals" (formula "20") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "20"))
                                                                                                (rule "true_left" (formula "20"))
                                                                                                (rule "elimGcdEq" (formula "21") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=pow(Z(2(#)), l)") (inst "elimGcdRightDiv=add(Z(0(#)), b)"))
                                                                                                 (builtin "One Step Simplification" (formula "21"))
                                                                                                (rule "mul_literals" (formula "21") (term "0,1,0,0,1"))
                                                                                                (rule "add_zero_left" (formula "21") (term "1,1,0,1,0"))
                                                                                                (rule "add_zero_left" (formula "21") (term "1,1,0,0,1"))
                                                                                                (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                                                                (rule "add_zero_left" (formula "21") (term "1,1,0,0,0"))
                                                                                                (rule "add_literals" (formula "21") (term "1,0,0"))
                                                                                                (rule "add_zero_left" (formula "21") (term "1,1,1"))
                                                                                                (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1"))
                                                                                                (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0,1"))
                                                                                                (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                                                                                (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                                                                                (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                                                                                (rule "equal_literals" (formula "21") (term "0,1"))
                                                                                                 (builtin "One Step Simplification" (formula "21"))
                                                                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                                                                                                (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,1,0"))
                                                                                                (rule "add_literals" (formula "21") (term "1,1,0,1,0"))
                                                                                                (rule "times_zero_1" (formula "21") (term "1,0,1,0"))
                                                                                                (rule "add_zero_right" (formula "21") (term "0,1,0"))
                                                                                                (rule "qeq_literals" (formula "21") (term "1,0"))
                                                                                                 (builtin "One Step Simplification" (formula "21"))
                                                                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0,0"))
                                                                                                (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                                                                                (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                                                                (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                                                                (rule "add_zero_right" (formula "21") (term "0,0"))
                                                                                                (rule "leq_literals" (formula "21") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "21"))
                                                                                                (rule "closeFalse" (formula "21"))
                                                                                             )
                                                                                             (branch "CUT: self.sorted_splitters[l_0 * -2 + b_bin] <= -1 + value FALSE"
                                                                                                 (builtin "One Step Simplification" (formula "14"))
                                                                                                (rule "inEqSimp_leqRight" (formula "67"))
                                                                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                                                (rule "applyEq" (formula "54") (term "1,1") (ifseqformula "15"))
                                                                                                (rule "polySimp_addAssoc" (formula "54") (term "1"))
                                                                                                (rule "add_literals" (formula "54") (term "0,1"))
                                                                                                (rule "add_zero_left" (formula "54") (term "1"))
                                                                                                (rule "applyEq" (formula "14") (term "0") (ifseqformula "15"))
                                                                                                (rule "inEqSimp_homoInEq0" (formula "14"))
                                                                                                (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                                                                                (rule "mul_literals" (formula "14") (term "0,1,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                                                                (rule "add_literals" (formula "14") (term "0,0"))
                                                                                                (rule "applyEq" (formula "44") (term "1,1,1,0,0") (ifseqformula "15"))
                                                                                                (rule "polySimp_addAssoc" (formula "44") (term "1,1,0,0"))
                                                                                                (rule "add_literals" (formula "44") (term "0,1,1,0,0"))
                                                                                                (rule "add_zero_left" (formula "44") (term "1,1,0,0"))
                                                                                                (rule "applyEq" (formula "42") (term "1,1,1,0,0,0,0") (ifseqformula "15"))
                                                                                                (rule "polySimp_addAssoc" (formula "42") (term "1,1,0,0,0,0"))
                                                                                                (rule "add_literals" (formula "42") (term "0,1,1,0,0,0,0"))
                                                                                                (rule "applyEq" (formula "19") (term "0") (ifseqformula "15"))
                                                                                                (rule "inEqSimp_commuteGeq" (formula "19"))
                                                                                                (rule "applyEq" (formula "43") (term "1,1,1,0,0") (ifseqformula "15"))
                                                                                                (rule "polySimp_addAssoc" (formula "43") (term "1,1,0,0"))
                                                                                                (rule "add_literals" (formula "43") (term "0,1,1,0,0"))
                                                                                                (rule "add_zero_left" (formula "43") (term "1,1,0,0"))
                                                                                                (rule "applyEq" (formula "42") (term "1,1,1,0,0,0,0,1,0") (ifseqformula "15"))
                                                                                                (rule "polySimp_addAssoc" (formula "42") (term "1,1,0,0,0,0,1,0"))
                                                                                                (rule "add_literals" (formula "42") (term "0,1,1,0,0,0,0,1,0"))
                                                                                                (rule "applyEq" (formula "41") (term "1,1") (ifseqformula "15"))
                                                                                                (rule "polySimp_addAssoc" (formula "41") (term "1"))
                                                                                                (rule "add_literals" (formula "41") (term "0,1"))
                                                                                                (rule "add_zero_left" (formula "41") (term "1"))
                                                                                                (rule "applyEq" (formula "13") (term "0") (ifseqformula "15"))
                                                                                                (rule "inEqSimp_homoInEq1" (formula "13"))
                                                                                                (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                                                                                                (rule "add_literals" (formula "13") (term "1,0"))
                                                                                                (rule "times_zero_1" (formula "13") (term "0"))
                                                                                                (rule "leq_literals" (formula "13"))
                                                                                                (rule "true_left" (formula "13"))
                                                                                                (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "14"))
                                                                                                (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "14"))
                                                                                                (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                                                                (rule "add_literals" (formula "28") (term "0,0,0"))
                                                                                                (rule "applyEq" (formula "56") (term "1,0,2,0") (ifseqformula "14"))
                                                                                                (rule "polySimp_addAssoc" (formula "56") (term "0,2,0"))
                                                                                                (rule "polySimp_addComm0" (formula "56") (term "0,0,2,0"))
                                                                                                (rule "polySimp_pullOutFactor0b" (formula "56") (term "0,2,0"))
                                                                                                (rule "add_literals" (formula "56") (term "1,1,0,2,0"))
                                                                                                (rule "polySimp_elimOne" (formula "56") (term "1,0,2,0"))
                                                                                                (rule "applyEq" (formula "34") (term "0") (ifseqformula "14"))
                                                                                                (rule "inEqSimp_homoInEq1" (formula "34"))
                                                                                                (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                                                                                (rule "mul_literals" (formula "34") (term "0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                                                                (rule "add_literals" (formula "34") (term "0,0"))
                                                                                                (rule "applyEq" (formula "1") (term "1,0,2,1,0") (ifseqformula "14"))
                                                                                                (rule "polySimp_addAssoc" (formula "1") (term "0,2,1,0"))
                                                                                                (rule "polySimp_addComm0" (formula "1") (term "0,0,2,1,0"))
                                                                                                (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,2,1,0"))
                                                                                                (rule "add_literals" (formula "1") (term "1,1,0,2,1,0"))
                                                                                                (rule "times_zero_1" (formula "1") (term "1,0,2,1,0"))
                                                                                                (rule "add_zero_right" (formula "1") (term "0,2,1,0"))
                                                                                                (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "14"))
                                                                                                (rule "polySimp_addAssoc" (formula "37") (term "1"))
                                                                                                (rule "add_literals" (formula "37") (term "0,1"))
                                                                                                (rule "add_zero_left" (formula "37") (term "1"))
                                                                                                (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "14"))
                                                                                                (rule "polySimp_addAssoc" (formula "33") (term "1"))
                                                                                                (rule "add_literals" (formula "33") (term "0,1"))
                                                                                                (rule "add_zero_left" (formula "33") (term "1"))
                                                                                                (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "14"))
                                                                                                (rule "polySimp_addAssoc" (formula "15") (term "1"))
                                                                                                (rule "add_literals" (formula "15") (term "0,1"))
                                                                                                (rule "add_zero_left" (formula "15") (term "1"))
                                                                                                (rule "applyEq" (formula "63") (term "1,1") (ifseqformula "14"))
                                                                                                (rule "polySimp_addAssoc" (formula "63") (term "1"))
                                                                                                (rule "polySimp_addComm1" (formula "63") (term "0,1"))
                                                                                                (rule "add_literals" (formula "63") (term "0,0,1"))
                                                                                                (rule "add_zero_left" (formula "63") (term "0,1"))
                                                                                                (rule "polySimp_pullOutFactor0" (formula "63") (term "1"))
                                                                                                (rule "add_literals" (formula "63") (term "1,1"))
                                                                                                (rule "polySimp_elimOne" (formula "63") (term "1"))
                                                                                                (rule "applyEq" (formula "42") (term "0,0,0,1,1,1,0") (ifseqformula "14"))
                                                                                                (rule "polySimp_mulComm0" (formula "42") (term "0,0,1,1,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "42") (term "0,0,1,1,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,1,1,1,0"))
                                                                                                (rule "mul_literals" (formula "42") (term "0,0,0,1,1,1,0"))
                                                                                                (rule "applyEq" (formula "21") (term "0,1,0,1") (ifseqformula "14"))
                                                                                                (rule "polySimp_pullOutFactor1" (formula "21") (term "0,1"))
                                                                                                (rule "add_literals" (formula "21") (term "1,0,1"))
                                                                                                (rule "times_zero_1" (formula "21") (term "0,1"))
                                                                                                (rule "add_zero_left" (formula "21") (term "1"))
                                                                                                (rule "applyEq" (formula "65") (term "0,1,0,0,1") (ifseqformula "14"))
                                                                                                (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1"))
                                                                                                (rule "polySimp_rightDist" (formula "65") (term "1,0,0,1"))
                                                                                                (rule "mul_literals" (formula "65") (term "0,1,0,0,1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,1"))
                                                                                                (rule "polySimp_addAssoc" (formula "65") (term "0,0,1"))
                                                                                                (rule "polySimp_addComm1" (formula "65") (term "0,0,0,1"))
                                                                                                (rule "add_literals" (formula "65") (term "0,0,0,0,1"))
                                                                                                (rule "add_zero_left" (formula "65") (term "0,0,0,1"))
                                                                                                (rule "polySimp_pullOutFactor1" (formula "65") (term "0,0,1"))
                                                                                                (rule "add_literals" (formula "65") (term "1,0,0,1"))
                                                                                                (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                                                                                (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                                                                (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                                                                                                (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                                                                (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                                                                (rule "inEqSimp_subsumption6" (formula "34") (ifseqformula "25"))
                                                                                                (rule "mul_literals" (formula "34") (term "1,1,0"))
                                                                                                (rule "greater_literals" (formula "34") (term "0,0"))
                                                                                                 (builtin "One Step Simplification" (formula "34"))
                                                                                                (rule "leq_literals" (formula "34") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "34"))
                                                                                                (rule "true_left" (formula "34"))
                                                                                                (rule "inEqSimp_subsumption4" (formula "13") (ifseqformula "9"))
                                                                                                (rule "greater_literals" (formula "13") (term "0,0"))
                                                                                                 (builtin "One Step Simplification" (formula "13"))
                                                                                                (rule "mul_literals" (formula "13") (term "0,0"))
                                                                                                (rule "leq_literals" (formula "13") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "13"))
                                                                                                (rule "true_left" (formula "13"))
                                                                                                (rule "elimGcdEq" (formula "20") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=mul(l_0, pow(Z(2(#)), l))") (inst "elimGcdRightDiv=mul(l_0, b)"))
                                                                                                (rule "mul_literals" (formula "20") (term "0,1,0,0,1"))
                                                                                                (rule "mul_literals" (formula "20") (term "0,1,0,1,0"))
                                                                                                (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                                                                (rule "mul_literals" (formula "20") (term "0,1,0,1,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "20") (term "1,1,1"))
                                                                                                (rule "polySimp_mulComm0" (formula "20") (term "0,1,1"))
                                                                                                (rule "polySimp_mulComm0" (formula "20") (term "0,0,0,0,0"))
                                                                                                 (builtin "One Step Simplification" (formula "20"))
                                                                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1"))
                                                                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0"))
                                                                                                (rule "polySimp_pullOutFactor0" (formula "20") (term "0,1,0"))
                                                                                                (rule "add_literals" (formula "20") (term "1,0,1,0"))
                                                                                                (rule "times_zero_1" (formula "20") (term "0,1,0"))
                                                                                                (rule "qeq_literals" (formula "20") (term "1,0"))
                                                                                                 (builtin "One Step Simplification" (formula "20"))
                                                                                                (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,0,1"))
                                                                                                (rule "polySimp_pullOutFactor0" (formula "20") (term "0,0,1"))
                                                                                                (rule "add_literals" (formula "20") (term "1,0,0,1"))
                                                                                                (rule "times_zero_1" (formula "20") (term "0,0,1"))
                                                                                                 (builtin "One Step Simplification" (formula "20"))
                                                                                                (rule "polySimp_mulComm0" (formula "20") (term "0,1,0,0"))
                                                                                                (rule "polySimp_pullOutFactor0" (formula "20") (term "0,0"))
                                                                                                (rule "add_literals" (formula "20") (term "1,0,0"))
                                                                                                (rule "times_zero_1" (formula "20") (term "0,0"))
                                                                                                (rule "leq_literals" (formula "20") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "20"))
                                                                                                (rule "elimGcdLeq_antec" (formula "51") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=pow(Z(2(#)), l)") (inst "elimGcdRightDiv=l_0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,0"))
                                                                                                (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,1,0"))
                                                                                                (rule "neg_literal" (formula "51") (term "0,0,0,0,0,1,0"))
                                                                                                (rule "leq_literals" (formula "51") (term "0,0"))
                                                                                                 (builtin "One Step Simplification" (formula "51"))
                                                                                                (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,0"))
                                                                                                (rule "add_literals" (formula "51") (term "1,1,0,0"))
                                                                                                (rule "times_zero_1" (formula "51") (term "1,0,0"))
                                                                                                (rule "add_zero_right" (formula "51") (term "0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "51") (term "1,0,0,0"))
                                                                                                (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,0"))
                                                                                                (rule "add_literals" (formula "51") (term "1,1,0,0"))
                                                                                                (rule "times_zero_1" (formula "51") (term "1,0,0"))
                                                                                                (rule "add_zero_right" (formula "51") (term "0,0"))
                                                                                                (rule "qeq_literals" (formula "51") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "51"))
                                                                                                (rule "polyDiv_pullOut" (formula "27") (term "0") (inst "polyDivCoeff=Z(neglit(1(#)))"))
                                                                                                (rule "equal_literals" (formula "27") (term "0,0"))
                                                                                                 (builtin "One Step Simplification" (formula "27"))
                                                                                                (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0,0"))
                                                                                                (rule "mul_literals" (formula "27") (term "1,0,0,0"))
                                                                                                (rule "polySimp_homoEq" (formula "27"))
                                                                                                (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                                                                (rule "polySimp_addComm1" (formula "27") (term "0,0,1,1,0"))
                                                                                                (rule "add_literals" (formula "27") (term "0,0,0,1,1,0"))
                                                                                                (rule "polySimp_addComm0" (formula "27") (term "1,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                                                                (rule "mul_literals" (formula "27") (term "0,1,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                                                                (rule "add_literals" (formula "27") (term "0,0"))
                                                                                                (rule "add_zero_left" (formula "27") (term "0"))
                                                                                                (rule "polySimp_invertEq" (formula "27"))
                                                                                                (rule "times_zero_2" (formula "27") (term "1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                                                                (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                                                                (rule "cancel_equation" (formula "20"))
                                                                                                (branch "Case 1"
                                                                                                   (rule "applyEq" (formula "63") (term "0,0,0") (ifseqformula "20"))
                                                                                                   (rule "polySimp_homoEq" (formula "63"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "63") (term "1,0"))
                                                                                                   (rule "polySimp_mulComm0" (formula "63") (term "0,1,0"))
                                                                                                   (rule "polySimp_pullOutFactor0b" (formula "63") (term "0"))
                                                                                                   (rule "add_literals" (formula "63") (term "1,1,0"))
                                                                                                   (rule "times_zero_1" (formula "63") (term "1,0"))
                                                                                                   (rule "add_zero_right" (formula "63") (term "0"))
                                                                                                   (rule "applyEq" (formula "58") (term "0,1") (ifseqformula "20"))
                                                                                                   (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                                                                                   (rule "inEqSimp_homoInEq1" (formula "18"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,0"))
                                                                                                   (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                                                                                   (rule "add_literals" (formula "18") (term "1,1,0"))
                                                                                                   (rule "applyEq" (formula "50") (term "0") (ifseqformula "20"))
                                                                                                   (rule "applyEq" (formula "44") (term "0") (ifseqformula "20"))
                                                                                                   (rule "applyEq" (formula "50") (term "0") (ifseqformula "20"))
                                                                                                   (rule "applyEq" (formula "15") (term "0") (ifseqformula "20"))
                                                                                                   (rule "inEqSimp_homoInEq0" (formula "15"))
                                                                                                   (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                                                                                                   (rule "add_literals" (formula "15") (term "1,0"))
                                                                                                   (rule "times_zero_1" (formula "15") (term "0"))
                                                                                                   (rule "qeq_literals" (formula "15"))
                                                                                                   (rule "true_left" (formula "15"))
                                                                                                   (rule "applyEq" (formula "44") (term "0,1") (ifseqformula "19"))
                                                                                                   (rule "applyEq" (formula "46") (term "0,1") (ifseqformula "19"))
                                                                                                   (rule "polySimp_sepPosMonomial" (formula "61"))
                                                                                                   (rule "polySimp_mulLiterals" (formula "61") (term "1"))
                                                                                                   (rule "polySimp_elimOne" (formula "61") (term "1"))
                                                                                                   (rule "close" (formula "66") (ifseqformula "61"))
                                                                                                )
                                                                                                (branch "Case 2"
                                                                                                   (rule "notRight" (formula "65"))
                                                                                                   (rule "applyEq" (formula "28") (term "0,1,0,0") (ifseqformula "1"))
                                                                                                   (rule "times_zero_2" (formula "28") (term "1,0,0"))
                                                                                                   (rule "add_literals" (formula "28") (term "0,0"))
                                                                                                   (rule "div_literals" (formula "28") (term "0"))
                                                                                                    (builtin "One Step Simplification" (formula "28"))
                                                                                                   (rule "true_left" (formula "28"))
                                                                                                   (rule "applyEq" (formula "54") (term "1,0,2,0") (ifseqformula "1"))
                                                                                                   (rule "add_zero_right" (formula "54") (term "0,2,0"))
                                                                                                   (rule "eqSymm" (formula "54"))
                                                                                                   (rule "applyEq" (formula "53") (term "0,0,0") (ifseqformula "1"))
                                                                                                   (rule "times_zero_2" (formula "53") (term "0,0"))
                                                                                                   (rule "jdiv_axiom_inline" (formula "53") (term "0"))
                                                                                                   (rule "qeq_literals" (formula "53") (term "0,0"))
                                                                                                    (builtin "One Step Simplification" (formula "53"))
                                                                                                   (rule "div_literals" (formula "53") (term "0"))
                                                                                                   (rule "eqSymm" (formula "53"))
                                                                                                   (rule "applyEqRigid" (formula "51") (term "1") (ifseqformula "1"))
                                                                                                   (rule "applyEq" (formula "38") (term "0,1") (ifseqformula "1"))
                                                                                                   (rule "times_zero_2" (formula "38") (term "1"))
                                                                                                   (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "1"))
                                                                                                   (rule "leq_literals" (formula "10"))
                                                                                                   (rule "true_left" (formula "10"))
                                                                                                   (rule "applyEq" (formula "24") (term "0") (ifseqformula "1"))
                                                                                                   (rule "qeq_literals" (formula "24"))
                                                                                                   (rule "closeFalse" (formula "24"))
                                                                                                )
                                                                                             )
                                                                                          )
                                                                                       )
                                                                                       (branch "self.tree[b] < value FALSE"
                                                                                          (rule "translateJavaAddInt" (formula "19") (term "1,1"))
                                                                                          (rule "eqSymm" (formula "53"))
                                                                                          (rule "eqSymm" (formula "21"))
                                                                                          (rule "eqSymm" (formula "22") (term "0"))
                                                                                          (rule "eqSymm" (formula "22") (term "1"))
                                                                                          (rule "translateJavaSubInt" (formula "53") (term "0"))
                                                                                          (rule "translateJavaSubInt" (formula "53") (term "1"))
                                                                                          (rule "translateJavaDivInt" (formula "21") (term "1,1"))
                                                                                          (rule "translateJavaSubInt" (formula "21") (term "0"))
                                                                                          (rule "translateJavaSubInt" (formula "21") (term "1"))
                                                                                          (rule "replace_known_right" (formula "42") (term "0,1,1,0") (ifseqformula "52"))
                                                                                           (builtin "One Step Simplification" (formula "42"))
                                                                                          (rule "add_zero_right" (formula "42") (term "1,0"))
                                                                                          (rule "replace_known_right" (formula "48") (term "0,0") (ifseqformula "52"))
                                                                                           (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "52")))
                                                                                          (rule "add_zero_right" (formula "48") (term "0,1,1"))
                                                                                          (rule "replace_known_right" (formula "53") (term "0,1,0,0,0") (ifseqformula "52"))
                                                                                           (builtin "One Step Simplification" (formula "53"))
                                                                                          (rule "add_zero_right" (formula "53") (term "0,0,0"))
                                                                                          (rule "polySimp_elimSub" (formula "25") (term "1,1,1"))
                                                                                          (rule "mul_literals" (formula "25") (term "1,1,1,1"))
                                                                                          (rule "polySimp_elimSub" (formula "22") (term "0,1"))
                                                                                          (rule "polySimp_elimSub" (formula "21") (term "0"))
                                                                                          (rule "mul_literals" (formula "21") (term "1,0"))
                                                                                          (rule "polySimp_elimSub" (formula "21") (term "1"))
                                                                                          (rule "polySimp_homoEq" (formula "48"))
                                                                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,0"))
                                                                                          (rule "polySimp_elimSub" (formula "53") (term "1"))
                                                                                          (rule "polySimp_elimSub" (formula "53") (term "0"))
                                                                                          (rule "mul_literals" (formula "53") (term "1,0"))
                                                                                          (rule "polySimp_homoEq" (formula "22") (term "1"))
                                                                                          (rule "polySimp_homoEq" (formula "21"))
                                                                                          (rule "polySimp_elimOne" (formula "48") (term "1,0"))
                                                                                          (rule "polySimp_homoEq" (formula "53"))
                                                                                          (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                                                          (rule "eqSymm" (formula "25"))
                                                                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0,1"))
                                                                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "53") (term "1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "19") (term "1,1"))
                                                                                          (rule "polySimp_addComm1" (formula "48") (term "0"))
                                                                                          (rule "polySimp_addComm1" (formula "25") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm0" (formula "21") (term "1,1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "53") (term "1,1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "48") (term "0,0"))
                                                                                          (rule "polySimp_addComm0" (formula "25") (term "0,1,0,0"))
                                                                                          (rule "polySimp_rightDist" (formula "22") (term "1,0,1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,1"))
                                                                                          (rule "polySimp_elimOne" (formula "22") (term "1,1,0,1"))
                                                                                          (rule "polySimp_mulComm0" (formula "22") (term "0,1,0,1"))
                                                                                          (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                                                          (rule "mul_literals" (formula "21") (term "0,1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "53") (term "1,0"))
                                                                                          (rule "mul_literals" (formula "53") (term "0,1,0"))
                                                                                          (rule "inEqSimp_ltRight" (formula "52"))
                                                                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                                                          (rule "logTimesBaseConcrete" (formula "43") (term "0"))
                                                                                          (rule "greater_literals" (formula "43") (term "1,0,0"))
                                                                                           (builtin "One Step Simplification" (formula "43"))
                                                                                          (rule "polySimp_addComm0" (formula "43") (term "1,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "3"))
                                                                                          (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                                                          (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "25"))
                                                                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                                          (rule "polySimp_addAssoc" (formula "23") (term "0,1"))
                                                                                          (rule "polySimp_addComm0" (formula "23") (term "0,0,1"))
                                                                                          (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                                                          (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                                                                          (rule "polySimp_addComm0" (formula "22") (term "0,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "53") (term "0"))
                                                                                          (rule "polySimp_addComm1" (formula "53") (term "0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "53") (term "0,0,0"))
                                                                                          (rule "polySimp_addComm0" (formula "53") (term "0,0,0,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                                                          (rule "add_literals" (formula "3") (term "0,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                                          (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                                          (rule "inEqSimp_ltToLeq" (formula "19"))
                                                                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                                                                          (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                                                          (rule "applyEq" (formula "19") (term "0,1,0") (ifseqformula "34"))
                                                                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,0"))
                                                                                          (rule "applyEq" (formula "42") (term "1,1,0") (ifseqformula "20"))
                                                                                           (builtin "One Step Simplification" (formula "42"))
                                                                                          (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                                                                          (rule "applyEq" (formula "25") (term "1") (ifseqformula "27"))
                                                                                          (rule "applyEq" (formula "50") (term "0,1,0,1,0") (ifseqformula "20"))
                                                                                          (rule "polySimp_sepPosMonomial" (formula "48"))
                                                                                          (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                                                          (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                                                          (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                                                                          (rule "polySimp_mulComm0" (formula "48") (term "0,1"))
                                                                                          (rule "applyEq" (formula "52") (term "0,1,0") (ifseqformula "48"))
                                                                                          (rule "polySimp_mulComm0" (formula "52") (term "1,0"))
                                                                                          (rule "polySimp_rightDist" (formula "52") (term "1,0"))
                                                                                          (rule "polySimp_mulAssoc" (formula "52") (term "0,1,0"))
                                                                                          (rule "polySimp_mulComm0" (formula "52") (term "0,0,1,0"))
                                                                                          (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0"))
                                                                                          (rule "polySimp_elimOne" (formula "52") (term "0,1,0"))
                                                                                          (rule "polySimp_addAssoc" (formula "52") (term "0"))
                                                                                          (rule "polySimp_pullOutFactor2b" (formula "52") (term "0,0"))
                                                                                          (rule "add_literals" (formula "52") (term "1,1,0,0"))
                                                                                          (rule "times_zero_1" (formula "52") (term "1,0,0"))
                                                                                          (rule "add_zero_right" (formula "52") (term "0,0"))
                                                                                          (rule "close" (formula "52") (ifseqformula "21"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                           (branch "Case 2"
                                                                              (rule "impRight" (formula "45"))
                                                                              (rule "eqSymm" (formula "1"))
                                                                              (rule "polySimp_elimSub" (formula "46") (term "1"))
                                                                              (rule "polySimp_addComm1" (formula "46") (term "1"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "46") (term "0,0"))
                                                                              (rule "polySimp_homoEq" (formula "46"))
                                                                              (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "20"))
                                                                              (rule "polySimp_mulComm0" (formula "20") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "2"))
                                                                              (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                                              (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                              (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "36") (term "0,1,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,1,1,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0"))
                                                                              (rule "polySimp_homoEq" (formula "42"))
                                                                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "42") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "46") (term "0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "42") (term "0,1,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,1,0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "42") (term "0"))
                                                                              (rule "applyEq" (formula "32") (term "1,0") (ifseqformula "1"))
                                                                              (rule "applyEq" (formula "20") (term "0,1,0") (ifseqformula "1"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                                                              (rule "add_literals" (formula "20") (term "1,0"))
                                                                              (rule "times_zero_1" (formula "20") (term "0"))
                                                                              (rule "leq_literals" (formula "20"))
                                                                              (rule "true_left" (formula "20"))
                                                                              (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "1"))
                                                                              (rule "polySimp_addAssoc" (formula "20") (term "1,0"))
                                                                              (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                                                                              (rule "polySimp_pullOutFactor2b" (formula "20") (term "1,0"))
                                                                              (rule "add_literals" (formula "20") (term "1,1,1,0"))
                                                                              (rule "times_zero_1" (formula "20") (term "1,1,0"))
                                                                              (rule "add_zero_right" (formula "20") (term "1,0"))
                                                                              (rule "pow_literals" (formula "20") (term "0"))
                                                                              (rule "eqSymm" (formula "20"))
                                                                              (rule "applyEq" (formula "39") (term "2,0") (ifseqformula "1"))
                                                                              (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "1"))
                                                                              (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                              (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                                              (rule "add_literals" (formula "2") (term "0,0,0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                                              (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                              (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                              (rule "add_zero_right" (formula "2") (term "0"))
                                                                              (rule "leq_literals" (formula "2"))
                                                                              (rule "closeFalse" (formula "2"))
                                                                           )
                                                                        )
                                                                        (branch "Case 2"
                                                                           (rule "andRight" (formula "45"))
                                                                           (branch "Case 1"
                                                                               (builtin "One Step Simplification" (formula "45"))
                                                                              (rule "closeTrue" (formula "45"))
                                                                           )
                                                                           (branch "Case 2"
                                                                               (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "22")))
                                                                              (rule "closeTrue" (formula "45"))
                                                                           )
                                                                        )
                                                                     )
                                                                     (branch "Case 2"
                                                                         (builtin "One Step Simplification" (formula "45"))
                                                                        (rule "closeTrue" (formula "45"))
                                                                     )
                                                                  )
                                                                  (branch "Case 2"
                                                                      (builtin "One Step Simplification" (formula "45"))
                                                                     (rule "closeTrue" (formula "45"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                   )
                                                )
                                             )
                                          )
                                       )
                                       (branch "if x_6 false"
                                           (builtin "One Step Simplification" (formula "37"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "notLeft" (formula "1"))
                                          (rule "methodCallReturn" (formula "37") (term "1"))
                                          (rule "assignment" (formula "37") (term "1"))
                                           (builtin "One Step Simplification" (formula "37"))
                                          (rule "methodCallEmpty" (formula "37") (term "1"))
                                          (rule "tryEmpty" (formula "37") (term "1"))
                                          (rule "emptyModality" (formula "37") (term "1"))
                                          (rule "andRight" (formula "37"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "37"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "37"))
                                                (branch "Case 1"
                                                    (builtin "One Step Simplification" (formula "37"))
                                                   (rule "inEqSimp_ltRight" (formula "35"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "19"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "35") (term "0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "37") (term "0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "37") (term "0,3,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,3,0"))
                                                   (rule "applyEq" (formula "37") (term "1,0,0,3,0") (ifseqformula "33"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "35") (term "1,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "35") (term "1,0,1,1,0"))
                                                   (rule "mul_literals" (formula "35") (term "0,1,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "35") (term "1,1,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0,1,1,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,1,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,3,0"))
                                                   (rule "polySimp_mulComm0" (formula "37") (term "1,0,3,0"))
                                                   (rule "polySimp_rightDist" (formula "37") (term "1,0,3,0"))
                                                   (rule "mul_literals" (formula "37") (term "0,1,0,3,0"))
                                                   (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,3,0"))
                                                   (rule "polySimp_elimOne" (formula "37") (term "1,1,0,3,0"))
                                                   (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "18"))
                                                   (rule "leq_literals" (formula "8") (term "0"))
                                                    (builtin "One Step Simplification" (formula "8"))
                                                   (rule "true_left" (formula "8"))
                                                   (rule "inEqSimp_antiSymm" (formula "18") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "18"))
                                                   (rule "polySimp_addAssoc" (formula "20") (term "1,0"))
                                                   (rule "polySimp_addComm0" (formula "20") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "20") (term "1,0"))
                                                   (rule "add_literals" (formula "20") (term "1,1,1,0"))
                                                   (rule "times_zero_1" (formula "20") (term "1,1,0"))
                                                   (rule "add_zero_right" (formula "20") (term "1,0"))
                                                   (rule "pow_literals" (formula "20") (term "0"))
                                                   (rule "eqSymm" (formula "20"))
                                                   (rule "applyEq" (formula "31") (term "1,0") (ifseqformula "18"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "18"))
                                                   (rule "inEqSimp_homoInEq0" (formula "1"))
                                                   (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "0"))
                                                   (rule "qeq_literals" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "applyEq" (formula "18") (term "0") (ifseqformula "17"))
                                                   (rule "inEqSimp_homoInEq1" (formula "18"))
                                                   (rule "polySimp_pullOutFactor1" (formula "18") (term "0"))
                                                   (rule "add_literals" (formula "18") (term "1,0"))
                                                   (rule "times_zero_1" (formula "18") (term "0"))
                                                   (rule "leq_literals" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "applyEq" (formula "35") (term "0,4,0") (ifseqformula "18"))
                                                   (rule "jdiv_axiom_inline" (formula "35") (term "4,0"))
                                                   (rule "qeq_literals" (formula "35") (term "0,4,0"))
                                                    (builtin "One Step Simplification" (formula "35"))
                                                   (rule "div_literals" (formula "35") (term "4,0"))
                                                   (rule "applyEq" (formula "14") (term "3,0") (ifseqformula "18"))
                                                   (rule "applyEq" (formula "10") (term "0") (ifseqformula "18"))
                                                   (rule "qeq_literals" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "applyEq" (formula "14") (term "4,0") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "9") (term "0") (ifseqformula "17"))
                                                   (rule "leq_literals" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "applyEq" (formula "29") (term "0,0,1,0,2,0") (ifseqformula "16"))
                                                   (rule "jdiv_axiom_inline" (formula "29") (term "0,1,0,2,0"))
                                                   (rule "qeq_literals" (formula "29") (term "0,0,1,0,2,0"))
                                                    (builtin "One Step Simplification" (formula "29"))
                                                   (rule "div_literals" (formula "29") (term "0,1,0,2,0"))
                                                   (rule "mul_literals" (formula "29") (term "1,0,2,0"))
                                                   (rule "polySimp_addComm0" (formula "29") (term "0,2,0"))
                                                   (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "15"))
                                                   (rule "applyEq" (formula "27") (term "0") (ifseqformula "23"))
                                                   (rule "inEqSimp_homoInEq1" (formula "27"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor0" (formula "27") (term "0"))
                                                   (rule "add_literals" (formula "27") (term "1,0"))
                                                   (rule "times_zero_1" (formula "27") (term "0"))
                                                   (rule "leq_literals" (formula "27"))
                                                   (rule "true_left" (formula "27"))
                                                   (rule "applyEq" (formula "32") (term "0,0,1,2,3,0") (ifseqformula "16"))
                                                   (rule "jdiv_axiom_inline" (formula "32") (term "0,1,2,3,0"))
                                                   (rule "mul_literals" (formula "32") (term "0,0,2,0,1,2,3,0"))
                                                   (rule "qeq_literals" (formula "32") (term "0,0,1,2,3,0"))
                                                    (builtin "One Step Simplification" (formula "32"))
                                                   (rule "div_literals" (formula "32") (term "0,1,2,3,0"))
                                                   (rule "mul_literals" (formula "32") (term "1,2,3,0"))
                                                   (rule "polySimp_addComm0" (formula "32") (term "2,3,0"))
                                                   (rule "applyEq" (formula "17") (term "1") (ifseqformula "23"))
                                                   (rule "Free_class_invariant_axiom_for_de_wiesler_Tree" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "18") (inst "i_0=i_0") (inst "i=i"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "expand_inInt" (formula "18") (term "1,0,0,1,0"))
                                                   (rule "expand_inInt" (formula "18") (term "1,0,0,1"))
                                                   (rule "replace_int_MAX" (formula "18") (term "1,0,1,0,0,1,0"))
                                                   (rule "replace_int_MIN" (formula "18") (term "0,1,1,0,0,1,0"))
                                                   (rule "replace_int_MAX" (formula "18") (term "1,0,1,0,0,1"))
                                                   (rule "replace_int_MIN" (formula "18") (term "0,1,1,0,0,1"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "andLeft" (formula "19"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "andLeft" (formula "18"))
                                                   (rule "andLeft" (formula "20"))
                                                   (rule "notLeft" (formula "18"))
                                                   (rule "notLeft" (formula "18"))
                                                   (rule "translateJavaSubInt" (formula "26") (term "0,2,1,1,0"))
                                                   (rule "translateJavaSubInt" (formula "24") (term "3,0"))
                                                   (rule "translateJavaShiftLeftInt" (formula "20") (term "1"))
                                                   (rule "eqSymm" (formula "26") (term "1,0"))
                                                   (rule "polySimp_elimSub" (formula "24") (term "3,0"))
                                                   (rule "mul_literals" (formula "24") (term "1,3,0"))
                                                   (rule "polySimp_elimSub" (formula "26") (term "0,2,0,1,0"))
                                                   (rule "mul_literals" (formula "26") (term "1,0,2,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "24") (term "3,0"))
                                                   (rule "polySimp_addComm0" (formula "26") (term "0,2,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "25") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "26") (term "1,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "25") (term "1,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "25") (term "0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "23"))
                                                   (rule "inEqSimp_commuteLeq" (formula "22"))
                                                   (rule "inEqSimp_commuteLeq" (formula "21"))
                                                   (rule "inEqSimp_commuteLeq" (formula "18"))
                                                   (rule "applyEq" (formula "26") (term "1,1,0,2,0,1,0") (ifseqformula "15"))
                                                   (rule "applyEq" (formula "24") (term "1,3,0") (ifseqformula "20"))
                                                   (rule "applyEq" (formula "25") (term "1,0,0,1,0") (ifseqformula "15"))
                                                   (rule "applyEq" (formula "20") (term "0") (ifseqformula "17"))
                                                   (rule "eqSymm" (formula "20"))
                                                   (rule "applyEq" (formula "19") (term "0") (ifseqformula "15"))
                                                   (rule "inEqSimp_homoInEq0" (formula "19"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                   (rule "add_literals" (formula "19") (term "0,0"))
                                                   (rule "applyEq" (formula "18") (term "0") (ifseqformula "15"))
                                                   (rule "inEqSimp_homoInEq1" (formula "18"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                   (rule "add_literals" (formula "18") (term "0,0"))
                                                   (rule "add_zero_left" (formula "18") (term "0"))
                                                   (rule "applyEq" (formula "21") (term "0") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "23") (term "1") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "22") (term "1") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "25") (term "1,1,0,1,1,0") (ifseqformula "15"))
                                                   (rule "applyEq" (formula "25") (term "0,1,0,0,1,1,0") (ifseqformula "17"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,1,1,0"))
                                                   (rule "applyEq" (formula "25") (term "0,1,0,0,1,0,0,0") (ifseqformula "17"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,0,0,1,0,0,0"))
                                                   (rule "applyEq" (formula "26") (term "0,1,0,0,1,0,0,0") (ifseqformula "17"))
                                                   (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,1,0,0,0"))
                                                   (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "15"))
                                                   (rule "applyEq" (formula "24") (term "1,1,3,0") (ifseqformula "15"))
                                                   (rule "applyEq" (formula "24") (term "1,3,0") (ifseqformula "20"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                   (rule "inEqSimp_invertInEq0" (formula "18"))
                                                   (rule "times_zero_2" (formula "18") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "24") (term "0,1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "24") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "25") (term "0,1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,0"))
                                                   (rule "inEqSimp_subsumption6" (formula "20") (ifseqformula "27"))
                                                   (rule "greater_literals" (formula "20") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "mul_literals" (formula "20") (term "1,0"))
                                                   (rule "leq_literals" (formula "20") (term "0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "true_left" (formula "20"))
                                                   (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "18"))
                                                   (rule "leq_literals" (formula "6") (term "0"))
                                                    (builtin "One Step Simplification" (formula "6"))
                                                   (rule "true_left" (formula "6"))
                                                   (rule "javaShiftLeftIntDef" (formula "18") (term "0"))
                                                   (rule "mod_axiom" (formula "18") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                                                   (rule "shiftLeftDef" (formula "18") (term "0,0"))
                                                   (rule "polySimp_elimNeg" (formula "18") (term "1,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "0,1,1,0,0"))
                                                   (rule "mul_literals" (formula "18") (term "0,0,1,1,0,0"))
                                                   (rule "shiftLeftPositiveShiftDef" (formula "18") (term "2,0,0"))
                                                   (rule "polySimp_elimOneLeft0" (formula "18") (term "2,0,0"))
                                                   (rule "shiftRightPositiveShiftDef" (formula "18") (term "1,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0"))
                                                   (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "18") (term "0,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,0"))
                                                   (rule "nnf_imp2or" (formula "22") (term "0"))
                                                   (rule "nnf_imp2or" (formula "23") (term "0"))
                                                   (rule "expand_moduloInteger" (formula "18") (term "0"))
                                                   (rule "replace_int_RANGE" (formula "18") (term "1,1,0"))
                                                   (rule "replace_int_MIN" (formula "18") (term "0,0"))
                                                   (rule "replace_int_HALFRANGE" (formula "18") (term "0,0,1,0"))
                                                   (rule "polySimp_homoEq" (formula "18"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "18") (term "0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "18"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                   (rule "nnf_notAnd" (formula "22") (term "0,0"))
                                                   (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                                   (rule "nnf_notAnd" (formula "22") (term "1,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "22") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "22") (term "1,0,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "22") (term "0,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "22") (term "1,0,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "22") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "22") (term "1,0,0,1,1,0,0"))
                                                   (rule "add_literals" (formula "22") (term "0,0,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "22") (term "1,1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "22") (term "0,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,0"))
                                                   (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "22") (term "0,0,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "22") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "22") (term "0,0,0,1,0,0,0"))
                                                   (rule "add_zero_left" (formula "22") (term "0,0,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0"))
                                                   (rule "nnf_notAnd" (formula "23") (term "1,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "23") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "23") (term "1,0,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0,1,0,0"))
                                                   (rule "mul_literals" (formula "23") (term "1,0,1,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "23") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "23") (term "1,0,0,1,1,0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,1,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "23") (term "1,1,1,0,0"))
                                                   (rule "nnf_notAnd" (formula "23") (term "0,0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,0"))
                                                   (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                                                   (rule "add_zero_left" (formula "23") (term "0,0,0,0,0"))
                                                   (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,0,1,0,0,0"))
                                                   (rule "add_zero_left" (formula "23") (term "0,0,1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                                                   (rule "Definition_axiom_for_binarySearchInvariant_in_de_wiesler_Tree" (formula "11") (term "0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "andLeft" (formula "11"))
                                                   (rule "translateJavaSubInt" (formula "14") (term "1,0"))
                                                   (rule "translateJavaSubInt" (formula "13") (term "0,0"))
                                                   (rule "translateJavaSubInt" (formula "13") (term "0,2,0,1"))
                                                   (rule "translateJavaSubInt" (formula "11") (term "0"))
                                                   (rule "sub_literals" (formula "11") (term "0"))
                                                   (rule "translateJavaSubInt" (formula "12") (term "1"))
                                                   (rule "eqSymm" (formula "14") (term "0"))
                                                   (rule "polySimp_elimSub" (formula "13") (term "0,0"))
                                                   (rule "mul_literals" (formula "13") (term "1,0,0"))
                                                   (rule "polySimp_elimSub" (formula "13") (term "0,2,0,1"))
                                                   (rule "mul_literals" (formula "13") (term "1,0,2,0,1"))
                                                   (rule "polySimp_elimSub" (formula "12") (term "1"))
                                                   (rule "mul_literals" (formula "12") (term "1,1"))
                                                   (rule "polySimp_elimSub" (formula "14") (term "0,0"))
                                                   (rule "mul_literals" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_homoEq" (formula "13") (term "0"))
                                                   (rule "polySimp_homoEq" (formula "14") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "13") (term "0,2,0,1"))
                                                   (rule "polySimp_addComm0" (formula "12") (term "1"))
                                                   (rule "polySimp_addComm0" (formula "13") (term "1,1,0,0"))
                                                   (rule "polySimp_addComm0" (formula "14") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                   (rule "add_literals" (formula "13") (term "0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "14") (term "0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "13") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "14") (term "1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "11"))
                                                   (rule "inEqSimp_homoInEq0" (formula "12"))
                                                   (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                   (rule "applyEq" (formula "14") (term "0,1,0,0") (ifseqformula "19"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                   (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "19"))
                                                   (rule "polySimp_sepNegMonomial" (formula "13") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "0,0"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "0,0"))
                                                   (rule "polySimp_sepNegMonomial" (formula "14") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "13") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "13") (term "1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1"))
                                                   (rule "mul_literals" (formula "13") (term "0,1,1"))
                                                   (rule "polySimp_elimOne" (formula "13") (term "1,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                                   (rule "polySimp_mulComm0" (formula "12") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "12") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                                                   (rule "mul_literals" (formula "12") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "11"))
                                                   (rule "leq_literals" (formula "7") (term "0"))
                                                    (builtin "One Step Simplification" (formula "7"))
                                                   (rule "true_left" (formula "7"))
                                                   (rule "Definition_axiom_for_treeSearchInvariant_in_de_wiesler_Tree" (formula "14") (term "0"))
                                                    (builtin "One Step Simplification" (formula "14"))
                                                   (rule "andLeft" (formula "14"))
                                                   (rule "andLeft" (formula "14"))
                                                   (rule "andLeft" (formula "14"))
                                                   (rule "andLeft" (formula "14"))
                                                   (rule "eqSymm" (formula "18") (term "1"))
                                                   (rule "eqSymm" (formula "18") (term "0"))
                                                   (rule "eqSymm" (formula "17") (term "1"))
                                                   (rule "translateJavaAddInt" (formula "15") (term "1,1"))
                                                   (rule "translateJavaDivInt" (formula "17") (term "1,1,1"))
                                                   (rule "translateJavaSubInt" (formula "17") (term "0,1"))
                                                   (rule "translateJavaSubInt" (formula "17") (term "1,1"))
                                                   (rule "jdiv_axiom_inline" (formula "17") (term "1,1,1"))
                                                   (rule "qeq_literals" (formula "17") (term "0,1,1,1"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "div_literals" (formula "17") (term "1,1,1"))
                                                   (rule "polySimp_elimSub" (formula "18") (term "0,1"))
                                                   (rule "polySimp_elimSub" (formula "17") (term "0,1"))
                                                   (rule "mul_literals" (formula "17") (term "1,0,1"))
                                                   (rule "polySimp_elimSub" (formula "17") (term "1,1"))
                                                   (rule "mul_literals" (formula "17") (term "1,1,1"))
                                                   (rule "polySimp_homoEq" (formula "18") (term "1"))
                                                   (rule "polySimp_homoEq" (formula "17") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,0,1"))
                                                   (rule "polySimp_addComm0" (formula "15") (term "1,1"))
                                                   (rule "polySimp_addComm0" (formula "17") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "17") (term "1,1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,1"))
                                                   (rule "polySimp_elimOne" (formula "18") (term "1,1,0,1"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,1"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1,0,1"))
                                                   (rule "mul_literals" (formula "17") (term "0,1,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                                   (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "0,1"))
                                                   (rule "polySimp_addComm1" (formula "17") (term "0,0,1"))
                                                   (rule "add_literals" (formula "17") (term "0,0,0,1"))
                                                   (rule "add_zero_left" (formula "17") (term "0,0,1"))
                                                   (rule "inEqSimp_ltToLeq" (formula "17") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "17") (term "0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "15"))
                                                   (rule "polySimp_mulComm0" (formula "15") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                   (rule "applyEq" (formula "15") (term "0,1,0") (ifseqformula "33"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "1,0"))
                                                   (rule "applyEq" (formula "17") (term "0,1,0,0") (ifseqformula "20"))
                                                   (rule "polySimp_pullOutFactor1" (formula "17") (term "0,0"))
                                                   (rule "add_literals" (formula "17") (term "1,0,0"))
                                                   (rule "times_zero_1" (formula "17") (term "0,0"))
                                                   (rule "leq_literals" (formula "17") (term "0"))
                                                    (builtin "One Step Simplification" (formula "17"))
                                                   (rule "applyEq" (formula "18") (term "1,1,0,1") (ifseqformula "20"))
                                                   (rule "applyEq" (formula "18") (term "0,0") (ifseqformula "20"))
                                                   (rule "polySimp_homoEq" (formula "18") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "18") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "18") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "18") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "18") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                                   (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "18") (term "0,0"))
                                                   (rule "equal_literals" (formula "18") (term "0"))
                                                    (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "applyEq" (formula "17") (term "1,0,1,0") (ifseqformula "19"))
                                                   (rule "polySimp_sepNegMonomial" (formula "17"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "15"))
                                                   (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                   (rule "inEqSimp_exactShadow1" (formula "11") (ifseqformula "14"))
                                                   (rule "greater_literals" (formula "11") (term "0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                                   (rule "mul_literals" (formula "11") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                                   (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "11") (term "0"))
                                                   (rule "inEqSimp_exactShadow1" (formula "16") (ifseqformula "15"))
                                                   (rule "greater_literals" (formula "16") (term "0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "16") (term "0"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "16") (term "1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "16"))
                                                   (rule "mul_literals" (formula "16") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "16"))
                                                   (rule "leq_literals" (formula "5") (term "0"))
                                                    (builtin "One Step Simplification" (formula "5"))
                                                   (rule "true_left" (formula "5"))
                                                   (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "14"))
                                                   (rule "mul_literals" (formula "31") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                   (rule "mul_literals" (formula "31") (term "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "10"))
                                                   (rule "mul_literals" (formula "9") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                   (rule "add_literals" (formula "9") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                                                   (rule "mul_literals" (formula "9") (term "1"))
                                                   (rule "inEqSimp_subsumption6" (formula "9") (ifseqformula "16"))
                                                   (rule "mul_literals" (formula "9") (term "1,1,0"))
                                                   (rule "greater_literals" (formula "9") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "leq_literals" (formula "9") (term "0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "Definition_axiom_for_treeSearchInvariant_in_de_wiesler_Tree" (formula "44") (term "0"))
                                                    (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "40")))
                                                   (rule "translateJavaDivInt" (formula "44") (term "1,0,1,1,0"))
                                                   (rule "translateJavaSubInt" (formula "44") (term "1,1,1,0"))
                                                   (rule "translateJavaAddInt" (formula "44") (term "1,1,1,0,0"))
                                                   (rule "eqSymm" (formula "44") (term "0,1"))
                                                   (rule "translateJavaSubInt" (formula "44") (term "0,1,1,0"))
                                                   (rule "jdiv_axiom_inline" (formula "44") (term "1,0,1,1,0"))
                                                   (rule "mul_literals" (formula "44") (term "0,0,2,1,0,1,1,0"))
                                                   (rule "qeq_literals" (formula "44") (term "0,1,0,1,1,0"))
                                                    (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "20")))
                                                   (rule "div_literals" (formula "44") (term "1,0,1,1,0"))
                                                   (rule "polySimp_elimSub" (formula "44") (term "1,1"))
                                                   (rule "polySimp_elimSub" (formula "44") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "44") (term "1,1,1,1,0"))
                                                   (rule "polySimp_elimSub" (formula "44") (term "0,1,1,0"))
                                                   (rule "times_zero_2" (formula "44") (term "1,0,1,1,0"))
                                                   (rule "add_zero_right" (formula "44") (term "0,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "44") (term "1,1,1,0,0"))
                                                   (rule "add_literals" (formula "44") (term "0,1,1,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "44") (term "1,1"))
                                                   (rule "polySimp_addComm0" (formula "44") (term "1,1,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "44") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "44") (term "0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "44") (term "0,0,0,1,0"))
                                                   (rule "add_literals" (formula "44") (term "0,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "44") (term "0,1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "44") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "44") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "44") (term "0,0,0,0"))
                                                   (rule "applyEq" (formula "44") (term "0,1,0,0,1,0") (ifseqformula "20"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "44") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "44") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "44") (term "0,0,0,1,0"))
                                                   (rule "add_literals" (formula "44") (term "0,0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "44") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "44") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "44") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "44") (term "0,1,0"))
                                                    (builtin "One Step Simplification" (formula "44"))
                                                   (rule "applyEq" (formula "44") (term "0,1,0,0,0,0") (ifseqformula "33"))
                                                   (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,0,0"))
                                                   (rule "applyEq" (formula "44") (term "0,1,0,0,1,0") (ifseqformula "35"))
                                                   (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0,1,0"))
                                                   (rule "applyEq" (formula "44") (term "1,0,1,0,1,1") (ifseqformula "20"))
                                                   (rule "applyEq" (formula "44") (term "0,1,0,1,1") (ifseqformula "33"))
                                                   (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "44") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "44") (term "0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "44") (term "0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "44") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "44") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "44") (term "1,0,1,1,0"))
                                                   (rule "mul_literals" (formula "44") (term "0,0,1,1,0"))
                                                   (rule "Contract_axiom_for_isSortedSliceTransitive_in_Functions" (formula "27") (term "0"))
                                                   (rule "replace_known_left" (formula "27") (term "0,1") (ifseqformula "28"))
                                                    (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "43")) (ifInst ""  (formula "1")))
                                                   (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "28") (term "0") (inst "j=j") (inst "i=i"))
                                                    (builtin "One Step Simplification" (formula "28"))
                                                   (rule "expand_inInt" (formula "28") (term "1,0,0"))
                                                   (rule "expand_inInt" (formula "28") (term "1,0,0,1,0"))
                                                   (rule "replace_int_MAX" (formula "28") (term "1,0,1,0,0"))
                                                   (rule "replace_int_MIN" (formula "28") (term "0,1,1,0,0"))
                                                   (rule "replace_int_MIN" (formula "28") (term "0,1,1,0,0,1,0"))
                                                   (rule "replace_int_MAX" (formula "28") (term "1,0,1,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "28") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0,0,0"))
                                                   (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,0"))
                                                   (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0,0,1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "28") (term "1,1,0,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "28") (term "1,1,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,1,0"))
                                                   (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0"))
                                                   (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0"))
                                                   (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "29") (term "0,1,1,0"))
                                                   (rule "translateJavaSubInt" (formula "29") (term "0,1,1,0,1,1,0"))
                                                   (rule "polySimp_elimSub" (formula "29") (term "1,0,0,0,1,1,0"))
                                                   (rule "polySimp_elimSub" (formula "29") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_elimSub" (formula "29") (term "0,1,1,0,1,1,0"))
                                                   (rule "mul_literals" (formula "29") (term "1,0,1,1,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "0,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,1,1,0"))
                                                   (rule "add_literals" (formula "29") (term "0,0,1,0,0,1,1,0"))
                                                   (rule "add_zero_left" (formula "29") (term "0,1,0,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "0,1,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0,1,1,0"))
                                                   (rule "polySimp_addComm1" (formula "29") (term "1,0,1,1,0"))
                                                   (rule "polySimp_addComm0" (formula "29") (term "0,1,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "0,1,1,0"))
                                                   (rule "polySimp_mulComm1" (formula "29") (term "1,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "0,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "29") (term "0,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm1" (formula "29") (term "1,0,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,1,1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "29") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "1,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "0,1,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "29") (term "0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "0,1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "29") (term "1,0,1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "0,0,1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0,1,1,1,0"))
                                                   (rule "mul_literals" (formula "29") (term "0,0,0,1,1,1,0"))
                                                   (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "29") (term "0,0,1,0"))
                                                   (rule "translateJavaSubInt" (formula "29") (term "0,1,1,0,0,1,0"))
                                                   (rule "polySimp_elimSub" (formula "29") (term "1,0,0,0,0,1,0"))
                                                   (rule "polySimp_elimSub" (formula "29") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_elimSub" (formula "29") (term "0,1,1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "29") (term "1,0,1,1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "29") (term "0,1,0,0,0,1,0"))
                                                   (rule "add_literals" (formula "29") (term "0,0,1,0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "29") (term "0,1,0,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "29") (term "1,0,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "29") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "0,0,1,0"))
                                                   (rule "polySimp_mulComm1" (formula "29") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "0,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "29") (term "0,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm1" (formula "29") (term "1,0,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "0,1,0,0,0,1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "29") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "29") (term "1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "29") (term "0,1,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "29") (term "1,0,1,0,1,0"))
                                                   (rule "mul_literals" (formula "29") (term "0,0,1,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "29") (term "1,0,1,0,1,0"))
                                                   (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "30") (term "1,0,2,0,1,0"))
                                                   (rule "translateJavaSubInt" (formula "30") (term "0,1,1,1,0,2,0,1,0"))
                                                   (rule "polySimp_elimSub" (formula "30") (term "1,0,0,1,0,2,0,1,0"))
                                                   (rule "polySimp_elimSub" (formula "30") (term "1,1,1,0,2,0,1,0"))
                                                   (rule "polySimp_elimSub" (formula "30") (term "0,1,1,1,0,2,0,1,0"))
                                                   (rule "mul_literals" (formula "30") (term "1,0,1,1,1,0,2,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,0,2,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "30") (term "0,1,0,1,0,2,0,1,0"))
                                                   (rule "add_literals" (formula "30") (term "0,0,1,0,1,0,2,0,1,0"))
                                                   (rule "add_zero_left" (formula "30") (term "0,1,0,1,0,2,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "0,1,1,0,2,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "1,0,1,1,0,2,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "0,0,1,1,0,2,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "30") (term "1,1,0,2,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "30") (term "0,1,1,0,2,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,0,2,0,1,0"))
                                                   (rule "polySimp_mulComm1" (formula "30") (term "1,1,0,2,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "0,1,1,0,2,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "0,1,0,2,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "0,0,1,0,2,0,1,0"))
                                                   (rule "polySimp_mulComm1" (formula "30") (term "1,0,1,0,2,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "0,1,0,1,0,2,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "30") (term "0,2,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "30") (term "0,0,2,0,1,0"))
                                                   (rule "ifthenelse_split" (formula "41") (term "1,1,0"))
                                                   (branch "self.tree[b] <= -1 + value TRUE"
                                                      (rule "replace_known_left" (formula "46") (term "0,0,1,0") (ifseqformula "41"))
                                                       (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "41")) (ifInst ""  (formula "41")) (ifInst ""  (formula "41")))
                                                      (rule "polySimp_homoEq" (formula "46") (term "1"))
                                                      (rule "polySimp_addComm0" (formula "42") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "46") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "46") (term "0,1"))
                                                      (rule "polySimp_addComm0" (formula "46") (term "0,0,0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "46") (term "1,0"))
                                                      (rule "mul_literals" (formula "46") (term "1,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "46") (term "0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "46") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "46") (term "0,0,0,1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "46") (term "0,0"))
                                                      (rule "mul_literals" (formula "46") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "46") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "46") (term "0,0,0,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "46") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "46") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "46") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "46") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "46") (term "1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0"))
                                                      (rule "mul_literals" (formula "46") (term "0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "46") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "46") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0"))
                                                      (rule "inEqSimp_subsumption5" (formula "46") (term "1,0") (ifseqformula "16"))
                                                      (rule "greater_literals" (formula "46") (term "1,0,0,1,0"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "greater_literals" (formula "46") (term "0,0,1,0"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "polySimp_rightDist" (formula "46") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "46") (term "0,1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "46") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "46") (term "0,0,0,1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "46") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "46") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "46") (term "1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "46") (term "0,0,1,0"))
                                                      (rule "qeq_literals" (formula "46") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "inEqSimp_subsumption4" (formula "46") (term "0") (ifseqformula "14"))
                                                      (rule "greater_literals" (formula "46") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "polySimp_mulComm0" (formula "46") (term "0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "46") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0,0"))
                                                      (rule "add_literals" (formula "46") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "46") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "46") (term "0,0,0"))
                                                      (rule "qeq_literals" (formula "46") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "46"))
                                                      (rule "commute_or_2" (formula "29") (term "0,0"))
                                                      (rule "commute_or_2" (formula "30") (term "0,0"))
                                                      (rule "nnf_imp2or" (formula "28") (term "0"))
                                                      (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "18") (term "0"))
                                                      (rule "translateJavaSubInt" (formula "18") (term "0,1,1,0"))
                                                      (rule "polySimp_elimSub" (formula "18") (term "1,0,0,0"))
                                                      (rule "polySimp_elimSub" (formula "18") (term "0,1,1,0"))
                                                      (rule "mul_literals" (formula "18") (term "1,0,1,1,0"))
                                                      (rule "polySimp_elimSub" (formula "18") (term "1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "18") (term "0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "18") (term "0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "0"))
                                                      (rule "polySimp_homoEq" (formula "18"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                      (rule "polySimp_mulComm1" (formula "18") (term "1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "0,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "0,0,1,1,0"))
                                                      (rule "polySimp_mulComm1" (formula "18") (term "1,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "0,1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,0"))
                                                      (rule "applyEq" (formula "18") (term "1,1,0,1,0") (ifseqformula "17"))
                                                      (rule "applyEq" (formula "18") (term "0,1,1,0,0,1,0") (ifseqformula "17"))
                                                      (rule "polySimp_pullOutFactor1" (formula "18") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                                                      (rule "pow_literals" (formula "18") (term "0,0,1,0"))
                                                      (rule "polySimp_elimOneLeft0" (formula "18") (term "0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                                      (rule "applyEq" (formula "18") (term "0,1,1,0,0,1,0") (ifseqformula "17"))
                                                      (rule "polySimp_pullOutFactor1" (formula "18") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                                                      (rule "pow_literals" (formula "18") (term "0,0,1,0"))
                                                      (rule "polySimp_elimOneLeft0" (formula "18") (term "0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "18") (term "0,0,0"))
                                                      (rule "applyEq" (formula "18") (term "0,1,1,0,1,0") (ifseqformula "17"))
                                                      (rule "polySimp_pullOutFactor1" (formula "18") (term "1,0,1,0"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,1,0"))
                                                      (rule "pow_literals" (formula "18") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "18") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "18") (term "0,0,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "18"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "18") (term "0,0,1"))
                                                      (rule "close" (formula "46") (ifseqformula "18"))
                                                   )
                                                   (branch "self.tree[b] <= -1 + value FALSE"
                                                      (rule "add_zero_right" (formula "41") (term "1,0"))
                                                      (rule "replace_known_right" (formula "46") (term "0,0,0,0") (ifseqformula "42"))
                                                       (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "42")) (ifInst ""  (formula "42")) (ifInst ""  (formula "42")))
                                                      (rule "add_zero_right" (formula "46") (term "1,1"))
                                                      (rule "polySimp_homoEq" (formula "46") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "46") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "46") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "46") (term "0,1,0,1"))
                                                      (rule "polySimp_addComm1" (formula "46") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "46") (term "0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "46") (term "0,0,0,1"))
                                                      (rule "logTimesBaseConcrete" (formula "41") (term "0"))
                                                      (rule "greater_literals" (formula "41") (term "1,0,0"))
                                                       (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "15")))
                                                      (rule "polySimp_homoEq" (formula "41"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "41") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "41") (term "0,0"))
                                                      (rule "add_literals" (formula "41") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "41") (term "0,0"))
                                                      (rule "inEqSimp_leqRight" (formula "42"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "46") (term "1,0"))
                                                      (rule "times_zero_2" (formula "46") (term "1,0,1,0"))
                                                      (rule "add_zero_right" (formula "46") (term "0,1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "46") (term "0,0"))
                                                      (rule "times_zero_2" (formula "46") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "46") (term "0,0,0"))
                                                      (rule "applyEq" (formula "42") (term "0,1,0") (ifseqformula "18"))
                                                      (rule "polySimp_pullOutFactor1" (formula "42") (term "0"))
                                                      (rule "add_literals" (formula "42") (term "1,0"))
                                                      (rule "times_zero_1" (formula "42") (term "0"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "polySimp_sepNegMonomial" (formula "45") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "45") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "45") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "45") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "45") (term "1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "45") (term "1,1,1,0"))
                                                      (rule "mul_literals" (formula "45") (term "0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "45") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0"))
                                                      (rule "inEqSimp_subsumption5" (formula "45") (term "1,0") (ifseqformula "17"))
                                                      (rule "greater_literals" (formula "45") (term "1,0,0,1,0"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "greater_literals" (formula "45") (term "0,0,1,0"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "polySimp_rightDist" (formula "45") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "45") (term "0,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "45") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "45") (term "0,1,0,1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "45") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "45") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "45") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "45") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "45") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "45") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "45") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "45") (term "0,0,1,0"))
                                                      (rule "qeq_literals" (formula "45") (term "0,1,0"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "inEqSimp_subsumption4" (formula "45") (term "0") (ifseqformula "15"))
                                                      (rule "greater_literals" (formula "45") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "polySimp_mulComm0" (formula "45") (term "0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "45") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0" (formula "45") (term "0,0,0"))
                                                      (rule "add_literals" (formula "45") (term "1,0,0,0"))
                                                      (rule "times_zero_1" (formula "45") (term "0,0,0"))
                                                      (rule "qeq_literals" (formula "45") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "commute_or_2" (formula "30") (term "0,0"))
                                                      (rule "commute_or_2" (formula "31") (term "0,0"))
                                                      (rule "nnf_imp2or" (formula "29") (term "0"))
                                                      (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "19") (term "0"))
                                                      (rule "translateJavaSubInt" (formula "19") (term "0,1,1,0"))
                                                      (rule "polySimp_elimSub" (formula "19") (term "1,0,0,0"))
                                                      (rule "polySimp_elimSub" (formula "19") (term "1,1,0"))
                                                      (rule "polySimp_elimSub" (formula "19") (term "0,1,1,0"))
                                                      (rule "mul_literals" (formula "19") (term "1,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,1,0,0"))
                                                      (rule "add_zero_left" (formula "19") (term "0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "19") (term "0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "0"))
                                                      (rule "polySimp_homoEq" (formula "19"))
                                                      (rule "polySimp_mulComm1" (formula "19") (term "1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0,0,1,1,0"))
                                                      (rule "polySimp_mulComm1" (formula "19") (term "1,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "0,1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                      (rule "applyEq" (formula "19") (term "0,1,1,0,0,1,0") (ifseqformula "18"))
                                                      (rule "polySimp_pullOutFactor1" (formula "19") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                                                      (rule "pow_literals" (formula "19") (term "0,0,1,0"))
                                                      (rule "polySimp_elimOneLeft0" (formula "19") (term "0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                                      (rule "applyEq" (formula "19") (term "0,1,1,0,0,1,0") (ifseqformula "18"))
                                                      (rule "polySimp_pullOutFactor1" (formula "19") (term "1,0,0,1,0"))
                                                      (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                                                      (rule "pow_literals" (formula "19") (term "0,0,1,0"))
                                                      (rule "polySimp_elimOneLeft0" (formula "19") (term "0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "19") (term "0,0,0"))
                                                      (rule "applyEq" (formula "19") (term "0,1,1,0,1,0") (ifseqformula "18"))
                                                      (rule "polySimp_pullOutFactor1" (formula "19") (term "1,0,1,0"))
                                                      (rule "add_literals" (formula "19") (term "1,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,1,0"))
                                                      (rule "pow_literals" (formula "19") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "19") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "19") (term "0,0,0"))
                                                      (rule "applyEq" (formula "19") (term "1,0,1,0") (ifseqformula "18"))
                                                      (rule "polySimp_sepPosMonomial" (formula "19"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1"))
                                                      (rule "mul_literals" (formula "19") (term "0,0,1"))
                                                      (rule "close" (formula "45") (ifseqformula "19"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "andRight" (formula "37"))
                                                   (branch "Case 1"
                                                       (builtin "One Step Simplification" (formula "37"))
                                                      (rule "closeTrue" (formula "37"))
                                                   )
                                                   (branch "Case 2"
                                                       (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "21")))
                                                      (rule "closeTrue" (formula "37"))
                                                   )
                                                )
                                             )
                                             (branch "Case 2"
                                                 (builtin "One Step Simplification" (formula "37"))
                                                (rule "closeTrue" (formula "37"))
                                             )
                                          )
                                          (branch "Case 2"
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "closeTrue" (formula "37"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
            )
         )
      )
   )
)
)
}
