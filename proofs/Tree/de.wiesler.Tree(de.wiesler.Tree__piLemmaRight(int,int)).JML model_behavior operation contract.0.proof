\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue Aug 16 14:07:59 CEST 2022
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , finalFields-finalFields\\:immutable , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_COMPLETION
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[Strategy]Timeout=-1
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../src";

\proofObligation "#Proof Obligation Settings
#Tue Aug 16 14:07:59 CEST 2022
contract=de.wiesler.Tree[de.wiesler.Tree\\:\\:piLemmaRight(int,int)].JML model_behavior operation contract.0
name=de.wiesler.Tree[de.wiesler.Tree\\:\\:piLemmaRight(int,int)].JML model_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "1" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "2" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))

(autoModeTime "15500")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,heapBefore,o,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "3"))
(rule "translateJavaSubInt" (formula "6") (term "0,1,1") (userinteraction))
(rule "translateJavaAddInt" (formula "6") (term "0,0,0") (userinteraction))
(rule "translateJavaMulInt" (formula "6") (term "0,0,0,0") (userinteraction))
(rule "translateJavaSubInt" (formula "6") (term "0") (userinteraction))
(rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "6") (term "0,0") (userinteraction))
(rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "6") (term "1,0") (userinteraction))
(rule "pullOut" (formula "6") (term "1,1,1,0,0,0,0") (inst "sk=log_0") (userinteraction))
(rule "translateJavaSubInt" (formula "7") (term "0,1,1,1,0") (userinteraction))
(rule "translateJavaSubInt" (formula "7") (term "0,1,1,0,0") (userinteraction))
(rule "applyEq" (formula "7") (term "1,1,1,0,0") (ifseqformula "1") (userinteraction))
(rule "pullOut" (formula "7") (term "1,1,1,0,0,1,0") (inst "sk=log_1") (userinteraction))
(rule "applyEq" (formula "8") (term "1,1,1,1,0") (ifseqformula "1") (userinteraction))
(rule "cut" (inst "cutFormula=(log_0 = add(log_1, Z(1(#))))<<origin(\"User_Interaction @ node 18 (cut)\",\"[]\")>>") (userinteraction))
(branch "CUT: log_0 = log_1 + 1 TRUE"
   (rule "applyEqRigid" (formula "9") (term "1,1,1,0,0,0,0") (ifseqformula "1") (userinteraction))
   (rule "powSplitFactor" (formula "9") (term "1,1,0,0,0,0") (userinteraction))
   (rule "impLeft" (formula "1") (userinteraction))
   (branch "Case 1"
      (rule "logPositive" (formula "2") (term "0") (userinteraction))
      (rule "translateJavaSubInt" (formula "8") (term "1,1"))
      (rule "greater_literals" (formula "2") (term "0,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "greater_literals" (formula "10") (term "1"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "polySimp_homoEq" (formula "1"))
      (rule "polySimp_elimSub" (formula "11") (term "0"))
      (rule "polySimp_elimSub" (formula "11") (term "0,1,1"))
      (rule "mul_literals" (formula "11") (term "1,0,1,1"))
      (rule "polySimp_elimSub" (formula "8") (term "1,1"))
      (rule "mul_literals" (formula "8") (term "1,1,1"))
      (rule "polySimp_elimSub" (formula "11") (term "1,1,0,0"))
      (rule "polySimp_elimSub" (formula "11") (term "0,1,1,0,1,0"))
      (rule "mul_literals" (formula "11") (term "1,0,1,1,0,1,0"))
      (rule "polySimp_elimSub" (formula "11") (term "1,0,0,0,1,0"))
      (rule "polySimp_elimSub" (formula "11") (term "1,0,0,0,0"))
      (rule "polySimp_elimSub" (formula "11") (term "1,1"))
      (rule "polySimp_elimSub" (formula "11") (term "0,1,1,0,0"))
      (rule "mul_literals" (formula "11") (term "1,0,1,1,0,0"))
      (rule "polySimp_elimSub" (formula "11") (term "1,1,0,1,0"))
      (rule "polySimp_homoEq" (formula "11"))
      (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,1,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,0"))
      (rule "polySimp_mulComm1" (formula "11") (term "1,1,1,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,1,0,1,1,0"))
      (rule "polySimp_addComm0" (formula "10") (term "0"))
      (rule "polySimp_addComm0" (formula "1") (term "0,0"))
      (rule "polySimp_addComm0" (formula "8") (term "1,1"))
      (rule "polySimp_addComm0" (formula "11") (term "0,1,0,0"))
      (rule "polySimp_addComm0" (formula "4") (term "1,0"))
      (rule "polySimp_addComm0" (formula "11") (term "1,0,1,1,0,1,0,1,1,0"))
      (rule "polySimp_addComm0" (formula "11") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_addComm0" (formula "11") (term "0,1,0,0,1,1,1,0"))
      (rule "polySimp_addComm0" (formula "11") (term "0,1,0,1,0,1,1,0"))
      (rule "polySimp_addComm1" (formula "1") (term "0"))
      (rule "polySimp_addComm1" (formula "11") (term "1,0,0,1,1,0"))
      (rule "polySimp_addComm1" (formula "11") (term "1,0,0,1,1,1,0"))
      (rule "polySimp_rightDist" (formula "11") (term "0,1,1,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,1,1,1,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,1,1,1,0"))
      (rule "polySimp_addComm1" (formula "11") (term "1,1,1,1,0"))
      (rule "polySimp_addComm0" (formula "11") (term "0,1,1,1,1,0"))
      (rule "polySimp_rightDist" (formula "11") (term "0,1,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,1,1,0"))
      (rule "polySimp_addComm1" (formula "11") (term "1,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,1,1,0"))
      (rule "polySimp_mulAssoc" (formula "11") (term "1,1,1,1,0"))
      (rule "polySimp_mulComm1" (formula "11") (term "0,1,1,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,1,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,1,1,0"))
      (rule "polySimp_rightDist" (formula "11") (term "0,0,1,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,1,0,1,1,0"))
      (rule "mul_literals" (formula "11") (term "0,0,0,1,0,1,1,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,1,0,1,1,0"))
      (rule "add_literals" (formula "11") (term "0,0,1,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "11") (term "0,1,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1,1,1,0"))
      (rule "polySimp_mulComm1" (formula "11") (term "1,0,1,1,1,0"))
      (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,1,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,1,1,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,1,1,1,0"))
      (rule "polySimp_rightDist" (formula "11") (term "0,1,1,0"))
      (rule "polySimp_mulComm1" (formula "11") (term "1,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "11") (term "0,0,1,1,0"))
      (rule "polySimp_mulComm1" (formula "11") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,1,0"))
      (rule "polySimp_rightDist" (formula "11") (term "0,1,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,1,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0"))
      (rule "polySimp_rightDist" (formula "11") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,1,0"))
      (rule "polySimp_mulAssoc" (formula "11") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "0,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "11") (term "0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,1,0"))
      (rule "polySimp_mulAssoc" (formula "11") (term "0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "11") (term "0,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "11") (term "0,0,1,1,0"))
      (rule "inEqSimp_geqRight" (formula "10"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "add_zero_left" (formula "1") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "9"))
      (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "9") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "8"))
      (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "8"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "inEqSimp_commuteLeq" (formula "10"))
      (rule "polySimp_addAssoc" (formula "11") (term "1,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,1,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,0,1,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0"))
      (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0,0"))
      (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
      (rule "applyEq" (formula "11") (term "0,1,1,1,0,0,0,0,0") (ifseqformula "4"))
      (rule "polySimp_addComm1" (formula "11") (term "1,1,0,0,0,0,0"))
      (rule "polySimp_sepPosMonomial" (formula "2"))
      (rule "polySimp_mulComm0" (formula "2") (term "1"))
      (rule "polySimp_rightDist" (formula "2") (term "1"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
      (rule "mul_literals" (formula "2") (term "0,1"))
      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
      (rule "applyEq" (formula "11") (term "1,1,0,1,0") (ifseqformula "2"))
      (rule "applyEqRigid" (formula "1") (term "1,0") (ifseqformula "2"))
      (rule "polySimp_addAssoc" (formula "1") (term "0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "add_zero_left" (formula "1") (term "0"))
      (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
      (rule "applyEq" (formula "11") (term "0,1,0,1,0,0,1,0") (ifseqformula "2"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0,0,1,0,0,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,1,0,0,1,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0,1,0,0"))
      (rule "add_literals" (formula "11") (term "0,0,1,0,0,1,0,0"))
      (rule "add_zero_left" (formula "11") (term "0,1,0,0,1,0,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
      (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "2"))
      (rule "applyEq" (formula "11") (term "0,1,0,1,0,0,1,0") (ifseqformula "2"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0,0,1,0,0,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,1,0,0,1,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,1,0,0,1,0"))
      (rule "add_literals" (formula "11") (term "0,0,1,0,0,1,0"))
      (rule "add_zero_left" (formula "11") (term "0,1,0,0,1,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
      (rule "applyEqRigid" (formula "11") (term "1,1,1,0,1,0") (ifseqformula "2"))
      (rule "polySimp_addAssoc" (formula "11") (term "1,1,0,1,0"))
      (rule "add_literals" (formula "11") (term "0,1,1,0,1,0"))
      (rule "add_zero_left" (formula "11") (term "1,1,0,1,0"))
      (rule "applyEqRigid" (formula "11") (term "0,1,0,1,1,0,0,0,0,0") (ifseqformula "2"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0,0,0,0,0"))
      (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,0"))
      (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,1,0,0,0,0,0,0,0"))
      (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,0,0,0,0,0"))
      (rule "add_literals" (formula "11") (term "0,0,1,1,0,0,0,0,0,0"))
      (rule "polySimp_pullOutFactor2" (formula "11") (term "0,0,0,0,0,0"))
      (rule "add_literals" (formula "11") (term "1,0,0,0,0,0,0"))
      (rule "applyEqRigid" (formula "11") (term "0,1,0,1,1,0,0,0,0,0") (ifseqformula "2"))
      (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0,0,0,0,0"))
      (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0,0"))
      (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0,0,0,0,0,0"))
      (rule "mul_literals" (formula "11") (term "0,1,0,1,0,0,0,0,0,0"))
      (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0,0"))
      (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,0,0,0,0"))
      (rule "add_literals" (formula "11") (term "0,0,1,1,0,0,0,0,0"))
      (rule "add_zero_left" (formula "11") (term "0,1,1,0,0,0,0,0"))
      (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0,0"))
      (rule "polySimp_sepPosMonomial" (formula "11"))
      (rule "polySimp_mulComm0" (formula "11") (term "1"))
      (rule "polySimp_rightDist" (formula "11") (term "1"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
      (rule "polySimp_rightDist" (formula "11") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1"))
      (rule "polySimp_rightDist" (formula "11") (term "0,0,1"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,1"))
      (rule "polySimp_rightDist" (formula "11") (term "0,0,0,1"))
      (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1"))
      (rule "polySimp_mulComm0" (formula "11") (term "0,0,0,0,1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "9"))
      (rule "polySimp_mulLiterals" (formula "9") (term "0"))
      (rule "polySimp_elimOne" (formula "9") (term "0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
      (rule "mul_literals" (formula "3") (term "1"))
      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
      (rule "qeq_literals" (formula "1") (term "0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "Case 2"
      (rule "eqTermCut" (formula "10") (term "1,1,1,0") (inst "s=add(sub(sub(log_buckets, Z(1(#))), log_0), Z(1(#)))") (userinteraction))
      (branch "Assume log_buckets - 1 - log_1 = log_buckets - 1 - log_0 + 1"
         (rule "applyEq" (formula "11") (term "1,1,1,0") (ifseqformula "1") (userinteraction))
         (rule "powAdd" (formula "11") (term "1,1,0") (userinteraction))
         (rule "impLeft" (formula "1") (userinteraction))
         (branch "Case 1"
            (rule "andRight" (formula "11") (userinteraction))
            (branch "Case 1"
               (rule "andRight" (formula "11") (userinteraction))
               (branch "Case 1"
                  (rule "cut" (inst "cutFormula=lt(log_0,
   log_buckets<<origin(\"User_Interaction @ node 3872 (cut)\",\"[]\")>>)<<origin(\"User_Interaction @ node 3872 (cut)\",\"[]\")>>") (userinteraction))
                  (branch "CUT: log_0 < log_buckets TRUE"
                     (rule "translateJavaSubInt" (formula "10") (term "1,1"))
                     (rule "polySimp_elimSub" (formula "2") (term "0,0"))
                     (rule "mul_literals" (formula "2") (term "1,0,0"))
                     (rule "polySimp_elimSub" (formula "2") (term "0,1"))
                     (rule "polySimp_elimSub" (formula "13") (term "1,0,0,0,0"))
                     (rule "polySimp_elimSub" (formula "3") (term "1,1,1"))
                     (rule "mul_literals" (formula "3") (term "1,1,1,1"))
                     (rule "polySimp_addLiterals" (formula "3") (term "1,1,1"))
                     (rule "add_zero_right" (formula "3") (term "1,1,1"))
                     (rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,0"))
                     (rule "polySimp_elimSub" (formula "12") (term "0"))
                     (rule "polySimp_homoEq" (formula "4"))
                     (rule "polySimp_elimSub" (formula "13") (term "0,1,1"))
                     (rule "mul_literals" (formula "13") (term "1,0,1,1"))
                     (rule "polySimp_elimSub" (formula "13") (term "0,1,1,1,0"))
                     (rule "polySimp_elimSub" (formula "13") (term "1,1,0,0"))
                     (rule "polySimp_elimSub" (formula "10") (term "1,1"))
                     (rule "mul_literals" (formula "10") (term "1,1,1"))
                     (rule "polySimp_elimSub" (formula "2") (term "0"))
                     (rule "polySimp_elimSub" (formula "2") (term "0,0,1"))
                     (rule "mul_literals" (formula "2") (term "1,0,0,1"))
                     (rule "polySimp_elimSub" (formula "12") (term "0,0"))
                     (rule "mul_literals" (formula "12") (term "1,0,0"))
                     (rule "polySimp_elimSub" (formula "13") (term "1,1"))
                     (rule "polySimp_elimSub" (formula "13") (term "0,0,1,1,1,0"))
                     (rule "mul_literals" (formula "13") (term "1,0,0,1,1,1,0"))
                     (rule "polySimp_elimSub" (formula "13") (term "0,1,1,0,0"))
                     (rule "mul_literals" (formula "13") (term "1,0,1,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "6") (term "0,1,0"))
                     (rule "polySimp_homoEq" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1"))
                     (rule "polySimp_elimSub" (formula "13") (term "0"))
                     (rule "polySimp_homoEq" (formula "13"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0"))
                     (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "3") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "10") (term "1,1"))
                     (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "6") (term "1,0"))
                     (rule "polySimp_addComm0" (formula "2") (term "0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "2") (term "0,1,1,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "0,1,0,0,1,1,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "0,0,1,0,0,1,1,1,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "0,1,0,1,0,1,1,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "1,0,1,1,0,1,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "1,1,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "1,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0,1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "0,1,1,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,1,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,1,1,1,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "1,0,0,1,1,1,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "1,1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "0,1,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0,0"))
                     (rule "add_zero_left" (formula "2") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,1,0,0,1,1,1,0"))
                     (rule "add_literals" (formula "13") (term "0,0,1,0,0,1,1,1,0"))
                     (rule "add_zero_left" (formula "13") (term "0,1,0,0,1,1,1,0"))
                     (rule "polySimp_addComm0" (formula "13") (term "0,1,1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "1,0,1,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "13") (term "1,1,1,1,0"))
                     (rule "polySimp_mulComm1" (formula "13") (term "0,1,1,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,1,1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                     (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "0,0,1,0,1,1,0"))
                     (rule "mul_literals" (formula "13") (term "0,0,0,1,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,1,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "0,1,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "0,0,1,1,1,0"))
                     (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0,1,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,1,1,1,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,1,0,1,1,0"))
                     (rule "add_literals" (formula "13") (term "0,0,1,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "0,1,1,0"))
                     (rule "polySimp_mulComm1" (formula "13") (term "1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "13") (term "0,0,1,1,0"))
                     (rule "polySimp_mulComm1" (formula "13") (term "1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "13") (term "0,1,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "11"))
                     (rule "inEqSimp_commuteLeq" (formula "9"))
                     (rule "inEqSimp_ltToLeq" (formula "10"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "10") (term "0"))
                     (rule "inEqSimp_geqRight" (formula "12"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "1,1,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0"))
                     (rule "add_zero_right" (formula "3") (term "0"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                     (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,1,1,0"))
                     (rule "polySimp_addComm0" (formula "12") (term "0,0,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,0,1,0"))
                     (rule "polySimp_mulAssoc" (formula "12") (term "0,0,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "0,0,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "0,0,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "add_zero_left" (formula "1") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "12") (term "0,0,0,0,0"))
                     (rule "applyEq" (formula "12") (term "1,0,1,0") (ifseqformula "3"))
                     (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
                     (rule "applyEq" (formula "12") (term "0,1,1,1,0,0,0,0,0") (ifseqformula "5"))
                     (rule "polySimp_addComm1" (formula "12") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "4"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                     (rule "mul_literals" (formula "4") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                     (rule "applyEq" (formula "12") (term "1,1,0,1,0") (ifseqformula "4"))
                     (rule "applyEqRigid" (formula "3") (term "1,1,0") (ifseqformula "4"))
                     (rule "eqSymm" (formula "3"))
                     (rule "polySimp_addAssoc" (formula "3") (term "1,1"))
                     (rule "add_literals" (formula "3") (term "0,1,1"))
                     (rule "add_zero_left" (formula "3") (term "1,1"))
                     (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "4"))
                     (rule "applyEq" (formula "3") (term "1,0,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "12") (term "1,1,0,1,0,0,0") (ifseqformula "4"))
                     (rule "applyEq" (formula "12") (term "0,1,0,1,1,0,0,0,0,0") (ifseqformula "4"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,1,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "12") (term "0,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0,1,0,0,0,0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "12") (term "0,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0,1,1,0,0,0,0,0"))
                     (rule "add_literals" (formula "12") (term "0,0,1,1,0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "12") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "12") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "12"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1"))
                     (rule "polySimp_rightDist" (formula "12") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "12") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1"))
                     (rule "polySimp_rightDist" (formula "12") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "12") (term "0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "12") (term "0,0,0,0,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                     (rule "polySimp_elimOne" (formula "10") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
                     (rule "andLeft" (formula "1"))
                     (rule "inEqSimp_homoInEq1" (formula "1"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "leq_literals" (formula "1"))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "CUT: log_0 < log_buckets FALSE"
                     (rule "applyEqReverse" (formula "11") (term "0") (ifseqformula "5") (userinteraction))
                     (rule "logLessThanPow" (formula "11") (userinteraction))
                     (rule "impLeft" (formula "1") (userinteraction))
                     (branch "Case 1"
                        (rule "andRight" (formula "11"))
                        (branch "Case 1"
                           (rule "andRight" (formula "11"))
                           (branch "Case 1"
                              (rule "translateJavaSubInt" (formula "9") (term "1,1"))
                              (rule "greater_literals" (formula "11") (term "0"))
                               (builtin "One Step Simplification" (formula "11"))
                              (rule "polySimp_elimSub" (formula "14") (term "1,1"))
                              (rule "polySimp_elimSub" (formula "1") (term "0,1"))
                              (rule "polySimp_elimSub" (formula "14") (term "1,0,0,0,0"))
                              (rule "polySimp_elimSub" (formula "9") (term "1,1"))
                              (rule "mul_literals" (formula "9") (term "1,1,1"))
                              (rule "polySimp_elimSub" (formula "1") (term "0"))
                              (rule "polySimp_elimSub" (formula "14") (term "0,1,1,1,0"))
                              (rule "polySimp_homoEq" (formula "3"))
                              (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                              (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "13") (term "0,0"))
                              (rule "mul_literals" (formula "13") (term "1,0,0"))
                              (rule "polySimp_elimSub" (formula "2") (term "1,1,1"))
                              (rule "mul_literals" (formula "2") (term "1,1,1,1"))
                              (rule "polySimp_addLiterals" (formula "2") (term "1,1,1"))
                              (rule "add_zero_right" (formula "2") (term "1,1,1"))
                              (rule "polySimp_elimSub" (formula "14") (term "0,1,1"))
                              (rule "mul_literals" (formula "14") (term "1,0,1,1"))
                              (rule "polySimp_elimSub" (formula "1") (term "0,0,1"))
                              (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                              (rule "polySimp_elimSub" (formula "1") (term "0,0"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "polySimp_elimSub" (formula "14") (term "0,0,1,1,1,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,0,1,1,1,0"))
                              (rule "polySimp_elimSub" (formula "14") (term "0,1,1,0,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "13") (term "0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "0,0"))
                              (rule "polySimp_homoEq" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0,0,0,0"))
                              (rule "polySimp_elimSub" (formula "14") (term "0"))
                              (rule "polySimp_homoEq" (formula "14"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,1,0"))
                              (rule "polySimp_addComm0" (formula "2") (term "1,0"))
                              (rule "polySimp_mulComm1" (formula "14") (term "1,1,1,0"))
                              (rule "polySimp_addComm0" (formula "9") (term "1,1"))
                              (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "5") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "12") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "11") (term "0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                              (rule "polySimp_addLiterals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "14") (term "0,1,0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,1,1,0"))
                              (rule "polySimp_addComm0" (formula "14") (term "1,0,1,1,0,1,0,1,1,0"))
                              (rule "polySimp_addComm0" (formula "14") (term "0,1,0,1,0,1,1,0"))
                              (rule "polySimp_addComm0" (formula "14") (term "0,1,0,0,1,1,0"))
                              (rule "polySimp_addComm0" (formula "14") (term "0,0,1,0,0,1,1,1,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "0,1,1,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,1,1,1,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "1,1,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "1,0,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "1,0,0,1,1,1,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "1,1,1,1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "0,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,1,0,0,1,1,1,0"))
                              (rule "add_literals" (formula "14") (term "0,0,1,0,0,1,1,1,0"))
                              (rule "add_zero_left" (formula "14") (term "0,1,0,0,1,1,1,0"))
                              (rule "polySimp_addComm0" (formula "14") (term "0,1,1,1,1,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "1,0,1,1,0"))
                              (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,1,1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "0,0,1,0,1,1,0"))
                              (rule "mul_literals" (formula "14") (term "0,0,0,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,1,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,1,0,1,1,0"))
                              (rule "add_literals" (formula "14") (term "0,0,1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "14") (term "1,1,1,1,0"))
                              (rule "polySimp_mulComm1" (formula "14") (term "0,1,1,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,1,1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "0,1,1,0"))
                              (rule "polySimp_mulComm1" (formula "14") (term "1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "0,1,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1,1,1,0"))
                              (rule "polySimp_mulComm1" (formula "14") (term "1,0,1,1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0,1,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,1,1,1,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "0,0,1,1,0"))
                              (rule "polySimp_mulComm1" (formula "14") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,1,1,0"))
                              (rule "inEqSimp_ltRight" (formula "12"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "inEqSimp_geqRight" (formula "12"))
                              (rule "mul_literals" (formula "1") (term "1,0,0"))
                              (rule "add_literals" (formula "1") (term "0,0"))
                              (rule "add_zero_left" (formula "1") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "12"))
                              (rule "inEqSimp_commuteLeq" (formula "10"))
                              (rule "inEqSimp_ltToLeq" (formula "11"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "11") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "13"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "1,1,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0"))
                              (rule "add_zero_right" (formula "4") (term "0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "4") (term "0"))
                              (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,1,0"))
                              (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0"))
                              (rule "polySimp_mulAssoc" (formula "13") (term "0,0,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "0,0,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0,0"))
                              (rule "applyEqRigid" (formula "13") (term "1,0,1,0") (ifseqformula "4"))
                              (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                              (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "7"))
                              (rule "polySimp_addComm0" (formula "3") (term "0"))
                              (rule "applyEq" (formula "13") (term "0,1,1,1,0,0,0,0,0") (ifseqformula "6"))
                              (rule "polySimp_addComm1" (formula "13") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_sepPosMonomial" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1"))
                              (rule "polySimp_rightDist" (formula "5") (term "1"))
                              (rule "mul_literals" (formula "5") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                              (rule "applyEqRigid" (formula "4") (term "1,1,0") (ifseqformula "5"))
                              (rule "eqSymm" (formula "4"))
                              (rule "polySimp_addAssoc" (formula "4") (term "1,1"))
                              (rule "add_literals" (formula "4") (term "0,1,1"))
                              (rule "add_zero_left" (formula "4") (term "1,1"))
                              (rule "applyEq" (formula "13") (term "1,1,0,1,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "6") (term "1") (ifseqformula "5"))
                              (rule "applyEqRigid" (formula "4") (term "1,0,0") (ifseqformula "5"))
                              (rule "applyEqRigid" (formula "13") (term "1,1,0,1,0,0,0") (ifseqformula "5"))
                              (rule "applyEq" (formula "13") (term "0,1,0,1,1,0,0,0,0,0") (ifseqformula "5"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "13") (term "0,1,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0,0,0,0"))
                              (rule "add_literals" (formula "13") (term "0,0,1,1,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "13") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_sepPosMonomial" (formula "13"))
                              (rule "polySimp_mulComm0" (formula "13") (term "1"))
                              (rule "polySimp_rightDist" (formula "13") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "13") (term "0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "13") (term "0,0,0,0,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                              (rule "mul_literals" (formula "2") (term "1"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                              (rule "polySimp_elimOne" (formula "11") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_contradInEq5" (formula "2") (ifseqformula "9"))
                              (rule "mul_literals" (formula "2") (term "1,1,0"))
                              (rule "greater_literals" (formula "2") (term "0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "qeq_literals" (formula "2") (term "0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                           (branch "Case 2"
                              (rule "translateJavaSubInt" (formula "9") (term "1,1") (userinteraction))
                              (rule "powSplitFactor" (formula "11") (term "1") (userinteraction))
                              (rule "greater_literals" (formula "1") (term "1,0"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "polySimp_elimSub" (formula "10") (term "1,1"))
                              (rule "mul_literals" (formula "10") (term "1,1,1"))
                              (rule "polySimp_elimSub" (formula "2") (term "0,0"))
                              (rule "mul_literals" (formula "2") (term "1,0,0"))
                              (rule "polySimp_homoEq" (formula "4"))
                              (rule "polySimp_elimSub" (formula "15") (term "1,0,0,1,0"))
                              (rule "polySimp_elimSub" (formula "15") (term "1,1"))
                              (rule "polySimp_elimSub" (formula "2") (term "0,0,1"))
                              (rule "mul_literals" (formula "2") (term "1,0,0,1"))
                              (rule "polySimp_elimSub" (formula "3") (term "1,1,1"))
                              (rule "mul_literals" (formula "3") (term "1,1,1,1"))
                              (rule "polySimp_addLiterals" (formula "3") (term "1,1,1"))
                              (rule "add_zero_right" (formula "3") (term "1,1,1"))
                              (rule "polySimp_elimSub" (formula "14") (term "0"))
                              (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "15") (term "1,0,0,0,0"))
                              (rule "polySimp_elimSub" (formula "15") (term "0,1,1,1,0"))
                              (rule "polySimp_elimSub" (formula "1") (term "1,1,1,1"))
                              (rule "mul_literals" (formula "1") (term "1,1,1,1,1"))
                              (rule "polySimp_elimSub" (formula "2") (term "0"))
                              (rule "polySimp_elimSub" (formula "15") (term "0,1,1"))
                              (rule "mul_literals" (formula "15") (term "1,0,1,1"))
                              (rule "polySimp_elimSub" (formula "2") (term "0,1"))
                              (rule "polySimp_elimSub" (formula "14") (term "0,0"))
                              (rule "mul_literals" (formula "14") (term "1,0,0"))
                              (rule "polySimp_elimSub" (formula "15") (term "0,1,1,0,0"))
                              (rule "mul_literals" (formula "15") (term "1,0,1,1,0,0"))
                              (rule "polySimp_elimSub" (formula "15") (term "0,0,1,1,1,0"))
                              (rule "mul_literals" (formula "15") (term "1,0,0,1,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "13") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "6") (term "0,1,0"))
                              (rule "polySimp_homoEq" (formula "2"))
                              (rule "polySimp_elimSub" (formula "15") (term "0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_homoEq" (formula "15"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                              (rule "eqSymm" (formula "1") (term "1"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,1,0"))
                              (rule "polySimp_addComm0" (formula "3") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,0"))
                              (rule "polySimp_mulComm1" (formula "15") (term "1,0,1,0"))
                              (rule "polySimp_addComm0" (formula "10") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "12") (term "0"))
                              (rule "polySimp_addComm0" (formula "13") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "6") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                              (rule "polySimp_addLiterals" (formula "2") (term "0,0,0"))
                              (rule "add_zero_right" (formula "2") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "15") (term "0,1,0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "1,0,0,1"))
                              (rule "polySimp_addComm0" (formula "2") (term "0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "15") (term "1,0,0,1,1,1,0"))
                              (rule "polySimp_addLiterals" (formula "15") (term "0,1,0,0,1,1,1,0"))
                              (rule "add_zero_right" (formula "15") (term "0,1,0,0,1,1,1,0"))
                              (rule "polySimp_addComm0" (formula "15") (term "0,1,0,1,0,1,1,0"))
                              (rule "polySimp_addComm0" (formula "15") (term "1,0,1,1,0,1,0,1,1,0"))
                              (rule "polySimp_addComm0" (formula "15") (term "0,1,0,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0"))
                              (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "0,1,1,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "0,0,1,1,1,1,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "1,1,0"))
                              (rule "polySimp_addComm0" (formula "15") (term "1,0,0,1,1,1,0"))
                              (rule "polySimp_addComm1" (formula "15") (term "1,0,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "15") (term "1,1,1,1,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "0,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0,1,1,0"))
                              (rule "polySimp_addComm0" (formula "15") (term "0,1,1,1,1,0"))
                              (rule "polySimp_addComm1" (formula "15") (term "1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "1,1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "15") (term "1,1,1,1,0"))
                              (rule "polySimp_mulComm1" (formula "15") (term "0,1,1,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "0,1,1,1,1,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "0,0,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0,1,0,1,1,0"))
                              (rule "mul_literals" (formula "15") (term "0,0,0,1,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "15") (term "0,1,0,1,1,0"))
                              (rule "add_literals" (formula "15") (term "0,0,1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "0,1,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "0,0,1,1,1,0"))
                              (rule "polySimp_mulComm1" (formula "15") (term "1,0,1,1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "15") (term "0,1,0,1,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,1,1,1,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "0,1,1,0"))
                              (rule "polySimp_mulComm1" (formula "15") (term "1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "15") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "15") (term "0,0,1,1,0"))
                              (rule "polySimp_mulComm1" (formula "15") (term "1,0,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "15") (term "0,1,0,0,1,1,0"))
                              (rule "polySimp_addComm1" (formula "15") (term "0,1,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "11"))
                              (rule "replace_known_left" (formula "1") (term "0") (ifseqformula "11"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_commuteLeq" (formula "9"))
                              (rule "inEqSimp_ltRight" (formula "12"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0"))
                              (rule "inEqSimp_ltRight" (formula "13"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "12"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "12") (term "0"))
                              (rule "inEqSimp_geqRight" (formula "14"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0"))
                              (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                              (rule "add_literals" (formula "5") (term "1,1,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0"))
                              (rule "add_zero_right" (formula "5") (term "0"))
                              (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0"))
                              (rule "polySimp_addComm0" (formula "5") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,1,1,0"))
                              (rule "polySimp_addComm0" (formula "14") (term "0,0,0,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,0,1,0"))
                              (rule "polySimp_mulAssoc" (formula "14") (term "0,0,0,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "14") (term "0,0,0,0,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "14") (term "0,0,0,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "14") (term "0,0,0,0,0"))
                              (rule "applyEqRigid" (formula "14") (term "1,0,1,0") (ifseqformula "5"))
                              (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0"))
                              (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "8"))
                              (rule "polySimp_addComm0" (formula "2") (term "0"))
                              (rule "applyEq" (formula "14") (term "0,1,1,1,0,0,0,0,0") (ifseqformula "7"))
                              (rule "polySimp_addComm1" (formula "14") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_sepPosMonomial" (formula "6"))
                              (rule "polySimp_mulComm0" (formula "6") (term "1"))
                              (rule "polySimp_rightDist" (formula "6") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "6") (term "1,1"))
                              (rule "mul_literals" (formula "6") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "6") (term "1,1"))
                              (rule "applyEqRigid" (formula "5") (term "1,1,0") (ifseqformula "6"))
                              (rule "eqSymm" (formula "5"))
                              (rule "polySimp_addAssoc" (formula "5") (term "1,1"))
                              (rule "add_literals" (formula "5") (term "0,1,1"))
                              (rule "add_zero_left" (formula "5") (term "1,1"))
                              (rule "applyEq" (formula "14") (term "1,1,0,1,0") (ifseqformula "6"))
                              (rule "applyEqRigid" (formula "7") (term "1") (ifseqformula "6"))
                              (rule "applyEqRigid" (formula "5") (term "1,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "14") (term "1,1,0,1,0,0,0") (ifseqformula "6"))
                              (rule "applyEq" (formula "14") (term "0,1,0,1,1,0,0,0,0,0") (ifseqformula "6"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,1,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "14") (term "0,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0,0,0,0,0,0,0"))
                              (rule "mul_literals" (formula "14") (term "0,1,0,1,0,0,0,0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "14") (term "0,0,0,0,0,0"))
                              (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "14") (term "0,1,1,0,0,0,0,0"))
                              (rule "add_literals" (formula "14") (term "0,0,1,1,0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "14") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "14") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_sepPosMonomial" (formula "14"))
                              (rule "polySimp_mulComm0" (formula "14") (term "1"))
                              (rule "polySimp_rightDist" (formula "14") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                              (rule "polySimp_rightDist" (formula "14") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1"))
                              (rule "polySimp_rightDist" (formula "14") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,1"))
                              (rule "polySimp_rightDist" (formula "14") (term "0,0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,0,1"))
                              (rule "polySimp_mulComm0" (formula "14") (term "0,0,0,0,1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                              (rule "polySimp_elimOne" (formula "3") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                              (rule "polySimp_elimOne" (formula "12") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "newSym_eq" (formula "3") (inst "l=l_0") (inst "newSymDef=mul(pow(Z(2(#)), log_buckets), Z(0(#)))"))
                              (rule "times_zero_1" (formula "3") (term "1,1"))
                              (rule "add_zero_right" (formula "3") (term "1"))
                              (rule "applyEq" (formula "4") (term "0,0") (ifseqformula "3"))
                              (rule "eqSymm" (formula "4"))
                              (rule "applyEq" (formula "12") (term "0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "12"))
                              (rule "polySimp_addComm1" (formula "12") (term "0"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1"))
                              (rule "polySimp_rightDist" (formula "12") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                              (rule "mul_literals" (formula "12") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "inEqSimp_contradInEq3" (formula "2") (ifseqformula "12"))
                              (rule "greater_literals" (formula "2") (term "0,0"))
                               (builtin "One Step Simplification" (formula "2"))
                              (rule "andLeft" (formula "2"))
                              (rule "polySimp_rightDist" (formula "2") (term "0"))
                              (rule "mul_literals" (formula "2") (term "0,0"))
                              (rule "inEqSimp_homoInEq1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                              (rule "mul_literals" (formula "2") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                              (rule "add_literals" (formula "2") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "1,1,0"))
                              (rule "times_zero_1" (formula "2") (term "1,0"))
                              (rule "add_zero_right" (formula "2") (term "0"))
                              (rule "leq_literals" (formula "2"))
                              (rule "closeFalse" (formula "2"))
                           )
                        )
                        (branch "Case 2"
                           (rule "translateJavaSubInt" (formula "9") (term "1,1"))
                           (rule "polySimp_elimSub" (formula "14") (term "0,1,1,0,0"))
                           (rule "mul_literals" (formula "14") (term "1,0,1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "2") (term "1,1,1"))
                           (rule "mul_literals" (formula "2") (term "1,1,1,1"))
                           (rule "polySimp_addLiterals" (formula "2") (term "1,1,1"))
                           (rule "add_zero_right" (formula "2") (term "1,1,1"))
                           (rule "polySimp_elimSub" (formula "14") (term "1,0,0,0,0"))
                           (rule "polySimp_elimSub" (formula "14") (term "0,1,1,1,0"))
                           (rule "polySimp_elimSub" (formula "1") (term "0"))
                           (rule "polySimp_elimSub" (formula "13") (term "0"))
                           (rule "polySimp_elimSub" (formula "14") (term "0,1,1"))
                           (rule "mul_literals" (formula "14") (term "1,0,1,1"))
                           (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,0"))
                           (rule "polySimp_homoEq" (formula "3"))
                           (rule "polySimp_elimSub" (formula "1") (term "0,1"))
                           (rule "polySimp_elimSub" (formula "9") (term "1,1"))
                           (rule "mul_literals" (formula "9") (term "1,1,1"))
                           (rule "polySimp_elimSub" (formula "14") (term "1,1,0,0"))
                           (rule "polySimp_elimSub" (formula "14") (term "0,0,1,1,1,0"))
                           (rule "mul_literals" (formula "14") (term "1,0,0,1,1,1,0"))
                           (rule "polySimp_elimSub" (formula "1") (term "0,0"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "polySimp_elimSub" (formula "13") (term "0,0"))
                           (rule "mul_literals" (formula "13") (term "1,0,0"))
                           (rule "polySimp_elimSub" (formula "14") (term "1,1"))
                           (rule "polySimp_elimSub" (formula "1") (term "0,0,1"))
                           (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "5") (term "0,1,0"))
                           (rule "polySimp_elimSub" (formula "14") (term "0"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_homoEq" (formula "1"))
                           (rule "polySimp_homoEq" (formula "14"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0,0,0,0,1,0"))
                           (rule "polySimp_mulComm1" (formula "14") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "2") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "9") (term "1,1"))
                           (rule "polySimp_addComm0" (formula "13") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "12") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "5") (term "1,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                           (rule "polySimp_addLiterals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "14") (term "0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,1,1,0"))
                           (rule "polySimp_addComm0" (formula "14") (term "0,1,0,1,0,1,1,0"))
                           (rule "polySimp_addComm0" (formula "14") (term "1,0,1,1,0,1,0,1,1,0"))
                           (rule "polySimp_addComm0" (formula "14") (term "0,1,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "14") (term "1,0,0,1,1,1,0"))
                           (rule "polySimp_addLiterals" (formula "14") (term "0,1,0,0,1,1,1,0"))
                           (rule "add_zero_right" (formula "14") (term "0,1,0,0,1,1,1,0"))
                           (rule "polySimp_addComm1" (formula "3") (term "0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "0,1,1,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "0,0,1,1,1,1,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "1,1,0"))
                           (rule "polySimp_addComm1" (formula "14") (term "1,0,0,1,1,0"))
                           (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,1,1,0"))
                           (rule "polySimp_addComm1" (formula "14") (term "1,1,1,1,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "0,1,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,0,1,1,0"))
                           (rule "polySimp_addComm0" (formula "14") (term "0,1,1,1,1,0"))
                           (rule "polySimp_addComm1" (formula "14") (term "1,0,1,1,0"))
                           (rule "inEqSimp_geqRight" (formula "11"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "1,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "14") (term "1,1,1,1,0"))
                           (rule "polySimp_mulComm1" (formula "14") (term "0,1,1,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "0,1,1,1,1,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "0,0,1,0,1,1,0"))
                           (rule "mul_literals" (formula "14") (term "0,0,0,1,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0,1,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "14") (term "0,1,0,1,1,0"))
                           (rule "add_literals" (formula "14") (term "0,0,1,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                           (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "0,1,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "0,0,1,1,1,0"))
                           (rule "polySimp_mulComm1" (formula "14") (term "1,0,1,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "14") (term "0,1,0,1,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "14") (term "1,0,1,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,1,1,1,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "0,1,1,0"))
                           (rule "polySimp_mulComm1" (formula "14") (term "1,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "14") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "14") (term "0,0,1,1,0"))
                           (rule "polySimp_mulComm1" (formula "14") (term "1,0,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "14") (term "0,1,0,0,1,1,0"))
                           (rule "polySimp_addComm1" (formula "14") (term "0,1,1,0"))
                           (rule "inEqSimp_ltRight" (formula "12"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "10"))
                           (rule "inEqSimp_commuteLeq" (formula "12"))
                           (rule "inEqSimp_ltToLeq" (formula "11"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "11") (term "0"))
                           (rule "inEqSimp_geqRight" (formula "13"))
                           (rule "times_zero_1" (formula "1") (term "1,0,0"))
                           (rule "add_zero_right" (formula "1") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0"))
                           (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                           (rule "add_literals" (formula "4") (term "1,1,0"))
                           (rule "times_zero_1" (formula "4") (term "1,0"))
                           (rule "add_zero_right" (formula "4") (term "0"))
                           (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0"))
                           (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,1,1,0"))
                           (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0"))
                           (rule "polySimp_mulAssoc" (formula "13") (term "0,0,0,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "13") (term "0,0,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "13") (term "0,0,0,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0,0"))
                           (rule "applyEq" (formula "13") (term "1,0,1,0") (ifseqformula "4"))
                           (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0"))
                           (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "7"))
                           (rule "polySimp_addComm0" (formula "2") (term "0"))
                           (rule "applyEq" (formula "13") (term "0,1,1,1,0,0,0,0,0") (ifseqformula "6"))
                           (rule "polySimp_addComm1" (formula "13") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_sepPosMonomial" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                           (rule "mul_literals" (formula "5") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                           (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "5"))
                           (rule "eqSymm" (formula "4"))
                           (rule "polySimp_addAssoc" (formula "4") (term "1,1"))
                           (rule "add_literals" (formula "4") (term "0,1,1"))
                           (rule "add_zero_left" (formula "4") (term "1,1"))
                           (rule "applyEq" (formula "13") (term "1,1,0,1,0") (ifseqformula "5"))
                           (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "5"))
                           (rule "applyEq" (formula "4") (term "1,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "13") (term "1,1,0,1,0,0,0") (ifseqformula "5"))
                           (rule "applyEq" (formula "13") (term "0,1,0,1,1,0,0,0,0,0") (ifseqformula "5"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,1,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0,0,0,0,0,0,0"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,1,0,0,0,0,0,0,0"))
                           (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "13") (term "0,1,1,0,0,0,0,0"))
                           (rule "add_literals" (formula "13") (term "0,0,1,1,0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "13") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_sepPosMonomial" (formula "13"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1"))
                           (rule "polySimp_rightDist" (formula "13") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "13") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "13") (term "0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "13") (term "0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "13") (term "0,0,0,0,1"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "11"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                           (rule "polySimp_elimOne" (formula "11") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "11") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "11") (term "0"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "closeFalse" (formula "11"))
                        )
                     )
                     (branch "Case 2"
                        (rule "close" (formula "12") (ifseqformula "1"))
                     )
                  )
               )
               (branch "Case 2"
                  (rule "translateJavaSubInt" (formula "9") (term "1,1"))
                  (rule "qeq_literals" (formula "11"))
                  (rule "closeTrue" (formula "11"))
               )
            )
            (branch "Case 2"
               (rule "translateJavaSubInt" (formula "9") (term "1,1"))
               (rule "greater_literals" (formula "11"))
               (rule "closeTrue" (formula "11"))
            )
         )
         (branch "Case 2"
            (rule "translateJavaSubInt" (formula "10") (term "1,1"))
            (rule "pow_literals" (formula "1") (term "1,1"))
            (rule "polySimp_elimSub" (formula "12") (term "1,0,0,1,0"))
            (rule "polySimp_elimSub" (formula "1") (term "0,1,0"))
            (rule "eqSymm" (formula "1"))
            (rule "polySimp_elimSub" (formula "3") (term "1,1,1"))
            (rule "mul_literals" (formula "3") (term "1,1,1,1"))
            (rule "polySimp_addLiterals" (formula "3") (term "1,1,1"))
            (rule "add_zero_right" (formula "3") (term "1,1,1"))
            (rule "polySimp_homoEq" (formula "4"))
            (rule "polySimp_elimSub" (formula "12") (term "0,0,1,1,1,0"))
            (rule "mul_literals" (formula "12") (term "1,0,0,1,1,1,0"))
            (rule "polySimp_elimSub" (formula "12") (term "1,1"))
            (rule "polySimp_elimSub" (formula "2") (term "0"))
            (rule "polySimp_elimSub" (formula "12") (term "1,0,0,0,0"))
            (rule "polySimp_elimSub" (formula "12") (term "1,1,0,0"))
            (rule "polySimp_elimSub" (formula "2") (term "0,1"))
            (rule "polySimp_elimSub" (formula "10") (term "1,1"))
            (rule "mul_literals" (formula "10") (term "1,1,1"))
            (rule "polySimp_elimSub" (formula "1") (term "0,0,1,1"))
            (rule "mul_literals" (formula "1") (term "1,0,0,1,1"))
            (rule "polySimp_elimSub" (formula "1") (term "1,0,0"))
            (rule "polySimp_elimSub" (formula "12") (term "0,1,1,1,0"))
            (rule "polySimp_elimSub" (formula "12") (term "0,1,1"))
            (rule "mul_literals" (formula "12") (term "1,0,1,1"))
            (rule "polySimp_elimSub" (formula "2") (term "0,0"))
            (rule "mul_literals" (formula "2") (term "1,0,0"))
            (rule "polySimp_elimSub" (formula "12") (term "0,1,1,0,0"))
            (rule "mul_literals" (formula "12") (term "1,0,1,1,0,0"))
            (rule "polySimp_elimSub" (formula "2") (term "0,0,1"))
            (rule "mul_literals" (formula "2") (term "1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "6") (term "0,1,0"))
            (rule "polySimp_elimSub" (formula "1") (term "0,1,0,0"))
            (rule "mul_literals" (formula "1") (term "1,0,1,0,0"))
            (rule "eqSymm" (formula "1"))
            (rule "polySimp_elimSub" (formula "12") (term "0"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_homoEq" (formula "2"))
            (rule "polySimp_homoEq" (formula "12"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0"))
            (rule "polySimp_addComm0" (formula "3") (term "1,0"))
            (rule "polySimp_mulComm1" (formula "12") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,0,1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
            (rule "polySimp_addComm0" (formula "4") (term "0,0"))
            (rule "polySimp_addComm0" (formula "10") (term "1,1"))
            (rule "polySimp_addComm0" (formula "6") (term "1,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0,1,0,1"))
            (rule "polySimp_addComm1" (formula "1") (term "1,0"))
            (rule "polySimp_addLiterals" (formula "1") (term "0,1,0"))
            (rule "add_zero_right" (formula "1") (term "0,1,0"))
            (rule "eqSymm" (formula "1"))
            (rule "polySimp_addComm1" (formula "2") (term "0,0"))
            (rule "polySimp_addLiterals" (formula "2") (term "0,0,0"))
            (rule "add_zero_right" (formula "2") (term "0,0,0"))
            (rule "polySimp_addComm0" (formula "12") (term "0,1,0,0"))
            (rule "polySimp_addComm0" (formula "2") (term "0,1,1,0"))
            (rule "polySimp_addComm0" (formula "12") (term "0,1,0,0,1,1,0"))
            (rule "polySimp_addComm0" (formula "12") (term "0,1,0,1,0,1,1,0"))
            (rule "polySimp_addComm1" (formula "12") (term "1,0,0,1,1,1,0"))
            (rule "polySimp_addLiterals" (formula "12") (term "0,1,0,0,1,1,1,0"))
            (rule "add_zero_right" (formula "12") (term "0,1,0,0,1,1,1,0"))
            (rule "polySimp_addComm0" (formula "12") (term "1,0,1,1,0,1,0,1,1,0"))
            (rule "polySimp_addComm1" (formula "4") (term "0"))
            (rule "polySimp_addComm0" (formula "1") (term "1,1"))
            (rule "polySimp_addComm1" (formula "1") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "0,1,1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "0,0,1,1,1,1,0"))
            (rule "polySimp_addComm0" (formula "2") (term "0,0"))
            (rule "polySimp_addComm1" (formula "2") (term "1,1,0"))
            (rule "polySimp_addComm1" (formula "12") (term "1,0,0,1,1,0"))
            (rule "polySimp_addComm0" (formula "12") (term "1,0,0,1,1,1,0"))
            (rule "polySimp_addComm1" (formula "12") (term "1,1,1,1,0"))
            (rule "polySimp_rightDist" (formula "12") (term "0,1,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,1,1,0"))
            (rule "polySimp_addComm0" (formula "12") (term "0,1,1,1,1,0"))
            (rule "polySimp_addComm1" (formula "12") (term "1,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,1,1,0"))
            (rule "polySimp_mulAssoc" (formula "12") (term "1,1,1,1,0"))
            (rule "polySimp_mulComm1" (formula "12") (term "0,1,1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "0,1,1,1,1,0"))
            (rule "polySimp_rightDist" (formula "12") (term "0,0,1,0,1,1,0"))
            (rule "mul_literals" (formula "12") (term "0,0,0,1,0,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,0,1,0,1,1,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0,1,0,1,1,0"))
            (rule "add_literals" (formula "12") (term "0,0,1,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
            (rule "mul_literals" (formula "2") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
            (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0"))
            (rule "polySimp_rightDist" (formula "12") (term "0,1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "0,0,1,1,1,0"))
            (rule "polySimp_mulComm1" (formula "12") (term "1,0,1,1,1,0"))
            (rule "polySimp_mulAssoc" (formula "12") (term "0,1,0,1,1,1,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,1,1,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,1,1,1,0"))
            (rule "polySimp_rightDist" (formula "12") (term "0,1,1,0"))
            (rule "polySimp_mulComm1" (formula "12") (term "1,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,1,1,0"))
            (rule "polySimp_addComm1" (formula "12") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "12") (term "0,0,1,1,0"))
            (rule "polySimp_mulComm1" (formula "12") (term "1,0,0,1,1,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "0,1,0,0,1,1,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0,1,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "9"))
            (rule "inEqSimp_commuteLeq" (formula "11"))
            (rule "inEqSimp_ltToLeq" (formula "10"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "10") (term "0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0"))
            (rule "polySimp_addComm1" (formula "2") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
            (rule "add_literals" (formula "2") (term "1,1,0"))
            (rule "times_zero_1" (formula "2") (term "1,0"))
            (rule "add_zero_right" (formula "2") (term "0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,1,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0"))
            (rule "polySimp_addComm0" (formula "2") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,1,1,0"))
            (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0,1,1,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "11") (term "0,1,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
            (rule "polySimp_rightDist" (formula "11") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "11") (term "0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "11") (term "0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_mulAssoc" (formula "11") (term "0,0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "0,0,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "11") (term "0,0,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0,0,0"))
            (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0,0"))
            (rule "applyEqRigid" (formula "11") (term "1,0,1,0") (ifseqformula "2"))
            (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0"))
            (rule "applyEq" (formula "11") (term "0,1,1,1,0,0,0,0,0") (ifseqformula "4"))
            (rule "polySimp_addComm1" (formula "11") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_sepPosMonomial" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1"))
            (rule "polySimp_rightDist" (formula "3") (term "1"))
            (rule "mul_literals" (formula "3") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
            (rule "applyEqRigid" (formula "11") (term "1,1,0,1,0") (ifseqformula "3"))
            (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "3"))
            (rule "eqSymm" (formula "2"))
            (rule "polySimp_addAssoc" (formula "2") (term "1,1"))
            (rule "add_literals" (formula "2") (term "0,1,1"))
            (rule "add_zero_left" (formula "2") (term "1,1"))
            (rule "applyEq" (formula "4") (term "1") (ifseqformula "3"))
            (rule "applyEqRigid" (formula "2") (term "1,0,0") (ifseqformula "3"))
            (rule "applyEqRigid" (formula "11") (term "1,1,0,1,0,0,0") (ifseqformula "3"))
            (rule "applyEqRigid" (formula "11") (term "0,1,0,1,1,0,0,0,0,0") (ifseqformula "3"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0,0,0,0,0,0,0"))
            (rule "mul_literals" (formula "11") (term "0,1,0,1,0,0,0,0,0,0,0"))
            (rule "polySimp_addComm0" (formula "11") (term "0,0,0,0,0,0"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,1,1,0,0,0,0,0"))
            (rule "add_literals" (formula "11") (term "0,0,1,1,0,0,0,0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "11") (term "0,0,0,0,0"))
            (rule "add_literals" (formula "11") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_sepPosMonomial" (formula "11"))
            (rule "polySimp_mulComm0" (formula "11") (term "1"))
            (rule "polySimp_rightDist" (formula "11") (term "1"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1"))
            (rule "polySimp_rightDist" (formula "11") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1"))
            (rule "polySimp_rightDist" (formula "11") (term "0,0,1"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "11") (term "0,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,0,1"))
            (rule "polySimp_mulComm0" (formula "11") (term "0,0,0,0,1"))
            (rule "applyEq" (formula "11") (term "1,0,0,0,1") (ifseqformula "1"))
            (rule "polySimp_pullOutFactor2" (formula "11") (term "0,0,0,1"))
            (rule "add_literals" (formula "11") (term "1,0,0,0,1"))
            (rule "times_zero_1" (formula "11") (term "0,0,0,1"))
            (rule "add_zero_left" (formula "11") (term "0,0,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "9"))
            (rule "polySimp_mulLiterals" (formula "9") (term "0"))
            (rule "polySimp_elimOne" (formula "9") (term "0"))
            (rule "elimGcdEq" (formula "11") (inst "elimGcdRightDiv=add(add(mul(mul(b,
                pow(Z(2(#)),
                    add(mul(log_0, Z(neglit(1(#)))),
                        log_buckets))),
            Z(neglit(1(#)))),
        mul(pow(Z(2(#)), add(Z(neglit(1(#))), log_0)),
            pow(Z(2(#)),
                add(mul(log_0, Z(neglit(1(#)))),
                    log_buckets)))),
    mul(mul(b,
            pow(Z(2(#)),
                add(add(Z(neglit(1(#))),
                        mul(log_0, Z(neglit(1(#))))),
                    log_buckets))),
        Z(2(#))))") (inst "elimGcdLeftDiv=mul(mul(pow(Z(2(#)), add(Z(neglit(1(#))), log_0)),
        pow(Z(2(#)),
            add(add(Z(neglit(1(#))),
                    mul(log_0, Z(neglit(1(#))))),
                log_buckets))),
    Z(2(#)))") (inst "elimGcd=Z(2(#))"))
            (rule "mul_literals" (formula "11") (term "0,1,0,0,1"))
            (rule "mul_literals" (formula "11") (term "0,1,0,1,0"))
            (rule "add_literals" (formula "11") (term "1,1,0,0"))
            (rule "mul_literals" (formula "11") (term "0,1,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,0"))
            (rule "eqSymm" (formula "11") (term "0,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "0,0,0,1,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,1"))
            (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,1,1"))
            (rule "polySimp_mulComm0" (formula "11") (term "0,0,0,1,1,1"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,1"))
            (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "0,0,0,1,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,1,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,1,1,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "0,0,0,1,1,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,0,0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,1,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,1"))
            (rule "polySimp_mulAssoc" (formula "11") (term "0,0,1,0,0,1"))
            (rule "polySimp_mulComm0" (formula "11") (term "0,0,0,1,0,0,1"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1,0,0,1"))
            (rule "polySimp_rightDist" (formula "11") (term "0,1,0,1,0"))
            (rule "polySimp_mulAssoc" (formula "11") (term "0,0,1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "0,0,0,1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1,0,1,0"))
            (rule "polySimp_rightDist" (formula "11") (term "0,1,0,0,0"))
            (rule "polySimp_mulAssoc" (formula "11") (term "0,0,1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "0,0,0,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1"))
            (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,1"))
            (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "11") (term "0,0,1"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,1,0"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0,1,0"))
            (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,1,0"))
            (rule "add_literals" (formula "11") (term "1,1,0,1,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,1,0"))
            (rule "add_zero_right" (formula "11") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0"))
            (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "11") (term "0,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0,1"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0,0,1"))
            (rule "polySimp_pullOutFactor0" (formula "11") (term "0,0,0,0,1"))
            (rule "add_literals" (formula "11") (term "1,0,0,0,0,1"))
            (rule "times_zero_1" (formula "11") (term "0,0,0,0,1"))
            (rule "add_zero_left" (formula "11") (term "0,0,0,1"))
            (rule "polySimp_pullOutFactor0" (formula "11") (term "0,0,1"))
            (rule "add_literals" (formula "11") (term "1,0,0,1"))
            (rule "times_zero_1" (formula "11") (term "0,0,1"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0,0"))
            (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "11") (term "0,0,0"))
            (rule "polySimp_pullOutFactor0" (formula "11") (term "0,0,0"))
            (rule "add_literals" (formula "11") (term "1,0,0,0"))
            (rule "times_zero_1" (formula "11") (term "0,0,0"))
            (rule "leq_literals" (formula "11") (term "0,0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
            (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "11") (term "0,0"))
            (rule "add_literals" (formula "11") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0"))
            (rule "add_zero_right" (formula "11") (term "0,0"))
            (rule "polySimp_pullOutFactor0" (formula "11") (term "0,0"))
            (rule "add_literals" (formula "11") (term "1,0,0"))
            (rule "times_zero_1" (formula "11") (term "0,0"))
            (rule "qeq_literals" (formula "11") (term "0"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "newSym_eq" (formula "1") (inst "l=l_0") (inst "newSymDef=mul(pow(Z(2(#)),
        add(mul(log_0, Z(neglit(1(#)))), log_buckets)),
    Z(0(#)))"))
            (rule "times_zero_1" (formula "1") (term "1,1"))
            (rule "add_zero_right" (formula "1") (term "1"))
            (rule "applyEq" (formula "2") (term "0,0") (ifseqformula "1"))
            (rule "eqSymm" (formula "2"))
            (rule "applyEq" (formula "12") (term "0,0,0") (ifseqformula "1"))
            (rule "polySimp_homoEq" (formula "12"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "0,1,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0"))
            (rule "polySimp_addComm1" (formula "12") (term "0,0"))
            (rule "polySimp_addComm0" (formula "12") (term "0,0,0"))
            (rule "applyEq" (formula "12") (term "0,0,1,0") (ifseqformula "1"))
            (rule "polySimp_mulComm0" (formula "12") (term "0,1,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0"))
            (rule "polySimp_addComm1" (formula "12") (term "0,0"))
            (rule "polySimp_addComm0" (formula "12") (term "0,0,0"))
            (rule "applyEq" (formula "12") (term "0,1,0") (ifseqformula "2"))
            (rule "polySimp_mulComm1" (formula "12") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "0,1,0"))
            (rule "polySimp_addComm1" (formula "12") (term "0"))
            (rule "polySimp_pullOutFactor0b" (formula "12") (term "0,0"))
            (rule "add_literals" (formula "12") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "12") (term "1,0,0"))
            (rule "add_zero_right" (formula "12") (term "0,0"))
            (rule "applyEq" (formula "12") (term "0,0,1,0") (ifseqformula "2"))
            (rule "polySimp_mulComm1" (formula "12") (term "0,1,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "0,1,0"))
            (rule "polySimp_pullOutFactor0" (formula "12") (term "0"))
            (rule "add_literals" (formula "12") (term "1,0"))
            (rule "times_zero_1" (formula "12") (term "0"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "closeTrue" (formula "12"))
         )
      )
      (branch "Assume log_buckets - 1 - log_1 != log_buckets - 1 - log_0 + 1"
         (rule "translateJavaSubInt" (formula "9") (term "1,1"))
         (rule "notLeft" (formula "1"))
         (rule "polySimp_elimSub" (formula "11") (term "1,0,0,1,0"))
         (rule "polySimp_elimSub" (formula "11") (term "0,1,1"))
         (rule "mul_literals" (formula "11") (term "1,0,1,1"))
         (rule "polySimp_elimSub" (formula "11") (term "1,1,1,0"))
         (rule "polySimp_elimSub" (formula "1") (term "1,1,1"))
         (rule "mul_literals" (formula "1") (term "1,1,1,1"))
         (rule "polySimp_addLiterals" (formula "1") (term "1,1,1"))
         (rule "add_zero_right" (formula "1") (term "1,1,1"))
         (rule "polySimp_homoEq" (formula "2"))
         (rule "polySimp_elimSub" (formula "11") (term "1,1,0,0"))
         (rule "polySimp_elimSub" (formula "11") (term "1,0,0,0,0"))
         (rule "polySimp_elimSub" (formula "8") (term "1,1"))
         (rule "mul_literals" (formula "8") (term "1,1,1"))
         (rule "polySimp_elimSub" (formula "10") (term "0,1"))
         (rule "polySimp_elimSub" (formula "10") (term "0"))
         (rule "polySimp_elimSub" (formula "11") (term "1,1"))
         (rule "polySimp_elimSub" (formula "11") (term "0,1,1,1,0"))
         (rule "mul_literals" (formula "11") (term "1,0,1,1,1,0"))
         (rule "polySimp_elimSub" (formula "11") (term "0,1,1,0,0"))
         (rule "mul_literals" (formula "11") (term "1,0,1,1,0,0"))
         (rule "polySimp_elimSub" (formula "10") (term "0,0,1"))
         (rule "mul_literals" (formula "10") (term "1,0,0,1"))
         (rule "polySimp_elimSub" (formula "10") (term "0,0"))
         (rule "mul_literals" (formula "10") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
         (rule "polySimp_elimSub" (formula "11") (term "0"))
         (rule "polySimp_homoEq" (formula "10"))
         (rule "polySimp_homoEq" (formula "11"))
         (rule "polySimp_mulComm0" (formula "1") (term "1"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0"))
         (rule "polySimp_mulComm1" (formula "11") (term "1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,0,1,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
         (rule "polySimp_addComm0" (formula "1") (term "1,0"))
         (rule "polySimp_addComm0" (formula "2") (term "0,0"))
         (rule "polySimp_addComm0" (formula "8") (term "1,1"))
         (rule "polySimp_addComm0" (formula "4") (term "1,0"))
         (rule "polySimp_addComm0" (formula "10") (term "0,0,0,0"))
         (rule "polySimp_addComm0" (formula "11") (term "0,1,0,0"))
         (rule "polySimp_addComm0" (formula "10") (term "0,1,1,0"))
         (rule "polySimp_addComm0" (formula "11") (term "0,1,0,1,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "11") (term "0,1,0,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "11") (term "1,0,1,1,0,1,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "11") (term "0,1,0,0,1,1,1,0"))
         (rule "polySimp_addComm1" (formula "2") (term "0"))
         (rule "polySimp_addComm1" (formula "10") (term "0,0"))
         (rule "polySimp_addComm1" (formula "10") (term "1,1,0"))
         (rule "polySimp_addComm1" (formula "11") (term "1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "11") (term "0,1,1,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,1,1,1,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "0,0,1,1,1,1,0"))
         (rule "polySimp_addComm1" (formula "11") (term "1,0,0,1,1,1,0"))
         (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
         (rule "add_literals" (formula "10") (term "0,0,0,0"))
         (rule "add_zero_left" (formula "10") (term "0,0,0"))
         (rule "polySimp_addComm1" (formula "11") (term "1,1,1,1,0"))
         (rule "polySimp_rightDist" (formula "11") (term "0,1,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "10") (term "0,0"))
         (rule "polySimp_addComm0" (formula "11") (term "0,1,1,1,1,0"))
         (rule "polySimp_rightDist" (formula "10") (term "1,0"))
         (rule "polySimp_addComm1" (formula "11") (term "1,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,1,1,0"))
         (rule "polySimp_mulAssoc" (formula "11") (term "1,1,1,1,0"))
         (rule "polySimp_mulComm1" (formula "11") (term "0,1,1,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,1,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "0,1,1,1,1,0"))
         (rule "polySimp_rightDist" (formula "10") (term "0,1,0"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
         (rule "mul_literals" (formula "10") (term "0,0,1,0"))
         (rule "polySimp_elimOne" (formula "10") (term "1,0,1,0"))
         (rule "polySimp_rightDist" (formula "11") (term "0,0,1,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,1,0,1,1,0"))
         (rule "mul_literals" (formula "11") (term "0,0,0,1,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "11") (term "0,1,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1,1,1,0"))
         (rule "polySimp_mulComm1" (formula "11") (term "1,0,1,1,1,0"))
         (rule "polySimp_mulAssoc" (formula "11") (term "0,1,0,1,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,1,1,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,1,1,1,0"))
         (rule "polySimp_addComm1" (formula "11") (term "0,1,0,1,1,0"))
         (rule "add_literals" (formula "11") (term "0,0,1,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "11") (term "0,1,1,0"))
         (rule "polySimp_mulComm1" (formula "11") (term "1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "11") (term "0,0,1,1,0"))
         (rule "polySimp_mulComm1" (formula "11") (term "1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "0,1,0,0,1,1,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,1,0"))
         (rule "polySimp_rightDist" (formula "11") (term "0,1,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,1,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0"))
         (rule "polySimp_rightDist" (formula "11") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0,1,0"))
         (rule "polySimp_mulAssoc" (formula "11") (term "0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "0,0,0,1,0"))
         (rule "polySimp_rightDist" (formula "11") (term "0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,0,1,1,0"))
         (rule "polySimp_mulAssoc" (formula "11") (term "0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "0,0,0,1,1,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "0,0,1,1,0"))
         (rule "polySimp_elimOne" (formula "11") (term "0,0,1,1,0"))
         (rule "inEqSimp_ltToLeq" (formula "8"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "8") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "9"))
         (rule "inEqSimp_commuteLeq" (formula "7"))
         (rule "polySimp_addAssoc" (formula "10") (term "0"))
         (rule "polySimp_addComm1" (formula "10") (term "0,0"))
         (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
         (rule "add_literals" (formula "10") (term "1,1,0"))
         (rule "times_zero_1" (formula "10") (term "1,0"))
         (rule "add_zero_right" (formula "10") (term "0"))
         (rule "polySimp_addAssoc" (formula "11") (term "1,0"))
         (rule "polySimp_addAssoc" (formula "10") (term "0"))
         (rule "polySimp_addComm0" (formula "10") (term "0,0"))
         (rule "close" (formula "10") (ifseqformula "2"))
      )
   )
)
(branch "CUT: log_0 = log_1 + 1 FALSE"
   (rule "logDefinition" (formula "2") (term "0") (userinteraction))
   (rule "ifthenelse_split" (formula "2") (term "0") (userinteraction))
   (branch "2 * b + 1 >= 1 & 2 > 1 TRUE"
      (rule "translateJavaSubInt" (formula "7") (term "1,1"))
      (rule "greater_literals" (formula "2") (term "1"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_elimSub" (formula "10") (term "0,1,1"))
      (rule "mul_literals" (formula "10") (term "1,0,1,1"))
      (rule "polySimp_homoEq" (formula "9"))
      (rule "polySimp_elimSub" (formula "10") (term "0"))
      (rule "polySimp_elimSub" (formula "7") (term "1,1"))
      (rule "mul_literals" (formula "7") (term "1,1,1"))
      (rule "polySimp_elimSub" (formula "10") (term "1,1"))
      (rule "polySimp_elimSub" (formula "10") (term "0,1,1,0,0"))
      (rule "mul_literals" (formula "10") (term "1,0,1,1,0,0"))
      (rule "polySimp_elimSub" (formula "10") (term "1,0,0,0,1,0"))
      (rule "polySimp_elimSub" (formula "10") (term "1,1,0,1,0"))
      (rule "polySimp_elimSub" (formula "10") (term "1,0,0,0,0"))
      (rule "polySimp_elimSub" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_elimSub" (formula "10") (term "0,1,1,0,1,0"))
      (rule "mul_literals" (formula "10") (term "1,0,1,1,0,1,0"))
      (rule "polySimp_homoEq" (formula "10"))
      (rule "polySimp_mulComm0" (formula "3") (term "0,0,0,0"))
      (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,1,2,0"))
      (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,1,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,1,0,1,1,0"))
      (rule "polySimp_mulComm1" (formula "10") (term "1,1,1,0"))
      (rule "polySimp_addComm0" (formula "9") (term "0,0"))
      (rule "polySimp_addComm0" (formula "7") (term "1,1"))
      (rule "polySimp_addComm0" (formula "10") (term "0,1,0,0"))
      (rule "polySimp_addComm0" (formula "3") (term "0,0,0"))
      (rule "polySimp_addComm0" (formula "3") (term "0,1,1,2,0"))
      (rule "polySimp_addComm0" (formula "2") (term "0"))
      (rule "polySimp_addComm0" (formula "10") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_addComm0" (formula "10") (term "0,1,0,1,0,1,1,0"))
      (rule "polySimp_addComm0" (formula "10") (term "0,1,0,0,1,1,1,0"))
      (rule "polySimp_addComm1" (formula "9") (term "0"))
      (rule "polySimp_addComm1" (formula "10") (term "1,0,0,1,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "1,0,0,1,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "0,1,1,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,1,1,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "1,1,1,1,0"))
      (rule "polySimp_addComm0" (formula "10") (term "0,1,1,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "0,1,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,1,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "1,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,1,0"))
      (rule "polySimp_mulAssoc" (formula "10") (term "1,1,1,1,0"))
      (rule "polySimp_mulComm1" (formula "10") (term "0,1,1,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,1,1,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0,1,1,0"))
      (rule "mul_literals" (formula "10") (term "0,0,0,1,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1,0,1,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,1,0,1,1,0"))
      (rule "add_literals" (formula "10") (term "0,0,1,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "0,1,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1,1,1,0"))
      (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,1,1,0"))
      (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,1,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,1,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "0,1,1,0"))
      (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "0,0,1,1,0"))
      (rule "polySimp_mulComm1" (formula "10") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "0,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1,0"))
      (rule "polySimp_mulAssoc" (formula "10") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,0"))
      (rule "polySimp_mulAssoc" (formula "10") (term "0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "10") (term "0,0,1,1,0"))
      (rule "inEqSimp_ltToLeq" (formula "7"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "7") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "3") (term "0,0"))
      (rule "mul_literals" (formula "3") (term "1,0,0,0,0"))
      (rule "add_literals" (formula "3") (term "0,0,0,0"))
      (rule "inEqSimp_commuteLeq" (formula "8"))
      (rule "inEqSimp_commuteLeq" (formula "6"))
      (rule "polySimp_addAssoc" (formula "10") (term "1,0"))
      (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
      (rule "add_literals" (formula "3") (term "0,0,0,0"))
      (rule "add_zero_left" (formula "3") (term "0,0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,0,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0"))
      (rule "polySimp_addComm0" (formula "10") (term "0,0,0,0,0"))
      (rule "inEqSimp_homoInEq1" (formula "2"))
      (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
      (rule "mul_literals" (formula "2") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "2") (term "0"))
      (rule "add_literals" (formula "2") (term "0,0"))
      (rule "add_zero_left" (formula "2") (term "0"))
      (rule "applyEq" (formula "10") (term "0,1,1,1,0,0,0,0,0") (ifseqformula "1"))
      (rule "polySimp_addComm1" (formula "10") (term "1,1,0,0,0,0,0"))
      (rule "polySimp_sepPosMonomial" (formula "9"))
      (rule "polySimp_mulComm0" (formula "9") (term "1"))
      (rule "polySimp_rightDist" (formula "9") (term "1"))
      (rule "mul_literals" (formula "9") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1"))
      (rule "polySimp_sepNegMonomial" (formula "10"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0"))
      (rule "inEqSimp_sepNegMonomial0" (formula "7"))
      (rule "polySimp_mulLiterals" (formula "7") (term "0"))
      (rule "polySimp_elimOne" (formula "7") (term "0"))
      (rule "inEqSimp_invertInEq0" (formula "2"))
      (rule "times_zero_2" (formula "2") (term "1"))
      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
      (rule "inEqSimp_contradInEq5" (formula "3") (term "0,0") (ifseqformula "6"))
      (rule "mul_literals" (formula "3") (term "1,1,0,0,0"))
      (rule "greater_literals" (formula "3") (term "0,0,0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "qeq_literals" (formula "3") (term "0,0,0"))
       (builtin "One Step Simplification" (formula "3"))
      (rule "polySimp_homoEq" (formula "3"))
      (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
      (rule "polySimp_rightDist" (formula "3") (term "1,0"))
      (rule "mul_literals" (formula "3") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "3") (term "0"))
      (rule "polySimp_addComm0" (formula "3") (term "0,0"))
      (rule "polySimp_sepNegMonomial" (formula "3"))
      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
      (rule "polySimp_elimOne" (formula "3") (term "0"))
      (rule "inEqSimp_subsumption6" (formula "2") (ifseqformula "6"))
      (rule "mul_literals" (formula "2") (term "1,1,0"))
      (rule "greater_literals" (formula "2") (term "0,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "leq_literals" (formula "2") (term "0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "true_left" (formula "2"))
      (rule "polyDiv_pullOut" (formula "2") (term "1,0") (inst "polyDivCoeff=b"))
      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0,2,1,0"))
      (rule "equal_literals" (formula "2") (term "0,1,0"))
       (builtin "One Step Simplification" (formula "2"))
      (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,1,0"))
      (rule "add_literals" (formula "2") (term "1,1,0,0,1,0"))
      (rule "times_zero_1" (formula "2") (term "1,0,0,1,0"))
      (rule "add_zero_right" (formula "2") (term "0,0,1,0"))
      (rule "div_literals" (formula "2") (term "0,1,0"))
      (rule "add_zero_left" (formula "2") (term "1,0"))
      (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
      (rule "close" (formula "8") (ifseqformula "2"))
   )
   (branch "2 * b + 1 >= 1 & 2 > 1 FALSE"
      (rule "translateJavaSubInt" (formula "6") (term "1,1"))
      (rule "greater_literals" (formula "8") (term "1"))
       (builtin "One Step Simplification" (formula "8"))
      (rule "polySimp_elimSub" (formula "10") (term "0"))
      (rule "polySimp_elimSub" (formula "10") (term "1,1"))
      (rule "polySimp_homoEq" (formula "9"))
      (rule "polySimp_elimSub" (formula "6") (term "1,1"))
      (rule "mul_literals" (formula "6") (term "1,1,1"))
      (rule "polySimp_elimSub" (formula "10") (term "1,0,0,0,1,0"))
      (rule "polySimp_elimSub" (formula "10") (term "1,1,0,1,0"))
      (rule "polySimp_elimSub" (formula "10") (term "1,0,0,0,0"))
      (rule "polySimp_elimSub" (formula "10") (term "0,1,1,0,0"))
      (rule "mul_literals" (formula "10") (term "1,0,1,1,0,0"))
      (rule "polySimp_elimSub" (formula "10") (term "0,1,1"))
      (rule "mul_literals" (formula "10") (term "1,0,1,1"))
      (rule "polySimp_elimSub" (formula "10") (term "0,1,1,0,1,0"))
      (rule "mul_literals" (formula "10") (term "1,0,1,1,0,1,0"))
      (rule "polySimp_elimSub" (formula "10") (term "1,1,0,0"))
      (rule "polySimp_homoEq" (formula "10"))
      (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "8") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,1,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0,1,0,1,1,0"))
      (rule "polySimp_mulComm1" (formula "10") (term "1,1,1,0"))
      (rule "polySimp_addComm0" (formula "9") (term "0,0"))
      (rule "polySimp_addComm0" (formula "6") (term "1,1"))
      (rule "polySimp_addComm0" (formula "10") (term "0,1,0,0"))
      (rule "polySimp_addComm0" (formula "2") (term "1,0"))
      (rule "polySimp_addComm0" (formula "8") (term "0"))
      (rule "polySimp_addComm0" (formula "10") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_addComm0" (formula "10") (term "0,1,0,1,0,1,1,0"))
      (rule "polySimp_addComm0" (formula "10") (term "0,1,0,0,1,1,1,0"))
      (rule "polySimp_addComm1" (formula "9") (term "0"))
      (rule "polySimp_addComm1" (formula "10") (term "1,0,0,1,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "1,0,0,1,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "0,1,1,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,1,1,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "1,1,1,1,0"))
      (rule "polySimp_addComm0" (formula "10") (term "0,1,1,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "0,1,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0,1,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "1,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,1,0"))
      (rule "polySimp_mulAssoc" (formula "10") (term "1,1,1,1,0"))
      (rule "polySimp_mulComm1" (formula "10") (term "0,1,1,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,1,1,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0,1,1,0"))
      (rule "mul_literals" (formula "10") (term "0,0,0,1,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1,0,1,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,1,0,1,1,0"))
      (rule "add_literals" (formula "10") (term "0,0,1,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "0,1,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1,1,1,0"))
      (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,1,1,0"))
      (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0,1,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,1,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "0,1,1,0"))
      (rule "polySimp_mulComm1" (formula "10") (term "1,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "0,0,1,1,0"))
      (rule "polySimp_mulComm1" (formula "10") (term "1,0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,1,0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "0,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0,1,0"))
      (rule "polySimp_mulAssoc" (formula "10") (term "0,0,0,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,0,0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0,1,0"))
      (rule "polySimp_rightDist" (formula "10") (term "0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1,1,0"))
      (rule "polySimp_mulAssoc" (formula "10") (term "0,0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "10") (term "0,0,0,1,1,0"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0,0,1,1,0"))
      (rule "polySimp_elimOne" (formula "10") (term "0,0,1,1,0"))
      (rule "inEqSimp_geqRight" (formula "8"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "add_zero_left" (formula "1") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "7"))
      (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
      (rule "polySimp_addComm1" (formula "7") (term "0"))
      (rule "inEqSimp_commuteLeq" (formula "6"))
      (rule "inEqSimp_commuteLeq" (formula "8"))
      (rule "polySimp_addAssoc" (formula "10") (term "1,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,0,1,0"))
      (rule "polySimp_addComm1" (formula "10") (term "0,0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
      (rule "polySimp_addAssoc" (formula "10") (term "0,0,0,0"))
      (rule "polySimp_addComm0" (formula "10") (term "0,0,0,0,0"))
      (rule "applyEq" (formula "10") (term "0,1,1,1,0,0,0,0,0") (ifseqformula "2"))
      (rule "polySimp_addComm1" (formula "10") (term "1,1,0,0,0,0,0"))
      (rule "polySimp_sepPosMonomial" (formula "9"))
      (rule "polySimp_mulComm0" (formula "9") (term "1"))
      (rule "polySimp_rightDist" (formula "9") (term "1"))
      (rule "mul_literals" (formula "9") (term "0,1"))
      (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
      (rule "polySimp_elimOne" (formula "9") (term "1,1"))
      (rule "polySimp_sepNegMonomial" (formula "10"))
      (rule "polySimp_mulLiterals" (formula "10") (term "0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "inEqSimp_sepNegMonomial0" (formula "7"))
      (rule "polySimp_mulLiterals" (formula "7") (term "0"))
      (rule "polySimp_elimOne" (formula "7") (term "0"))
      (rule "inEqSimp_contradInEq5" (formula "1") (ifseqformula "6"))
      (rule "mul_literals" (formula "1") (term "1,1,0"))
      (rule "greater_literals" (formula "1") (term "0,0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "qeq_literals" (formula "1") (term "0"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
)
}
