\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Jun 05 14:55:23 CEST 2022
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , finalFields-finalFields\\:immutable , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsCheckingOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Sun Jun 05 14:55:23 CEST 2022
contract=de.wiesler.Partition[de.wiesler.Partition\\:\\:partition([I,int,int,[I,de.wiesler.Classifier,de.wiesler.Storage)].JML normal_behavior operation contract.0
name=de.wiesler.Partition[de.wiesler.Partition\\:\\:partition([I,int,int,[I,de.wiesler.Classifier,de.wiesler.Storage)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "1" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))

(autoModeTime "56120")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0,1,1,1,1,1,0"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0,0,1,0,0,0"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0,1,1,1,1,1,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0,1,1,1,1,1,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0,1,0,0,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "2"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "2"))
(rule "notLeft" (formula "8"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "2"))
(rule "notLeft" (formula "9"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "17"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "19"))
(rule "andLeft" (formula "21"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "22"))
(rule "translateJavaSubInt" (formula "16") (term "0"))
(rule "translateJavaAddInt" (formula "17") (term "1"))
(rule "add_literals" (formula "17") (term "1"))
(rule "translateJavaSubInt" (formula "19") (term "0"))
(rule "replace_known_right" (formula "9") (term "0") (ifseqformula "67"))
 (builtin "One Step Simplification" (formula "9"))
(rule "replace_known_right" (formula "7") (term "0") (ifseqformula "69"))
 (builtin "One Step Simplification" (formula "7"))
(rule "replace_known_right" (formula "8") (term "0") (ifseqformula "68"))
 (builtin "One Step Simplification" (formula "8"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "70"))
 (builtin "One Step Simplification" (formula "2"))
(rule "polySimp_elimSub" (formula "16") (term "0"))
(rule "polySimp_elimSub" (formula "19") (term "0"))
(rule "polySimp_addComm0" (formula "16") (term "0"))
(rule "polySimp_addComm0" (formula "19") (term "0"))
(rule "disjointDefinition" (formula "66"))
 (builtin "One Step Simplification" (formula "66"))
(rule "notLeft" (formula "66"))
(rule "disjointDefinition" (formula "65"))
 (builtin "One Step Simplification" (formula "65"))
(rule "notLeft" (formula "65"))
(rule "disjointDefinition" (formula "64"))
 (builtin "One Step Simplification" (formula "64"))
(rule "notLeft" (formula "64"))
(rule "eqSymm" (formula "64"))
(rule "disjointDefinition" (formula "63"))
 (builtin "One Step Simplification" (formula "63"))
(rule "notLeft" (formula "63"))
(rule "eqSymm" (formula "63"))
(rule "disjointDefinition" (formula "62"))
 (builtin "One Step Simplification" (formula "62"))
(rule "notLeft" (formula "62"))
(rule "eqSymm" (formula "62"))
(rule "disjointDefinition" (formula "61"))
 (builtin "One Step Simplification" (formula "61"))
(rule "notLeft" (formula "61"))
(rule "eqSymm" (formula "61"))
(rule "disjointDefinition" (formula "60"))
 (builtin "One Step Simplification" (formula "60"))
(rule "notLeft" (formula "60"))
(rule "eqSymm" (formula "60"))
(rule "disjointDefinition" (formula "59"))
 (builtin "One Step Simplification" (formula "59"))
(rule "notLeft" (formula "59"))
(rule "eqSymm" (formula "59"))
(rule "disjointDefinition" (formula "58"))
 (builtin "One Step Simplification" (formula "58"))
(rule "notLeft" (formula "58"))
(rule "eqSymm" (formula "58"))
(rule "disjointDefinition" (formula "57"))
 (builtin "One Step Simplification" (formula "57"))
(rule "notLeft" (formula "57"))
(rule "eqSymm" (formula "57"))
(rule "disjointDefinition" (formula "56"))
 (builtin "One Step Simplification" (formula "56"))
(rule "notLeft" (formula "56"))
(rule "eqSymm" (formula "56"))
(rule "disjointDefinition" (formula "55"))
 (builtin "One Step Simplification" (formula "55"))
(rule "notLeft" (formula "55"))
(rule "eqSymm" (formula "55"))
(rule "disjointDefinition" (formula "54"))
 (builtin "One Step Simplification" (formula "54"))
(rule "notLeft" (formula "54"))
(rule "eqSymm" (formula "54"))
(rule "disjointDefinition" (formula "53"))
 (builtin "One Step Simplification" (formula "53"))
(rule "notLeft" (formula "53"))
(rule "eqSymm" (formula "53"))
(rule "disjointDefinition" (formula "52"))
 (builtin "One Step Simplification" (formula "52"))
(rule "notLeft" (formula "52"))
(rule "eqSymm" (formula "52"))
(rule "disjointDefinition" (formula "51"))
 (builtin "One Step Simplification" (formula "51"))
(rule "notLeft" (formula "51"))
(rule "eqSymm" (formula "51"))
(rule "disjointDefinition" (formula "50"))
 (builtin "One Step Simplification" (formula "50"))
(rule "notLeft" (formula "50"))
(rule "eqSymm" (formula "50"))
(rule "disjointDefinition" (formula "49"))
 (builtin "One Step Simplification" (formula "49"))
(rule "notLeft" (formula "49"))
(rule "eqSymm" (formula "49"))
(rule "disjointDefinition" (formula "48"))
 (builtin "One Step Simplification" (formula "48"))
(rule "notLeft" (formula "48"))
(rule "eqSymm" (formula "48"))
(rule "disjointDefinition" (formula "47"))
 (builtin "One Step Simplification" (formula "47"))
(rule "notLeft" (formula "47"))
(rule "eqSymm" (formula "47"))
(rule "disjointDefinition" (formula "46"))
 (builtin "One Step Simplification" (formula "46"))
(rule "notLeft" (formula "46"))
(rule "eqSymm" (formula "46"))
(rule "disjointDefinition" (formula "45"))
 (builtin "One Step Simplification" (formula "45"))
(rule "notLeft" (formula "45"))
(rule "disjointDefinition" (formula "44"))
 (builtin "One Step Simplification" (formula "44"))
(rule "notLeft" (formula "44"))
(rule "disjointDefinition" (formula "43"))
 (builtin "One Step Simplification" (formula "43"))
(rule "notLeft" (formula "43"))
(rule "disjointDefinition" (formula "42"))
 (builtin "One Step Simplification" (formula "42"))
(rule "notLeft" (formula "42"))
(rule "disjointDefinition" (formula "41"))
 (builtin "One Step Simplification" (formula "41"))
(rule "notLeft" (formula "41"))
(rule "disjointDefinition" (formula "40"))
 (builtin "One Step Simplification" (formula "40"))
(rule "notLeft" (formula "40"))
(rule "disjointDefinition" (formula "39"))
 (builtin "One Step Simplification" (formula "39"))
(rule "notLeft" (formula "39"))
(rule "disjointDefinition" (formula "38"))
 (builtin "One Step Simplification" (formula "38"))
(rule "notLeft" (formula "38"))
(rule "eqSymm" (formula "38"))
(rule "disjointDefinition" (formula "37"))
 (builtin "One Step Simplification" (formula "37"))
(rule "notLeft" (formula "37"))
(rule "eqSymm" (formula "37"))
(rule "disjointDefinition" (formula "36"))
 (builtin "One Step Simplification" (formula "36"))
(rule "notLeft" (formula "36"))
(rule "eqSymm" (formula "36"))
(rule "disjointDefinition" (formula "35"))
 (builtin "One Step Simplification" (formula "35"))
(rule "notLeft" (formula "35"))
(rule "eqSymm" (formula "35"))
(rule "disjointDefinition" (formula "34"))
 (builtin "One Step Simplification" (formula "34"))
(rule "notLeft" (formula "34"))
(rule "eqSymm" (formula "34"))
(rule "disjointDefinition" (formula "33"))
 (builtin "One Step Simplification" (formula "33"))
(rule "notLeft" (formula "33"))
(rule "eqSymm" (formula "33"))
(rule "disjointDefinition" (formula "32"))
 (builtin "One Step Simplification" (formula "32"))
(rule "notLeft" (formula "32"))
(rule "eqSymm" (formula "32"))
(rule "disjointDefinition" (formula "31"))
 (builtin "One Step Simplification" (formula "31"))
(rule "notLeft" (formula "31"))
(rule "eqSymm" (formula "31"))
(rule "disjointDefinition" (formula "30"))
 (builtin "One Step Simplification" (formula "30"))
(rule "notLeft" (formula "30"))
(rule "eqSymm" (formula "30"))
(rule "disjointDefinition" (formula "29"))
 (builtin "One Step Simplification" (formula "29"))
(rule "notLeft" (formula "29"))
(rule "eqSymm" (formula "29"))
(rule "disjointDefinition" (formula "28"))
 (builtin "One Step Simplification" (formula "28"))
(rule "notLeft" (formula "28"))
(rule "eqSymm" (formula "28"))
(rule "disjointDefinition" (formula "27"))
 (builtin "One Step Simplification" (formula "27"))
(rule "notLeft" (formula "27"))
(rule "eqSymm" (formula "27"))
(rule "inEqSimp_commuteLeq" (formula "15"))
(rule "disjointDefinition" (formula "26"))
 (builtin "One Step Simplification" (formula "26"))
(rule "notLeft" (formula "26"))
(rule "eqSymm" (formula "26"))
(rule "disjointDefinition" (formula "25"))
 (builtin "One Step Simplification" (formula "25"))
(rule "notLeft" (formula "25"))
(rule "eqSymm" (formula "25"))
(rule "disjointDefinition" (formula "24"))
 (builtin "One Step Simplification" (formula "24"))
(rule "notLeft" (formula "24"))
(rule "eqSymm" (formula "24"))
(rule "disjointDefinition" (formula "22"))
 (builtin "One Step Simplification" (formula "22"))
(rule "notLeft" (formula "22"))
(rule "disjointDefinition" (formula "22"))
 (builtin "One Step Simplification" (formula "22"))
(rule "notLeft" (formula "22"))
(rule "eqSymm" (formula "22"))
(rule "inEqSimp_commuteLeq" (formula "13"))
(rule "inEqSimp_commuteLeq" (formula "14"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "1,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "6"))
(rule "inEqSimp_commuteLeq" (formula "4"))
(rule "assignment" (formula "71") (term "1"))
 (builtin "One Step Simplification" (formula "71"))
(rule "applyEq" (formula "18") (term "1,1,0,0,0") (ifseqformula "17"))
(rule "commute_and" (formula "18") (term "1,0,0"))
(rule "arrayLengthNotNegative" (formula "17") (term "0"))
(rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
(rule "qeq_literals" (formula "17"))
(rule "true_left" (formula "17"))
(rule "arrayLengthIsAShort" (formula "17") (term "0"))
(rule "expand_inShort" (formula "17"))
(rule "replace_short_MIN" (formula "17") (term "0,1"))
(rule "replace_short_MAX" (formula "17") (term "1,0"))
(rule "andLeft" (formula "17"))
(rule "inEqSimp_commuteLeq" (formula "18"))
(rule "applyEq" (formula "17") (term "0") (ifseqformula "19"))
(rule "leq_literals" (formula "17"))
(rule "true_left" (formula "17"))
(rule "applyEq" (formula "17") (term "0") (ifseqformula "18"))
(rule "qeq_literals" (formula "17"))
(rule "true_left" (formula "17"))
(rule "commute_and" (formula "18") (term "0,0,0"))
(rule "shift_paren_and" (formula "18") (term "0,0"))
(rule "commute_and_2" (formula "18") (term "0,0,0"))
(rule "methodBodyExpand" (formula "71") (term "1") (newnames "heapBefore_partition,savedHeapBefore_partition"))
 (builtin "One Step Simplification" (formula "71"))
(rule "variableDeclarationAssign" (formula "71") (term "1"))
(rule "variableDeclaration" (formula "71") (term "1") (newnames "buffers"))
(rule "instanceCreationAssignmentUnfoldArguments" (formula "71") (term "1"))
(rule "variableDeclarationAssign" (formula "71") (term "1"))
(rule "variableDeclaration" (formula "71") (term "1") (newnames "var"))
(rule "assignment_read_attribute_final" (formula "71"))
(branch "Normal Execution (_storage != null)"
    (builtin "One Step Simplification" (formula "71"))
   (rule "variableDeclarationAssign" (formula "71") (term "1"))
   (rule "variableDeclaration" (formula "71") (term "1") (newnames "var_1"))
   (rule "assignment_read_attribute_final" (formula "71"))
   (branch "Normal Execution (_storage != null)"
       (builtin "One Step Simplification" (formula "71"))
      (rule "variableDeclarationAssign" (formula "71") (term "1"))
      (rule "variableDeclaration" (formula "71") (term "1") (newnames "var_2"))
       (builtin "Use Operation Contract" (formula "71") (newnames "heapBefore_num_buckets,result_175,exc_207") (contract "de.wiesler.Classifier[de.wiesler.Classifier::num_buckets()].JML normal_behavior operation contract.0"))
      (branch "Post (num_buckets)"
          (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "21")) (ifInst ""  (formula "12")))
         (rule "expand_inInt" (formula "22") (term "0,1,0"))
         (rule "replace_int_MIN" (formula "22") (term "0,1,0,1,0"))
         (rule "replace_int_MAX" (formula "22") (term "1,0,0,1,0"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "eqSymm" (formula "24"))
         (rule "inEqSimp_commuteLeq" (formula "23"))
         (rule "assignment" (formula "75") (term "1"))
          (builtin "One Step Simplification" (formula "75"))
          (builtin "Use Operation Contract" (formula "75") (newnames "heapBefore_Buffers,self_207,exc_208,heapAfter_Buffers,anon_heap_Buffers") (contract "de.wiesler.Buffers[de.wiesler.Buffers::Buffers([I,[I,int)].JML normal_behavior operation contract.0"))
         (branch "Post (Buffers)"
             (builtin "One Step Simplification" (formula "27"))
             (builtin "One Step Simplification" (formula "77"))
            (rule "andLeft" (formula "27"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1,1,0,0,1,0") (ifseqformula "27"))
            (rule "andLeft" (formula "28"))
            (rule "andLeft" (formula "28"))
            (rule "andLeft" (formula "30"))
            (rule "andLeft" (formula "29"))
            (rule "andLeft" (formula "30"))
            (rule "andLeft" (formula "29"))
            (rule "andLeft" (formula "32"))
            (rule "andLeft" (formula "29"))
            (rule "andLeft" (formula "34"))
            (rule "notLeft" (formula "29"))
            (rule "andLeft" (formula "29"))
            (rule "andLeft" (formula "35"))
            (rule "notLeft" (formula "29"))
            (rule "translateJavaSubInt" (formula "27") (term "2,1,0"))
            (rule "eqSymm" (formula "32"))
            (rule "eqSymm" (formula "33"))
            (rule "replace_known_right" (formula "29") (term "0") (ifseqformula "37"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "polySimp_elimSub" (formula "27") (term "2,1,0"))
            (rule "mul_literals" (formula "27") (term "1,2,1,0"))
            (rule "polySimp_addComm0" (formula "27") (term "2,1,0"))
            (rule "assignment" (formula "88") (term "1"))
             (builtin "One Step Simplification" (formula "88"))
            (rule "blockEmpty" (formula "88") (term "1"))
            (rule "variableDeclarationAssign" (formula "88") (term "1"))
            (rule "variableDeclaration" (formula "88") (term "1") (newnames "first_empty_position"))
            (rule "applyEq" (formula "44") (term "0") (ifseqformula "33"))
            (rule "applyEq" (formula "58") (term "1") (ifseqformula "32"))
            (rule "applyEq" (formula "75") (term "1") (ifseqformula "32"))
            (rule "applyEq" (formula "69") (term "0") (ifseqformula "32"))
            (rule "eqSymm" (formula "69"))
            (rule "applyEq" (formula "65") (term "0") (ifseqformula "33"))
            (rule "eqSymm" (formula "65"))
            (rule "applyEq" (formula "64") (term "0") (ifseqformula "32"))
            (rule "eqSymm" (formula "64"))
            (rule "applyEq" (formula "43") (term "0") (ifseqformula "32"))
            (rule "applyEq" (formula "59") (term "1") (ifseqformula "33"))
            (rule "applyEq" (formula "78") (term "1") (ifseqformula "33"))
            (rule "applyEq" (formula "80") (term "1") (ifseqformula "33"))
            (rule "applyEq" (formula "79") (term "1") (ifseqformula "33"))
            (rule "applyEq" (formula "74") (term "0") (ifseqformula "33"))
            (rule "eqSymm" (formula "74"))
            (rule "applyEq" (formula "51") (term "0") (ifseqformula "32"))
            (rule "applyEq" (formula "52") (term "0") (ifseqformula "33"))
            (rule "applyEq" (formula "70") (term "0") (ifseqformula "33"))
            (rule "eqSymm" (formula "70"))
            (rule "applyEq" (formula "76") (term "1") (ifseqformula "32"))
            (rule "applyEq" (formula "77") (term "1") (ifseqformula "32"))
            (rule "applyEq" (formula "27") (term "0,1,0") (ifseqformula "33"))
            (rule "applyEq" (formula "74") (term "0") (ifseqformula "32"))
            (rule "eqSymm" (formula "74"))
             (builtin "Use Operation Contract" (formula "88") (newnames "heapBefore_classify_locally,result_176,exc_209,heapAfter_classify_locally,anon_heap_classify_locally") (contract "de.wiesler.Classifier[de.wiesler.Classifier::classify_locally([I,int,int,[I,de.wiesler.Buffers)].JML normal_behavior operation contract.0"))
            (branch "Post (classify_locally)"
                (builtin "One Step Simplification" (formula "38"))
                (builtin "One Step Simplification" (formula "90"))
               (rule "expand_inInt" (formula "38") (term "1,0,0,0,1,1,1,1,1,1,0,1"))
               (rule "expand_inInt" (formula "38") (term "0,0,0,1,1,1,1,1,1,1,0,1"))
               (rule "expand_inInt" (formula "38") (term "0,1,0,1"))
               (rule "replace_int_MIN" (formula "38") (term "0,1,1,0,0,0,1,1,1,1,1,1,0,1"))
               (rule "replace_int_MAX" (formula "38") (term "1,0,1,0,0,0,1,1,1,1,1,1,0,1"))
               (rule "replace_int_MIN" (formula "38") (term "0,1,0,0,0,1,1,1,1,1,1,1,0,1"))
               (rule "replace_int_MAX" (formula "38") (term "1,0,0,0,0,1,1,1,1,1,1,1,0,1"))
               (rule "replace_int_MAX" (formula "38") (term "1,0,0,1,0,1"))
               (rule "replace_int_MIN" (formula "38") (term "0,1,0,1,0,1"))
               (rule "andLeft" (formula "38"))
               (rule "andLeft" (formula "39"))
               (rule "andLeft" (formula "39"))
               (rule "andLeft" (formula "41"))
               (rule "andLeft" (formula "40"))
               (rule "andLeft" (formula "42"))
               (rule "andLeft" (formula "40"))
               (rule "andLeft" (formula "42"))
               (rule "andLeft" (formula "42"))
               (rule "andLeft" (formula "44"))
               (rule "andLeft" (formula "42"))
               (rule "andLeft" (formula "46"))
               (rule "andLeft" (formula "47"))
               (rule "andLeft" (formula "47"))
               (rule "andLeft" (formula "49"))
               (rule "andLeft" (formula "50"))
               (rule "andLeft" (formula "51"))
               (rule "translateJavaMulInt" (formula "38") (term "0,2,1,1,1,0"))
               (rule "translateJavaSubInt" (formula "38") (term "2,0,0,1,0"))
               (rule "translateJavaSubInt" (formula "38") (term "2,0,1,1,0"))
               (rule "translateJavaSubInt" (formula "44") (term "0,0"))
               (rule "translateJavaSubInt" (formula "48") (term "1"))
               (rule "translateJavaAddInt" (formula "49") (term "0,2,0,0,0,1,0"))
               (rule "translateJavaAddInt" (formula "49") (term "0,2,0,0,1,1,1,0"))
               (rule "translateJavaAddInt" (formula "49") (term "1,0,1,0"))
               (rule "translateJavaAddInt" (formula "50") (term "1,1,0"))
               (rule "translateJavaSubInt" (formula "38") (term "2,1,1,1,0"))
               (rule "translateJavaSubInt" (formula "49") (term "0,0,1,0"))
               (rule "eqSymm" (formula "49") (term "1,1,0"))
               (rule "translateJavaSubInt" (formula "49") (term "0,0,1,1,0"))
               (rule "polySimp_elimSub" (formula "38") (term "2,0,0,1,0"))
               (rule "mul_literals" (formula "38") (term "1,2,0,0,1,0"))
               (rule "polySimp_elimSub" (formula "38") (term "2,0,1,1,0"))
               (rule "mul_literals" (formula "38") (term "1,2,0,1,1,0"))
               (rule "polySimp_elimSub" (formula "44") (term "0,0"))
               (rule "polySimp_elimSub" (formula "48") (term "1"))
               (rule "polySimp_elimSub" (formula "38") (term "2,1,1,1,0"))
               (rule "mul_literals" (formula "38") (term "1,2,1,1,1,0"))
               (rule "polySimp_elimSub" (formula "49") (term "0,0,1,0"))
               (rule "polySimp_elimSub" (formula "49") (term "0,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "38") (term "0,2,1,1,1,0"))
               (rule "polySimp_addComm0" (formula "50") (term "1,1,0"))
               (rule "polySimp_addComm0" (formula "38") (term "2,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "38") (term "2,0,1,1,0"))
               (rule "polySimp_addComm0" (formula "44") (term "0,0"))
               (rule "polySimp_addComm0" (formula "48") (term "1"))
               (rule "polySimp_addComm0" (formula "49") (term "0,0,1,0"))
               (rule "polySimp_addComm0" (formula "49") (term "0,0,1,1,0"))
               (rule "polySimp_addComm0" (formula "38") (term "2,1,1,1,0"))
               (rule "polySimp_addComm0" (formula "49") (term "0,2,1,0,0,1,0"))
               (rule "polySimp_addComm0" (formula "49") (term "0,2,1,0,0,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "41"))
               (rule "inEqSimp_commuteLeq" (formula "42"))
               (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "49") (term "1,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "50") (term "1,0,0"))
               (rule "assignment" (formula "106") (term "1"))
                (builtin "One Step Simplification" (formula "106"))
               (rule "variableDeclarationGhostAssign" (formula "106") (term "1"))
               (rule "variableDeclarationGhost" (formula "106") (term "1") (newnames "heapAfterClassify"))
               (rule "assignment" (formula "106") (term "1"))
                (builtin "One Step Simplification" (formula "106"))
               (rule "variableDeclarationAssign" (formula "106") (term "1"))
               (rule "variableDeclaration" (formula "106") (term "1") (newnames "bucket_pointers"))
               (rule "applyEq" (formula "47") (term "2,0") (ifseqformula "24"))
               (rule "applyEq" (formula "38") (term "0,1,2,1,1,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "38") (term "2,1,0,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "38") (term "1,2,0,1,1,0") (ifseqformula "24"))
               (rule "applyEq" (formula "48") (term "0,2,0") (ifseqformula "24"))
               (rule "applyEq" (formula "49") (term "1,1,0,0,0") (ifseqformula "24"))
               (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=arr_0"))
               (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "38"))
                (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "105")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,1,0,0") (ifseqformula "27"))
               (rule "replace_known_left" (formula "48") (term "0,0,1,0,0") (ifseqformula "7"))
                (builtin "One Step Simplification" (formula "48"))
               (rule "elementOfUnion" (formula "48") (term "0,0"))
               (rule "elementOfUnion" (formula "48") (term "1,0,0"))
               (rule "elementOfArrayRangeConcrete" (formula "48") (term "1,1,0,0"))
               (rule "eqSymm" (formula "48") (term "0,0,1,1,0,0"))
               (rule "replace_known_right" (formula "48") (term "0,0,1,1,0,0") (ifseqformula "70"))
                (builtin "One Step Simplification" (formula "48"))
               (rule "elementOfArrayRangeConcrete" (formula "48") (term "1,0,0"))
               (rule "eqSymm" (formula "48") (term "0,0,1,0,0"))
               (rule "replace_known_right" (formula "48") (term "0,0,1,0,0") (ifseqformula "71"))
                (builtin "One Step Simplification" (formula "48"))
               (rule "elementOfUnion" (formula "48") (term "0,0"))
               (rule "elementOfArrayRangeConcrete" (formula "48") (term "1,0,0"))
                (builtin "One Step Simplification" (formula "48"))
               (rule "elementOfArrayRangeConcrete" (formula "48") (term "0,0,0"))
               (rule "eqSymm" (formula "48") (term "0,0,0,0,0"))
               (rule "replace_known_right" (formula "48") (term "0,0,0,0,0") (ifseqformula "59"))
                (builtin "One Step Simplification" (formula "48"))
               (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,0"))
               (rule "pullOutSelect" (formula "48") (term "2,0") (inst "selectSK=arr_1"))
               (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "27"))
                (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "106")) (ifInst ""  (formula "7")))
               (rule "elementOfArrayRangeConcrete" (formula "48") (term "0,0"))
               (rule "eqSymm" (formula "48") (term "0,0,0,0"))
               (rule "replace_known_right" (formula "48") (term "0,0,0,0") (ifseqformula "72"))
                (builtin "One Step Simplification" (formula "48"))
               (rule "applyEqReverse" (formula "49") (term "2,0") (ifseqformula "48"))
               (rule "hideAuxiliaryEq" (formula "48"))
               (rule "commuteUnion" (formula "38") (term "0,1,0"))
               (rule "commuteUnion" (formula "38") (term "1,1,0"))
               (rule "commute_and" (formula "51") (term "0,0"))
               (rule "commute_and" (formula "50") (term "1,0,0"))
               (rule "commute_and" (formula "50") (term "0,0,0"))
               (rule "arrayLengthIsAShort" (formula "15") (term "0"))
               (rule "expand_inShort" (formula "15"))
               (rule "replace_short_MAX" (formula "15") (term "1,0"))
               (rule "replace_short_MIN" (formula "15") (term "0,1"))
               (rule "andLeft" (formula "15"))
               (rule "inEqSimp_commuteLeq" (formula "16"))
               (rule "arrayLengthNotNegative" (formula "17") (term "0"))
               (rule "shift_paren_and" (formula "53") (term "0,0"))
               (rule "commute_and_2" (formula "53") (term "0,0,0"))
               (rule "associativeLawUnion" (formula "41") (term "1,0"))
               (rule "onlyCreatedObjectsAreReferencedFinal" (formula "79") (term "1") (ifseqformula "1") (ifseqformula "9"))
               (rule "onlyCreatedObjectsAreReferencedFinal" (formula "96") (term "0") (ifseqformula "2") (ifseqformula "10"))
               (rule "onlyCreatedObjectsAreReferencedFinal" (formula "96") (term "0") (ifseqformula "3") (ifseqformula "11"))
               (rule "onlyCreatedObjectsAreReferencedFinal" (formula "92") (term "1") (ifseqformula "4") (ifseqformula "11"))
               (rule "onlyCreatedObjectsAreReferencedFinal" (formula "92") (term "0") (ifseqformula "5") (ifseqformula "13"))
               (rule "onlyCreatedObjectsAreReferencedFinal" (formula "83") (term "0,0") (ifseqformula "6") (ifseqformula "13"))
               (rule "instanceCreationAssignmentUnfoldArguments" (formula "116") (term "1"))
               (rule "variableDeclarationAssign" (formula "116") (term "1"))
               (rule "variableDeclaration" (formula "116") (term "1") (newnames "var_3"))
               (rule "assignment" (formula "116") (term "1"))
                (builtin "One Step Simplification" (formula "116"))
               (rule "variableDeclarationAssign" (formula "116") (term "1"))
               (rule "variableDeclaration" (formula "116") (term "1") (newnames "var_4"))
                (builtin "Use Operation Contract" (formula "116") (newnames "heapBefore_num_buckets_0,result_177,exc_210") (contract "de.wiesler.Classifier[de.wiesler.Classifier::num_buckets()].JML normal_behavior operation contract.0"))
               (branch "Post (num_buckets)"
                   (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "62")) (ifInst ""  (formula "64")))
                  (rule "expand_inInt" (formula "65") (term "0,1,0"))
                  (rule "replace_int_MAX" (formula "65") (term "1,0,0,1,0"))
                  (rule "replace_int_MIN" (formula "65") (term "0,1,0,1,0"))
                  (rule "andLeft" (formula "65"))
                  (rule "andLeft" (formula "65"))
                  (rule "andLeft" (formula "65"))
                  (rule "andLeft" (formula "65"))
                  (rule "eqSymm" (formula "67"))
                  (rule "inEqSimp_commuteLeq" (formula "66"))
                  (rule "assignment" (formula "120") (term "1"))
                   (builtin "One Step Simplification" (formula "120"))
                  (rule "variableDeclarationAssign" (formula "120") (term "1"))
                  (rule "variableDeclaration" (formula "120") (term "1") (newnames "var_5"))
                  (rule "applyEq" (formula "67") (term "0") (ifseqformula "33"))
                  (rule "eqSymm" (formula "67"))
                  (rule "applyEq" (formula "65") (term "0") (ifseqformula "67"))
                  (rule "applyEq" (formula "65") (term "0") (ifseqformula "66"))
                  (rule "applyEq" (formula "118") (term "0,1,0") (ifseqformula "65"))
                  (rule "assignmentSubtractionInt" (formula "118") (term "1"))
                  (branch "Overflow check"
                      (builtin "One Step Simplification" (formula "118"))
                     (rule "expand_inInt" (formula "118"))
                     (rule "replace_int_MIN" (formula "118") (term "0,1"))
                     (rule "replace_int_MAX" (formula "118") (term "1,0"))
                     (rule "polySimp_homoEq" (formula "60") (term "1,0"))
                     (rule "polySimp_homoEq" (formula "58"))
                     (rule "polySimp_homoEq" (formula "59") (term "0,1,0"))
                     (rule "polySimp_elimSub" (formula "118") (term "1,1"))
                     (rule "polySimp_elimSub" (formula "118") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0"))
                     (rule "polySimp_addComm1" (formula "60") (term "0,1,0"))
                     (rule "polySimp_addComm1" (formula "58") (term "0"))
                     (rule "polySimp_addComm0" (formula "118") (term "1,1"))
                     (rule "polySimp_addComm0" (formula "118") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "58") (term "0,0"))
                     (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,0"))
                     (rule "polySimp_mulAssoc" (formula "59") (term "0,1,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "59") (term "0,0,1,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "59") (term "0,1,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "59") (term "0,1,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,0,0"))
                     (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,0,0"))
                     (rule "add_literals" (formula "27") (term "0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "28"))
                     (rule "mul_literals" (formula "28") (term "1,0,0"))
                     (rule "add_literals" (formula "28") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0"))
                     (rule "inEqSimp_homoInEq0" (formula "57") (term "1,0,0"))
                     (rule "polySimp_pullOutFactor1" (formula "57") (term "0,1,0,0"))
                     (rule "add_literals" (formula "57") (term "1,0,1,0,0"))
                     (rule "times_zero_1" (formula "57") (term "0,1,0,0"))
                     (rule "qeq_literals" (formula "57") (term "1,0,0"))
                      (builtin "One Step Simplification" (formula "57"))
                     (rule "inEqSimp_homoInEq0" (formula "25"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                     (rule "polySimp_mulAssoc" (formula "25") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0"))
                     (rule "inEqSimp_homoInEq0" (formula "118") (term "1"))
                     (rule "mul_literals" (formula "118") (term "1,0,1"))
                     (rule "polySimp_addComm1" (formula "118") (term "0,1"))
                     (rule "polySimp_addComm0" (formula "118") (term "0,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "118") (term "0"))
                     (rule "polySimp_mulComm0" (formula "118") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "118") (term "1,0,0"))
                     (rule "polySimp_mulAssoc" (formula "118") (term "0,1,0,0"))
                     (rule "polySimp_mulComm0" (formula "118") (term "0,0,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "118") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "118") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "118") (term "0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "60") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "60") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "60") (term "1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "60") (term "1,1,1,0"))
                     (rule "polySimp_elimOne" (formula "60") (term "1,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "60") (term "0,1,1,0"))
                     (rule "polySimp_sepPosMonomial" (formula "58"))
                     (rule "polySimp_mulComm0" (formula "58") (term "1"))
                     (rule "polySimp_rightDist" (formula "58") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "58") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "58") (term "1,1"))
                     (rule "polySimp_mulAssoc" (formula "58") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "58") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "58") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "58") (term "0,1"))
                     (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "58"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0"))
                     (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "28") (term "0"))
                     (rule "add_literals" (formula "28") (term "1,1,0"))
                     (rule "times_zero_1" (formula "28") (term "1,0"))
                     (rule "add_zero_right" (formula "28") (term "0"))
                     (rule "applyEq" (formula "25") (term "0,1,0") (ifseqformula "58"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0"))
                     (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                     (rule "add_literals" (formula "25") (term "1,1,0"))
                     (rule "times_zero_1" (formula "25") (term "1,0"))
                     (rule "add_zero_right" (formula "25") (term "0"))
                     (rule "applyEq" (formula "47") (term "1,2,1,0,0,1,0") (ifseqformula "58"))
                     (rule "polySimp_addAssoc" (formula "47") (term "2,1,0,0,1,0"))
                     (rule "applyEq" (formula "24") (term "1") (ifseqformula "58"))
                     (rule "applyEq" (formula "11") (term "0") (ifseqformula "58"))
                     (rule "inEqSimp_homoInEq0" (formula "11"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0"))
                     (rule "applyEq" (formula "20") (term "0") (ifseqformula "58"))
                     (rule "inEqSimp_homoInEq1" (formula "20"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "20") (term "0"))
                     (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                     (rule "add_literals" (formula "20") (term "1,1,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0"))
                     (rule "add_zero_right" (formula "20") (term "0"))
                     (rule "applyEq" (formula "12") (term "0") (ifseqformula "58"))
                     (rule "inEqSimp_homoInEq1" (formula "12"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0"))
                     (rule "applyEq" (formula "52") (term "1") (ifseqformula "58"))
                     (rule "applyEq" (formula "60") (term "3,1,1,1,0") (ifseqformula "58"))
                     (rule "polySimp_sepNegMonomial" (formula "59") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "59") (term "0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "59") (term "0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,0,0"))
                     (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "118") (term "1"))
                     (rule "polySimp_mulComm0" (formula "118") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "118") (term "1,1"))
                     (rule "mul_literals" (formula "118") (term "0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "118") (term "1,1,1"))
                     (rule "polySimp_elimOne" (formula "118") (term "1,1,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "118") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "118") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "118") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                     (rule "mul_literals" (formula "28") (term "1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                     (rule "polySimp_elimOne" (formula "25") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                     (rule "polySimp_elimOne" (formula "11") (term "0"))
                     (rule "inEqSimp_invertInEq0" (formula "20"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                     (rule "times_zero_2" (formula "20") (term "1"))
                     (rule "polySimp_elimOne" (formula "20") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                     (rule "polySimp_elimOne" (formula "12") (term "0"))
                     (rule "inEqSimp_subsumption1" (formula "118") (term "1") (ifseqformula "51"))
                     (rule "inEqSimp_homoInEq0" (formula "118") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "118") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "118") (term "1,0,0,1"))
                     (rule "mul_literals" (formula "118") (term "0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "118") (term "0,0,1"))
                     (rule "polySimp_addComm0" (formula "118") (term "0,0,0,1"))
                     (rule "polySimp_pullOutFactor1b" (formula "118") (term "0,0,1"))
                     (rule "add_literals" (formula "118") (term "1,1,0,0,1"))
                     (rule "times_zero_1" (formula "118") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "118") (term "0,0,1"))
                     (rule "qeq_literals" (formula "118") (term "0,1"))
                      (builtin "One Step Simplification" (formula "118"))
                     (rule "inEqSimp_leqRight" (formula "118"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "24"))
                     (rule "leq_literals" (formula "23") (term "0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "true_left" (formula "23"))
                     (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "28"))
                     (rule "leq_literals" (formula "21") (term "0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "20"))
                     (rule "leq_literals" (formula "11") (term "0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "inEqSimp_subsumption1" (formula "49") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "49") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0"))
                     (rule "add_literals" (formula "49") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "49") (term "1,0,0"))
                     (rule "add_zero_right" (formula "49") (term "0,0"))
                     (rule "qeq_literals" (formula "49") (term "0"))
                      (builtin "One Step Simplification" (formula "49"))
                     (rule "true_left" (formula "49"))
                     (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "11"))
                     (rule "times_zero_1" (formula "19") (term "0,0"))
                     (rule "add_zero_left" (formula "19") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                     (rule "polySimp_elimOne" (formula "19") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "24"))
                     (rule "leq_literals" (formula "19") (term "0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "true_left" (formula "19"))
                     (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "49"))
                     (rule "mul_literals" (formula "48") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "48") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                     (rule "polySimp_mulComm0" (formula "48") (term "1"))
                     (rule "polySimp_rightDist" (formula "48") (term "1"))
                     (rule "mul_literals" (formula "48") (term "0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "49"))
                     (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                     (rule "mul_literals" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,1,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                     (rule "mul_literals" (formula "1") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "24") (ifseqformula "1"))
                     (rule "qeq_literals" (formula "24") (term "0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "closeFalse" (formula "24"))
                  )
                  (branch "Usage"
                      (builtin "One Step Simplification" (formula "118"))
                     (rule "translateJavaSubInt" (formula "118") (term "0,1,0"))
                     (rule "polySimp_elimSub" (formula "118") (term "0,1,0"))
                     (rule "polySimp_addComm0" (formula "118") (term "0,1,0"))
                     (rule "variableDeclarationAssign" (formula "118") (term "1"))
                     (rule "variableDeclaration" (formula "118") (term "1") (newnames "var_6"))
                     (rule "assignment_read_attribute_final" (formula "118"))
                     (branch "Normal Execution (_storage != null)"
                         (builtin "One Step Simplification" (formula "118"))
                         (builtin "Use Operation Contract" (formula "118") (newnames "heapBefore_BucketPointers,self_208,exc_211,heapAfter_BucketPointers,anon_heap_BucketPointers") (contract "de.wiesler.BucketPointers[de.wiesler.BucketPointers::BucketPointers([I,int,int,[I)].JML normal_behavior operation contract.0"))
                        (branch "Post (BucketPointers)"
                            (builtin "One Step Simplification" (formula "120"))
                            (builtin "One Step Simplification" (formula "68"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "0,0,1,0,0,1,0,1") (ifseqformula "47"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "0,0,0,1,0,0,1,0,1") (ifseqformula "36"))
                           (rule "expand_inInt" (formula "68") (term "1,0,0,0,1,1,1,1,1,0,1"))
                           (rule "expand_inInt" (formula "68") (term "1,0,0,0,1,1,1,1,1,1,0,1"))
                           (rule "replace_int_MAX" (formula "68") (term "1,0,1,0,0,0,1,1,1,1,1,0,1"))
                           (rule "replace_int_MIN" (formula "68") (term "0,1,1,0,0,0,1,1,1,1,1,0,1"))
                           (rule "replace_int_MAX" (formula "68") (term "1,0,1,0,0,0,1,1,1,1,1,1,0,1"))
                           (rule "replace_int_MIN" (formula "68") (term "0,1,1,0,0,0,1,1,1,1,1,1,0,1"))
                           (rule "andLeft" (formula "68"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "1,1,0,0,1,0") (ifseqformula "68"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "0,1,1,0,0,1,0") (ifseqformula "47"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "0,0,1,1,0,0,1,0") (ifseqformula "36"))
                           (rule "andLeft" (formula "69"))
                           (rule "andLeft" (formula "69"))
                           (rule "andLeft" (formula "71"))
                           (rule "andLeft" (formula "70"))
                           (rule "andLeft" (formula "71"))
                           (rule "andLeft" (formula "70"))
                           (rule "andLeft" (formula "72"))
                           (rule "andLeft" (formula "74"))
                           (rule "andLeft" (formula "70"))
                           (rule "andLeft" (formula "73"))
                           (rule "andLeft" (formula "77"))
                           (rule "andLeft" (formula "71"))
                           (rule "notLeft" (formula "70"))
                           (rule "andLeft" (formula "78"))
                           (rule "notLeft" (formula "70"))
                           (rule "andLeft" (formula "78"))
                           (rule "orRight" (formula "81"))
                           (rule "orRight" (formula "81"))
                           (rule "translateJavaSubInt" (formula "68") (term "2,1,0"))
                           (rule "eqSymm" (formula "75"))
                           (rule "eqSymm" (formula "73"))
                           (rule "translateJavaSubInt" (formula "77") (term "0,0,1,0"))
                           (rule "translateJavaSubInt" (formula "77") (term "0,1,0,1,0"))
                           (rule "eqSymm" (formula "78") (term "1,0"))
                           (rule "translateJavaMulInt" (formula "68") (term "0,2,1,0"))
                           (rule "translateJavaCastInt" (formula "75") (term "0"))
                           (rule "translateJavaAddInt" (formula "77") (term "0,2,0,0,0,1,0"))
                           (rule "translateJavaAddInt" (formula "77") (term "0,2,0,0,1,0,1,0"))
                           (rule "translateJavaSubInt" (formula "77") (term "0,1,0"))
                           (rule "replace_known_right" (formula "70") (term "1,0") (ifseqformula "83"))
                            (builtin "One Step Simplification" (formula "70") (ifInst ""  (formula "81")) (ifInst ""  (formula "82")))
                           (rule "polySimp_elimSub" (formula "68") (term "2,1,0"))
                           (rule "mul_literals" (formula "68") (term "1,2,1,0"))
                           (rule "polySimp_elimSub" (formula "77") (term "0,1,0,1,0"))
                           (rule "polySimp_elimSub" (formula "77") (term "0,0,1,0"))
                           (rule "polySimp_elimSub" (formula "77") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "68") (term "0,2,1,0"))
                           (rule "polySimp_addComm0" (formula "77") (term "0,2,0,0,0,1,0,1,0"))
                           (rule "polySimp_addComm0" (formula "77") (term "0,0,1,0"))
                           (rule "polySimp_addComm0" (formula "68") (term "2,1,0"))
                           (rule "polySimp_addComm0" (formula "77") (term "0,0,1,0,1,0"))
                           (rule "polySimp_addComm0" (formula "77") (term "0,2,1,0,0,1,0"))
                           (rule "castedGetAny" (formula "75") (term "0"))
                           (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "77") (term "1,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "78") (term "1,1,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "78") (term "0,0,0,0"))
                           (rule "assignment" (formula "136") (term "1"))
                            (builtin "One Step Simplification" (formula "136"))
                           (rule "blockEmpty" (formula "136") (term "1"))
                            (builtin "Block Contract (Internal)" (formula "136") (newnames "exc_212,heap_Before_BLOCK,savedHeap_Before_BLOCK,o,f"))
                           (branch "Validity"
                               (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "16")))
                               (builtin "One Step Simplification" (formula "137"))
                              (rule "eqSymm" (formula "137") (term "0,0,1,0,1"))
                              (rule "variableDeclarationAssign" (formula "137") (term "1"))
                              (rule "variableDeclaration" (formula "137") (term "1") (newnames "exc_212_1"))
                              (rule "assignment" (formula "137") (term "1"))
                               (builtin "One Step Simplification" (formula "137"))
                              (rule "emptyStatement" (formula "137") (term "1"))
                               (builtin "One Step Simplification" (formula "137"))
                              (rule "emptyStatement" (formula "137") (term "1"))
                              (rule "applyEq" (formula "106") (term "1") (ifseqformula "73"))
                              (rule "applyEq" (formula "119") (term "0") (ifseqformula "73"))
                              (rule "eqSymm" (formula "119"))
                              (rule "applyEq" (formula "99") (term "0") (ifseqformula "73"))
                              (rule "applyEq" (formula "122") (term "1") (ifseqformula "73"))
                              (rule "applyEq" (formula "121") (term "1") (ifseqformula "73"))
                              (rule "applyEq" (formula "120") (term "1") (ifseqformula "73"))
                              (rule "applyEq" (formula "6") (term "1,0,1") (ifseqformula "73"))
                              (rule "applyEq" (formula "91") (term "0") (ifseqformula "73"))
                              (rule "applyEq" (formula "118") (term "0") (ifseqformula "73"))
                              (rule "eqSymm" (formula "118"))
                              (rule "applyEq" (formula "112") (term "0") (ifseqformula "73"))
                              (rule "eqSymm" (formula "112"))
                              (rule "applyEq" (formula "68") (term "0,1,0") (ifseqformula "73"))
                              (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "73"))
                              (rule "pullOutSelect" (formula "75") (term "1") (inst "selectSK=arr_2"))
                              (rule "simplifySelectOfAnonEQ" (formula "75") (ifseqformula "68"))
                               (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "136")))
                              (rule "replaceKnownSelect_taclet00000_0" (formula "75") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "75") (term "0,1,0,0") (ifseqformula "47"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "75") (term "0,0,1,0,0") (ifseqformula "36"))
                              (rule "applyEqReverse" (formula "75") (term "1") (ifseqformula "76"))
                              (rule "hideAuxiliaryEq" (formula "76"))
                              (rule "replace_known_left" (formula "75") (term "0,0,0,1,0,0") (ifseqformula "13"))
                               (builtin "One Step Simplification" (formula "75"))
                              (rule "elementOfArrayRangeConcrete" (formula "75") (term "0,0"))
                              (rule "eqSymm" (formula "75") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "75") (term "0,0,0,0") (ifseqformula "99"))
                               (builtin "One Step Simplification" (formula "75"))
                              (rule "eqSymm" (formula "75"))
                              (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "75"))
                              (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "75"))
                              (rule "hideAuxiliaryEq" (formula "75"))
                              (rule "applyEq" (formula "57") (term "1") (ifseqformula "58"))
                              (rule "commute_and_2" (formula "77") (term "0,0"))
                              (rule "commute_and" (formula "76") (term "0,0,0"))
                              (rule "commute_and" (formula "76") (term "1,0,0"))
                              (rule "tryEmpty" (formula "136") (term "1"))
                              (rule "blockEmptyLabel" (formula "136") (term "1"))
                              (rule "blockEmpty" (formula "136") (term "1"))
                              (rule "commute_and" (formula "77") (term "1,0,0,0"))
                              (rule "shift_paren_and" (formula "76") (term "0,0"))
                              (rule "commute_and_2" (formula "76") (term "0,0,0"))
                              (rule "methodCallEmpty" (formula "136") (term "1"))
                              (rule "shift_paren_and" (formula "77") (term "0,0,0"))
                              (rule "commute_and" (formula "77") (term "0,0,0,0"))
                              (rule "emptyModality" (formula "136") (term "1"))
                              (rule "andRight" (formula "136"))
                              (branch
                                  (builtin "One Step Simplification" (formula "136"))
                                 (rule "closeTrue" (formula "136"))
                              )
                              (branch
                                  (builtin "One Step Simplification" (formula "136"))
                                 (rule "closeTrue" (formula "136"))
                              )
                           )
                           (branch "Precondition"
                              (rule "andRight" (formula "136"))
                              (branch
                                  (builtin "One Step Simplification" (formula "136") (ifInst ""  (formula "16")))
                                 (rule "closeTrue" (formula "136"))
                              )
                              (branch
                                  (builtin "One Step Simplification" (formula "136"))
                                 (rule "wellFormedAnonEQ" (formula "136") (ifseqformula "68"))
                                 (rule "wellFormedAnonEQ" (formula "136") (term "0") (ifseqformula "47"))
                                 (rule "wellFormedAnonEQ" (formula "136") (term "0,0") (ifseqformula "36"))
                                 (rule "replace_known_left" (formula "136") (term "1") (ifseqformula "67"))
                                  (builtin "One Step Simplification" (formula "136") (ifInst ""  (formula "7")) (ifInst ""  (formula "35")) (ifInst ""  (formula "46")))
                                 (rule "closeTrue" (formula "136"))
                              )
                           )
                           (branch "Usage"
                               (builtin "One Step Simplification" (formula "81"))
                               (builtin "One Step Simplification" (formula "137"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "81") (term "1,1,0") (ifseqformula "68"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "81") (term "0,1,1,0") (ifseqformula "47"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "81") (term "0,0,1,1,0") (ifseqformula "36"))
                              (rule "andLeft" (formula "81"))
                              (rule "andLeft" (formula "82"))
                              (rule "andLeft" (formula "81"))
                              (rule "eqSymm" (formula "84"))
                              (rule "translateJavaSubInt" (formula "84") (term "0,1"))
                              (rule "replace_known_left" (formula "82") (term "0") (ifseqformula "81"))
                               (builtin "One Step Simplification" (formula "82"))
                              (rule "true_left" (formula "82"))
                              (rule "polySimp_elimSub" (formula "83") (term "0,1"))
                              (rule "polySimp_addComm0" (formula "83") (term "0,1"))
                              (rule "applyEq" (formula "121") (term "0") (ifseqformula "73"))
                              (rule "eqSymm" (formula "121"))
                              (rule "applyEq" (formula "6") (term "1,0,1") (ifseqformula "73"))
                              (rule "applyEq" (formula "122") (term "1") (ifseqformula "73"))
                              (rule "applyEq" (formula "108") (term "1") (ifseqformula "73"))
                              (rule "applyEq" (formula "101") (term "0") (ifseqformula "73"))
                              (rule "applyEq" (formula "120") (term "0") (ifseqformula "73"))
                              (rule "eqSymm" (formula "120"))
                              (rule "applyEq" (formula "6") (term "0,0") (ifseqformula "73"))
                              (rule "applyEq" (formula "114") (term "0") (ifseqformula "73"))
                              (rule "eqSymm" (formula "114"))
                              (rule "applyEq" (formula "93") (term "0") (ifseqformula "73"))
                              (rule "applyEq" (formula "124") (term "1") (ifseqformula "73"))
                              (rule "applyEq" (formula "123") (term "1") (ifseqformula "73"))
                              (rule "applyEq" (formula "68") (term "0,1,0") (ifseqformula "73"))
                              (rule "applyEq" (formula "83") (term "1,0") (ifseqformula "72"))
                              (rule "pullOutSelect" (formula "75") (term "1") (inst "selectSK=arr_2"))
                              (rule "simplifySelectOfAnonEQ" (formula "75") (ifseqformula "68"))
                               (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "138")))
                              (rule "replaceKnownSelect_taclet00000_0" (formula "75") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "75") (term "0,1,0,0") (ifseqformula "47"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "75") (term "0,0,1,0,0") (ifseqformula "36"))
                              (rule "applyEqReverse" (formula "75") (term "1") (ifseqformula "76"))
                              (rule "hideAuxiliaryEq" (formula "76"))
                              (rule "replace_known_left" (formula "75") (term "0,0,0,1,0,0") (ifseqformula "13"))
                               (builtin "One Step Simplification" (formula "75"))
                              (rule "elementOfArrayRangeConcrete" (formula "75") (term "0,0"))
                              (rule "eqSymm" (formula "75") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "75") (term "0,0,0,0") (ifseqformula "101"))
                               (builtin "One Step Simplification" (formula "75"))
                              (rule "eqSymm" (formula "75"))
                              (rule "applyEqReverse" (formula "58") (term "0") (ifseqformula "75"))
                              (rule "applyEqReverse" (formula "57") (term "1") (ifseqformula "75"))
                              (rule "hideAuxiliaryEq" (formula "75"))
                              (rule "applyEq" (formula "57") (term "1") (ifseqformula "58"))
                              (rule "commute_and_2" (formula "77") (term "0,0"))
                              (rule "commute_and" (formula "76") (term "0,0,0"))
                              (rule "commute_and" (formula "76") (term "1,0,0"))
                              (rule "commute_and" (formula "77") (term "1,0,0,0"))
                              (rule "elim_double_block_2" (formula "138") (term "1"))
                              (rule "shift_paren_and" (formula "76") (term "0,0"))
                              (rule "commute_and_2" (formula "76") (term "0,0,0"))
                              (rule "shift_paren_and" (formula "77") (term "0,0,0"))
                              (rule "commute_and" (formula "77") (term "0,0,0,0"))
                              (rule "ifUnfold" (formula "138") (term "1") (inst "#boolv=x"))
                              (rule "variableDeclaration" (formula "138") (term "1") (newnames "x"))
                              (rule "inequality_comparison_simple" (formula "138") (term "1"))
                               (builtin "One Step Simplification" (formula "138"))
                              (rule "replace_known_left" (formula "138") (term "0,0,1,0") (ifseqformula "80"))
                               (builtin "One Step Simplification" (formula "138"))
                              (rule "ifSplit" (formula "138"))
                              (branch "if x true"
                                  (builtin "One Step Simplification" (formula "139"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                              (branch "if x false"
                                  (builtin "One Step Simplification" (formula "139"))
                                  (builtin "One Step Simplification" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "blockEmpty" (formula "138") (term "1"))
                                  (builtin "Block Contract (Internal)" (formula "138") (newnames "exc_0,heap_Before_BLOCK_0,savedHeap_Before_BLOCK_0,o,f"))
                                 (branch "Validity"
                                     (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "16")))
                                     (builtin "One Step Simplification" (formula "139"))
                                    (rule "eqSymm" (formula "139") (term "0,0,1,0,1"))
                                    (rule "variableDeclarationAssign" (formula "139") (term "1"))
                                    (rule "variableDeclaration" (formula "139") (term "1") (newnames "exc_0_1"))
                                    (rule "assignment" (formula "139") (term "1"))
                                     (builtin "One Step Simplification" (formula "139"))
                                    (rule "emptyStatement" (formula "139") (term "1"))
                                     (builtin "One Step Simplification" (formula "139"))
                                    (rule "emptyStatement" (formula "139") (term "1"))
                                    (rule "tryEmpty" (formula "139") (term "1"))
                                    (rule "blockEmptyLabel" (formula "139") (term "1"))
                                    (rule "blockEmpty" (formula "139") (term "1"))
                                    (rule "methodCallEmpty" (formula "139") (term "1"))
                                    (rule "emptyModality" (formula "139") (term "1"))
                                    (rule "andRight" (formula "139"))
                                    (branch
                                        (builtin "One Step Simplification" (formula "139"))
                                       (rule "closeTrue" (formula "139"))
                                    )
                                    (branch
                                        (builtin "One Step Simplification" (formula "139"))
                                       (rule "closeTrue" (formula "139"))
                                    )
                                 )
                                 (branch "Precondition"
                                    (rule "andRight" (formula "138"))
                                    (branch
                                        (builtin "One Step Simplification" (formula "138") (ifInst ""  (formula "16")))
                                       (rule "closeTrue" (formula "138"))
                                    )
                                    (branch
                                        (builtin "One Step Simplification" (formula "138"))
                                       (rule "wellFormedAnonEQ" (formula "138") (ifseqformula "68"))
                                       (rule "wellFormedAnonEQ" (formula "138") (term "0") (ifseqformula "47"))
                                       (rule "wellFormedAnonEQ" (formula "138") (term "0,0") (ifseqformula "36"))
                                       (rule "replace_known_left" (formula "138") (term "1") (ifseqformula "67"))
                                        (builtin "One Step Simplification" (formula "138") (ifInst ""  (formula "7")) (ifInst ""  (formula "35")) (ifInst ""  (formula "46")))
                                       (rule "closeTrue" (formula "138"))
                                    )
                                 )
                                 (branch "Usage"
                                     (builtin "One Step Simplification" (formula "139"))
                                     (builtin "One Step Simplification" (formula "83"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "83") (term "1,1,0") (ifseqformula "68"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "83") (term "0,1,1,0") (ifseqformula "47"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "83") (term "0,0,1,1,0") (ifseqformula "36"))
                                    (rule "andLeft" (formula "83"))
                                    (rule "andLeft" (formula "84"))
                                    (rule "andLeft" (formula "83"))
                                    (rule "andLeft" (formula "85"))
                                    (rule "replace_known_left" (formula "84") (term "0") (ifseqformula "83"))
                                     (builtin "One Step Simplification" (formula "84"))
                                    (rule "true_left" (formula "84"))
                                    (rule "elim_double_block_2" (formula "142") (term "1"))
                                    (rule "ifUnfold" (formula "142") (term "1") (inst "#boolv=x"))
                                    (rule "variableDeclaration" (formula "142") (term "1") (newnames "x_1"))
                                    (rule "inequality_comparison_simple" (formula "142") (term "1"))
                                     (builtin "One Step Simplification" (formula "142"))
                                    (rule "replace_known_left" (formula "142") (term "0,0,1,0") (ifseqformula "83"))
                                     (builtin "One Step Simplification" (formula "142"))
                                    (rule "arrayLengthIsAShort" (formula "24") (term "0"))
                                    (rule "expand_inShort" (formula "24"))
                                    (rule "replace_short_MIN" (formula "24") (term "0,1"))
                                    (rule "replace_short_MAX" (formula "24") (term "1,0"))
                                    (rule "andLeft" (formula "24"))
                                    (rule "inEqSimp_commuteLeq" (formula "24"))
                                    (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                                    (rule "arrayLengthIsAShort" (formula "26") (term "0"))
                                    (rule "expand_inShort" (formula "26"))
                                    (rule "replace_short_MIN" (formula "26") (term "0,1"))
                                    (rule "replace_short_MAX" (formula "26") (term "1,0"))
                                    (rule "andLeft" (formula "26"))
                                    (rule "inEqSimp_commuteLeq" (formula "27"))
                                    (rule "applyEq" (formula "27") (term "0") (ifseqformula "28"))
                                    (rule "qeq_literals" (formula "27"))
                                    (rule "true_left" (formula "27"))
                                    (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                    (rule "leq_literals" (formula "26"))
                                    (rule "true_left" (formula "26"))
                                    (rule "arrayLengthNotNegative" (formula "26") (term "0"))
                                    (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                                    (rule "qeq_literals" (formula "26"))
                                    (rule "true_left" (formula "26"))
                                    (rule "ifSplit" (formula "142"))
                                    (branch "if x_1 true"
                                        (builtin "One Step Simplification" (formula "143"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "if x_1 false"
                                        (builtin "One Step Simplification" (formula "143"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "blockEmpty" (formula "142") (term "1"))
                                        (builtin "Block Contract (Internal)" (formula "142") (newnames "exc_1,heap_Before_BLOCK_1,savedHeap_Before_BLOCK_1,o,f"))
                                       (branch "Validity"
                                           (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "16")))
                                           (builtin "One Step Simplification" (formula "143"))
                                          (rule "eqSymm" (formula "143") (term "0,0,1,0,1"))
                                          (rule "variableDeclarationAssign" (formula "143") (term "1"))
                                          (rule "variableDeclaration" (formula "143") (term "1") (newnames "exc_1_1"))
                                          (rule "assignment" (formula "143") (term "1"))
                                           (builtin "One Step Simplification" (formula "143"))
                                          (rule "emptyStatement" (formula "143") (term "1"))
                                           (builtin "One Step Simplification" (formula "143"))
                                          (rule "emptyStatement" (formula "143") (term "1"))
                                          (rule "tryEmpty" (formula "143") (term "1"))
                                          (rule "blockEmptyLabel" (formula "143") (term "1"))
                                          (rule "blockEmpty" (formula "143") (term "1"))
                                          (rule "methodCallEmpty" (formula "143") (term "1"))
                                          (rule "emptyModality" (formula "143") (term "1"))
                                          (rule "andRight" (formula "143"))
                                          (branch
                                              (builtin "One Step Simplification" (formula "143"))
                                             (rule "closeTrue" (formula "143"))
                                          )
                                          (branch
                                              (builtin "One Step Simplification" (formula "143"))
                                             (rule "closeTrue" (formula "143"))
                                          )
                                       )
                                       (branch "Precondition"
                                          (rule "andRight" (formula "142"))
                                          (branch
                                              (builtin "One Step Simplification" (formula "142") (ifInst ""  (formula "16")))
                                             (rule "closeTrue" (formula "142"))
                                          )
                                          (branch
                                              (builtin "One Step Simplification" (formula "142"))
                                             (rule "wellFormedAnonEQ" (formula "142") (ifseqformula "68"))
                                             (rule "wellFormedAnonEQ" (formula "142") (term "0") (ifseqformula "47"))
                                             (rule "wellFormedAnonEQ" (formula "142") (term "0,0") (ifseqformula "36"))
                                             (rule "replace_known_left" (formula "142") (term "1") (ifseqformula "67"))
                                              (builtin "One Step Simplification" (formula "142") (ifInst ""  (formula "7")) (ifInst ""  (formula "35")) (ifInst ""  (formula "46")))
                                             (rule "closeTrue" (formula "142"))
                                          )
                                       )
                                       (branch "Usage"
                                           (builtin "One Step Simplification" (formula "87"))
                                           (builtin "One Step Simplification" (formula "143"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "87") (term "1,1,0") (ifseqformula "68"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "87") (term "0,1,1,0") (ifseqformula "47"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "87") (term "0,0,1,1,0") (ifseqformula "36"))
                                          (rule "expand_inInt" (formula "87") (term "1,0,0,1"))
                                          (rule "replace_int_MIN" (formula "87") (term "0,1,1,0,0,1"))
                                          (rule "replace_int_MAX" (formula "87") (term "1,0,1,0,0,1"))
                                          (rule "andLeft" (formula "87"))
                                          (rule "andLeft" (formula "87"))
                                          (rule "eqSymm" (formula "89") (term "1,0"))
                                          (rule "replace_known_left" (formula "88") (term "0") (ifseqformula "87"))
                                           (builtin "One Step Simplification" (formula "88"))
                                          (rule "true_left" (formula "88"))
                                          (rule "inEqSimp_commuteLeq" (formula "88") (term "0,0,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "88") (term "1,1,0,0"))
                                          (rule "applyEq" (formula "88") (term "1,1,0,0,0") (ifseqformula "33"))
                                          (rule "commute_and" (formula "88") (term "1,0,0"))
                                          (rule "commute_and" (formula "88") (term "0,0,0"))
                                          (rule "shift_paren_and" (formula "88") (term "0,0"))
                                          (rule "commute_and_2" (formula "88") (term "0,0,0"))
                                          (rule "elim_double_block_2" (formula "144") (term "1"))
                                          (rule "ifUnfold" (formula "144") (term "1") (inst "#boolv=x"))
                                          (rule "variableDeclaration" (formula "144") (term "1") (newnames "x_2"))
                                          (rule "inequality_comparison_simple" (formula "144") (term "1"))
                                           (builtin "One Step Simplification" (formula "144"))
                                          (rule "replace_known_left" (formula "144") (term "0,0,1,0") (ifseqformula "87"))
                                           (builtin "One Step Simplification" (formula "144"))
                                          (rule "seqGetAlphaCast" (formula "58") (term "0"))
                                          (rule "castedGetAny" (formula "58") (term "0"))
                                           (builtin "One Step Simplification" (formula "58"))
                                          (rule "true_left" (formula "58"))
                                          (rule "onlyCreatedObjectsAreReferencedFinal" (formula "115") (term "1") (ifseqformula "35") (ifseqformula "38"))
                                          (rule "onlyCreatedObjectsAreReferencedFinal" (formula "132") (term "1") (ifseqformula "36") (ifseqformula "39"))
                                          (rule "onlyCreatedObjectsAreReferencedFinal" (formula "129") (term "1") (ifseqformula "69") (ifseqformula "72"))
                                          (rule "onlyCreatedObjectsAreReferencedFinal" (formula "45") (term "0") (ifseqformula "10") (ifseqformula "18"))
                                          (rule "applyEq" (formula "45") (term "1,0,1") (ifseqformula "46"))
                                          (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "46"))
                                          (rule "onlyCreatedObjectsAreReferencedFinal" (formula "44") (term "0") (ifseqformula "10") (ifseqformula "18"))
                                          (rule "applyEq" (formula "44") (term "1,0,1") (ifseqformula "45"))
                                          (rule "applyEq" (formula "44") (term "0,0") (ifseqformula "45"))
                                          (rule "ifSplit" (formula "149"))
                                          (branch "if x_2 true"
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "if x_2 false"
                                              (builtin "One Step Simplification" (formula "1"))
                                              (builtin "One Step Simplification" (formula "150"))
                                             (rule "true_left" (formula "1"))
                                             (rule "blockEmpty" (formula "149") (term "1"))
                                             (rule "variableDeclarationAssign" (formula "149") (term "1"))
                                             (rule "variableDeclaration" (formula "149") (term "1") (newnames "overflow"))
                                             (rule "assignment_read_attribute_final" (formula "149"))
                                             (branch "Normal Execution (_storage != null)"
                                                 (builtin "One Step Simplification" (formula "149"))
                                                (rule "methodCallUnfoldArguments" (formula "149") (term "1"))
                                                (rule "variableDeclarationAssign" (formula "149") (term "1"))
                                                (rule "variableDeclaration" (formula "149") (term "1") (newnames "var_7"))
                                                (rule "assignment" (formula "149") (term "1"))
                                                 (builtin "One Step Simplification" (formula "149"))
                                                (rule "variableDeclarationAssign" (formula "149") (term "1"))
                                                (rule "variableDeclaration" (formula "149") (term "1") (newnames "var_8"))
                                                (rule "assignment" (formula "149") (term "1"))
                                                 (builtin "One Step Simplification" (formula "149"))
                                                (rule "variableDeclarationAssign" (formula "149") (term "1"))
                                                (rule "variableDeclaration" (formula "149") (term "1") (newnames "var_9"))
                                                (rule "assignment" (formula "149") (term "1"))
                                                 (builtin "One Step Simplification" (formula "149"))
                                                (rule "variableDeclarationAssign" (formula "149") (term "1"))
                                                (rule "variableDeclaration" (formula "149") (term "1") (newnames "var_10"))
                                                (rule "assignment" (formula "149") (term "1"))
                                                 (builtin "One Step Simplification" (formula "149"))
                                                (rule "variableDeclarationAssign" (formula "149") (term "1"))
                                                (rule "variableDeclaration" (formula "149") (term "1") (newnames "var_11"))
                                                (rule "assignment" (formula "149") (term "1"))
                                                 (builtin "One Step Simplification" (formula "149"))
                                                (rule "variableDeclarationAssign" (formula "149") (term "1"))
                                                (rule "variableDeclaration" (formula "149") (term "1") (newnames "var_12"))
                                                (rule "assignment_read_attribute_final" (formula "149"))
                                                (branch "Normal Execution (_storage != null)"
                                                    (builtin "One Step Simplification" (formula "149"))
                                                   (rule "variableDeclarationAssign" (formula "149") (term "1"))
                                                   (rule "variableDeclaration" (formula "149") (term "1") (newnames "var_13"))
                                                   (rule "assignment_read_attribute_final" (formula "149"))
                                                   (branch "Normal Execution (_storage != null)"
                                                       (builtin "One Step Simplification" (formula "149"))
                                                      (rule "variableDeclarationAssign" (formula "149") (term "1"))
                                                      (rule "variableDeclaration" (formula "149") (term "1") (newnames "var_14"))
                                                      (rule "assignment" (formula "149") (term "1"))
                                                       (builtin "One Step Simplification" (formula "149"))
                                                       (builtin "Use Operation Contract" (formula "149") (newnames "heapBefore_permute,exc_2,heapAfter_permute,anon_heap_permute") (contract "de.wiesler.Permute[de.wiesler.Permute::permute([I,int,int,de.wiesler.Classifier,de.wiesler.BucketPointers,[I,[I,[I)].JML normal_behavior operation contract.0"))
                                                      (branch "Post (permute)"
                                                          (builtin "One Step Simplification" (formula "151"))
                                                          (builtin "One Step Simplification" (formula "95"))
                                                         (rule "expand_inInt" (formula "95") (term "1,0,0,0,1,0,1"))
                                                         (rule "expand_inInt" (formula "95") (term "0,0,0,1,1,0,1"))
                                                         (rule "replace_int_MAX" (formula "95") (term "1,0,1,0,0,0,1,0,1"))
                                                         (rule "replace_int_MIN" (formula "95") (term "0,1,1,0,0,0,1,0,1"))
                                                         (rule "replace_int_MIN" (formula "95") (term "0,1,0,0,0,1,1,0,1"))
                                                         (rule "replace_int_MAX" (formula "95") (term "1,0,0,0,0,1,1,0,1"))
                                                         (rule "andLeft" (formula "95"))
                                                         (rule "andLeft" (formula "96"))
                                                         (rule "andLeft" (formula "96"))
                                                         (rule "andLeft" (formula "98"))
                                                         (rule "andLeft" (formula "97"))
                                                         (rule "andLeft" (formula "99"))
                                                         (rule "andLeft" (formula "98"))
                                                         (rule "andLeft" (formula "99"))
                                                         (rule "translateJavaSubInt" (formula "95") (term "2,0,0,1,0"))
                                                         (rule "eqSymm" (formula "97") (term "0,0,1,0"))
                                                         (rule "polySimp_elimSub" (formula "95") (term "2,0,0,1,0"))
                                                         (rule "mul_literals" (formula "95") (term "1,2,0,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "95") (term "2,0,0,1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "97") (term "0,0,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "97") (term "1,1,0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "98") (term "1,0,0"))
                                                         (rule "blockEmpty" (formula "158") (term "1"))
                                                         (rule "applyEq" (formula "97") (term "1,1,0,0,0") (ifseqformula "36"))
                                                         (rule "commuteUnion" (formula "95") (term "1,1,0"))
                                                         (rule "commuteUnion" (formula "95") (term "0,1,0"))
                                                         (rule "commuteUnion_2" (formula "95") (term "1,0"))
                                                         (rule "commute_and_2" (formula "97") (term "1,0"))
                                                         (rule "commute_and" (formula "98") (term "0,0"))
                                                         (rule "commute_and" (formula "97") (term "1,0,0"))
                                                         (rule "commute_and" (formula "97") (term "0,0,0"))
                                                         (rule "commute_and" (formula "97") (term "0,1,0"))
                                                         (rule "commute_and_2" (formula "97") (term "1,0"))
                                                         (rule "shift_paren_and" (formula "97") (term "0,0"))
                                                         (rule "commute_and_2" (formula "97") (term "0,0,0"))
                                                         (rule "associativeLawUnion" (formula "95") (term "0,1,0"))
                                                         (rule "associativeLawUnion" (formula "95") (term "0,1,0"))
                                                          (builtin "Use Operation Contract" (formula "158") (newnames "heapBefore_cleanup,exc_3,heapAfter_cleanup,anon_heap_cleanup") (contract "de.wiesler.Cleanup[de.wiesler.Cleanup::cleanup([I,int,int,de.wiesler.Buffers,[I,de.wiesler.BucketPointers,de.wiesler.Classifier,[I)].JML normal_behavior operation contract.0"))
                                                         (branch "Post (cleanup)"
                                                             (builtin "One Step Simplification" (formula "160"))
                                                             (builtin "Block Contract (Internal)" (formula "160") (newnames "exc_4,heap_Before_BLOCK_2,savedHeap_Before_BLOCK_2,o,f"))
                                                            (branch "Validity"
                                                                (builtin "One Step Simplification" (formula "104"))
                                                                (builtin "One Step Simplification" (formula "105") (ifInst ""  (formula "19")))
                                                                (builtin "One Step Simplification" (formula "161"))
                                                               (rule "expand_inInt" (formula "104") (term "0,0,1,1,0,1"))
                                                               (rule "expand_inInt" (formula "104") (term "1,0,0,0,1,0,1"))
                                                               (rule "replace_int_MAX" (formula "104") (term "1,0,0,0,1,1,0,1"))
                                                               (rule "replace_int_MIN" (formula "104") (term "0,1,0,0,1,1,0,1"))
                                                               (rule "replace_int_MAX" (formula "104") (term "1,0,1,0,0,0,1,0,1"))
                                                               (rule "replace_int_MIN" (formula "104") (term "0,1,1,0,0,0,1,0,1"))
                                                               (rule "andLeft" (formula "104"))
                                                               (rule "andLeft" (formula "105"))
                                                               (rule "andLeft" (formula "105"))
                                                               (rule "andLeft" (formula "105"))
                                                               (rule "eqSymm" (formula "164") (term "0,0,1,0,1"))
                                                               (rule "translateJavaSubInt" (formula "104") (term "2,1,0"))
                                                               (rule "translateJavaAddInt" (formula "106") (term "0,1,0"))
                                                               (rule "translateJavaAddInt" (formula "105") (term "4,0,0,1,0"))
                                                               (rule "translateJavaAddInt" (formula "105") (term "0,2,5,0,1,1,0"))
                                                               (rule "translateJavaAddInt" (formula "105") (term "3,0,0,1,0"))
                                                               (rule "translateJavaAddInt" (formula "105") (term "0,2,1,4,0,0,1,0"))
                                                               (rule "polySimp_elimSub" (formula "104") (term "2,1,0"))
                                                               (rule "mul_literals" (formula "104") (term "1,2,1,0"))
                                                               (rule "polySimp_addComm0" (formula "106") (term "0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "105") (term "0,2,5,0,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "105") (term "0,2,1,4,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "104") (term "2,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "105") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "106") (term "1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "105") (term "1,1,0,0"))
                                                               (rule "variableDeclarationAssign" (formula "164") (term "1"))
                                                               (rule "variableDeclaration" (formula "164") (term "1") (newnames "exc_4_1"))
                                                               (rule "assignment" (formula "164") (term "1"))
                                                                (builtin "One Step Simplification" (formula "164"))
                                                               (rule "emptyStatement" (formula "164") (term "1"))
                                                                (builtin "One Step Simplification" (formula "164"))
                                                               (rule "emptyStatement" (formula "164") (term "1"))
                                                               (rule "applyEq" (formula "105") (term "1,1,0,0,0") (ifseqformula "36"))
                                                               (rule "commute_and" (formula "106") (term "0,0"))
                                                               (rule "commute_and" (formula "105") (term "1,0,0"))
                                                               (rule "commute_and" (formula "105") (term "0,0,0"))
                                                               (rule "shift_paren_and" (formula "105") (term "0,0"))
                                                               (rule "commute_and_2" (formula "105") (term "0,0,0"))
                                                               (rule "tryEmpty" (formula "164") (term "1"))
                                                               (rule "blockEmptyLabel" (formula "164") (term "1"))
                                                               (rule "blockEmpty" (formula "164") (term "1"))
                                                               (rule "methodCallEmpty" (formula "164") (term "1"))
                                                               (rule "emptyModality" (formula "164") (term "1"))
                                                               (rule "andRight" (formula "164"))
                                                               (branch
                                                                   (builtin "One Step Simplification" (formula "164"))
                                                                  (rule "closeTrue" (formula "164"))
                                                               )
                                                               (branch
                                                                   (builtin "One Step Simplification" (formula "164"))
                                                                  (rule "closeTrue" (formula "164"))
                                                               )
                                                            )
                                                            (branch "Precondition"
                                                               (rule "andRight" (formula "160"))
                                                               (branch
                                                                   (builtin "One Step Simplification" (formula "104"))
                                                                   (builtin "One Step Simplification" (formula "160") (ifInst ""  (formula "19")))
                                                                  (rule "closeTrue" (formula "160"))
                                                               )
                                                               (branch
                                                                   (builtin "One Step Simplification" (formula "104"))
                                                                   (builtin "One Step Simplification" (formula "160"))
                                                                  (rule "expand_inInt" (formula "104") (term "1,0,0,0,1,0,1"))
                                                                  (rule "expand_inInt" (formula "104") (term "0,0,1,1,0,1"))
                                                                  (rule "replace_int_MAX" (formula "104") (term "1,0,1,0,0,0,1,0,1"))
                                                                  (rule "replace_int_MIN" (formula "104") (term "0,1,1,0,0,0,1,0,1"))
                                                                  (rule "replace_int_MAX" (formula "104") (term "1,0,0,0,1,1,0,1"))
                                                                  (rule "replace_int_MIN" (formula "104") (term "0,1,0,0,1,1,0,1"))
                                                                  (rule "andLeft" (formula "104"))
                                                                  (rule "wellFormedAnonEQ" (formula "161") (ifseqformula "104"))
                                                                  (rule "wellFormedAnonEQ" (formula "161") (term "0") (ifseqformula "95"))
                                                                  (rule "wellFormedAnonEQ" (formula "161") (term "0,0") (ifseqformula "73"))
                                                                  (rule "wellFormedAnonEQ" (formula "161") (term "0,0,0") (ifseqformula "52"))
                                                                  (rule "wellFormedAnonEQ" (formula "161") (term "0,0,0,0") (ifseqformula "39"))
                                                                  (rule "andLeft" (formula "105"))
                                                                  (rule "andLeft" (formula "105"))
                                                                  (rule "andLeft" (formula "105"))
                                                                  (rule "translateJavaSubInt" (formula "104") (term "2,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "106") (term "0,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "105") (term "4,0,0,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "105") (term "3,0,0,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "105") (term "0,2,5,0,1,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "105") (term "0,2,1,4,0,0,1,0"))
                                                                  (rule "replace_known_left" (formula "163") (term "1,0,0,0") (ifseqformula "51"))
                                                                   (builtin "One Step Simplification" (formula "163") (ifInst ""  (formula "10")) (ifInst ""  (formula "38")) (ifInst ""  (formula "72")) (ifInst ""  (formula "94")) (ifInst ""  (formula "103")))
                                                                  (rule "closeTrue" (formula "163"))
                                                               )
                                                            )
                                                            (branch "Usage"
                                                                (builtin "One Step Simplification" (formula "104"))
                                                                (builtin "One Step Simplification" (formula "161"))
                                                                (builtin "One Step Simplification" (formula "105"))
                                                               (rule "expand_inInt" (formula "104") (term "0,0,1,1,0,1"))
                                                               (rule "expand_inInt" (formula "104") (term "1,0,0,0,1,0,1"))
                                                               (rule "replace_int_MAX" (formula "104") (term "1,0,0,0,1,1,0,1"))
                                                               (rule "replace_int_MIN" (formula "104") (term "0,1,0,0,1,1,0,1"))
                                                               (rule "replace_int_MAX" (formula "104") (term "1,0,1,0,0,0,1,0,1"))
                                                               (rule "replace_int_MIN" (formula "104") (term "0,1,1,0,0,0,1,0,1"))
                                                               (rule "andLeft" (formula "105"))
                                                               (rule "andLeft" (formula "104"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "106") (term "1,1") (ifseqformula "104"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "106") (term "0,1,1") (ifseqformula "95"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "106") (term "0,0,1,1") (ifseqformula "73"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "106") (term "0,0,0,1,1") (ifseqformula "52"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "106") (term "0,0,0,0,1,1") (ifseqformula "39"))
                                                               (rule "andLeft" (formula "105"))
                                                               (rule "andLeft" (formula "107"))
                                                               (rule "andLeft" (formula "105"))
                                                               (rule "andLeft" (formula "105"))
                                                               (rule "translateJavaSubInt" (formula "104") (term "2,1,0"))
                                                               (rule "translateJavaAddInt" (formula "105") (term "0,2,1,4,0,0,1,0"))
                                                               (rule "translateJavaAddInt" (formula "106") (term "0,1,0"))
                                                               (rule "translateJavaAddInt" (formula "105") (term "0,2,5,0,1,1,0"))
                                                               (rule "translateJavaAddInt" (formula "105") (term "3,0,0,1,0"))
                                                               (rule "translateJavaAddInt" (formula "105") (term "4,0,0,1,0"))
                                                               (rule "replace_known_left" (formula "109") (term "0") (ifseqformula "108"))
                                                                (builtin "One Step Simplification" (formula "109"))
                                                               (rule "true_left" (formula "109"))
                                                               (rule "polySimp_elimSub" (formula "104") (term "2,1,0"))
                                                               (rule "mul_literals" (formula "104") (term "1,2,1,0"))
                                                               (rule "polySimp_addComm0" (formula "106") (term "0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "105") (term "0,2,5,0,1,1,0"))
                                                               (rule "polySimp_addComm0" (formula "105") (term "0,2,1,4,0,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "104") (term "2,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "105") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "105") (term "1,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "106") (term "1,0,0"))
                                                               (rule "applyEq" (formula "109") (term "2,0") (ifseqformula "36"))
                                                               (rule "applyEq" (formula "105") (term "1,1,0,0,0") (ifseqformula "36"))
                                                               (rule "commute_and" (formula "106") (term "0,0"))
                                                               (rule "commute_and" (formula "105") (term "1,0,0"))
                                                               (rule "commute_and" (formula "105") (term "0,0,0"))
                                                               (rule "elim_double_block_2" (formula "165") (term "1"))
                                                               (rule "shift_paren_and" (formula "105") (term "0,0"))
                                                               (rule "commute_and_2" (formula "105") (term "0,0,0"))
                                                                (builtin "Use Dependency Contract" (formula "69") (ifInst ""  (formula "165") (term "1,0,0,1")) (ifInst ""  (formula "52")) (ifInst ""  (formula "39")) (contract "de.wiesler.Classifier[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                               (rule "wellFormedAnonEQ" (formula "110") (term "1,1,0,0,0") (ifseqformula "52"))
                                                               (rule "wellFormedAnonEQ" (formula "110") (term "0,1,1,0,0,0") (ifseqformula "39"))
                                                               (rule "replace_known_left" (formula "110") (term "1,0,0") (ifseqformula "21"))
                                                                (builtin "One Step Simplification" (formula "110") (ifInst ""  (formula "163")) (ifInst ""  (formula "17")) (ifInst ""  (formula "10")) (ifInst ""  (formula "10")) (ifInst ""  (formula "38")) (ifInst ""  (formula "51")) (ifInst ""  (formula "69")) (ifInst ""  (formula "21")))
                                                               (rule "true_left" (formula "110"))
                                                               (rule "ifUnfold" (formula "165") (term "1") (inst "#boolv=x"))
                                                               (rule "variableDeclaration" (formula "165") (term "1") (newnames "x_3"))
                                                               (rule "inequality_comparison_simple" (formula "165") (term "1"))
                                                                (builtin "One Step Simplification" (formula "165"))
                                                               (rule "replace_known_left" (formula "165") (term "0,0,1,0") (ifseqformula "108"))
                                                                (builtin "One Step Simplification" (formula "165"))
                                                               (rule "ifSplit" (formula "165"))
                                                               (branch "if x_3 true"
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                               (branch "if x_3 false"
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                   (builtin "One Step Simplification" (formula "166"))
                                                                  (rule "true_left" (formula "1"))
                                                                  (rule "blockEmpty" (formula "165") (term "1"))
                                                                  (rule "emptyStatement" (formula "165") (term "1"))
                                                                   (builtin "Block Contract (Internal)" (formula "165") (newnames "exc_5,heap_Before_BLOCK_3,savedHeap_Before_BLOCK_3,o,f"))
                                                                  (branch "Validity"
                                                                      (builtin "One Step Simplification" (formula "110") (ifInst ""  (formula "19")))
                                                                      (builtin "One Step Simplification" (formula "166"))
                                                                     (rule "eqSymm" (formula "166") (term "0,0,1,0,1"))
                                                                     (rule "variableDeclarationAssign" (formula "166") (term "1"))
                                                                     (rule "variableDeclaration" (formula "166") (term "1") (newnames "exc_5_1"))
                                                                     (rule "assignment" (formula "166") (term "1"))
                                                                      (builtin "One Step Simplification" (formula "166"))
                                                                     (rule "emptyStatement" (formula "166") (term "1"))
                                                                      (builtin "One Step Simplification" (formula "166"))
                                                                     (rule "emptyStatement" (formula "166") (term "1"))
                                                                     (rule "tryEmpty" (formula "166") (term "1"))
                                                                     (rule "blockEmptyLabel" (formula "166") (term "1"))
                                                                     (rule "blockEmpty" (formula "166") (term "1"))
                                                                     (rule "methodCallEmpty" (formula "166") (term "1"))
                                                                     (rule "emptyModality" (formula "166") (term "1"))
                                                                     (rule "andRight" (formula "166"))
                                                                     (branch
                                                                         (builtin "One Step Simplification" (formula "166"))
                                                                        (rule "closeTrue" (formula "166"))
                                                                     )
                                                                     (branch
                                                                         (builtin "One Step Simplification" (formula "166"))
                                                                        (rule "closeTrue" (formula "166"))
                                                                     )
                                                                  )
                                                                  (branch "Precondition"
                                                                     (rule "andRight" (formula "165"))
                                                                     (branch
                                                                         (builtin "One Step Simplification" (formula "165") (ifInst ""  (formula "19")))
                                                                        (rule "closeTrue" (formula "165"))
                                                                     )
                                                                     (branch
                                                                         (builtin "One Step Simplification" (formula "165"))
                                                                        (rule "wellFormedAnonEQ" (formula "165") (ifseqformula "104"))
                                                                        (rule "wellFormedAnonEQ" (formula "165") (term "0") (ifseqformula "95"))
                                                                        (rule "wellFormedAnonEQ" (formula "165") (term "0,0") (ifseqformula "73"))
                                                                        (rule "wellFormedAnonEQ" (formula "165") (term "0,0,0") (ifseqformula "52"))
                                                                        (rule "wellFormedAnonEQ" (formula "165") (term "0,0,0,0") (ifseqformula "39"))
                                                                        (rule "replace_known_left" (formula "165") (term "1,0") (ifseqformula "94"))
                                                                         (builtin "One Step Simplification" (formula "165") (ifInst ""  (formula "10")) (ifInst ""  (formula "38")) (ifInst ""  (formula "51")) (ifInst ""  (formula "72")) (ifInst ""  (formula "103")))
                                                                        (rule "closeTrue" (formula "165"))
                                                                     )
                                                                  )
                                                                  (branch "Usage"
                                                                      (builtin "One Step Simplification" (formula "110"))
                                                                      (builtin "One Step Simplification" (formula "166"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "110") (term "1,1,0") (ifseqformula "104"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "110") (term "0,1,1,0") (ifseqformula "95"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "110") (term "0,0,1,1,0") (ifseqformula "73"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "110") (term "0,0,0,1,1,0") (ifseqformula "52"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "110") (term "0,0,0,0,1,1,0") (ifseqformula "39"))
                                                                     (rule "andLeft" (formula "110"))
                                                                     (rule "andLeft" (formula "110"))
                                                                     (rule "replace_known_left" (formula "111") (term "0") (ifseqformula "110"))
                                                                      (builtin "One Step Simplification" (formula "111"))
                                                                     (rule "true_left" (formula "111"))
                                                                     (rule "applyEq" (formula "111") (term "5,0") (ifseqformula "36"))
                                                                     (rule "elim_double_block_2" (formula "167") (term "1"))
                                                                     (rule "ifUnfold" (formula "167") (term "1") (inst "#boolv=x"))
                                                                     (rule "variableDeclaration" (formula "167") (term "1") (newnames "x_4"))
                                                                     (rule "inequality_comparison_simple" (formula "167") (term "1"))
                                                                      (builtin "One Step Simplification" (formula "167"))
                                                                     (rule "replace_known_left" (formula "167") (term "0,0,1,0") (ifseqformula "110"))
                                                                      (builtin "One Step Simplification" (formula "167"))
                                                                     (rule "ifSplit" (formula "167"))
                                                                     (branch "if x_4 true"
                                                                         (builtin "One Step Simplification" (formula "168"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "closeFalse" (formula "1"))
                                                                     )
                                                                     (branch "if x_4 false"
                                                                         (builtin "One Step Simplification" (formula "168"))
                                                                         (builtin "One Step Simplification" (formula "1"))
                                                                        (rule "true_left" (formula "1"))
                                                                        (rule "blockEmpty" (formula "167") (term "1"))
                                                                        (rule "emptyStatement" (formula "167") (term "1"))
                                                                         (builtin "Block Contract (Internal)" (formula "167") (newnames "exc_6,heap_Before_BLOCK_4,savedHeap_Before_BLOCK_4,o,f"))
                                                                        (branch "Validity"
                                                                            (builtin "One Step Simplification" (formula "112") (ifInst ""  (formula "19")))
                                                                            (builtin "One Step Simplification" (formula "168"))
                                                                           (rule "eqSymm" (formula "168") (term "0,0,1,0,1"))
                                                                           (rule "variableDeclarationAssign" (formula "168") (term "1"))
                                                                           (rule "variableDeclaration" (formula "168") (term "1") (newnames "exc_6_1"))
                                                                           (rule "assignment" (formula "168") (term "1"))
                                                                            (builtin "One Step Simplification" (formula "168"))
                                                                           (rule "emptyStatement" (formula "168") (term "1"))
                                                                            (builtin "One Step Simplification" (formula "168"))
                                                                           (rule "emptyStatement" (formula "168") (term "1"))
                                                                           (rule "tryEmpty" (formula "168") (term "1"))
                                                                           (rule "blockEmptyLabel" (formula "168") (term "1"))
                                                                           (rule "blockEmpty" (formula "168") (term "1"))
                                                                           (rule "methodCallEmpty" (formula "168") (term "1"))
                                                                           (rule "emptyModality" (formula "168") (term "1"))
                                                                           (rule "andRight" (formula "168"))
                                                                           (branch
                                                                               (builtin "One Step Simplification" (formula "168"))
                                                                              (rule "closeTrue" (formula "168"))
                                                                           )
                                                                           (branch
                                                                               (builtin "One Step Simplification" (formula "168"))
                                                                              (rule "closeTrue" (formula "168"))
                                                                           )
                                                                        )
                                                                        (branch "Precondition"
                                                                           (rule "andRight" (formula "167"))
                                                                           (branch
                                                                               (builtin "One Step Simplification" (formula "167") (ifInst ""  (formula "19")))
                                                                              (rule "closeTrue" (formula "167"))
                                                                           )
                                                                           (branch
                                                                               (builtin "One Step Simplification" (formula "167"))
                                                                              (rule "wellFormedAnonEQ" (formula "167") (ifseqformula "104"))
                                                                              (rule "wellFormedAnonEQ" (formula "167") (term "0") (ifseqformula "95"))
                                                                              (rule "wellFormedAnonEQ" (formula "167") (term "0,0") (ifseqformula "73"))
                                                                              (rule "wellFormedAnonEQ" (formula "167") (term "0,0,0") (ifseqformula "52"))
                                                                              (rule "wellFormedAnonEQ" (formula "167") (term "0,0,0,0") (ifseqformula "39"))
                                                                              (rule "replace_known_left" (formula "167") (term "1") (ifseqformula "103"))
                                                                               (builtin "One Step Simplification" (formula "167") (ifInst ""  (formula "10")) (ifInst ""  (formula "38")) (ifInst ""  (formula "51")) (ifInst ""  (formula "72")) (ifInst ""  (formula "94")))
                                                                              (rule "closeTrue" (formula "167"))
                                                                           )
                                                                        )
                                                                        (branch "Usage"
                                                                            (builtin "One Step Simplification" (formula "168"))
                                                                            (builtin "One Step Simplification" (formula "112"))
                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (term "1,1,0") (ifseqformula "104"))
                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (term "0,1,1,0") (ifseqformula "95"))
                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (term "0,0,1,1,0") (ifseqformula "73"))
                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (term "0,0,0,1,1,0") (ifseqformula "52"))
                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (term "0,0,0,0,1,1,0") (ifseqformula "39"))
                                                                           (rule "expand_inInt" (formula "112") (term "0,0,1"))
                                                                           (rule "replace_int_MIN" (formula "112") (term "0,1,0,0,1"))
                                                                           (rule "replace_int_MAX" (formula "112") (term "1,0,0,0,1"))
                                                                           (rule "andLeft" (formula "112"))
                                                                           (rule "andLeft" (formula "112"))
                                                                           (rule "replace_known_left" (formula "113") (term "0") (ifseqformula "112"))
                                                                            (builtin "One Step Simplification" (formula "113"))
                                                                           (rule "true_left" (formula "113"))
                                                                           (rule "inEqSimp_commuteLeq" (formula "113") (term "1,0,0"))
                                                                           (rule "commute_and" (formula "113") (term "0,0"))
                                                                           (rule "elim_double_block_2" (formula "169") (term "1"))
                                                                           (rule "ifUnfold" (formula "169") (term "1") (inst "#boolv=x"))
                                                                           (rule "variableDeclaration" (formula "169") (term "1") (newnames "x_5"))
                                                                           (rule "inequality_comparison_simple" (formula "169") (term "1"))
                                                                            (builtin "One Step Simplification" (formula "169"))
                                                                           (rule "replace_known_left" (formula "169") (term "0,0,1,0") (ifseqformula "112"))
                                                                            (builtin "One Step Simplification" (formula "169"))
                                                                           (rule "ifSplit" (formula "169"))
                                                                           (branch "if x_5 true"
                                                                               (builtin "One Step Simplification" (formula "170"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "closeFalse" (formula "1"))
                                                                           )
                                                                           (branch "if x_5 false"
                                                                               (builtin "One Step Simplification" (formula "170"))
                                                                               (builtin "One Step Simplification" (formula "1"))
                                                                              (rule "true_left" (formula "1"))
                                                                              (rule "blockEmpty" (formula "169") (term "1"))
                                                                              (rule "emptyStatement" (formula "169") (term "1"))
                                                                              (rule "methodCallEmpty" (formula "169") (term "1"))
                                                                              (rule "tryEmpty" (formula "169") (term "1"))
                                                                              (rule "emptyModality" (formula "169") (term "1"))
                                                                              (rule "andRight" (formula "169"))
                                                                              (branch
                                                                                 (rule "andRight" (formula "169"))
                                                                                 (branch
                                                                                     (builtin "One Step Simplification" (formula "169"))
                                                                                    (rule "polySimp_homoEq" (formula "106") (term "1,0"))
                                                                                    (rule "polySimp_homoEq" (formula "65") (term "1,0"))
                                                                                    (rule "polySimp_homoEq" (formula "64") (term "0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "106") (term "1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "65") (term "0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "106") (term "1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "106") (term "0,1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "64") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "64") (term "0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "64") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "64") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "106") (term "0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "106") (term "0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "105") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "93") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "81") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "97") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_gtToGeq" (formula "31"))
                                                                                    (rule "mul_literals" (formula "31") (term "1,0,0"))
                                                                                    (rule "add_literals" (formula "31") (term "0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "30") (term "0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "28"))
                                                                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "28") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "62") (term "1,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "62") (term "0,1,0,0"))
                                                                                    (rule "add_literals" (formula "62") (term "1,0,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "62") (term "0,1,0,0"))
                                                                                    (rule "qeq_literals" (formula "62") (term "1,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "62"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "81") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "81") (term "1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "81") (term "1,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "81") (term "1,1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "81") (term "0,1,0,1,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "81") (term "0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "81") (term "0,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "81") (term "0,0,1,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "81") (term "0,0,1,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "81") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "81") (term "0,0,1,0"))
                                                                                    (rule "polySimp_sepPosMonomial" (formula "65") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "65") (term "1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "65") (term "1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "65") (term "0,1,1,0"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "106") (term "1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "106") (term "0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "106") (term "0,1,0"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "64") (term "0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "64") (term "0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "64") (term "0,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "105") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "105") (term "1,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "105") (term "0,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "105") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "105") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "93") (term "1,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "93") (term "0,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "93") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "93") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "81") (term "1,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "81") (term "0,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "81") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "97") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "97") (term "1,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "97") (term "0,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "97") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "97") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                                                    (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "31") (term "1"))
                                                                                    (rule "mul_literals" (formula "31") (term "0,1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                                                                    (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                                                    (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "81") (term "1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "81") (term "1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "81") (term "0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "81") (term "0,0,1,1,0"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "31"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                                                                    (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "23") (term "0,0"))
                                                                                    (rule "qeq_literals" (formula "23") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "23"))
                                                                                    (rule "true_left" (formula "23"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "22"))
                                                                                    (rule "leq_literals" (formula "13") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "13"))
                                                                                    (rule "true_left" (formula "13"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "24"))
                                                                                    (rule "leq_literals" (formula "23") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "23"))
                                                                                    (rule "true_left" (formula "23"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "22"))
                                                                                    (rule "polySimp_mulComm0" (formula "24") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "24") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                                                    (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                                                    (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "24"))
                                                                                    (rule "leq_literals" (formula "13") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "13"))
                                                                                    (rule "true_left" (formula "13"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "54"))
                                                                                    (rule "polySimp_mulComm0" (formula "53") (term "0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "53"))
                                                                                    (rule "polySimp_mulLiterals" (formula "53") (term "1"))
                                                                                    (rule "polySimp_elimOne" (formula "53") (term "1"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "53") (ifseqformula "28"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "53") (term "0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0"))
                                                                                    (rule "add_literals" (formula "53") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "53") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "53") (term "0,0"))
                                                                                    (rule "qeq_literals" (formula "53") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "53"))
                                                                                    (rule "true_left" (formula "53"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "25"))
                                                                                    (rule "mul_literals" (formula "13") (term "0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                                                    (rule "add_literals" (formula "13") (term "0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                                                    (rule "mul_literals" (formula "13") (term "1"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "21"))
                                                                                    (rule "leq_literals" (formula "13") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "13"))
                                                                                    (rule "true_left" (formula "13"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "54"))
                                                                                    (rule "mul_literals" (formula "52") (term "0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "52"))
                                                                                    (rule "mul_literals" (formula "52") (term "1"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "51"))
                                                                                    (rule "polySimp_mulComm0" (formula "53") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "53") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "53"))
                                                                                    (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "23"))
                                                                                    (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                                                    (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                                                    (rule "add_literals" (formula "28") (term "0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                                                    (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                                                    (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "28"))
                                                                                    (rule "leq_literals" (formula "12") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                                    (rule "true_left" (formula "12"))
                                                                                    (rule "inEqSimp_and_subsumption2" (formula "79") (term "0,0,0,0"))
                                                                                    (rule "leq_literals" (formula "79") (term "0,0,0,0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "79"))
                                                                                    (rule "inEqSimp_and_subsumption3" (formula "102") (term "0,0,0"))
                                                                                    (rule "leq_literals" (formula "102") (term "0,1,0,0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "102"))
                                                                                    (rule "inEqSimp_and_subsumption3" (formula "90") (term "0,0,0"))
                                                                                    (rule "leq_literals" (formula "90") (term "0,1,0,0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "90"))
                                                                                    (rule "inEqSimp_and_subsumption3" (formula "78") (term "0,0,0"))
                                                                                    (rule "leq_literals" (formula "78") (term "0,1,0,0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "78"))
                                                                                    (rule "inEqSimp_and_subsumption3" (formula "94") (term "0,0,0"))
                                                                                    (rule "leq_literals" (formula "94") (term "0,1,0,0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "94"))
                                                                                    (rule "inEqSimp_and_subsumption3" (formula "61") (term "0,0,0"))
                                                                                    (rule "leq_literals" (formula "61") (term "0,1,0,0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "61"))
                                                                                    (rule "inEqSimp_and_subsumption3" (formula "26") (term "0,0,0"))
                                                                                    (rule "leq_literals" (formula "26") (term "0,1,0,0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "26"))
                                                                                    (rule "nnf_imp2or" (formula "95") (term "0"))
                                                                                    (rule "nnf_imp2or" (formula "110") (term "0"))
                                                                                    (rule "nnf_imp2or" (formula "62") (term "0"))
                                                                                    (rule "nnf_imp2or" (formula "103") (term "0"))
                                                                                    (rule "nnf_imp2or" (formula "79") (term "0"))
                                                                                    (rule "nnf_imp2or" (formula "102") (term "0"))
                                                                                    (rule "nnf_imp2or" (formula "90") (term "0"))
                                                                                    (rule "nnf_imp2or" (formula "78") (term "0"))
                                                                                    (rule "nnf_imp2or" (formula "94") (term "0"))
                                                                                    (rule "nnf_imp2or" (formula "61") (term "0"))
                                                                                    (rule "nnf_imp2or" (formula "26") (term "0"))
                                                                                    (rule "nnf_notAnd" (formula "95") (term "0,0"))
                                                                                    (rule "inEqSimp_notGeq" (formula "95") (term "0,0,0"))
                                                                                    (rule "mul_literals" (formula "95") (term "1,0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "95") (term "0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "0,0,0"))
                                                                                    (rule "mul_literals" (formula "95") (term "1,0,0,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "95") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "95") (term "1,0,0,1,0,0"))
                                                                                    (rule "add_literals" (formula "95") (term "0,0,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "95") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "95") (term "1,1,0,0"))
                                                                                    (rule "nnf_notAnd" (formula "110") (term "0,0"))
                                                                                    (rule "inEqSimp_notGeq" (formula "110") (term "0,0,0"))
                                                                                    (rule "mul_literals" (formula "110") (term "1,0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "110") (term "0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "110") (term "0,0,0"))
                                                                                    (rule "mul_literals" (formula "110") (term "1,0,0,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "110") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "110") (term "1,0,0,1,0,0"))
                                                                                    (rule "add_literals" (formula "110") (term "0,0,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "110") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "110") (term "1,1,0,0"))
                                                                                    (rule "nnf_notAnd" (formula "62") (term "0,0"))
                                                                                    (rule "inEqSimp_notGeq" (formula "62") (term "0,0,0"))
                                                                                    (rule "mul_literals" (formula "62") (term "1,0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "62") (term "0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                                                                                    (rule "mul_literals" (formula "62") (term "1,0,0,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                                                                                    (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                                                                                    (rule "nnf_notAnd" (formula "103") (term "0,0"))
                                                                                    (rule "inEqSimp_notGeq" (formula "103") (term "0,0,0"))
                                                                                    (rule "mul_literals" (formula "103") (term "1,0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "103") (term "0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "103") (term "0,0,0"))
                                                                                    (rule "mul_literals" (formula "103") (term "1,0,0,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "103") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "103") (term "1,0,0,1,0,0"))
                                                                                    (rule "add_literals" (formula "103") (term "0,0,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "103") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "103") (term "1,1,0,0"))
                                                                                    (rule "nnf_notAnd" (formula "79") (term "0,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "79") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "1,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "79") (term "1,1,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "79") (term "1,1,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1,0,0"))
                                                                                    (rule "mul_literals" (formula "79") (term "0,1,1,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "79") (term "1,1,1,0,0"))
                                                                                    (rule "nnf_notAnd" (formula "102") (term "0,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "102") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "102") (term "1,0,0,1,0,0"))
                                                                                    (rule "add_literals" (formula "102") (term "0,0,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "102") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "102") (term "1,1,0,0"))
                                                                                    (rule "nnf_notAnd" (formula "90") (term "0,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "90") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "90") (term "1,0,0,1,0,0"))
                                                                                    (rule "add_literals" (formula "90") (term "0,0,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "90") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "90") (term "1,1,0,0"))
                                                                                    (rule "nnf_notAnd" (formula "78") (term "0,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "78") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "78") (term "1,0,0,1,0,0"))
                                                                                    (rule "add_literals" (formula "78") (term "0,0,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "78") (term "1,1,0,0"))
                                                                                    (rule "nnf_notAnd" (formula "94") (term "0,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "94") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "94") (term "1,0,0,1,0,0"))
                                                                                    (rule "add_literals" (formula "94") (term "0,0,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "94") (term "1,1,0,0"))
                                                                                    (rule "nnf_notAnd" (formula "61") (term "0,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "61") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "61") (term "1,0,0,1,0,0"))
                                                                                    (rule "add_literals" (formula "61") (term "0,0,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "61") (term "1,1,0,0"))
                                                                                    (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                                                                    (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "26") (term "1,0,0,1,0,0"))
                                                                                    (rule "add_literals" (formula "26") (term "0,0,1,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                                                                    (rule "mul_literals" (formula "26") (term "1,1,0,0"))
                                                                                    (rule "Definition_axiom_for_initialReadAreasCountBucketElements_in_de_wiesler_BucketPointers" (formula "88") (term "0") (inst "bucket=bucket"))
                                                                                     (builtin "One Step Simplification" (formula "88"))
                                                                                    (rule "expand_inInt" (formula "88") (term "1,0,0"))
                                                                                    (rule "replace_int_MAX" (formula "88") (term "1,0,1,0,0"))
                                                                                    (rule "replace_int_MIN" (formula "88") (term "0,1,1,0,0"))
                                                                                    (rule "translateJavaAddInt" (formula "88") (term "4,0,1,0"))
                                                                                    (rule "eqSymm" (formula "88") (term "1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "88") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,1,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "88") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "88") (term "1,1,0,0"))
                                                                                    (rule "applyEq" (formula "88") (term "1,4,1,1,0") (ifseqformula "76"))
                                                                                    (rule "polySimp_addAssoc" (formula "88") (term "4,1,1,0"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "88") (term "0,4,1,1,0"))
                                                                                    (rule "add_literals" (formula "88") (term "1,0,4,1,1,0"))
                                                                                    (rule "times_zero_1" (formula "88") (term "0,4,1,1,0"))
                                                                                    (rule "add_zero_left" (formula "88") (term "4,1,1,0"))
                                                                                    (rule "applyEq" (formula "88") (term "0,1,0,0,1,0,0,0") (ifseqformula "74"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "88") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "88") (term "1,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "88") (term "0,1,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "88") (term "1,1,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "88") (term "1,1,1,0,0,0"))
                                                                                    (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "80") (inst "b=b"))
                                                                                     (builtin "One Step Simplification" (formula "80"))
                                                                                    (rule "expand_inInt" (formula "80") (term "1,0,0,1"))
                                                                                    (rule "replace_int_MIN" (formula "80") (term "0,1,1,0,0,1"))
                                                                                    (rule "replace_int_MAX" (formula "80") (term "1,0,1,0,0,1"))
                                                                                    (rule "andLeft" (formula "80"))
                                                                                    (rule "andLeft" (formula "80"))
                                                                                    (rule "andLeft" (formula "80"))
                                                                                    (rule "andLeft" (formula "82"))
                                                                                    (rule "andLeft" (formula "80"))
                                                                                    (rule "andLeft" (formula "80"))
                                                                                    (rule "andLeft" (formula "82"))
                                                                                    (rule "andLeft" (formula "82"))
                                                                                    (rule "andLeft" (formula "82"))
                                                                                    (rule "translateJavaAddInt" (formula "86") (term "1"))
                                                                                    (rule "translateJavaCastInt" (formula "87") (term "0"))
                                                                                    (rule "translateJavaMulInt" (formula "81") (term "0"))
                                                                                    (rule "translateJavaMulInt" (formula "80") (term "1"))
                                                                                    (rule "translateJavaCastInt" (formula "84") (term "0"))
                                                                                    (rule "translateJavaCastInt" (formula "83") (term "1"))
                                                                                    (rule "polySimp_mulComm0" (formula "81") (term "0"))
                                                                                    (rule "polySimp_mulComm0" (formula "80") (term "1"))
                                                                                    (rule "polySimp_addComm0" (formula "86") (term "1"))
                                                                                    (rule "castedGetAny" (formula "87") (term "0"))
                                                                                    (rule "castedGetAny" (formula "84") (term "0"))
                                                                                    (rule "castedGetAny" (formula "83") (term "1"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "89") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,1,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "89") (term "1,1,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "89") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "82"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "80"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "83"))
                                                                                    (rule "applyEq" (formula "84") (term "1,0") (ifseqformula "74"))
                                                                                    (rule "applyEq" (formula "80") (term "0,0") (ifseqformula "74"))
                                                                                    (rule "applyEq" (formula "83") (term "1,0") (ifseqformula "74"))
                                                                                    (rule "applyEq" (formula "82") (term "0") (ifseqformula "76"))
                                                                                    (rule "applyEq" (formula "81") (term "0,0") (ifseqformula "74"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "81"))
                                                                                    (rule "applyEq" (formula "85") (term "0,0") (ifseqformula "76"))
                                                                                    (rule "applyEq" (formula "83") (term "1") (ifseqformula "76"))
                                                                                    (rule "applyEq" (formula "84") (term "0") (ifseqformula "60"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "84"))
                                                                                    (rule "polySimp_mulComm0" (formula "84") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "84") (term "1,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "84") (term "0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "84") (term "0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "84") (term "0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "84") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "84") (term "0"))
                                                                                    (rule "applyEq" (formula "85") (term "1,1") (ifseqformula "74"))
                                                                                    (rule "applyEq" (formula "88") (term "0,1,0,0,1,0,0,0") (ifseqformula "74"))
                                                                                    (rule "applyEq" (formula "83") (term "0") (ifseqformula "60"))
                                                                                    (rule "inEqSimp_homoInEq1" (formula "83"))
                                                                                    (rule "polySimp_mulComm0" (formula "83") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "83") (term "1,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "83") (term "0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "83") (term "0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "83") (term "0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "83") (term "0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "83") (term "0"))
                                                                                    (rule "polySimp_addAssoc" (formula "83") (term "0,0"))
                                                                                    (rule "polySimp_pullOutFactor2" (formula "83") (term "0,0,0"))
                                                                                    (rule "add_literals" (formula "83") (term "1,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "83") (term "0,0,0"))
                                                                                    (rule "add_zero_left" (formula "83") (term "0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "82"))
                                                                                    (rule "polySimp_mulLiterals" (formula "82") (term "1"))
                                                                                    (rule "polySimp_elimOne" (formula "82") (term "1"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "83"))
                                                                                    (rule "polySimp_mulLiterals" (formula "83") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "83") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "86") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "86") (term "1,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "86") (term "0,1,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "86") (term "1,1,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "86") (term "1,1,1,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "82"))
                                                                                    (rule "polySimp_mulLiterals" (formula "82") (term "1"))
                                                                                    (rule "polySimp_elimOne" (formula "82") (term "1"))
                                                                                    (rule "elimGcdGeq_antec" (formula "80") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=result_175") (inst "elimGcd=Z(2(#))"))
                                                                                    (rule "polySimp_mulLiterals" (formula "80") (term "1,0,1,0"))
                                                                                    (rule "add_zero_right" (formula "80") (term "0,0,0,1,0"))
                                                                                    (rule "leq_literals" (formula "80") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "80"))
                                                                                    (rule "polySimp_mulLiterals" (formula "80") (term "1,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "80") (term "1,0,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "80") (term "0,0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor0b" (formula "80") (term "0,0"))
                                                                                    (rule "add_literals" (formula "80") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "80") (term "1,0,0"))
                                                                                    (rule "add_literals" (formula "80") (term "0,0"))
                                                                                    (rule "leq_literals" (formula "80") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "80"))
                                                                                    (rule "replace_known_left" (formula "59") (term "0,0") (ifseqformula "80"))
                                                                                     (builtin "One Step Simplification" (formula "59"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "80"))
                                                                                    (rule "leq_literals" (formula "32") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "32"))
                                                                                    (rule "true_left" (formula "32"))
                                                                                    (rule "Definition_axiom_for_isAtInitialState_in_de_wiesler_BucketPointers" (formula "76") (term "0") (inst "b=b"))
                                                                                     (builtin "One Step Simplification" (formula "76"))
                                                                                    (rule "expand_inInt" (formula "76") (term "1,0,0"))
                                                                                    (rule "replace_int_MIN" (formula "76") (term "0,1,1,0,0"))
                                                                                    (rule "replace_int_MAX" (formula "76") (term "1,0,1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "76") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "76") (term "1,0,0,1,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "76") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "76") (term "1,1,0,0"))
                                                                                    (rule "applyEq" (formula "76") (term "0,1,0,0,1,0,0,0") (ifseqformula "73"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "76") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "76") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "76") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "76") (term "1,1,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "76") (term "0,1,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "76") (term "1,1,1,0,0,0"))
                                                                                    (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "63"))
                                                                                     (builtin "One Step Simplification" (formula "63"))
                                                                                    (rule "andLeft" (formula "63"))
                                                                                    (rule "andLeft" (formula "63"))
                                                                                    (rule "andLeft" (formula "63"))
                                                                                    (rule "andLeft" (formula "63"))
                                                                                    (rule "andLeft" (formula "63"))
                                                                                    (rule "andLeft" (formula "63"))
                                                                                    (rule "translateJavaSubInt" (formula "68") (term "0,2,1"))
                                                                                    (rule "translateJavaSubInt" (formula "68") (term "0,2,0"))
                                                                                    (rule "translateJavaMulInt" (formula "65") (term "1,1"))
                                                                                    (rule "eqSymm" (formula "68"))
                                                                                    (rule "eqSymm" (formula "65"))
                                                                                    (rule "polySimp_elimSub" (formula "68") (term "0,2,0"))
                                                                                    (rule "mul_literals" (formula "68") (term "1,0,2,0"))
                                                                                    (rule "eqSymm" (formula "68"))
                                                                                    (rule "polySimp_elimSub" (formula "68") (term "0,2,0"))
                                                                                    (rule "mul_literals" (formula "68") (term "1,0,2,0"))
                                                                                    (rule "eqSymm" (formula "68"))
                                                                                    (rule "polySimp_mulComm0" (formula "65") (term "1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "68") (term "0,2,1"))
                                                                                    (rule "polySimp_addComm0" (formula "68") (term "0,2,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "63"))
                                                                                    (rule "applyEq" (formula "64") (term "0") (ifseqformula "32"))
                                                                                    (rule "applyEq" (formula "63") (term "0") (ifseqformula "32"))
                                                                                    (rule "applyEq" (formula "65") (term "1") (ifseqformula "32"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "85") (ifseqformula "63"))
                                                                                    (rule "leq_literals" (formula "85") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "85"))
                                                                                    (rule "true_left" (formula "85"))
                                                                                    (rule "inEqSimp_subsumption0" (formula "31") (ifseqformula "64"))
                                                                                    (rule "leq_literals" (formula "31") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "31"))
                                                                                    (rule "true_left" (formula "31"))
                                                                                    (rule "pullOutSelect" (formula "67") (term "1") (inst "selectSK=arr_3"))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "47"))
                                                                                     (builtin "One Step Simplification" (formula "68"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "0,1,1,0,0") (ifseqformula "34"))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "47"))
                                                                                     (builtin "One Step Simplification" (formula "67"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "67") (term "0,1,1,0,0") (ifseqformula "34"))
                                                                                    (rule "elementOfUnion" (formula "68") (term "0,0,0"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "68") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "68") (term "0,0,1,0,0,0") (ifseqformula "152"))
                                                                                     (builtin "One Step Simplification" (formula "68"))
                                                                                    (rule "elementOfUnion" (formula "67") (term "0,0,0"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "67") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "67") (term "0,0,1,0,0,0") (ifseqformula "152"))
                                                                                     (builtin "One Step Simplification" (formula "67"))
                                                                                    (rule "elementOfUnion" (formula "68") (term "0,0,0"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "68") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "68") (term "0,0,1,0,0,0") (ifseqformula "151"))
                                                                                     (builtin "One Step Simplification" (formula "68"))
                                                                                    (rule "elementOfUnion" (formula "67") (term "0,0,0"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "67") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "67") (term "0,0,1,0,0,0") (ifseqformula "151"))
                                                                                     (builtin "One Step Simplification" (formula "67"))
                                                                                    (rule "elementOfUnion" (formula "68") (term "0,0,0"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "68") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "68") (term "0,0,1,0,0,0") (ifseqformula "128"))
                                                                                     (builtin "One Step Simplification" (formula "68"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "68") (term "0,0,0"))
                                                                                    (rule "replace_known_right" (formula "68") (term "0,0,0,0,0") (ifseqformula "136"))
                                                                                     (builtin "One Step Simplification" (formula "68"))
                                                                                    (rule "elementOfUnion" (formula "67") (term "0,0,0"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "67") (term "0,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "67") (term "0,0,0,0,0,0") (ifseqformula "136"))
                                                                                     (builtin "One Step Simplification" (formula "67"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "67") (term "0,0,0"))
                                                                                    (rule "replace_known_right" (formula "67") (term "0,0,0,0,0") (ifseqformula "128"))
                                                                                     (builtin "One Step Simplification" (formula "67"))
                                                                                    (rule "pullOutSelect" (formula "68") (term "2,0") (inst "selectSK=arr_4"))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "34"))
                                                                                     (builtin "One Step Simplification" (formula "68"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "68") (term "0,0,0"))
                                                                                    (rule "replace_known_right" (formula "68") (term "0,0,0,0,0") (ifseqformula "153"))
                                                                                     (builtin "One Step Simplification" (formula "68"))
                                                                                    (rule "pullOutSelect" (formula "67") (term "2,0") (inst "selectSK=arr_5"))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "34"))
                                                                                     (builtin "One Step Simplification" (formula "67"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "67") (term "0,0,0"))
                                                                                    (rule "replace_known_right" (formula "67") (term "0,0,0,0,0") (ifseqformula "154"))
                                                                                     (builtin "One Step Simplification" (formula "67"))
                                                                                    (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "30"))
                                                                                     (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "65")))
                                                                                    (rule "andLeft" (formula "30"))
                                                                                    (rule "andLeft" (formula "30"))
                                                                                    (rule "andLeft" (formula "30"))
                                                                                    (rule "andLeft" (formula "30"))
                                                                                    (rule "andLeft" (formula "30"))
                                                                                    (rule "eqSymm" (formula "34"))
                                                                                    (rule "eqSymm" (formula "32"))
                                                                                    (rule "translateJavaSubInt" (formula "34") (term "0,2,1"))
                                                                                    (rule "translateJavaSubInt" (formula "34") (term "0,2,0"))
                                                                                    (rule "translateJavaMulInt" (formula "32") (term "1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "34") (term "0,2,1"))
                                                                                    (rule "mul_literals" (formula "34") (term "1,0,2,1"))
                                                                                    (rule "polySimp_elimSub" (formula "34") (term "0,2,0"))
                                                                                    (rule "mul_literals" (formula "34") (term "1,0,2,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "34") (term "0,2,1"))
                                                                                    (rule "polySimp_addComm0" (formula "34") (term "0,2,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "30"))
                                                                                    (rule "applyEq" (formula "69") (term "0") (ifseqformula "32"))
                                                                                    (rule "applyEq" (formula "73") (term "2,0") (ifseqformula "34"))
                                                                                    (rule "Definition_axiom_for_isEmpty_in_de_wiesler_Buffers" (formula "48") (term "0") (inst "b=b"))
                                                                                     (builtin "One Step Simplification" (formula "48"))
                                                                                    (rule "expand_inInt" (formula "48") (term "1,0,0"))
                                                                                    (rule "replace_int_MAX" (formula "48") (term "1,0,1,0,0"))
                                                                                    (rule "replace_int_MIN" (formula "48") (term "0,1,1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "48") (term "1,1,0,0"))
                                                                                    (rule "applyEq" (formula "48") (term "0,1,0,0,1,0,0,0") (ifseqformula "43"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "48") (term "0,1,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "48") (term "1,1,1,0,0,0"))
                                                                                    (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "96"))
                                                                                    (rule "notLeft" (formula "96"))
                                                                                    (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "125"))
                                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "125"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "applyEq" (formula "31") (term "0") (ifseqformula "36"))
                                                                                    (rule "applyEq" (formula "30") (term "0") (ifseqformula "35"))
                                                                                    (rule "applyEq" (formula "30") (term "1") (ifseqformula "34"))
                                                                                    (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "179"))
                                                                                    (rule "applyEq" (formula "179") (term "0,0,1,0,0,0") (ifseqformula "45"))
                                                                                    (rule "applyEq" (formula "179") (term "0,0,1,0,0,0,0") (ifseqformula "43"))
                                                                                    (rule "applyEq" (formula "179") (term "0,0,1,0,0,0,0,0") (ifseqformula "84"))
                                                                                    (rule "replace_known_right" (formula "179") (term "0,1,0,0,0,0,0") (ifseqformula "123"))
                                                                                     (builtin "One Step Simplification" (formula "179"))
                                                                                    (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "109"))
                                                                                     (builtin "One Step Simplification" (formula "109") (ifInst ""  (formula "67")))
                                                                                    (rule "andLeft" (formula "109"))
                                                                                    (rule "andLeft" (formula "109"))
                                                                                    (rule "andLeft" (formula "109"))
                                                                                    (rule "andLeft" (formula "109"))
                                                                                    (rule "andLeft" (formula "109"))
                                                                                    (rule "eqSymm" (formula "113"))
                                                                                    (rule "eqSymm" (formula "111"))
                                                                                    (rule "translateJavaSubInt" (formula "113") (term "0,2,0"))
                                                                                    (rule "translateJavaSubInt" (formula "113") (term "0,2,1"))
                                                                                    (rule "translateJavaMulInt" (formula "111") (term "1,0"))
                                                                                    (rule "polySimp_elimSub" (formula "113") (term "0,2,0"))
                                                                                    (rule "mul_literals" (formula "113") (term "1,0,2,0"))
                                                                                    (rule "eqSymm" (formula "113"))
                                                                                    (rule "polySimp_elimSub" (formula "113") (term "0,2,0"))
                                                                                    (rule "mul_literals" (formula "113") (term "1,0,2,0"))
                                                                                    (rule "eqSymm" (formula "113"))
                                                                                    (rule "polySimp_mulComm0" (formula "111") (term "1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "113") (term "0,2,1"))
                                                                                    (rule "polySimp_addComm0" (formula "113") (term "0,2,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "109"))
                                                                                    (rule "applyEq" (formula "111") (term "0") (ifseqformula "30"))
                                                                                    (rule "eqSymm" (formula "111"))
                                                                                    (rule "pullOutSelect" (formula "112") (term "1") (inst "selectSK=arr_6"))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "113") (ifseqformula "104"))
                                                                                     (builtin "One Step Simplification" (formula "113"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "113") (term "0,1,1,0,0") (ifseqformula "79"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "113") (term "0,0,1,1,0,0") (ifseqformula "50"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "113") (term "0,0,0,1,1,0,0") (ifseqformula "37"))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "112") (ifseqformula "104"))
                                                                                     (builtin "One Step Simplification" (formula "112"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (term "0,1,1,0,0") (ifseqformula "79"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (term "0,0,1,1,0,0") (ifseqformula "50"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (term "0,0,0,1,1,0,0") (ifseqformula "37"))
                                                                                    (rule "elementOfUnion" (formula "113") (term "0,0,0"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "113") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "113") (term "0,0,1,0,0,0") (ifseqformula "137"))
                                                                                     (builtin "One Step Simplification" (formula "113"))
                                                                                    (rule "elementOfUnion" (formula "112") (term "0,0,0"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "112") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "112") (term "0,0,1,0,0,0") (ifseqformula "137"))
                                                                                     (builtin "One Step Simplification" (formula "112"))
                                                                                    (rule "elementOfUnion" (formula "113") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "113"))
                                                                                    (rule "eqSymm" (formula "113") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "113") (term "1,0,0,0") (ifseqformula "163"))
                                                                                     (builtin "One Step Simplification" (formula "113"))
                                                                                    (rule "elementOfUnion" (formula "112") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "112"))
                                                                                    (rule "eqSymm" (formula "112") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "112") (term "1,0,0,0") (ifseqformula "163"))
                                                                                     (builtin "One Step Simplification" (formula "112"))
                                                                                    (rule "elementOfUnion" (formula "113") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "113"))
                                                                                    (rule "eqSymm" (formula "113") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "113") (term "1,0,0,0") (ifseqformula "162"))
                                                                                     (builtin "One Step Simplification" (formula "113"))
                                                                                    (rule "elementOfUnion" (formula "112") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "112"))
                                                                                    (rule "eqSymm" (formula "112") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "112") (term "1,0,0,0") (ifseqformula "162"))
                                                                                     (builtin "One Step Simplification" (formula "112"))
                                                                                    (rule "elementOfUnion" (formula "113") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "113") (ifInst ""  (formula "159")))
                                                                                    (rule "eqSymm" (formula "113") (term "0,0,0"))
                                                                                    (rule "replace_known_right" (formula "113") (term "0,0,0") (ifseqformula "164"))
                                                                                     (builtin "One Step Simplification" (formula "113"))
                                                                                    (rule "elementOfUnion" (formula "112") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "112") (ifInst ""  (formula "159")))
                                                                                    (rule "eqSymm" (formula "112") (term "0,0,0"))
                                                                                    (rule "replace_known_right" (formula "112") (term "0,0,0") (ifseqformula "164"))
                                                                                     (builtin "One Step Simplification" (formula "112"))
                                                                                    (rule "pullOutSelect" (formula "113") (term "2,0") (inst "selectSK=arr_7"))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "113") (ifseqformula "79"))
                                                                                     (builtin "One Step Simplification" (formula "113"))
                                                                                    (rule "replaceKnownSelect_taclet0012121200000121212001000000_6" (formula "113") (term "2,0"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "113") (term "0,1,1,0,0") (ifseqformula "50"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "113") (term "0,0,1,1,0,0") (ifseqformula "37"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "113") (term "0,0,0"))
                                                                                    (rule "replace_known_right" (formula "113") (term "0,0,0,0,0") (ifseqformula "160"))
                                                                                     (builtin "One Step Simplification" (formula "113"))
                                                                                    (rule "pullOutSelect" (formula "112") (term "2,0") (inst "selectSK=arr_8"))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "112") (ifseqformula "79"))
                                                                                     (builtin "One Step Simplification" (formula "112"))
                                                                                    (rule "replaceKnownSelect_taclet0012121200000121212001000000_7" (formula "112") (term "2,0"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (term "0,1,1,0,0") (ifseqformula "50"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (term "0,0,1,1,0,0") (ifseqformula "37"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "112") (term "0,0,0"))
                                                                                    (rule "replace_known_right" (formula "112") (term "0,0,0,0,0") (ifseqformula "161"))
                                                                                     (builtin "One Step Simplification" (formula "112"))
                                                                                    (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "75"))
                                                                                    (rule "andLeft" (formula "75"))
                                                                                    (rule "notLeft" (formula "76"))
                                                                                    (rule "notLeft" (formula "75"))
                                                                                    (rule "replace_known_right" (formula "69") (term "0,0,0,0") (ifseqformula "130"))
                                                                                     (builtin "One Step Simplification" (formula "69"))
                                                                                    (rule "replace_known_right" (formula "71") (term "0,0,0,0") (ifseqformula "130"))
                                                                                     (builtin "One Step Simplification" (formula "71"))
                                                                                    (rule "replace_known_right" (formula "111") (term "0,0,0,0") (ifseqformula "130"))
                                                                                     (builtin "One Step Simplification" (formula "111"))
                                                                                    (rule "replace_known_right" (formula "72") (term "0,0,0,0") (ifseqformula "130"))
                                                                                     (builtin "One Step Simplification" (formula "72"))
                                                                                    (rule "replace_known_right" (formula "113") (term "0,0,0,0") (ifseqformula "130"))
                                                                                     (builtin "One Step Simplification" (formula "113"))
                                                                                    (rule "replace_known_right" (formula "114") (term "0,0,0,0") (ifseqformula "130"))
                                                                                     (builtin "One Step Simplification" (formula "114"))
                                                                                    (rule "replace_known_right" (formula "70") (term "0,0,0,0") (ifseqformula "130"))
                                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                                    (rule "replace_known_right" (formula "112") (term "0,0,0,0") (ifseqformula "130"))
                                                                                     (builtin "One Step Simplification" (formula "112"))
                                                                                    (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "129"))
                                                                                     (builtin "One Step Simplification" (formula "4"))
                                                                                    (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "130"))
                                                                                     (builtin "One Step Simplification" (formula "6"))
                                                                                    (rule "replace_known_left" (formula "113") (term "0,0,0,0,0") (ifseqformula "6"))
                                                                                     (builtin "One Step Simplification" (formula "113"))
                                                                                    (rule "applyEqReverse" (formula "114") (term "2,0") (ifseqformula "113"))
                                                                                    (rule "hideAuxiliaryEq" (formula "113"))
                                                                                    (rule "replace_known_left" (formula "72") (term "0,0,0,0") (ifseqformula "6"))
                                                                                     (builtin "One Step Simplification" (formula "72"))
                                                                                    (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "72"))
                                                                                    (rule "applyEqReverse" (formula "111") (term "2,0") (ifseqformula "72"))
                                                                                    (rule "applyEqReverse" (formula "113") (term "2,0") (ifseqformula "72"))
                                                                                    (rule "hideAuxiliaryEq" (formula "72"))
                                                                                    (rule "replace_known_left" (formula "112") (term "0,0,0,0,0,0") (ifseqformula "6"))
                                                                                     (builtin "One Step Simplification" (formula "112"))
                                                                                    (rule "applyEqReverse" (formula "111") (term "1") (ifseqformula "112"))
                                                                                    (rule "hideAuxiliaryEq" (formula "112"))
                                                                                    (rule "replace_known_left" (formula "111") (term "0,0,0,0,0,0") (ifseqformula "6"))
                                                                                     (builtin "One Step Simplification" (formula "111"))
                                                                                    (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "111"))
                                                                                    (rule "applyEqReverse" (formula "110") (term "2,0") (ifseqformula "111"))
                                                                                     (builtin "One Step Simplification" (formula "110") (ifInst ""  (formula "6")))
                                                                                    (rule "true_left" (formula "110"))
                                                                                    (rule "applyEqReverse" (formula "71") (term "1") (ifseqformula "110"))
                                                                                    (rule "hideAuxiliaryEq" (formula "110"))
                                                                                    (rule "replace_known_left" (formula "71") (term "0,0,0") (ifseqformula "6"))
                                                                                     (builtin "One Step Simplification" (formula "71"))
                                                                                    (rule "applyEqReverse" (formula "70") (term "1") (ifseqformula "71"))
                                                                                    (rule "hideAuxiliaryEq" (formula "71"))
                                                                                    (rule "replace_known_left" (formula "70") (term "0,0,0,0") (ifseqformula "6"))
                                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                                    (rule "replace_known_left" (formula "69") (term "0,0,0") (ifseqformula "6"))
                                                                                     (builtin "One Step Simplification" (formula "69"))
                                                                                    (rule "applyEqReverse" (formula "70") (term "0") (ifseqformula "69"))
                                                                                     (builtin "One Step Simplification" (formula "70"))
                                                                                    (rule "true_left" (formula "70"))
                                                                                    (rule "hideAuxiliaryEq" (formula "69"))
                                                                                    (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "90"))
                                                                                    (rule "andLeft" (formula "90"))
                                                                                    (rule "notLeft" (formula "90"))
                                                                                    (rule "notLeft" (formula "90"))
                                                                                    (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "17"))
                                                                                    (rule "andLeft" (formula "17"))
                                                                                    (rule "notLeft" (formula "18"))
                                                                                    (rule "andLeft" (formula "17"))
                                                                                    (rule "notLeft" (formula "18"))
                                                                                    (rule "andLeft" (formula "17"))
                                                                                    (rule "notLeft" (formula "18"))
                                                                                    (rule "andLeft" (formula "17"))
                                                                                    (rule "notLeft" (formula "18"))
                                                                                    (rule "andLeft" (formula "17"))
                                                                                    (rule "notLeft" (formula "18"))
                                                                                    (rule "andLeft" (formula "17"))
                                                                                    (rule "notLeft" (formula "18"))
                                                                                    (rule "andLeft" (formula "17"))
                                                                                    (rule "notLeft" (formula "17"))
                                                                                    (rule "notLeft" (formula "17"))
                                                                                    (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "126"))
                                                                                     (builtin "One Step Simplification" (formula "8"))
                                                                                    (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "125"))
                                                                                     (builtin "One Step Simplification" (formula "7"))
                                                                                    (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "124"))
                                                                                     (builtin "One Step Simplification" (formula "5"))
                                                                                    (rule "replace_known_right" (formula "185") (term "0,1,0") (ifseqformula "125"))
                                                                                     (builtin "One Step Simplification" (formula "185") (ifInst ""  (formula "120")) (ifInst ""  (formula "119")) (ifInst ""  (formula "124")) (ifInst ""  (formula "126")))
                                                                                    (rule "applyEq" (formula "123") (term "0") (ifseqformula "44"))
                                                                                    (rule "replace_known_right" (formula "185") (term "0,1") (ifseqformula "123"))
                                                                                     (builtin "One Step Simplification" (formula "185"))
                                                                                    (rule "notRight" (formula "185"))
                                                                                    (rule "replace_known_right" (formula "44") (term "0") (ifseqformula "124"))
                                                                                     (builtin "One Step Simplification" (formula "44"))
                                                                                    (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "124"))
                                                                                     (builtin "One Step Simplification" (formula "4"))
                                                                                    (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "1"))
                                                                                     (builtin "One Step Simplification" (formula "42"))
                                                                                    (rule "true_left" (formula "42"))
                                                                                    (rule "replace_known_left" (formula "3") (term "0") (ifseqformula "1"))
                                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                                    (rule "true_left" (formula "3"))
                                                                                    (rule "applyEq" (formula "120") (term "0") (ifseqformula "77"))
                                                                                    (rule "applyEq" (formula "120") (term "0") (ifseqformula "41"))
                                                                                    (rule "close" (formula "120") (ifseqformula "1"))
                                                                                 )
                                                                                 (branch
                                                                                     (builtin "One Step Simplification" (formula "169"))
                                                                                    (rule "polySimp_homoEq" (formula "106") (term "1,0"))
                                                                                    (rule "polySimp_homoEq" (formula "65") (term "1,0"))
                                                                                    (rule "polySimp_homoEq" (formula "64") (term "0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "106") (term "1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "65") (term "0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "106") (term "1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "106") (term "0,1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "64") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "64") (term "0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "64") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "64") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "106") (term "0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "106") (term "0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "105") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "97") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "81") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_gtToGeq" (formula "31"))
                                                                                    (rule "mul_literals" (formula "31") (term "1,0,0"))
                                                                                    (rule "add_literals" (formula "31") (term "0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "93") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "30") (term "0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "28"))
                                                                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "28") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "62") (term "1,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "62") (term "0,1,0,0"))
                                                                                    (rule "add_literals" (formula "62") (term "1,0,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "62") (term "0,1,0,0"))
                                                                                    (rule "qeq_literals" (formula "62") (term "1,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "62"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "81") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "81") (term "1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "81") (term "1,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "81") (term "1,1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "81") (term "0,1,0,1,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "81") (term "0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "81") (term "0,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "81") (term "0,0,1,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "81") (term "0,0,1,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "81") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "81") (term "0,0,1,0"))
                                                                                    (rule "polySimp_sepPosMonomial" (formula "65") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "65") (term "1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "65") (term "1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "65") (term "0,1,1,0"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "106") (term "1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "106") (term "0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "106") (term "0,1,0"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "64") (term "0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "64") (term "0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "64") (term "0,0,1,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "105") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "105") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "105") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "105") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "105") (term "0,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "105") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "97") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "97") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "97") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "97") (term "0,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "97") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "81") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "81") (term "0,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "81") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                                                    (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "31") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                                                                    (rule "mul_literals" (formula "31") (term "0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "93") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "93") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "93") (term "0,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "93") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                                                    (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "81") (term "1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "81") (term "1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "81") (term "0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "81") (term "0,0,1,1,0"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "31"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                                                                    (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "23") (term "0,0"))
                                                                                    (rule "qeq_literals" (formula "23") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "23"))
                                                                                    (rule "true_left" (formula "23"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "22"))
                                                                                    (rule "leq_literals" (formula "13") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "13"))
                                                                                    (rule "true_left" (formula "13"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "24"))
                                                                                    (rule "leq_literals" (formula "23") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "23"))
                                                                                    (rule "true_left" (formula "23"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "13"))
                                                                                    (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                                                    (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                                                    (rule "add_literals" (formula "28") (term "0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                                                    (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                                                    (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "28"))
                                                                                    (rule "leq_literals" (formula "12") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                                    (rule "true_left" (formula "12"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "54"))
                                                                                    (rule "mul_literals" (formula "52") (term "0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "52"))
                                                                                    (rule "mul_literals" (formula "52") (term "1"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "24"))
                                                                                    (rule "mul_literals" (formula "13") (term "0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                                                    (rule "add_literals" (formula "13") (term "0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                                                    (rule "mul_literals" (formula "13") (term "1"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "21"))
                                                                                    (rule "leq_literals" (formula "13") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "13"))
                                                                                    (rule "true_left" (formula "13"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "21"))
                                                                                    (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "23") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                                                    (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                                                    (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "23"))
                                                                                    (rule "leq_literals" (formula "12") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "12"))
                                                                                    (rule "true_left" (formula "12"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "51"))
                                                                                    (rule "polySimp_mulComm0" (formula "53") (term "0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "53") (term "0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "53"))
                                                                                    (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                                    (rule "inEqSimp_subsumption0" (formula "53") (ifseqformula "27"))
                                                                                    (rule "leq_literals" (formula "53") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "53"))
                                                                                    (rule "true_left" (formula "53"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "54"))
                                                                                    (rule "polySimp_mulComm0" (formula "53") (term "0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "53"))
                                                                                    (rule "polySimp_mulLiterals" (formula "53") (term "1"))
                                                                                    (rule "polySimp_elimOne" (formula "53") (term "1"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "53") (ifseqformula "28"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "53") (term "0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0"))
                                                                                    (rule "add_literals" (formula "53") (term "1,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "53") (term "1,0,0"))
                                                                                    (rule "add_zero_right" (formula "53") (term "0,0"))
                                                                                    (rule "qeq_literals" (formula "53") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "53"))
                                                                                    (rule "true_left" (formula "53"))
                                                                                    (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "22"))
                                                                                    (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                                                    (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                                                    (rule "add_literals" (formula "28") (term "0,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                                                    (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                                                    (rule "inEqSimp_subsumption0" (formula "27") (ifseqformula "28"))
                                                                                    (rule "leq_literals" (formula "27") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "27"))
                                                                                    (rule "true_left" (formula "27"))
                                                                                    (rule "inEqSimp_and_subsumption2" (formula "79") (term "0,0,0,0"))
                                                                                    (rule "leq_literals" (formula "79") (term "0,0,0,0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "79"))
                                                                                    (rule "inEqSimp_and_subsumption3" (formula "61") (term "0,0,0"))
                                                                                    (rule "leq_literals" (formula "61") (term "0,1,0,0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "61"))
                                                                                    (rule "inEqSimp_and_subsumption3" (formula "102") (term "0,0,0"))
                                                                                    (rule "leq_literals" (formula "102") (term "0,1,0,0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "102"))
                                                                                    (rule "inEqSimp_and_subsumption3" (formula "94") (term "0,0,0"))
                                                                                    (rule "leq_literals" (formula "94") (term "0,1,0,0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "94"))
                                                                                    (rule "inEqSimp_and_subsumption3" (formula "78") (term "0,0,0"))
                                                                                    (rule "leq_literals" (formula "78") (term "0,1,0,0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "78"))
                                                                                    (rule "inEqSimp_and_subsumption3" (formula "90") (term "0,0,0"))
                                                                                    (rule "leq_literals" (formula "90") (term "0,1,0,0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "90"))
                                                                                    (rule "inEqSimp_and_subsumption3" (formula "26") (term "0,0,0"))
                                                                                    (rule "leq_literals" (formula "26") (term "0,1,0,0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "26"))
                                                                                    (rule "nnf_imp2or" (formula "110") (term "0"))
                                                                                    (rule "nnf_imp2or" (formula "95") (term "0"))
                                                                                    (rule "nnf_imp2or" (formula "62") (term "0"))
                                                                                    (rule "nnf_imp2or" (formula "103") (term "0"))
                                                                                    (rule "nnf_imp2or" (formula "79") (term "0"))
                                                                                    (rule "nnf_imp2or" (formula "61") (term "0"))
                                                                                    (rule "nnf_imp2or" (formula "102") (term "0"))
                                                                                    (rule "nnf_imp2or" (formula "94") (term "0"))
                                                                                    (rule "nnf_imp2or" (formula "78") (term "0"))
                                                                                    (rule "nnf_imp2or" (formula "90") (term "0"))
                                                                                    (rule "nnf_imp2or" (formula "26") (term "0"))
                                                                                    (rule "Contract_axiom_for_initialReadAreasCount_in_BucketPointers" (formula "86") (term "0"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "1,0,0") (ifseqformula "70"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,1,0,0") (ifseqformula "49"))
                                                                                    (rule "wellFormedAnonEQ" (formula "86") (term "1,0,0,0") (ifseqformula "70"))
                                                                                    (rule "wellFormedAnonEQ" (formula "86") (term "0,1,0,0,0") (ifseqformula "49"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,0,1,0,0") (ifseqformula "36"))
                                                                                    (rule "wellFormedAnonEQ" (formula "86") (term "0,0,1,0,0,0") (ifseqformula "36"))
                                                                                    (rule "replace_known_left" (formula "86") (term "0,1,0,0,0,0") (ifseqformula "81"))
                                                                                     (builtin "One Step Simplification" (formula "86") (ifInst ""  (formula "166")) (ifInst ""  (formula "10")) (ifInst ""  (formula "35")) (ifInst ""  (formula "48")) (ifInst ""  (formula "69")) (ifInst ""  (formula "112")) (ifInst ""  (formula "113")) (ifInst ""  (formula "114")) (ifInst ""  (formula "72")) (ifInst ""  (formula "115")) (ifInst ""  (formula "81")) (ifInst ""  (formula "87")) (ifInst ""  (formula "80")))
                                                                                    (rule "true_left" (formula "86"))
                                                                                    (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "65"))
                                                                                    (rule "andLeft" (formula "65"))
                                                                                    (rule "notLeft" (formula "66"))
                                                                                    (rule "notLeft" (formula "65"))
                                                                                    (rule "replace_known_right" (formula "43") (term "0") (ifseqformula "111"))
                                                                                     (builtin "One Step Simplification" (formula "43"))
                                                                                    (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "110"))
                                                                                     (builtin "One Step Simplification" (formula "2"))
                                                                                    (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "111"))
                                                                                     (builtin "One Step Simplification" (formula "3"))
                                                                                    (rule "replace_known_right" (formula "41") (term "0") (ifseqformula "110"))
                                                                                     (builtin "One Step Simplification" (formula "41"))
                                                                                    (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "97"))
                                                                                    (rule "notLeft" (formula "97"))
                                                                                    (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "109"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "109"))
                                                                                     (builtin "One Step Simplification" (formula "9"))
                                                                                    (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "80"))
                                                                                    (rule "notLeft" (formula "80"))
                                                                                    (rule "Contract_axiom_for_initialReadAreasBlockClassified_in_BucketPointers" (formula "85") (term "0"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "1,0,0") (ifseqformula "69"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "0,1,0,0") (ifseqformula "49"))
                                                                                    (rule "wellFormedAnonEQ" (formula "85") (term "1,0,0,0") (ifseqformula "69"))
                                                                                    (rule "wellFormedAnonEQ" (formula "85") (term "0,1,0,0,0") (ifseqformula "49"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "0,0,1,0,0") (ifseqformula "36"))
                                                                                    (rule "wellFormedAnonEQ" (formula "85") (term "0,0,1,0,0,0") (ifseqformula "36"))
                                                                                    (rule "eqSymm" (formula "85") (term "0,1,0,0,0,0"))
                                                                                    (rule "translateJavaAddInt" (formula "85") (term "4,0,0,1,1,1,0,0,0,0"))
                                                                                    (rule "translateJavaCastInt" (formula "85") (term "0,0,1,0,0,0,0"))
                                                                                    (rule "translateJavaSubInt" (formula "85") (term "1,0,1,0,0,0,0"))
                                                                                    (rule "replace_known_left" (formula "85") (term "0,1,1") (ifseqformula "86"))
                                                                                     (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "76")) (ifInst ""  (formula "164")) (ifInst ""  (formula "166")) (ifInst ""  (formula "10")) (ifInst ""  (formula "35")) (ifInst ""  (formula "48")) (ifInst ""  (formula "68")) (ifInst ""  (formula "112")) (ifInst ""  (formula "113")) (ifInst ""  (formula "114")) (ifInst ""  (formula "71")) (ifInst ""  (formula "115")) (ifInst ""  (formula "79")))
                                                                                    (rule "polySimp_elimSub" (formula "85") (term "1,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "85") (term "1,0,1,0"))
                                                                                    (rule "castedGetAny" (formula "85") (term "0,0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "85") (term "0,0,0,0"))
                                                                                    (rule "replace_known_left" (formula "85") (term "0,0,0,0") (ifseqformula "19"))
                                                                                     (builtin "One Step Simplification" (formula "85"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "85") (term "0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "85") (term "1,0,0"))
                                                                                    (rule "replace_known_left" (formula "85") (term "1,0,0") (ifseqformula "23"))
                                                                                     (builtin "One Step Simplification" (formula "85"))
                                                                                    (rule "applyEq" (formula "85") (term "1,0,0,1,0") (ifseqformula "73"))
                                                                                    (rule "replace_known_left" (formula "85") (term "0,1,0") (ifseqformula "60"))
                                                                                     (builtin "One Step Simplification" (formula "85"))
                                                                                    (rule "applyEq" (formula "85") (term "1,4,0,0,1,0") (ifseqformula "75"))
                                                                                    (rule "polySimp_addAssoc" (formula "85") (term "4,0,0,1,0"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "85") (term "0,4,0,0,1,0"))
                                                                                    (rule "add_literals" (formula "85") (term "1,0,4,0,0,1,0"))
                                                                                    (rule "times_zero_1" (formula "85") (term "0,4,0,0,1,0"))
                                                                                    (rule "add_zero_left" (formula "85") (term "4,0,0,1,0"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "85") (term "0,0") (ifseqformula "28"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "85") (term "0,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1b" (formula "85") (term "0,0,0,0"))
                                                                                    (rule "add_literals" (formula "85") (term "1,1,0,0,0,0"))
                                                                                    (rule "times_zero_1" (formula "85") (term "1,0,0,0,0"))
                                                                                    (rule "add_zero_right" (formula "85") (term "0,0,0,0"))
                                                                                    (rule "qeq_literals" (formula "85") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "85"))
                                                                                    (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "96"))
                                                                                     (builtin "One Step Simplification" (formula "96"))
                                                                                    (rule "andLeft" (formula "96"))
                                                                                    (rule "andLeft" (formula "96"))
                                                                                    (rule "andLeft" (formula "96"))
                                                                                    (rule "andLeft" (formula "96"))
                                                                                    (rule "andLeft" (formula "96"))
                                                                                    (rule "andLeft" (formula "96"))
                                                                                    (rule "eqSymm" (formula "101"))
                                                                                    (rule "translateJavaMulInt" (formula "98") (term "1,1"))
                                                                                    (rule "translateJavaSubInt" (formula "101") (term "0,2,1"))
                                                                                    (rule "translateJavaSubInt" (formula "101") (term "0,2,0"))
                                                                                    (rule "eqSymm" (formula "98"))
                                                                                    (rule "polySimp_elimSub" (formula "101") (term "0,2,1"))
                                                                                    (rule "mul_literals" (formula "101") (term "1,0,2,1"))
                                                                                    (rule "polySimp_elimSub" (formula "101") (term "0,2,0"))
                                                                                    (rule "mul_literals" (formula "101") (term "1,0,2,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "98") (term "1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "101") (term "0,2,1"))
                                                                                    (rule "polySimp_addComm0" (formula "101") (term "0,2,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "96"))
                                                                                    (rule "applyEq" (formula "96") (term "0") (ifseqformula "33"))
                                                                                    (rule "applyEq" (formula "97") (term "0") (ifseqformula "33"))
                                                                                    (rule "applyEq" (formula "98") (term "1") (ifseqformula "33"))
                                                                                    (rule "inEqSimp_subsumption0" (formula "31") (ifseqformula "97"))
                                                                                    (rule "leq_literals" (formula "31") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "31"))
                                                                                    (rule "true_left" (formula "31"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "95"))
                                                                                    (rule "leq_literals" (formula "31") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "31"))
                                                                                    (rule "true_left" (formula "31"))
                                                                                    (rule "inEqSimp_subsumption1" (formula "57") (term "0,0") (ifseqformula "94"))
                                                                                    (rule "leq_literals" (formula "57") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "57"))
                                                                                    (rule "pullOutSelect" (formula "99") (term "1") (inst "selectSK=arr_3"))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "99") (ifseqformula "89"))
                                                                                     (builtin "One Step Simplification" (formula "99"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,1,1,0,0") (ifseqformula "67"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,1,1,0,0") (ifseqformula "47"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0,1,1,0,0") (ifseqformula "34"))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "100") (ifseqformula "89"))
                                                                                     (builtin "One Step Simplification" (formula "100"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,1,1,0,0") (ifseqformula "67"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,0,1,1,0,0") (ifseqformula "47"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,0,0,1,1,0,0") (ifseqformula "34"))
                                                                                    (rule "elementOfUnion" (formula "99") (term "0,0,0"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "99") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "99") (term "0,0,1,0,0,0") (ifseqformula "125"))
                                                                                     (builtin "One Step Simplification" (formula "99"))
                                                                                    (rule "elementOfUnion" (formula "100") (term "0,0,0"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "100") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "100") (term "0,0,1,0,0,0") (ifseqformula "125"))
                                                                                     (builtin "One Step Simplification" (formula "100"))
                                                                                    (rule "elementOfUnion" (formula "99") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "99"))
                                                                                    (rule "eqSymm" (formula "99") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "99") (term "1,0,0,0") (ifseqformula "151"))
                                                                                     (builtin "One Step Simplification" (formula "99"))
                                                                                    (rule "elementOfUnion" (formula "100") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "100"))
                                                                                    (rule "eqSymm" (formula "100") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "100") (term "1,0,0,0") (ifseqformula "151"))
                                                                                     (builtin "One Step Simplification" (formula "100"))
                                                                                    (rule "elementOfUnion" (formula "99") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "99"))
                                                                                    (rule "eqSymm" (formula "99") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "99") (term "1,0,0,0") (ifseqformula "150"))
                                                                                     (builtin "One Step Simplification" (formula "99"))
                                                                                    (rule "elementOfUnion" (formula "100") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "100"))
                                                                                    (rule "eqSymm" (formula "100") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "100") (term "1,0,0,0") (ifseqformula "150"))
                                                                                     (builtin "One Step Simplification" (formula "100"))
                                                                                    (rule "elementOfUnion" (formula "99") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "147")))
                                                                                    (rule "eqSymm" (formula "99") (term "0,0,0"))
                                                                                    (rule "replace_known_right" (formula "99") (term "0,0,0") (ifseqformula "152"))
                                                                                     (builtin "One Step Simplification" (formula "99"))
                                                                                    (rule "elementOfUnion" (formula "100") (term "0,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "100") (ifInst ""  (formula "147")))
                                                                                    (rule "eqSymm" (formula "100") (term "0,0,0"))
                                                                                    (rule "replace_known_right" (formula "100") (term "0,0,0") (ifseqformula "152"))
                                                                                     (builtin "One Step Simplification" (formula "100"))
                                                                                    (rule "pullOutSelect" (formula "99") (term "2,0") (inst "selectSK=arr_4"))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "99") (ifseqformula "67"))
                                                                                     (builtin "One Step Simplification" (formula "99"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,1,1,0,0") (ifseqformula "47"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,1,1,0,0") (ifseqformula "34"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "99") (term "0,0,0"))
                                                                                    (rule "replace_known_right" (formula "99") (term "0,0,0,0,0") (ifseqformula "148"))
                                                                                     (builtin "One Step Simplification" (formula "99"))
                                                                                    (rule "pullOutSelect" (formula "101") (term "2,0") (inst "selectSK=arr_5"))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "101") (ifseqformula "67"))
                                                                                     (builtin "One Step Simplification" (formula "101"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "0,1,1,0,0") (ifseqformula "47"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "0,0,1,1,0,0") (ifseqformula "34"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "101") (term "0,0,0"))
                                                                                    (rule "replace_known_right" (formula "101") (term "0,0,0,0,0") (ifseqformula "149"))
                                                                                     (builtin "One Step Simplification" (formula "101"))
                                                                                    (rule "pullOutSelect" (formula "99") (term "2,0") (inst "selectSK=arr_6"))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "99") (ifseqformula "47"))
                                                                                     (builtin "One Step Simplification" (formula "99"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,1,1,0,0") (ifseqformula "34"))
                                                                                    (rule "elementOfUnion" (formula "99") (term "0,0,0"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "99") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "99") (term "0,0,1,0,0,0") (ifseqformula "152"))
                                                                                     (builtin "One Step Simplification" (formula "99"))
                                                                                    (rule "elementOfUnion" (formula "99") (term "0,0,0"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "99") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "99") (term "0,0,1,0,0,0") (ifseqformula "151"))
                                                                                     (builtin "One Step Simplification" (formula "99"))
                                                                                    (rule "elementOfUnion" (formula "99") (term "0,0,0"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "99") (term "0,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "99") (term "0,0,0,0,0,0") (ifseqformula "136"))
                                                                                     (builtin "One Step Simplification" (formula "99"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "99") (term "0,0,0"))
                                                                                    (rule "replace_known_right" (formula "99") (term "0,0,0,0,0") (ifseqformula "128"))
                                                                                     (builtin "One Step Simplification" (formula "99"))
                                                                                    (rule "pullOutSelect" (formula "102") (term "2,0") (inst "selectSK=arr_7"))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "102") (ifseqformula "47"))
                                                                                     (builtin "One Step Simplification" (formula "102"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "102") (term "0,1,1,0,0") (ifseqformula "34"))
                                                                                    (rule "elementOfUnion" (formula "102") (term "0,0,0"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "102") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "102") (term "0,0,1,0,0,0") (ifseqformula "153"))
                                                                                     (builtin "One Step Simplification" (formula "102"))
                                                                                    (rule "elementOfUnion" (formula "102") (term "0,0,0"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "102") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "102") (term "0,0,1,0,0,0") (ifseqformula "152"))
                                                                                     (builtin "One Step Simplification" (formula "102"))
                                                                                    (rule "elementOfUnion" (formula "102") (term "0,0,0"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "102") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "102") (term "0,0,1,0,0,0") (ifseqformula "129"))
                                                                                     (builtin "One Step Simplification" (formula "102"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "102") (term "0,0,0"))
                                                                                    (rule "replace_known_right" (formula "102") (term "0,0,0,0,0") (ifseqformula "137"))
                                                                                     (builtin "One Step Simplification" (formula "102"))
                                                                                    (rule "pullOutSelect" (formula "99") (term "2,0") (inst "selectSK=arr_8"))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "99") (ifseqformula "34"))
                                                                                     (builtin "One Step Simplification" (formula "99"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "99") (term "0,0,0"))
                                                                                    (rule "replace_known_right" (formula "99") (term "0,0,0,0,0") (ifseqformula "154"))
                                                                                     (builtin "One Step Simplification" (formula "99"))
                                                                                    (rule "pullOutSelect" (formula "103") (term "2,0") (inst "selectSK=arr_9"))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "103") (ifseqformula "34"))
                                                                                     (builtin "One Step Simplification" (formula "103"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "103") (term "0,0,0"))
                                                                                    (rule "replace_known_right" (formula "103") (term "0,0,0,0,0") (ifseqformula "155"))
                                                                                     (builtin "One Step Simplification" (formula "103"))
                                                                                    (rule "Contract_axiom_for_initialReadAreasCountBucketElements_in_BucketPointers" (formula "85") (term "0"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "1,0,0") (ifseqformula "67"))
                                                                                    (rule "wellFormedAnonEQ" (formula "85") (term "1,0,0,0") (ifseqformula "67"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "0,1,0,0") (ifseqformula "47"))
                                                                                    (rule "wellFormedAnonEQ" (formula "85") (term "0,1,0,0,0") (ifseqformula "47"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "0,0,1,0,0") (ifseqformula "34"))
                                                                                    (rule "wellFormedAnonEQ" (formula "85") (term "0,0,1,0,0,0") (ifseqformula "34"))
                                                                                    (rule "replace_known_right" (formula "85") (term "0,1,0") (ifseqformula "127"))
                                                                                     (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "176")) (ifInst ""  (formula "178")) (ifInst ""  (formula "10")) (ifInst ""  (formula "33")) (ifInst ""  (formula "46")) (ifInst ""  (formula "66")) (ifInst ""  (formula "124")) (ifInst ""  (formula "125")) (ifInst ""  (formula "126")) (ifInst ""  (formula "69")) (ifInst ""  (formula "86")) (ifInst ""  (formula "77")))
                                                                                    (rule "Contract_axiom_for_isAtInitialState_in_BucketPointers" (formula "74") (term "0"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "74") (term "1,0,0") (ifseqformula "67"))
                                                                                    (rule "wellFormedAnonEQ" (formula "74") (term "1,0,0,0") (ifseqformula "67"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "74") (term "0,1,0,0") (ifseqformula "47"))
                                                                                    (rule "wellFormedAnonEQ" (formula "74") (term "0,1,0,0,0") (ifseqformula "47"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "74") (term "0,0,1,0,0") (ifseqformula "34"))
                                                                                    (rule "wellFormedAnonEQ" (formula "74") (term "0,0,1,0,0,0") (ifseqformula "34"))
                                                                                    (rule "replace_known_right" (formula "74") (term "0,1,0") (ifseqformula "128"))
                                                                                     (builtin "One Step Simplification" (formula "74") (ifInst ""  (formula "10")) (ifInst ""  (formula "33")) (ifInst ""  (formula "46")) (ifInst ""  (formula "66")) (ifInst ""  (formula "125")) (ifInst ""  (formula "126")) (ifInst ""  (formula "127")) (ifInst ""  (formula "69")) (ifInst ""  (formula "78")))
                                                                                    (rule "true_left" (formula "74"))
                                                                                    (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "179"))
                                                                                    (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "62"))
                                                                                     (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "98")))
                                                                                    (rule "andLeft" (formula "62"))
                                                                                    (rule "andLeft" (formula "62"))
                                                                                    (rule "andLeft" (formula "62"))
                                                                                    (rule "andLeft" (formula "62"))
                                                                                    (rule "andLeft" (formula "62"))
                                                                                    (rule "translateJavaSubInt" (formula "66") (term "0,2,0"))
                                                                                    (rule "translateJavaSubInt" (formula "66") (term "0,2,1"))
                                                                                    (rule "translateJavaMulInt" (formula "64") (term "1,1"))
                                                                                    (rule "eqSymm" (formula "66"))
                                                                                    (rule "eqSymm" (formula "64"))
                                                                                    (rule "polySimp_elimSub" (formula "66") (term "0,2,0"))
                                                                                    (rule "mul_literals" (formula "66") (term "1,0,2,0"))
                                                                                    (rule "eqSymm" (formula "66"))
                                                                                    (rule "polySimp_elimSub" (formula "66") (term "0,2,0"))
                                                                                    (rule "mul_literals" (formula "66") (term "1,0,2,0"))
                                                                                    (rule "eqSymm" (formula "66"))
                                                                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "66") (term "0,2,1"))
                                                                                    (rule "replaceKnownSelect_taclet1012121200000121212001000000_10" (formula "66") (term "1"))
                                                                                    (rule "simplifySelectOfAnonEQ" (formula "66") (ifseqformula "47"))
                                                                                     (builtin "One Step Simplification" (formula "66"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,1,1,0,0") (ifseqformula "34"))
                                                                                    (rule "polySimp_addComm0" (formula "66") (term "0,1,0,0,0"))
                                                                                    (rule "polySimp_addComm0" (formula "66") (term "0,2,2,0"))
                                                                                    (rule "replaceKnownSelect_taclet1012121200000121212001000000_13" (formula "66") (term "2,0"))
                                                                                    (rule "polySimp_addComm0" (formula "66") (term "0,2,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "62"))
                                                                                    (rule "applyEq" (formula "62") (term "0") (ifseqformula "31"))
                                                                                    (rule "applyEq" (formula "101") (term "0") (ifseqformula "63"))
                                                                                    (rule "applyEq" (formula "62") (term "0") (ifseqformula "31"))
                                                                                    (rule "applyEq" (formula "62") (term "1") (ifseqformula "31"))
                                                                                    (rule "elementOfUnion" (formula "64") (term "0,0,0"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "64") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "64") (term "0,0,1,0,0,0") (ifseqformula "158"))
                                                                                     (builtin "One Step Simplification" (formula "64"))
                                                                                    (rule "elementOfUnion" (formula "64") (term "0,0,0"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "64") (term "1,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "64") (term "0,0,1,0,0,0") (ifseqformula "157"))
                                                                                     (builtin "One Step Simplification" (formula "64"))
                                                                                    (rule "elementOfUnion" (formula "64") (term "0,0,0"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "64") (term "0,0,0,0"))
                                                                                    (rule "replace_known_right" (formula "64") (term "0,0,0,0,0,0") (ifseqformula "142"))
                                                                                     (builtin "One Step Simplification" (formula "64"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "64") (term "0,0,0"))
                                                                                    (rule "replace_known_right" (formula "64") (term "0,0,0,0,0") (ifseqformula "134"))
                                                                                     (builtin "One Step Simplification" (formula "64"))
                                                                                    (rule "applyEq" (formula "64") (term "0") (ifseqformula "107"))
                                                                                    (rule "applyEqReverse" (formula "103") (term "1") (ifseqformula "64"))
                                                                                    (rule "applyEqReverse" (formula "104") (term "2,0") (ifseqformula "64"))
                                                                                    (rule "hideAuxiliaryEq" (formula "64"))
                                                                                    (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "45"))
                                                                                    (rule "andLeft" (formula "45"))
                                                                                    (rule "notLeft" (formula "46"))
                                                                                    (rule "notLeft" (formula "45"))
                                                                                    (rule "Definition_axiom_for_bucketCountsToTotalCount_in_de_wiesler_Partition" (formula "118") (term "0") (inst "bucket=bucket") (inst "element=element") (inst "b=b"))
                                                                                     (builtin "One Step Simplification" (formula "118"))
                                                                                    (rule "expand_inInt" (formula "118") (term "1,0,0"))
                                                                                    (rule "expand_inInt" (formula "118") (term "0,0,1,0"))
                                                                                    (rule "replace_int_MAX" (formula "118") (term "1,0,1,0,0"))
                                                                                    (rule "replace_int_MIN" (formula "118") (term "0,1,1,0,0"))
                                                                                    (rule "replace_int_MAX" (formula "118") (term "1,0,0,0,1,0"))
                                                                                    (rule "replace_int_MIN" (formula "118") (term "0,1,0,0,1,0"))
                                                                                    (rule "translateJavaAddInt" (formula "118") (term "2,2,0,0,1,0,1,0"))
                                                                                    (rule "translateJavaAddInt" (formula "118") (term "0,2,1,3,2,0,0,1,0,1,0"))
                                                                                    (rule "translateJavaAddInt" (formula "118") (term "3,1,1,0,1,0"))
                                                                                    (rule "translateJavaAddInt" (formula "118") (term "3,2,0,0,1,0,1,0"))
                                                                                    (rule "translateJavaCastInt" (formula "118") (term "0,1,0,1,0"))
                                                                                    (rule "polySimp_addComm0" (formula "118") (term "0,2,1,3,2,0,1,0,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "118") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "118") (term "1,1,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "118") (term "1,0,0,1,0"))
                                                                                    (rule "Definition_axiom_for_initialReadAreasBlockClassified_in_de_wiesler_BucketPointers" (formula "85") (term "0") (inst "b=b"))
                                                                                     (builtin "One Step Simplification" (formula "85"))
                                                                                    (rule "expand_inInt" (formula "85") (term "1,0,0"))
                                                                                    (rule "replace_int_MAX" (formula "85") (term "1,0,1,0,0"))
                                                                                    (rule "replace_int_MIN" (formula "85") (term "0,1,1,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "85") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "85") (term "1,0,0,1,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "85") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "85") (term "1,1,0,0"))
                                                                                    (rule "applyEq" (formula "85") (term "0,1,0,0,1,0,0,0") (ifseqformula "72"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "85") (term "1,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "85") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "85") (term "1,1,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "85") (term "1,1,1,0,0,0"))
                                                                                    (rule "mul_literals" (formula "85") (term "0,1,1,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "85") (term "1,1,1,0,0,0"))
                                                                                    (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "18"))
                                                                                    (rule "close" (formula "179") (ifseqformula "18"))
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                  (builtin "One Step Simplification" (formula "169"))
                                                                                 (rule "closeTrue" (formula "169"))
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "Exceptional Post (cleanup)"
                                                             (builtin "One Step Simplification" (formula "104"))
                                                             (builtin "One Step Simplification" (formula "160"))
                                                            (rule "andLeft" (formula "104"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "105") (term "1,0") (ifseqformula "104"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "105") (term "0,1,0") (ifseqformula "95"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "105") (term "0,0,1,0") (ifseqformula "73"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "105") (term "0,0,0,1,0") (ifseqformula "52"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "105") (term "0,0,0,0,1,0") (ifseqformula "39"))
                                                            (rule "andLeft" (formula "105"))
                                                            (rule "andLeft" (formula "105"))
                                                            (rule "notLeft" (formula "105"))
                                                            (rule "close" (formula "107") (ifseqformula "106"))
                                                         )
                                                         (branch "Pre (cleanup)"
                                                             (builtin "One Step Simplification" (formula "158") (ifInst ""  (formula "101")) (ifInst ""  (formula "102")) (ifInst ""  (formula "157")) (ifInst ""  (formula "108")) (ifInst ""  (formula "156")) (ifInst ""  (formula "106")) (ifInst ""  (formula "155")) (ifInst ""  (formula "157")) (ifInst ""  (formula "108")) (ifInst ""  (formula "156")) (ifInst ""  (formula "106")) (ifInst ""  (formula "155")))
                                                            (rule "andRight" (formula "158"))
                                                            (branch "Case 1"
                                                               (rule "andRight" (formula "158"))
                                                               (branch
                                                                  (rule "polySimp_homoEq" (formula "65") (term "1,0"))
                                                                  (rule "polySimp_homoEq" (formula "64") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "65") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "64") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "0,0,1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "64") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "64") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "93") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "97") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "31"))
                                                                  (rule "mul_literals" (formula "31") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "31") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "81") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "30") (term "0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "81") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "81") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "81") (term "1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "81") (term "1,1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "81") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "81") (term "0,0,1,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "81") (term "0,0,0,1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "81") (term "0,0,1,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "81") (term "0,0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "81") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "81") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "28"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "62") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "62") (term "0,1,0,0"))
                                                                  (rule "add_literals" (formula "62") (term "1,0,1,0,0"))
                                                                  (rule "times_zero_1" (formula "62") (term "0,1,0,0"))
                                                                  (rule "qeq_literals" (formula "62") (term "1,0,0"))
                                                                   (builtin "One Step Simplification" (formula "62"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "65") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "65") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "65") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "65") (term "0,1,1,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "64") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "64") (term "0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "64") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "93") (term "1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "93") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "93") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "93") (term "1,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "97") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "97") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "97") (term "1,1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "97") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "97") (term "1,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "31") (term "1"))
                                                                  (rule "mul_literals" (formula "31") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "81") (term "1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "81") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "81") (term "1,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "81") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "81") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "81") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "81") (term "0,0,1,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                                  (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "22"))
                                                                  (rule "leq_literals" (formula "13") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "true_left" (formula "13"))
                                                                  (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "30"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                                                  (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "22") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "22") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "22"))
                                                                  (rule "true_left" (formula "22"))
                                                                  (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "24"))
                                                                  (rule "leq_literals" (formula "23") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "true_left" (formula "23"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "54"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "53"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "53") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "53") (ifseqformula "28"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "53") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0"))
                                                                  (rule "add_literals" (formula "53") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "53") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "53") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "53") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "53"))
                                                                  (rule "true_left" (formula "53"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "22"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "24") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "24"))
                                                                  (rule "leq_literals" (formula "13") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "true_left" (formula "13"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "54"))
                                                                  (rule "mul_literals" (formula "52") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "52"))
                                                                  (rule "mul_literals" (formula "52") (term "1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "25"))
                                                                  (rule "mul_literals" (formula "13") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                                  (rule "add_literals" (formula "13") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                                  (rule "mul_literals" (formula "13") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "21"))
                                                                  (rule "leq_literals" (formula "13") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "true_left" (formula "13"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "51"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "53") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "53"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "23"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                                  (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                                  (rule "add_literals" (formula "28") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "28"))
                                                                  (rule "leq_literals" (formula "12") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "true_left" (formula "12"))
                                                                  (rule "inEqSimp_and_subsumption2" (formula "79") (term "0,0,0,0"))
                                                                  (rule "leq_literals" (formula "79") (term "0,0,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "79"))
                                                                  (rule "inEqSimp_and_subsumption3" (formula "90") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "90") (term "0,1,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "90"))
                                                                  (rule "inEqSimp_and_subsumption3" (formula "94") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "94") (term "0,1,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "94"))
                                                                  (rule "inEqSimp_and_subsumption3" (formula "78") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "78") (term "0,1,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "78"))
                                                                  (rule "inEqSimp_and_subsumption3" (formula "61") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "61") (term "0,1,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "61"))
                                                                  (rule "inEqSimp_and_subsumption3" (formula "26") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "26") (term "0,1,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "26"))
                                                                  (rule "nnf_imp2or" (formula "95") (term "0"))
                                                                  (rule "nnf_imp2or" (formula "62") (term "0"))
                                                                  (rule "nnf_imp2or" (formula "79") (term "0"))
                                                                  (rule "nnf_imp2or" (formula "90") (term "0"))
                                                                  (rule "nnf_imp2or" (formula "94") (term "0"))
                                                                  (rule "nnf_imp2or" (formula "78") (term "0"))
                                                                  (rule "nnf_imp2or" (formula "61") (term "0"))
                                                                  (rule "nnf_imp2or" (formula "26") (term "0"))
                                                                  (rule "nnf_notAnd" (formula "95") (term "0,0"))
                                                                  (rule "inEqSimp_notGeq" (formula "95") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "95") (term "1,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "95") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "95") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "95") (term "1,0,0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "95") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "95") (term "1,0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "95") (term "0,0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "95") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "95") (term "1,1,0,0"))
                                                                  (rule "nnf_notAnd" (formula "62") (term "0,0"))
                                                                  (rule "inEqSimp_notGeq" (formula "62") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "62") (term "1,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "62") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "62") (term "1,0,0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                                                                  (rule "nnf_notAnd" (formula "79") (term "0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "79") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "79") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "79") (term "1,1,0,0"))
                                                                  (rule "mul_literals" (formula "79") (term "0,1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "79") (term "1,1,1,0,0"))
                                                                  (rule "nnf_notAnd" (formula "90") (term "0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "90") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "90") (term "1,0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "90") (term "0,0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "90") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "90") (term "1,1,0,0"))
                                                                  (rule "nnf_notAnd" (formula "94") (term "0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "94") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "94") (term "1,0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "94") (term "0,0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "94") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "94") (term "1,1,0,0"))
                                                                  (rule "nnf_notAnd" (formula "78") (term "0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "78") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "78") (term "1,0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "78") (term "0,0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "78") (term "1,1,0,0"))
                                                                  (rule "nnf_notAnd" (formula "61") (term "0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "61") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "61") (term "1,0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "61") (term "0,0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "61") (term "1,1,0,0"))
                                                                  (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "26") (term "1,0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "26") (term "0,0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "26") (term "1,1,0,0"))
                                                                  (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "83"))
                                                                  (rule "andLeft" (formula "83"))
                                                                  (rule "notLeft" (formula "84"))
                                                                  (rule "notLeft" (formula "83"))
                                                                  (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "99"))
                                                                   (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "100"))
                                                                   (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "Contract_axiom_for_initialReadAreasCountBucketElements_in_BucketPointers" (formula "87") (term "0"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "87") (term "1,0,0") (ifseqformula "70"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "87") (term "0,1,0,0") (ifseqformula "49"))
                                                                  (rule "wellFormedAnonEQ" (formula "87") (term "1,0,0,0") (ifseqformula "70"))
                                                                  (rule "wellFormedAnonEQ" (formula "87") (term "0,1,0,0,0") (ifseqformula "49"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "87") (term "0,0,1,0,0") (ifseqformula "36"))
                                                                  (rule "wellFormedAnonEQ" (formula "87") (term "0,0,1,0,0,0") (ifseqformula "36"))
                                                                  (rule "replace_known_left" (formula "87") (term "0,1,1") (ifseqformula "88"))
                                                                   (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "81")) (ifInst ""  (formula "154")) (ifInst ""  (formula "156")) (ifInst ""  (formula "10")) (ifInst ""  (formula "35")) (ifInst ""  (formula "48")) (ifInst ""  (formula "69")) (ifInst ""  (formula "102")) (ifInst ""  (formula "103")) (ifInst ""  (formula "104")) (ifInst ""  (formula "72")) (ifInst ""  (formula "105")) (ifInst ""  (formula "81")) (ifInst ""  (formula "80")))
                                                                  (rule "true_left" (formula "87"))
                                                                  (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "17"))
                                                                  (rule "andLeft" (formula "17"))
                                                                  (rule "andLeft" (formula "17"))
                                                                  (rule "notLeft" (formula "19"))
                                                                  (rule "andLeft" (formula "17"))
                                                                  (rule "notLeft" (formula "19"))
                                                                  (rule "notLeft" (formula "18"))
                                                                  (rule "andLeft" (formula "17"))
                                                                  (rule "andLeft" (formula "17"))
                                                                  (rule "notLeft" (formula "19"))
                                                                  (rule "notLeft" (formula "18"))
                                                                  (rule "andLeft" (formula "17"))
                                                                  (rule "andLeft" (formula "17"))
                                                                  (rule "notLeft" (formula "19"))
                                                                  (rule "notLeft" (formula "18"))
                                                                  (rule "notLeft" (formula "17"))
                                                                  (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "105"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "103"))
                                                                   (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "104"))
                                                                   (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "applyEq" (formula "100") (term "0") (ifseqformula "74"))
                                                                  (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "100"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "100"))
                                                                   (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "applyEq" (formula "101") (term "0") (ifseqformula "41"))
                                                                  (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "101"))
                                                                   (builtin "One Step Simplification" (formula "40"))
                                                                  (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "101"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "applyEq" (formula "102") (term "0") (ifseqformula "43"))
                                                                  (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "102"))
                                                                   (builtin "One Step Simplification" (formula "42"))
                                                                  (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "102"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "54") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "54"))
                                                                  (rule "translateJavaMod" (formula "54") (term "0"))
                                                                  (rule "jmod_axiom" (formula "54") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "54") (term "1,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "54"))
                                                                  (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                                                  (rule "newSym_eq" (formula "54") (inst "l=l_0") (inst "newSymDef=add(mul(begin, Z(0(#))), mul(result_176, Z(0(#))))"))
                                                                  (rule "times_zero_1" (formula "54") (term "1,1,1"))
                                                                  (rule "times_zero_1" (formula "54") (term "0,1,1"))
                                                                  (rule "add_zero_left" (formula "54") (term "1,1"))
                                                                  (rule "add_zero_right" (formula "54") (term "1"))
                                                                  (rule "applyEq" (formula "55") (term "0,0") (ifseqformula "54"))
                                                                  (rule "polySimp_homoEq" (formula "55"))
                                                                  (rule "polySimp_mulLiterals" (formula "55") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "55") (term "0,0"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "55"))
                                                                  (rule "polySimp_mulComm0" (formula "55") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "55") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "55") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "55") (term "1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "55") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "55") (term "0,1"))
                                                                  (rule "applyEq" (formula "56") (term "4,0") (ifseqformula "55"))
                                                                  (rule "applyEq" (formula "62") (term "3,0,1,0") (ifseqformula "55"))
                                                                  (rule "applyEq" (formula "52") (term "0") (ifseqformula "55"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "52"))
                                                                  (rule "polySimp_mulComm0" (formula "52") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "52") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "52") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "52") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "52") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "52") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "52") (term "0"))
                                                                  (rule "add_literals" (formula "52") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "52") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "52") (term "0"))
                                                                  (rule "applyEq" (formula "51") (term "0") (ifseqformula "55"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "51"))
                                                                  (rule "polySimp_mulComm0" (formula "51") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "51") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "51") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "51") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "51") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "51") (term "0"))
                                                                  (rule "applyEq" (formula "53") (term "0") (ifseqformula "55"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "53"))
                                                                  (rule "applyEq" (formula "54") (term "1,0,0") (ifseqformula "55"))
                                                                  (rule "polySimp_addAssoc" (formula "54") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "54") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "54") (term "0,0"))
                                                                  (rule "add_literals" (formula "54") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "54") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "54") (term "0,0"))
                                                                  (rule "applyEq" (formula "50") (term "0") (ifseqformula "55"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "50"))
                                                                  (rule "polySimp_mulComm0" (formula "50") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "50") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "50") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "50") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "50") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "50") (term "0"))
                                                                  (rule "applyEq" (formula "89") (term "4,1,1,0") (ifseqformula "55"))
                                                                  (rule "applyEq" (formula "76") (term "1,1") (ifseqformula "55"))
                                                                  (rule "polySimp_addAssoc" (formula "76") (term "1"))
                                                                  (rule "polySimp_addComm0" (formula "76") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "76") (term "1"))
                                                                  (rule "add_literals" (formula "76") (term "1,1,1"))
                                                                  (rule "times_zero_1" (formula "76") (term "1,1"))
                                                                  (rule "add_zero_right" (formula "76") (term "1"))
                                                                  (rule "applyEq" (formula "61") (term "4,1,0,1,0,1,0") (ifseqformula "55"))
                                                                  (rule "inEqSimp_invertInEq0" (formula "52"))
                                                                  (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                                                  (rule "times_zero_2" (formula "52") (term "1"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "51"))
                                                                  (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "51") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "50"))
                                                                  (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "50") (term "0"))
                                                                  (rule "elimGcdGeq_antec" (formula "52") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "polySimp_mulLiterals" (formula "52") (term "1,0,1,0"))
                                                                  (rule "add_zero_right" (formula "52") (term "0,0,0,1,0"))
                                                                  (rule "leq_literals" (formula "52") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "52") (term "1,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "52") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "52") (term "0,0"))
                                                                  (rule "add_literals" (formula "52") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "52") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "52") (term "0,0"))
                                                                  (rule "leq_literals" (formula "52") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "50"))
                                                                  (rule "mul_literals" (formula "18") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "18") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                                  (rule "elimGcdLeq_antec" (formula "18") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "leq_literals" (formula "18") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "neg_literal" (formula "18") (term "0,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "18") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "18") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "18") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "18") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "18") (term "0,0"))
                                                                  (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "18") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "18") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "27"))
                                                                  (rule "polySimp_rightDist" (formula "52") (term "0,0"))
                                                                  (rule "mul_literals" (formula "52") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "52") (term "0"))
                                                                  (rule "add_literals" (formula "52") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "52"))
                                                                  (rule "mul_literals" (formula "52") (term "1"))
                                                                  (rule "inEqSimp_subsumption6" (formula "52") (ifseqformula "54"))
                                                                  (rule "mul_literals" (formula "52") (term "1,1,0"))
                                                                  (rule "greater_literals" (formula "52") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "leq_literals" (formula "52") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "true_left" (formula "52"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "54") (ifseqformula "22"))
                                                                  (rule "polySimp_rightDist" (formula "54") (term "0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "54") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "54") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "54") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "54") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "54"))
                                                                  (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "54") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "51") (ifseqformula "54"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "51") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                                                                  (rule "mul_literals" (formula "51") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "51") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "51") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "51") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,0"))
                                                                  (rule "add_literals" (formula "51") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "51") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "51") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "51") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "51"))
                                                                  (rule "true_left" (formula "51"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "54") (ifseqformula "24"))
                                                                  (rule "polySimp_rightDist" (formula "54") (term "0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "54") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "54") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "54") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "54") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "54") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "54") (term "0"))
                                                                  (rule "add_literals" (formula "54") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "54") (term "1,0"))
                                                                  (rule "polySimp_addLiterals" (formula "54") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "54") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "54"))
                                                                  (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                                                  (rule "inEqSimp_subsumption4" (formula "54") (ifseqformula "18"))
                                                                  (rule "greater_literals" (formula "54") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "54"))
                                                                  (rule "mul_literals" (formula "54") (term "0,0"))
                                                                  (rule "leq_literals" (formula "54") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "54"))
                                                                  (rule "true_left" (formula "54"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "53"))
                                                                  (rule "mul_literals" (formula "19") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "19") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                                  (rule "elimGcdLeq_antec" (formula "19") (inst "elimGcdRightDiv=Z(7(2(1(#))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,1,0"))
                                                                  (rule "neg_literal" (formula "19") (term "0,0,0,0,0,1,0"))
                                                                  (rule "leq_literals" (formula "19") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                                                  (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "19") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "19") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "inEqSimp_subsumption0" (formula "18") (ifseqformula "19"))
                                                                  (rule "leq_literals" (formula "18") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "18"))
                                                                  (rule "true_left" (formula "18"))
                                                                  (rule "Contract_axiom_for_initialReadAreasCount_in_BucketPointers" (formula "86") (term "0"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "1,0,0") (ifseqformula "71"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,1,0,0") (ifseqformula "49"))
                                                                  (rule "wellFormedAnonEQ" (formula "86") (term "1,0,0,0") (ifseqformula "71"))
                                                                  (rule "wellFormedAnonEQ" (formula "86") (term "0,1,0,0,0") (ifseqformula "49"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,0,1,0,0") (ifseqformula "36"))
                                                                  (rule "wellFormedAnonEQ" (formula "86") (term "0,0,1,0,0,0") (ifseqformula "36"))
                                                                  (rule "replace_known_left" (formula "86") (term "1,1,1") (ifseqformula "81"))
                                                                   (builtin "One Step Simplification" (formula "86") (ifInst ""  (formula "82")) (ifInst ""  (formula "165")) (ifInst ""  (formula "10")) (ifInst ""  (formula "35")) (ifInst ""  (formula "48")) (ifInst ""  (formula "70")) (ifInst ""  (formula "111")) (ifInst ""  (formula "112")) (ifInst ""  (formula "113")) (ifInst ""  (formula "73")) (ifInst ""  (formula "114")) (ifInst ""  (formula "82")) (ifInst ""  (formula "87")))
                                                                  (rule "true_left" (formula "86"))
                                                                  (rule "Contract_axiom_for_blockAligned_in_Buffers" (formula "84") (term "1"))
                                                                   (builtin "One Step Simplification" (formula "84"))
                                                                  (rule "translateJavaSubInt" (formula "84") (term "0,1,1,1"))
                                                                  (rule "polySimp_elimSub" (formula "84") (term "0,1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "84") (term "1,0,1,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "84") (term "1,0,1,1,1"))
                                                                  (rule "polySimp_mulAssoc" (formula "84") (term "0,1,0,1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "84") (term "0,0,1,0,1,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "84") (term "0,1,0,1,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "84") (term "0,1,0,1,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "84") (term "0,1,1,1"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "84") (term "1,1,1"))
                                                                  (rule "mul_literals" (formula "84") (term "1,0,0,1,1,1"))
                                                                  (rule "add_literals" (formula "84") (term "0,0,1,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "84") (term "0,1,1,1"))
                                                                  (rule "polySimp_addAssoc" (formula "84") (term "0,0,1,1,1"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "84") (term "0,0"))
                                                                  (rule "mul_literals" (formula "84") (term "1,0,0,0"))
                                                                  (rule "add_zero_right" (formula "84") (term "0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "84") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "84") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "84") (term "1,0,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "84") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "84") (term "0,0,1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "84") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "84") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "84") (term "0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "84") (term "1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "84") (term "1,1,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "84") (term "1,1,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "84") (term "1,1,1,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "84") (term "1,1,1,1,1"))
                                                                  (rule "polySimp_rightDist" (formula "84") (term "0,1,1,1,1"))
                                                                  (rule "mul_literals" (formula "84") (term "0,0,1,1,1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "84") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "84") (term "1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "84") (term "1,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "84") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "84") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "84") (term "0,1,0"))
                                                                  (rule "replace_known_left" (formula "84") (term "1,0") (ifseqformula "24"))
                                                                   (builtin "One Step Simplification" (formula "84"))
                                                                  (rule "inEqSimp_subsumption1" (formula "84") (term "0") (ifseqformula "28"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "84") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "84") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "84") (term "1,1,0,0,0"))
                                                                  (rule "times_zero_1" (formula "84") (term "1,0,0,0"))
                                                                  (rule "add_literals" (formula "84") (term "0,0,0"))
                                                                  (rule "qeq_literals" (formula "84") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "84"))
                                                                  (rule "andLeft" (formula "84"))
                                                                  (rule "andLeft" (formula "85"))
                                                                  (rule "Definition_axiom_for_blockAligned_in_de_wiesler_Buffers" (formula "87") (term "1"))
                                                                   (builtin "One Step Simplification" (formula "87"))
                                                                  (rule "translateJavaAddInt" (formula "87") (term "0,0,1"))
                                                                  (rule "translateJavaUnaryMinusInt" (formula "87") (term "1,1"))
                                                                  (rule "neg_literal" (formula "87") (term "1,1"))
                                                                  (rule "translateJavaSubInt" (formula "87") (term "0,1"))
                                                                  (rule "polySimp_elimSub" (formula "87") (term "0,1"))
                                                                  (rule "mul_literals" (formula "87") (term "1,0,1"))
                                                                  (rule "polySimp_addLiterals" (formula "87") (term "0,1"))
                                                                  (rule "polySimp_addComm1" (formula "87") (term "0,1"))
                                                                  (rule "polySimp_addComm0" (formula "87") (term "0,0,1"))
                                                                  (rule "Contract_axiom_for_isEmpty_in_Buffers" (formula "45") (term "0") (inst "element=element"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "45") (term "1,0,0") (ifseqformula "36"))
                                                                  (rule "wellFormedAnonEQ" (formula "45") (term "1,0,0,0") (ifseqformula "36"))
                                                                  (rule "expand_inInt" (formula "45") (term "0,0,1,0,1,1,1"))
                                                                  (rule "replace_int_MIN" (formula "45") (term "0,1,0,0,1,0,1,1,1"))
                                                                  (rule "replace_int_MAX" (formula "45") (term "1,0,0,0,1,0,1,1,1"))
                                                                  (rule "replace_known_left" (formula "45") (term "0,0,1,1,1") (ifseqformula "46"))
                                                                   (builtin "One Step Simplification" (formula "45") (ifInst ""  (formula "48")) (ifInst ""  (formula "10")) (ifInst ""  (formula "35")) (ifInst ""  (formula "118")) (ifInst ""  (formula "38")) (ifInst ""  (formula "119")) (ifInst ""  (formula "48")) (ifInst ""  (formula "46")) (ifInst ""  (formula "47")))
                                                                  (rule "andLeft" (formula "45"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "46") (term "1,0,0"))
                                                                  (rule "Definition_axiom_for_isAtInitialState_in_de_wiesler_BucketPointers" (formula "80") (term "0") (inst "b=b"))
                                                                   (builtin "One Step Simplification" (formula "80"))
                                                                  (rule "expand_inInt" (formula "80") (term "1,0,0"))
                                                                  (rule "replace_int_MIN" (formula "80") (term "0,1,1,0,0"))
                                                                  (rule "replace_int_MAX" (formula "80") (term "1,0,1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "80") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "80") (term "1,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "80") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "80") (term "1,1,0,0"))
                                                                  (rule "applyEq" (formula "80") (term "0,1,0,0,1,0,0,0") (ifseqformula "77"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "80") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "80") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "80") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "80") (term "1,1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "80") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "80") (term "1,1,1,0,0,0"))
                                                                  (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "101") (inst "b=b"))
                                                                   (builtin "One Step Simplification" (formula "101"))
                                                                  (rule "expand_inInt" (formula "101") (term "1,0,0,1"))
                                                                  (rule "replace_int_MAX" (formula "101") (term "1,0,1,0,0,1"))
                                                                  (rule "replace_int_MIN" (formula "101") (term "0,1,1,0,0,1"))
                                                                  (rule "andLeft" (formula "101"))
                                                                  (rule "andLeft" (formula "101"))
                                                                  (rule "andLeft" (formula "102"))
                                                                  (rule "andLeft" (formula "101"))
                                                                  (rule "andLeft" (formula "101"))
                                                                  (rule "andLeft" (formula "102"))
                                                                  (rule "andLeft" (formula "101"))
                                                                  (rule "andLeft" (formula "103"))
                                                                  (rule "andLeft" (formula "103"))
                                                                  (rule "translateJavaCastInt" (formula "108") (term "0"))
                                                                  (rule "translateJavaAddInt" (formula "107") (term "1"))
                                                                  (rule "translateJavaMulInt" (formula "102") (term "0"))
                                                                  (rule "translateJavaMulInt" (formula "101") (term "1"))
                                                                  (rule "translateJavaCastInt" (formula "105") (term "0"))
                                                                  (rule "translateJavaCastInt" (formula "104") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "102") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "101") (term "1"))
                                                                  (rule "polySimp_addComm0" (formula "107") (term "1"))
                                                                  (rule "castedGetAny" (formula "108") (term "0"))
                                                                  (rule "castedGetAny" (formula "105") (term "0"))
                                                                  (rule "castedGetAny" (formula "104") (term "1"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "110") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "110") (term "1,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "110") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "110") (term "1,1,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "103"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "101"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "104"))
                                                                  (rule "applyEq" (formula "104") (term "1,0") (ifseqformula "77"))
                                                                  (rule "applyEq" (formula "104") (term "1") (ifseqformula "79"))
                                                                  (rule "applyEq" (formula "101") (term "0,0") (ifseqformula "77"))
                                                                  (rule "applyEq" (formula "105") (term "1,0") (ifseqformula "77"))
                                                                  (rule "applyEq" (formula "103") (term "0") (ifseqformula "79"))
                                                                  (rule "applyEq" (formula "106") (term "0,0") (ifseqformula "79"))
                                                                  (rule "applyEq" (formula "102") (term "0,0") (ifseqformula "77"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "102"))
                                                                  (rule "applyEq" (formula "104") (term "0") (ifseqformula "63"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "104"))
                                                                  (rule "polySimp_mulComm0" (formula "104") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "104") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "104") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "104") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "104") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "104") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "104") (term "0"))
                                                                  (rule "applyEq" (formula "107") (term "1,1") (ifseqformula "77"))
                                                                  (rule "applyEq" (formula "110") (term "0,1,0,0,1,0,0,0") (ifseqformula "77"))
                                                                  (rule "applyEq" (formula "105") (term "0") (ifseqformula "63"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "105"))
                                                                  (rule "polySimp_mulComm0" (formula "105") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "105") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "105") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "105") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "105") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "105") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "105") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "104"))
                                                                  (rule "polySimp_mulLiterals" (formula "104") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "104") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "109") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "109") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "109") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "109") (term "1,1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "109") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "109") (term "1,1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "104"))
                                                                  (rule "polySimp_mulLiterals" (formula "104") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "104") (term "0"))
                                                                  (rule "inEqSimp_subsumption6" (formula "103") (ifseqformula "54"))
                                                                  (rule "greater_literals" (formula "103") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "103"))
                                                                  (rule "mul_literals" (formula "103") (term "1,0"))
                                                                  (rule "leq_literals" (formula "103") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "103"))
                                                                  (rule "true_left" (formula "103"))
                                                                  (rule "elimGcdGeq_antec" (formula "101") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=result_175") (inst "elimGcd=Z(2(#))"))
                                                                  (rule "polySimp_mulLiterals" (formula "101") (term "1,0,0,0,0,1,0"))
                                                                  (rule "leq_literals" (formula "101") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "101"))
                                                                  (rule "add_zero_right" (formula "101") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "101") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "101") (term "1,0,0,0,0"))
                                                                  (rule "add_literals" (formula "101") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "101") (term "0,0"))
                                                                  (rule "add_literals" (formula "101") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "101") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "101") (term "0,0"))
                                                                  (rule "leq_literals" (formula "101") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "101"))
                                                                  (rule "replace_known_left" (formula "62") (term "0,0") (ifseqformula "101"))
                                                                   (builtin "One Step Simplification" (formula "62"))
                                                                  (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "101"))
                                                                  (rule "leq_literals" (formula "32") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "32"))
                                                                  (rule "true_left" (formula "32"))
                                                                  (rule "Free_class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "82") (inst "b=b"))
                                                                   (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "105")))
                                                                  (rule "expand_inInt" (formula "82") (term "1,0,0,1"))
                                                                  (rule "replace_int_MAX" (formula "82") (term "1,0,1,0,0,1"))
                                                                  (rule "replace_int_MIN" (formula "82") (term "0,1,1,0,0,1"))
                                                                  (rule "andLeft" (formula "82"))
                                                                  (rule "andLeft" (formula "82"))
                                                                  (rule "andLeft" (formula "82"))
                                                                  (rule "andLeft" (formula "82"))
                                                                  (rule "andLeft" (formula "83"))
                                                                  (rule "andLeft" (formula "82"))
                                                                  (rule "andLeft" (formula "84"))
                                                                  (rule "andLeft" (formula "84"))
                                                                  (rule "translateJavaCastInt" (formula "89") (term "0"))
                                                                  (rule "translateJavaAddInt" (formula "88") (term "1"))
                                                                  (rule "translateJavaMulInt" (formula "83") (term "0"))
                                                                  (rule "translateJavaMulInt" (formula "82") (term "1"))
                                                                  (rule "translateJavaCastInt" (formula "86") (term "0"))
                                                                  (rule "translateJavaCastInt" (formula "85") (term "1"))
                                                                  (rule "polySimp_mulComm0" (formula "83") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "82") (term "1"))
                                                                  (rule "polySimp_addComm0" (formula "88") (term "1"))
                                                                  (rule "castedGetAny" (formula "89") (term "0"))
                                                                  (rule "castedGetAny" (formula "86") (term "0"))
                                                                  (rule "castedGetAny" (formula "85") (term "1"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "89") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "89") (term "1,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "89") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "89") (term "1,1,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "84"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "82"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "85"))
                                                                  (rule "applyEq" (formula "110") (term "0") (ifseqformula "88"))
                                                                  (rule "polySimp_homoEq" (formula "110"))
                                                                  (rule "polySimp_mulComm0" (formula "110") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "110") (term "1,0"))
                                                                  (rule "mul_literals" (formula "110") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "110") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "110") (term "0,0"))
                                                                  (rule "add_literals" (formula "110") (term "0,0,0"))
                                                                  (rule "add_zero_left" (formula "110") (term "0,0"))
                                                                  (rule "applyEq" (formula "87") (term "0,0") (ifseqformula "78"))
                                                                  (rule "applyEq" (formula "83") (term "0,0") (ifseqformula "76"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "83"))
                                                                  (rule "applyEq" (formula "82") (term "0,0") (ifseqformula "76"))
                                                                  (rule "applyEq" (formula "84") (term "1") (ifseqformula "78"))
                                                                  (rule "applyEq" (formula "85") (term "1,0") (ifseqformula "76"))
                                                                  (rule "applyEq" (formula "83") (term "0") (ifseqformula "78"))
                                                                  (rule "applyEq" (formula "84") (term "1,0") (ifseqformula "76"))
                                                                  (rule "applyEq" (formula "87") (term "0,1,0,0,1,0,0,0") (ifseqformula "76"))
                                                                  (rule "applyEq" (formula "108") (term "0,1,0") (ifseqformula "76"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "108") (term "0"))
                                                                  (rule "add_literals" (formula "108") (term "1,0"))
                                                                  (rule "times_zero_1" (formula "108") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "108"))
                                                                  (rule "true_left" (formula "108"))
                                                                  (rule "applyEq" (formula "85") (term "0") (ifseqformula "62"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "85"))
                                                                  (rule "polySimp_mulComm0" (formula "85") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "85") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "85") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "85") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "85") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "85") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "85") (term "0"))
                                                                  (rule "applyEq" (formula "84") (term "0") (ifseqformula "62"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "84"))
                                                                  (rule "polySimp_mulComm0" (formula "84") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "84") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "84") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "84") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "84") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "84") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "84") (term "0"))
                                                                  (rule "applyEq" (formula "86") (term "1,1") (ifseqformula "76"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "87") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "87") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "87") (term "1,1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "87") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "87") (term "1,1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "85"))
                                                                  (rule "polySimp_mulLiterals" (formula "85") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "85") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "84"))
                                                                  (rule "polySimp_mulLiterals" (formula "84") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "84") (term "0"))
                                                                  (rule "inEqSimp_subsumption6" (formula "82") (ifseqformula "103"))
                                                                  (rule "times_zero_1" (formula "82") (term "1,1,0"))
                                                                  (rule "greater_literals" (formula "82") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "82"))
                                                                  (rule "leq_literals" (formula "82") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "82"))
                                                                  (rule "true_left" (formula "82"))
                                                                  (rule "inEqSimp_subsumption6" (formula "82") (ifseqformula "53"))
                                                                  (rule "mul_literals" (formula "82") (term "1,1,0"))
                                                                  (rule "greater_literals" (formula "82") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "82"))
                                                                  (rule "leq_literals" (formula "82") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "82"))
                                                                  (rule "true_left" (formula "82"))
                                                                  (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "67"))
                                                                  (rule "andLeft" (formula "67"))
                                                                  (rule "notLeft" (formula "68"))
                                                                  (rule "notLeft" (formula "67"))
                                                                  (rule "Definition_axiom_for_isEmpty_in_de_wiesler_Buffers" (formula "46") (term "0") (inst "b=b"))
                                                                   (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "expand_inInt" (formula "46") (term "1,0,0"))
                                                                  (rule "replace_int_MAX" (formula "46") (term "1,0,1,0,0"))
                                                                  (rule "replace_int_MIN" (formula "46") (term "0,1,1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "46") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "46") (term "1,1,0,0"))
                                                                  (rule "applyEq" (formula "46") (term "0,1,0,0,1,0,0,0") (ifseqformula "39"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "46") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "46") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "46") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0,0,0"))
                                                                  (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "174"))
                                                                  (rule "replace_known_right" (formula "174") (term "0,1") (ifseqformula "113"))
                                                                   (builtin "One Step Simplification" (formula "174") (ifInst ""  (formula "112")))
                                                                  (rule "closeTrue" (formula "174"))
                                                               )
                                                               (branch "Case 2"
                                                                  (rule "notRight" (formula "158"))
                                                                  (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "true_left" (formula "9"))
                                                                  (rule "polySimp_homoEq" (formula "64") (term "0,1,0"))
                                                                  (rule "polySimp_homoEq" (formula "65") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "65") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "64") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "0,0,1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "64") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "64") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "31"))
                                                                  (rule "mul_literals" (formula "31") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "31") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "30") (term "0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "93") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "97") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "81") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "81") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "81") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "81") (term "1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "81") (term "1,1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "81") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "81") (term "0,0,1,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "81") (term "0,0,0,1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "81") (term "0,0,1,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "81") (term "0,0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "81") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "81") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "28"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "62") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "62") (term "0,1,0,0"))
                                                                  (rule "add_literals" (formula "62") (term "1,0,1,0,0"))
                                                                  (rule "times_zero_1" (formula "62") (term "0,1,0,0"))
                                                                  (rule "qeq_literals" (formula "62") (term "1,0,0"))
                                                                   (builtin "One Step Simplification" (formula "62"))
                                                                  (rule "applyEq" (formula "147") (term "0") (ifseqformula "1"))
                                                                  (rule "eqSymm" (formula "147"))
                                                                  (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "147"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "replace_known_right" (formula "44") (term "0") (ifseqformula "147"))
                                                                   (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "applyEq" (formula "98") (term "5,0,1,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "117") (term "0") (ifseqformula "1"))
                                                                  (rule "eqSymm" (formula "117"))
                                                                  (rule "applyEq" (formula "149") (term "0") (ifseqformula "1"))
                                                                  (rule "eqSymm" (formula "149"))
                                                                  (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "149"))
                                                                   (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "replace_known_right" (formula "46") (term "0") (ifseqformula "149"))
                                                                   (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "applyEq" (formula "151") (term "1") (ifseqformula "1"))
                                                                  (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "151"))
                                                                   (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "applyEq" (formula "124") (term "0") (ifseqformula "1"))
                                                                  (rule "eqSymm" (formula "124"))
                                                                  (rule "applyEq" (formula "136") (term "0") (ifseqformula "1"))
                                                                  (rule "eqSymm" (formula "136"))
                                                                  (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "136"))
                                                                   (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "applyEq" (formula "141") (term "0") (ifseqformula "1"))
                                                                  (rule "eqSymm" (formula "141"))
                                                                  (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "141"))
                                                                   (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "141"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "applyEq" (formula "151") (term "1") (ifseqformula "1"))
                                                                  (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "151"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "applyEq" (formula "97") (term "6,0,0,0,1,0") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "130") (term "1") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "95") (term "0,1,0,0,0,1,0") (ifseqformula "1"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "65") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "65") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "65") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "65") (term "0,1,1,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "64") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "64") (term "0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "64") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "31") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                                                  (rule "mul_literals" (formula "31") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "93") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "93") (term "1,1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "93") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "93") (term "1,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "97") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "97") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "97") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "97") (term "1,1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "97") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "97") (term "1,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "81") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "81") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "81") (term "1,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "81") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "81") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "81") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "81") (term "0,0,1,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                                  (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "22"))
                                                                  (rule "leq_literals" (formula "13") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "true_left" (formula "13"))
                                                                  (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "30"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                                                  (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "22") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "22") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "22"))
                                                                  (rule "true_left" (formula "22"))
                                                                  (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "24"))
                                                                  (rule "leq_literals" (formula "23") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "true_left" (formula "23"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "25"))
                                                                  (rule "mul_literals" (formula "14") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                                                  (rule "add_literals" (formula "14") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                                  (rule "mul_literals" (formula "14") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "22"))
                                                                  (rule "leq_literals" (formula "14") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "14"))
                                                                  (rule "true_left" (formula "14"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "51"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "53") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "53"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "13"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                                  (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                                  (rule "add_literals" (formula "28") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "28"))
                                                                  (rule "leq_literals" (formula "12") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "true_left" (formula "12"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "54"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "53"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "53") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "53") (ifseqformula "28"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "53") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0"))
                                                                  (rule "add_literals" (formula "53") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "53") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "53") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "53") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "53"))
                                                                  (rule "true_left" (formula "53"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "54"))
                                                                  (rule "mul_literals" (formula "52") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "52"))
                                                                  (rule "mul_literals" (formula "52") (term "1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "21"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "23") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "23"))
                                                                  (rule "leq_literals" (formula "12") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "true_left" (formula "12"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "22"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                                  (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                                  (rule "add_literals" (formula "28") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "27") (ifseqformula "28"))
                                                                  (rule "leq_literals" (formula "27") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "27"))
                                                                  (rule "true_left" (formula "27"))
                                                                  (rule "inEqSimp_and_subsumption2" (formula "79") (term "0,0,0,0"))
                                                                  (rule "leq_literals" (formula "79") (term "0,0,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "79"))
                                                                  (rule "inEqSimp_and_subsumption3" (formula "26") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "26") (term "0,1,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "26"))
                                                                  (rule "inEqSimp_and_subsumption3" (formula "90") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "90") (term "0,1,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "90"))
                                                                  (rule "inEqSimp_and_subsumption3" (formula "94") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "94") (term "0,1,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "94"))
                                                                  (rule "inEqSimp_and_subsumption3" (formula "78") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "78") (term "0,1,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "78"))
                                                                  (rule "inEqSimp_and_subsumption3" (formula "61") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "61") (term "0,1,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "61"))
                                                                  (rule "commuteUnion" (formula "92") (term "0,0,0,1,0"))
                                                                  (rule "nnf_imp2or" (formula "95") (term "0"))
                                                                  (rule "nnf_imp2or" (formula "62") (term "0"))
                                                                  (rule "nnf_imp2or" (formula "79") (term "0"))
                                                                  (rule "nnf_imp2or" (formula "26") (term "0"))
                                                                  (rule "nnf_imp2or" (formula "90") (term "0"))
                                                                  (rule "nnf_imp2or" (formula "94") (term "0"))
                                                                  (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "81"))
                                                                  (rule "notLeft" (formula "81"))
                                                                  (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "96"))
                                                                   (builtin "One Step Simplification" (formula "96"))
                                                                  (rule "andLeft" (formula "96"))
                                                                  (rule "andLeft" (formula "96"))
                                                                  (rule "andLeft" (formula "96"))
                                                                  (rule "andLeft" (formula "96"))
                                                                  (rule "andLeft" (formula "96"))
                                                                  (rule "andLeft" (formula "96"))
                                                                  (rule "translateJavaSubInt" (formula "101") (term "0,2,0"))
                                                                  (rule "translateJavaSubInt" (formula "101") (term "0,2,1"))
                                                                  (rule "translateJavaMulInt" (formula "98") (term "1,1"))
                                                                  (rule "eqSymm" (formula "101"))
                                                                  (rule "eqSymm" (formula "98"))
                                                                  (rule "polySimp_elimSub" (formula "101") (term "0,2,1"))
                                                                  (rule "mul_literals" (formula "101") (term "1,0,2,1"))
                                                                  (rule "polySimp_elimSub" (formula "101") (term "0,2,0"))
                                                                  (rule "mul_literals" (formula "101") (term "1,0,2,0"))
                                                                  (rule "polySimp_mulComm0" (formula "98") (term "1,0"))
                                                                  (rule "polySimp_addComm0" (formula "101") (term "0,2,1"))
                                                                  (rule "polySimp_addComm0" (formula "101") (term "0,2,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "96"))
                                                                  (rule "applyEq" (formula "97") (term "0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "96") (term "0") (ifseqformula "33"))
                                                                  (rule "applyEq" (formula "98") (term "1") (ifseqformula "33"))
                                                                  (rule "inEqSimp_subsumption0" (formula "31") (ifseqformula "97"))
                                                                  (rule "leq_literals" (formula "31") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "31"))
                                                                  (rule "true_left" (formula "31"))
                                                                  (rule "inEqSimp_subsumption1" (formula "58") (term "0,0") (ifseqformula "95"))
                                                                  (rule "leq_literals" (formula "58") (term "0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "58"))
                                                                  (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "95"))
                                                                  (rule "leq_literals" (formula "31") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "31"))
                                                                  (rule "true_left" (formula "31"))
                                                                  (rule "pullOutSelect" (formula "99") (term "1") (inst "selectSK=arr_3"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "100") (ifseqformula "89"))
                                                                   (builtin "One Step Simplification" (formula "100") (ifInst ""  (formula "137")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,1,0,0") (ifseqformula "68"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,0,1,0,0") (ifseqformula "47"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,0,0,1,0,0") (ifseqformula "34"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "99") (ifseqformula "89"))
                                                                   (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "137")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,1,0,0") (ifseqformula "68"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,1,0,0") (ifseqformula "47"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,0,1,0,0") (ifseqformula "34"))
                                                                  (rule "replace_known_left" (formula "100") (term "0,0,0,0,1,0,0") (ifseqformula "7"))
                                                                   (builtin "One Step Simplification" (formula "100"))
                                                                  (rule "replace_known_left" (formula "99") (term "0,0,0,0,1,0,0") (ifseqformula "7"))
                                                                   (builtin "One Step Simplification" (formula "99"))
                                                                  (rule "elementOfUnion" (formula "100") (term "0,0"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "100") (term "1,0,0"))
                                                                  (rule "replace_known_right" (formula "100") (term "0,0,1,0,0") (ifseqformula "112"))
                                                                   (builtin "One Step Simplification" (formula "100"))
                                                                  (rule "elementOfUnion" (formula "99") (term "0,0"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "99") (term "1,0,0"))
                                                                  (rule "replace_known_right" (formula "99") (term "0,0,1,0,0") (ifseqformula "112"))
                                                                   (builtin "One Step Simplification" (formula "99"))
                                                                  (rule "elementOfUnion" (formula "100") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "100"))
                                                                  (rule "eqSymm" (formula "100") (term "1,0,0"))
                                                                  (rule "replace_known_right" (formula "100") (term "1,0,0") (ifseqformula "136"))
                                                                   (builtin "One Step Simplification" (formula "100"))
                                                                  (rule "elementOfUnion" (formula "99") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "99"))
                                                                  (rule "eqSymm" (formula "99") (term "1,0,0"))
                                                                  (rule "replace_known_right" (formula "99") (term "1,0,0") (ifseqformula "136"))
                                                                   (builtin "One Step Simplification" (formula "99"))
                                                                  (rule "elementOfUnion" (formula "100") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "100"))
                                                                  (rule "eqSymm" (formula "100") (term "1,0,0"))
                                                                  (rule "replace_known_right" (formula "100") (term "1,0,0") (ifseqformula "135"))
                                                                   (builtin "One Step Simplification" (formula "100"))
                                                                  (rule "elementOfUnion" (formula "99") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "99"))
                                                                  (rule "eqSymm" (formula "99") (term "1,0,0"))
                                                                  (rule "replace_known_right" (formula "99") (term "1,0,0") (ifseqformula "135"))
                                                                   (builtin "One Step Simplification" (formula "99"))
                                                                  (rule "elementOfUnion" (formula "100") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "100") (ifInst ""  (formula "137")) (ifInst ""  (formula "132")))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "100") (ifseqformula "68"))
                                                                   (builtin "One Step Simplification" (formula "100") (ifInst ""  (formula "137")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,1,0,0") (ifseqformula "47"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,0,1,0,0") (ifseqformula "34"))
                                                                  (rule "replace_known_left" (formula "100") (term "0,0,0,1,0,0") (ifseqformula "7"))
                                                                   (builtin "One Step Simplification" (formula "100"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "100") (term "0,0"))
                                                                  (rule "replace_known_right" (formula "100") (term "0,0,0,0") (ifseqformula "132"))
                                                                   (builtin "One Step Simplification" (formula "100"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "100") (ifseqformula "47"))
                                                                   (builtin "One Step Simplification" (formula "100") (ifInst ""  (formula "137")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "100") (term "0,1,0,0") (ifseqformula "34"))
                                                                  (rule "replace_known_left" (formula "100") (term "0,0,1,0,0") (ifseqformula "7"))
                                                                   (builtin "One Step Simplification" (formula "100"))
                                                                  (rule "elementOfUnion" (formula "99") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "137")) (ifInst ""  (formula "132")))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "99") (ifseqformula "68"))
                                                                   (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "137")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,1,0,0") (ifseqformula "47"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,0,1,0,0") (ifseqformula "34"))
                                                                  (rule "replace_known_left" (formula "99") (term "0,0,0,1,0,0") (ifseqformula "7"))
                                                                   (builtin "One Step Simplification" (formula "99"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "99") (term "0,0"))
                                                                  (rule "replace_known_right" (formula "99") (term "0,0,0,0") (ifseqformula "132"))
                                                                   (builtin "One Step Simplification" (formula "99"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "99") (ifseqformula "47"))
                                                                   (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "137")))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "99") (term "0,1,0,0") (ifseqformula "34"))
                                                                  (rule "replace_known_left" (formula "99") (term "0,0,1,0,0") (ifseqformula "7"))
                                                                   (builtin "One Step Simplification" (formula "99"))
                                                                  (rule "elementOfUnion" (formula "100") (term "0,0"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "100") (term "1,0,0"))
                                                                  (rule "replace_known_right" (formula "100") (term "0,0,1,0,0") (ifseqformula "134"))
                                                                   (builtin "One Step Simplification" (formula "100"))
                                                                  (rule "elementOfUnion" (formula "99") (term "0,0"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "99") (term "1,0,0"))
                                                                  (rule "replace_known_right" (formula "99") (term "0,0,1,0,0") (ifseqformula "134"))
                                                                   (builtin "One Step Simplification" (formula "99"))
                                                                  (rule "elementOfUnion" (formula "100") (term "0,0"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "100") (term "1,0,0"))
                                                                  (rule "replace_known_right" (formula "100") (term "0,0,1,0,0") (ifseqformula "133"))
                                                                   (builtin "One Step Simplification" (formula "100"))
                                                                  (rule "elementOfUnion" (formula "99") (term "0,0"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "99") (term "1,0,0"))
                                                                  (rule "replace_known_right" (formula "99") (term "0,0,1,0,0") (ifseqformula "133"))
                                                                   (builtin "One Step Simplification" (formula "99"))
                                                                  (rule "elementOfUnion" (formula "100") (term "0,0"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "100") (term "0,0,0"))
                                                                  (rule "replace_known_right" (formula "100") (term "0,0,0,0,0") (ifseqformula "119"))
                                                                   (builtin "One Step Simplification" (formula "100"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "100") (term "0,0"))
                                                                  (rule "replace_known_right" (formula "100") (term "0,0,0,0") (ifseqformula "112"))
                                                                   (builtin "One Step Simplification" (formula "100"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "100") (ifseqformula "34"))
                                                                   (builtin "One Step Simplification" (formula "100") (ifInst ""  (formula "137")) (ifInst ""  (formula "7")))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "100") (term "0,0"))
                                                                  (rule "replace_known_right" (formula "100") (term "0,0,0,0") (ifseqformula "134"))
                                                                   (builtin "One Step Simplification" (formula "100"))
                                                                  (rule "applyEqReverse" (formula "99") (term "1") (ifseqformula "100"))
                                                                  (rule "hideAuxiliaryEq" (formula "100"))
                                                                  (rule "elementOfUnion" (formula "99") (term "0,0"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "99") (term "0,0,0"))
                                                                  (rule "replace_known_right" (formula "99") (term "0,0,0,0,0") (ifseqformula "118"))
                                                                   (builtin "One Step Simplification" (formula "99"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "99") (term "0,0"))
                                                                  (rule "replace_known_right" (formula "99") (term "0,0,0,0") (ifseqformula "111"))
                                                                   (builtin "One Step Simplification" (formula "99"))
                                                                  (rule "pullOutSelect" (formula "99") (term "0") (inst "selectSK=arr_4"))
                                                                  (rule "simplifySelectOfAnonEQ" (formula "99") (ifseqformula "34"))
                                                                   (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "137")) (ifInst ""  (formula "7")))
                                                                  (rule "eqSymm" (formula "100"))
                                                                  (rule "applyEqReverse" (formula "99") (term "1") (ifseqformula "100"))
                                                                  (rule "hideAuxiliaryEq" (formula "100"))
                                                                  (rule "elementOfArrayRangeConcrete" (formula "99") (term "0,0"))
                                                                  (rule "replace_known_right" (formula "99") (term "0,0,0,0") (ifseqformula "133"))
                                                                   (builtin "One Step Simplification" (formula "99"))
                                                                  (rule "eqSymm" (formula "99"))
                                                                  (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "81") (term "0"))
                                                                  (rule "translateJavaCastInt" (formula "81") (term "0,0"))
                                                                  (rule "castedGetAny" (formula "81") (term "0,0"))
                                                                  (rule "applyEq" (formula "81") (term "0,0") (ifseqformula "58"))
                                                                   (builtin "One Step Simplification" (formula "81"))
                                                                  (rule "true_left" (formula "81"))
                                                                  (rule "Definition_axiom_for_isClassifiedBlocksRange_in_de_wiesler_Classifier" (formula "54") (term "0") (inst "block=block"))
                                                                   (builtin "One Step Simplification" (formula "54"))
                                                                  (rule "expand_inInt" (formula "54") (term "1,0,0"))
                                                                  (rule "replace_int_MAX" (formula "54") (term "1,0,1,0,0"))
                                                                  (rule "replace_int_MIN" (formula "54") (term "0,1,1,0,0"))
                                                                  (rule "translateJavaAddInt" (formula "54") (term "4,0,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "54") (term "3,0,1,0"))
                                                                  (rule "translateJavaDivInt" (formula "54") (term "1,1,0,0,0"))
                                                                  (rule "translateJavaMulInt" (formula "54") (term "1,4,0,1,0"))
                                                                  (rule "translateJavaMulInt" (formula "54") (term "1,3,0,1,0"))
                                                                  (rule "translateJavaSubInt" (formula "54") (term "0,1,1,0,0,0"))
                                                                  (rule "translateJavaAddInt" (formula "54") (term "0,1,4,0,1,0"))
                                                                  (rule "polySimp_elimSub" (formula "54") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "54") (term "1,4,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "54") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "54") (term "1,1,4,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "54") (term "1,4,0,1,0"))
                                                                  (rule "mul_literals" (formula "54") (term "0,1,4,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "54") (term "4,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "54") (term "0,4,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "54") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "54") (term "1,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "54") (term "1,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "54") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "54") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "54") (term "1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "54") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "54") (term "1,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "54") (term "1,1,1,0,0,0"))
                                                                  (rule "Free_class_invariant_axiom_for_de_wiesler_Buffers" (formula "44") (inst "b=b"))
                                                                   (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "expand_inInt" (formula "44") (term "1,0,0,1"))
                                                                  (rule "replace_int_MAX" (formula "44") (term "1,0,1,0,0,1"))
                                                                  (rule "replace_int_MIN" (formula "44") (term "0,1,1,0,0,1"))
                                                                  (rule "andLeft" (formula "44"))
                                                                  (rule "andLeft" (formula "44"))
                                                                  (rule "andLeft" (formula "45"))
                                                                  (rule "andLeft" (formula "44"))
                                                                  (rule "andLeft" (formula "44"))
                                                                  (rule "notLeft" (formula "44"))
                                                                  (rule "translateJavaMulInt" (formula "44") (term "1"))
                                                                  (rule "mul_literals" (formula "44") (term "1"))
                                                                  (rule "eqSymm" (formula "106"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "48") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "48") (term "1,1,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "48") (term "0,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "46"))
                                                                  (rule "applyEq" (formula "47") (term "0") (ifseqformula "38"))
                                                                  (rule "applyEq" (formula "46") (term "0") (ifseqformula "38"))
                                                                  (rule "applyEq" (formula "47") (term "0,1,0,0,1,0,0,0") (ifseqformula "38"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "47") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "47") (term "1,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "47") (term "1,1,1,0,0,0"))
                                                                  (rule "inEqSimp_subsumption1" (formula "46") (ifseqformula "96"))
                                                                  (rule "leq_literals" (formula "46") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "true_left" (formula "46"))
                                                                  (rule "Free_class_invariant_axiom_for_de_wiesler_Buffers" (formula "63") (inst "b=b"))
                                                                   (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "45")))
                                                                  (rule "expand_inInt" (formula "63") (term "1,0,0,1"))
                                                                  (rule "replace_int_MAX" (formula "63") (term "1,0,1,0,0,1"))
                                                                  (rule "replace_int_MIN" (formula "63") (term "0,1,1,0,0,1"))
                                                                  (rule "andLeft" (formula "63"))
                                                                  (rule "andLeft" (formula "63"))
                                                                  (rule "andLeft" (formula "64"))
                                                                  (rule "andLeft" (formula "63"))
                                                                  (rule "notLeft" (formula "63"))
                                                                  (rule "translateJavaMulInt" (formula "63") (term "1"))
                                                                  (rule "mul_literals" (formula "63") (term "1"))
                                                                  (rule "eqSymm" (formula "106"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "65") (term "0,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "65") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "65") (term "1,1,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "63"))
                                                                  (rule "applyEq" (formula "65") (term "0,1,0,0,1,0,0,0") (ifseqformula "38"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "65") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0,0"))
                                                                  (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "55") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "55"))
                                                                  (rule "translateJavaMod" (formula "55") (term "0"))
                                                                  (rule "jmod_axiom" (formula "55") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "55") (term "1,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "55"))
                                                                  (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                                                  (rule "newSym_eq" (formula "55") (inst "l=l_0") (inst "newSymDef=add(mul(begin, Z(0(#))), mul(result_176, Z(0(#))))"))
                                                                  (rule "times_zero_1" (formula "55") (term "0,1,1"))
                                                                  (rule "times_zero_1" (formula "55") (term "1,1,1"))
                                                                  (rule "add_zero_right" (formula "55") (term "1,1"))
                                                                  (rule "add_zero_right" (formula "55") (term "1"))
                                                                  (rule "applyEq" (formula "56") (term "0,0") (ifseqformula "55"))
                                                                  (rule "polySimp_homoEq" (formula "56"))
                                                                  (rule "polySimp_mulLiterals" (formula "56") (term "1,0"))
                                                                  (rule "polySimp_addComm1" (formula "56") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "56") (term "0,0"))
                                                                  (rule "applyEq" (formula "57") (term "1,1,1,0,0,0") (ifseqformula "55"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "56"))
                                                                  (rule "polySimp_mulComm0" (formula "56") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "56") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "56") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "56") (term "1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "56") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "56") (term "0,1"))
                                                                  (rule "applyEq" (formula "51") (term "0") (ifseqformula "56"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "51"))
                                                                  (rule "polySimp_mulComm0" (formula "51") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "51") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "51") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "51") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "51") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "51") (term "0"))
                                                                  (rule "applyEq" (formula "52") (term "0") (ifseqformula "56"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "52"))
                                                                  (rule "polySimp_mulComm0" (formula "52") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "52") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "52") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "52") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "52") (term "0"))
                                                                  (rule "applyEq" (formula "54") (term "0") (ifseqformula "56"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "54"))
                                                                  (rule "applyEq" (formula "53") (term "0") (ifseqformula "56"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "53"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "53") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "53") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "53") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "53") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "53") (term "0"))
                                                                  (rule "add_literals" (formula "53") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "53") (term "1,0"))
                                                                  (rule "add_zero_right" (formula "53") (term "0"))
                                                                  (rule "applyEq" (formula "55") (term "1,0,0") (ifseqformula "56"))
                                                                  (rule "polySimp_addAssoc" (formula "55") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "55") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "55") (term "0,0"))
                                                                  (rule "add_literals" (formula "55") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "55") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "55") (term "0,0"))
                                                                  (rule "applyEq" (formula "63") (term "3,0,1,0") (ifseqformula "56"))
                                                                  (rule "applyEq" (formula "65") (term "0") (ifseqformula "38"))
                                                                  (rule "applyEq" (formula "78") (term "1,1") (ifseqformula "56"))
                                                                  (rule "polySimp_addAssoc" (formula "78") (term "1"))
                                                                  (rule "polySimp_addComm0" (formula "78") (term "0,1"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "78") (term "1"))
                                                                  (rule "add_literals" (formula "78") (term "1,1,1"))
                                                                  (rule "times_zero_1" (formula "78") (term "1,1"))
                                                                  (rule "add_zero_right" (formula "78") (term "1"))
                                                                  (rule "applyEq" (formula "90") (term "4,1,1,0") (ifseqformula "56"))
                                                                  (rule "applyEq" (formula "64") (term "0") (ifseqformula "38"))
                                                                  (rule "applyEq" (formula "62") (term "4,1,0,1,0,1,0") (ifseqformula "56"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "51"))
                                                                  (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "51") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "52"))
                                                                  (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "52") (term "0"))
                                                                  (rule "inEqSimp_invertInEq0" (formula "53"))
                                                                  (rule "times_zero_2" (formula "53") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                  (rule "inEqSimp_subsumption1" (formula "64") (ifseqformula "97"))
                                                                  (rule "leq_literals" (formula "64") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "true_left" (formula "64"))
                                                                  (rule "elimGcdGeq_antec" (formula "53") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "1,0,1,0"))
                                                                  (rule "leq_literals" (formula "53") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "53"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "53") (term "1,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "53") (term "0,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "53") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "53") (term "0,0"))
                                                                  (rule "add_literals" (formula "53") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "53") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "53") (term "0,0"))
                                                                  (rule "leq_literals" (formula "53") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "53"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "51"))
                                                                  (rule "times_zero_1" (formula "19") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "19") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                                  (rule "elimGcdLeq_antec" (formula "19") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                                                                  (rule "neg_literal" (formula "19") (term "0,0,0,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,1,0"))
                                                                  (rule "leq_literals" (formula "19") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                                                  (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "19") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "19") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "28"))
                                                                  (rule "polySimp_rightDist" (formula "53") (term "0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "53") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "53") (term "0"))
                                                                  (rule "add_literals" (formula "53") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "53"))
                                                                  (rule "mul_literals" (formula "53") (term "1"))
                                                                  (rule "inEqSimp_subsumption6" (formula "53") (ifseqformula "55"))
                                                                  (rule "greater_literals" (formula "53") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "53"))
                                                                  (rule "mul_literals" (formula "53") (term "1,0"))
                                                                  (rule "leq_literals" (formula "53") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "53"))
                                                                  (rule "true_left" (formula "53"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "55") (ifseqformula "23"))
                                                                  (rule "polySimp_rightDist" (formula "55") (term "0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "55") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "55") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "55") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "55") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "55"))
                                                                  (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "55") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "52") (ifseqformula "55"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "52") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "52") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "52") (term "0,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "52") (term "0,0"))
                                                                  (rule "polySimp_addComm1" (formula "52") (term "0,0,0"))
                                                                  (rule "add_literals" (formula "52") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "52") (term "0,0"))
                                                                  (rule "add_literals" (formula "52") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "52") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "52") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "52") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "true_left" (formula "52"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "55") (ifseqformula "25"))
                                                                  (rule "polySimp_rightDist" (formula "55") (term "0,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "55") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "55") (term "0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "55") (term "0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "55") (term "0"))
                                                                  (rule "polySimp_addComm1" (formula "55") (term "0,0"))
                                                                  (rule "polySimp_pullOutFactor2b" (formula "55") (term "0"))
                                                                  (rule "add_literals" (formula "55") (term "1,1,0"))
                                                                  (rule "times_zero_1" (formula "55") (term "1,0"))
                                                                  (rule "polySimp_addLiterals" (formula "55") (term "0"))
                                                                  (rule "polySimp_addComm0" (formula "55") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "55"))
                                                                  (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                                                  (rule "inEqSimp_subsumption4" (formula "55") (ifseqformula "19"))
                                                                  (rule "greater_literals" (formula "55") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "55"))
                                                                  (rule "mul_literals" (formula "55") (term "0,0"))
                                                                  (rule "leq_literals" (formula "55") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "55"))
                                                                  (rule "true_left" (formula "55"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "54"))
                                                                  (rule "times_zero_1" (formula "20") (term "0,0"))
                                                                  (rule "add_zero_left" (formula "20") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                                  (rule "elimGcdLeq_antec" (formula "20") (inst "elimGcdRightDiv=Z(7(2(1(#))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                                                                  (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                                                                  (rule "neg_literal" (formula "20") (term "0,0,0,0,0,1,0"))
                                                                  (rule "leq_literals" (formula "20") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_addLiterals" (formula "20") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                                                  (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "20") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "20") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "20"))
                                                                  (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "20"))
                                                                  (rule "leq_literals" (formula "19") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "19"))
                                                                  (rule "true_left" (formula "19"))
                                                                  (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "48"))
                                                                  (rule "andLeft" (formula "48"))
                                                                  (rule "notLeft" (formula "49"))
                                                                  (rule "notLeft" (formula "48"))
                                                                  (rule "Definition_axiom_for_isEmpty_in_de_wiesler_Buffers" (formula "44") (term "0") (inst "b=b"))
                                                                   (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "expand_inInt" (formula "44") (term "1,0,0"))
                                                                  (rule "replace_int_MAX" (formula "44") (term "1,0,1,0,0"))
                                                                  (rule "replace_int_MIN" (formula "44") (term "0,1,1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "44") (term "1,1,0,0"))
                                                                  (rule "applyEq" (formula "44") (term "0,1,0,0,1,0,0,0") (ifseqformula "39"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0"))
                                                                  (rule "Contract_axiom_for_initialReadAreasBlockClassified_in_BucketPointers" (formula "86") (term "0"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "1,0,0") (ifseqformula "71"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,1,0,0") (ifseqformula "49"))
                                                                  (rule "wellFormedAnonEQ" (formula "86") (term "1,0,0,0") (ifseqformula "71"))
                                                                  (rule "wellFormedAnonEQ" (formula "86") (term "0,1,0,0,0") (ifseqformula "49"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "0,0,1,0,0") (ifseqformula "35"))
                                                                  (rule "wellFormedAnonEQ" (formula "86") (term "0,0,1,0,0,0") (ifseqformula "35"))
                                                                  (rule "translateJavaAddInt" (formula "86") (term "4,0,0,1,1,1,0,0,0,0"))
                                                                  (rule "translateJavaCastInt" (formula "86") (term "1,0,1,0,0,0,0"))
                                                                  (rule "translateJavaSubInt" (formula "86") (term "0,0,1,0,0,0,0"))
                                                                  (rule "eqSymm" (formula "86") (term "0,1,0,0,0,0"))
                                                                  (rule "replace_known_right" (formula "86") (term "0,1,0") (ifseqformula "109"))
                                                                   (builtin "One Step Simplification" (formula "86") (ifInst ""  (formula "78")) (ifInst ""  (formula "156")) (ifInst ""  (formula "158")) (ifInst ""  (formula "10")) (ifInst ""  (formula "34")) (ifInst ""  (formula "48")) (ifInst ""  (formula "70")) (ifInst ""  (formula "106")) (ifInst ""  (formula "107")) (ifInst ""  (formula "108")) (ifInst ""  (formula "73")) (ifInst ""  (formula "87")) (ifInst ""  (formula "81")))
                                                                  (rule "polySimp_elimSub" (formula "86") (term "1,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "86") (term "1,0,1,0"))
                                                                  (rule "castedGetAny" (formula "86") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "86") (term "1,0,0"))
                                                                  (rule "replace_known_left" (formula "86") (term "1,0,0") (ifseqformula "24"))
                                                                   (builtin "One Step Simplification" (formula "86"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "86") (term "1,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "86") (term "0,0,0"))
                                                                  (rule "replace_known_left" (formula "86") (term "0,0,0") (ifseqformula "20"))
                                                                   (builtin "One Step Simplification" (formula "86"))
                                                                  (rule "applyEq" (formula "86") (term "1,0,0,1,0") (ifseqformula "75"))
                                                                  (rule "replace_known_left" (formula "86") (term "0,1,0") (ifseqformula "61"))
                                                                   (builtin "One Step Simplification" (formula "86"))
                                                                  (rule "applyEq" (formula "86") (term "1,4,0,0,1,0") (ifseqformula "77"))
                                                                  (rule "polySimp_addComm0" (formula "86") (term "4,0,0,1,0"))
                                                                  (rule "inEqSimp_subsumption1" (formula "86") (term "0,0") (ifseqformula "29"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "86") (term "0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "86") (term "0,0,0,0"))
                                                                  (rule "add_literals" (formula "86") (term "1,1,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "86") (term "1,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "86") (term "0,0,0,0"))
                                                                  (rule "qeq_literals" (formula "86") (term "0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "86"))
                                                                  (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "104"))
                                                                  (rule "notLeft" (formula "104"))
                                                                  (rule "Definition_axiom_for_initialReadAreasBlockClassified_in_de_wiesler_BucketPointers" (formula "87") (term "0") (inst "b=b"))
                                                                   (builtin "One Step Simplification" (formula "87"))
                                                                  (rule "expand_inInt" (formula "87") (term "1,0,0"))
                                                                  (rule "replace_int_MAX" (formula "87") (term "1,0,1,0,0"))
                                                                  (rule "replace_int_MIN" (formula "87") (term "0,1,1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "87") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "87") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "87") (term "1,1,0,0"))
                                                                  (rule "applyEq" (formula "87") (term "0,1,0,0,1,0,0,0") (ifseqformula "75"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "87") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "87") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "87") (term "1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "87") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "87") (term "1,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "87") (term "1,1,1,0,0,0"))
                                                                  (rule "Definition_axiom_for_initialReadAreasCountBucketElements_in_de_wiesler_BucketPointers" (formula "88") (term "0") (inst "bucket=bucket"))
                                                                   (builtin "One Step Simplification" (formula "88"))
                                                                  (rule "expand_inInt" (formula "88") (term "1,0,0"))
                                                                  (rule "replace_int_MAX" (formula "88") (term "1,0,1,0,0"))
                                                                  (rule "replace_int_MIN" (formula "88") (term "0,1,1,0,0"))
                                                                  (rule "eqSymm" (formula "88") (term "1,0"))
                                                                  (rule "translateJavaAddInt" (formula "88") (term "4,1,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "88") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "88") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "88") (term "1,1,0,0"))
                                                                  (rule "applyEq" (formula "88") (term "0,1,0,0,1,0,0,0") (ifseqformula "75"))
                                                                  (rule "applyEq" (formula "88") (term "1,4,1,1,0") (ifseqformula "77"))
                                                                  (rule "polySimp_addComm0" (formula "88") (term "4,1,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "88") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "88") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "88") (term "1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "88") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "88") (term "1,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "88") (term "1,1,1,0,0,0"))
                                                                  (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "65"))
                                                                   (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "100")))
                                                                  (rule "andLeft" (formula "65"))
                                                                  (rule "andLeft" (formula "65"))
                                                                  (rule "andLeft" (formula "65"))
                                                                  (rule "andLeft" (formula "65"))
                                                                  (rule "andLeft" (formula "65"))
                                                                  (rule "eqSymm" (formula "69"))
                                                                  (rule "translateJavaMulInt" (formula "67") (term "1,1"))
                                                                  (rule "translateJavaSubInt" (formula "69") (term "0,2,1"))
                                                                  (rule "translateJavaSubInt" (formula "69") (term "0,2,0"))
                                                                  (rule "eqSymm" (formula "67"))
                                                                  (rule "polySimp_elimSub" (formula "69") (term "0,2,1"))
                                                                  (rule "mul_literals" (formula "69") (term "1,0,2,1"))
                                                                  (rule "polySimp_elimSub" (formula "69") (term "0,2,0"))
                                                                  (rule "mul_literals" (formula "69") (term "1,0,2,0"))
                                                                  (rule "polySimp_mulComm0" (formula "67") (term "1,0"))
                                                                  (rule "polySimp_addComm0" (formula "69") (term "0,2,1"))
                                                                  (rule "replaceKnownSelect_taclet1020000121212001000000_11" (formula "69") (term "1"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1020000121212001000000_13" (formula "69") (term "1"))
                                                                  (rule "polySimp_addComm0" (formula "69") (term "0,2,0"))
                                                                  (rule "replaceKnownSelect_taclet1020000121212001000000_9" (formula "69") (term "0"))
                                                                  (rule "replaceKnownAuxiliaryConstant_taclet1020000121212001000000_13" (formula "69") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "69"))
                                                                  (rule "true_left" (formula "69"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "65"))
                                                                  (rule "applyEq" (formula "103") (term "0") (ifseqformula "67"))
                                                                  (rule "applyEq" (formula "66") (term "0") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "65") (term "0") (ifseqformula "32"))
                                                                  (rule "applyEq" (formula "65") (term "1") (ifseqformula "32"))
                                                                  (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "17"))
                                                                  (rule "andLeft" (formula "17"))
                                                                  (rule "notLeft" (formula "18"))
                                                                  (rule "close" (formula "106") (ifseqformula "1"))
                                                               )
                                                            )
                                                            (branch
                                                               (rule "andRight" (formula "158"))
                                                               (branch
                                                                  (rule "andRight" (formula "158"))
                                                                  (branch
                                                                     (rule "andRight" (formula "158"))
                                                                     (branch
                                                                        (rule "andRight" (formula "158"))
                                                                        (branch
                                                                           (rule "andRight" (formula "158"))
                                                                           (branch
                                                                              (rule "andRight" (formula "158"))
                                                                              (branch
                                                                                 (rule "andRight" (formula "158"))
                                                                                 (branch
                                                                                    (rule "andRight" (formula "158"))
                                                                                    (branch
                                                                                       (rule "wellFormedAnonEQ" (formula "158") (ifseqformula "95"))
                                                                                       (rule "wellFormedAnonEQ" (formula "158") (term "0") (ifseqformula "73"))
                                                                                       (rule "wellFormedAnonEQ" (formula "158") (term "0,0") (ifseqformula "52"))
                                                                                       (rule "wellFormedAnonEQ" (formula "158") (term "0,0,0") (ifseqformula "39"))
                                                                                       (rule "replace_known_left" (formula "158") (term "1,0,0,0") (ifseqformula "38"))
                                                                                        (builtin "One Step Simplification" (formula "158") (ifInst ""  (formula "10")) (ifInst ""  (formula "51")) (ifInst ""  (formula "72")) (ifInst ""  (formula "94")))
                                                                                       (rule "closeTrue" (formula "158"))
                                                                                    )
                                                                                    (branch
                                                                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "158") (ifseqformula "95"))
                                                                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "158") (term "0") (ifseqformula "73"))
                                                                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "158") (term "0,0") (ifseqformula "52"))
                                                                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "158") (term "0,0,0") (ifseqformula "39"))
                                                                                       (rule "orRight" (formula "158"))
                                                                                       (rule "orRight" (formula "158"))
                                                                                       (rule "orRight" (formula "158"))
                                                                                       (rule "orRight" (formula "158"))
                                                                                       (rule "close" (formula "158") (ifseqformula "11"))
                                                                                    )
                                                                                 )
                                                                                 (branch
                                                                                    (rule "expand_inInt" (formula "158"))
                                                                                    (rule "replace_int_MAX" (formula "158") (term "1,0"))
                                                                                    (rule "replace_int_MIN" (formula "158") (term "0,1"))
                                                                                    (rule "replace_known_left" (formula "158") (term "0") (ifseqformula "12"))
                                                                                     (builtin "One Step Simplification" (formula "158"))
                                                                                    (rule "polySimp_homoEq" (formula "65") (term "1,0"))
                                                                                    (rule "polySimp_homoEq" (formula "64") (term "0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_addComm1" (formula "65") (term "0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "64") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "64") (term "0,0,1,0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "64") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "64") (term "0,1,0,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0"))
                                                                                    (rule "inEqSimp_leqRight" (formula "158"))
                                                                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                                    (rule "add_literals" (formula "1") (term "0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "98") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_gtToGeq" (formula "32"))
                                                                                    (rule "mul_literals" (formula "32") (term "1,0,0"))
                                                                                    (rule "add_literals" (formula "32") (term "0,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "82") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "94") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,0,0"))
                                                                                    (rule "add_literals" (formula "31") (term "0,0,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "82") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "82") (term "1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "82") (term "1,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "82") (term "1,1,0,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "82") (term "0,1,0,1,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "82") (term "0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "82") (term "0,0,0,1,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "82") (term "0,0,1,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "82") (term "0,0,1,0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "82") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "82") (term "0,0,1,0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "29"))
                                                                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                                                    (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                                                                    (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                                                    (rule "inEqSimp_homoInEq0" (formula "63") (term "1,0,0"))
                                                                                    (rule "polySimp_pullOutFactor1" (formula "63") (term "0,1,0,0"))
                                                                                    (rule "add_literals" (formula "63") (term "1,0,1,0,0"))
                                                                                    (rule "times_zero_1" (formula "63") (term "0,1,0,0"))
                                                                                    (rule "qeq_literals" (formula "63") (term "1,0,0"))
                                                                                     (builtin "One Step Simplification" (formula "63"))
                                                                                    (rule "polySimp_sepPosMonomial" (formula "66") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "66") (term "1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "66") (term "1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "66") (term "0,1,1,0"))
                                                                                    (rule "polySimp_sepNegMonomial" (formula "65") (term "0,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "65") (term "0,0,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "65") (term "0,0,1,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "98") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "98") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "98") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "98") (term "0,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "98") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                                                                    (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                                                                    (rule "polySimp_rightDist" (formula "32") (term "1"))
                                                                                    (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                                                                    (rule "mul_literals" (formula "32") (term "0,1"))
                                                                                    (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "82") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "82") (term "0,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "0,0,0,0,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "94") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                                                                                    (rule "polySimp_elimOne" (formula "94") (term "1,1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,0,0"))
                                                                                    (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
                                                                                    (rule "inEqSimp_sepPosMonomial1" (formula "82") (term "1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "82") (term "1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "82") (term "1,1,0"))
                                                                                    (rule "polySimp_mulLiterals" (formula "82") (term "1,1,1,0"))
                                                                                    (rule "polySimp_elimOne" (formula "82") (term "1,1,1,0"))
                                                                                    (rule "polySimp_rightDist" (formula "82") (term "0,1,1,0"))
                                                                                    (rule "polySimp_mulComm0" (formula "82") (term "0,0,1,1,0"))
                                                                                    (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                                                    (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                                    (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                                    (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "14"))
                                                                                    (rule "qeq_literals" (formula "1") (term "0"))
                                                                                     (builtin "One Step Simplification" (formula "1"))
                                                                                    (rule "closeFalse" (formula "1"))
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (rule "expand_inInt" (formula "158"))
                                                                                 (rule "replace_int_MAX" (formula "158") (term "1,0"))
                                                                                 (rule "replace_int_MIN" (formula "158") (term "0,1"))
                                                                                 (rule "replace_known_left" (formula "158") (term "0") (ifseqformula "14"))
                                                                                  (builtin "One Step Simplification" (formula "158"))
                                                                                 (rule "polySimp_homoEq" (formula "65") (term "1,0"))
                                                                                 (rule "polySimp_homoEq" (formula "64") (term "0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0"))
                                                                                 (rule "polySimp_addComm1" (formula "65") (term "0,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1,0"))
                                                                                 (rule "polySimp_mulAssoc" (formula "64") (term "0,1,0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "64") (term "0,0,1,0,0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "64") (term "0,1,0,0,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "64") (term "0,1,0,0,1,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0"))
                                                                                 (rule "inEqSimp_leqRight" (formula "158"))
                                                                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                                 (rule "add_literals" (formula "1") (term "0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,0,0"))
                                                                                 (rule "add_literals" (formula "31") (term "0,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "82") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_gtToGeq" (formula "32"))
                                                                                 (rule "mul_literals" (formula "32") (term "1,0,0"))
                                                                                 (rule "add_literals" (formula "32") (term "0,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "98") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "94") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_homoInEq0" (formula "29"))
                                                                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                                                 (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                                                 (rule "inEqSimp_homoInEq0" (formula "82") (term "1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "82") (term "1,0,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "82") (term "1,0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "82") (term "1,1,0,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "82") (term "0,1,0,1,0"))
                                                                                 (rule "polySimp_mulAssoc" (formula "82") (term "0,0,1,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "82") (term "0,0,0,1,0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "82") (term "0,0,1,0,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "82") (term "0,0,1,0,1,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "82") (term "0,1,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "82") (term "0,0,1,0"))
                                                                                 (rule "inEqSimp_homoInEq0" (formula "63") (term "1,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1" (formula "63") (term "0,1,0,0"))
                                                                                 (rule "add_literals" (formula "63") (term "1,0,1,0,0"))
                                                                                 (rule "times_zero_1" (formula "63") (term "0,1,0,0"))
                                                                                 (rule "qeq_literals" (formula "63") (term "1,0,0"))
                                                                                  (builtin "One Step Simplification" (formula "63"))
                                                                                 (rule "polySimp_sepPosMonomial" (formula "66") (term "1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "66") (term "1,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "66") (term "1,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "66") (term "0,1,1,0"))
                                                                                 (rule "polySimp_sepNegMonomial" (formula "65") (term "0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "65") (term "0,0,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "65") (term "0,0,1,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "82") (term "1,0,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "82") (term "0,1,0,0,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                                                                 (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                                                                 (rule "polySimp_rightDist" (formula "32") (term "1"))
                                                                                 (rule "mul_literals" (formula "32") (term "0,1"))
                                                                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                                                                 (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "98") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "98") (term "1,0,0,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "98") (term "1,0,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "98") (term "0,1,0,0,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "98") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "98") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "94") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "94") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                                                 (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                                 (rule "inEqSimp_sepPosMonomial1" (formula "82") (term "1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "82") (term "1,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "82") (term "1,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "82") (term "1,1,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "82") (term "1,1,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "82") (term "0,1,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "82") (term "0,0,1,1,0"))
                                                                                 (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "1"))
                                                                                 (rule "leq_literals" (formula "15") (term "0"))
                                                                                  (builtin "One Step Simplification" (formula "15"))
                                                                                 (rule "true_left" (formula "15"))
                                                                                 (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "22"))
                                                                                 (rule "leq_literals" (formula "14") (term "0"))
                                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                                 (rule "true_left" (formula "14"))
                                                                                 (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "1"))
                                                                                 (rule "qeq_literals" (formula "14") (term "0"))
                                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                                 (rule "closeFalse" (formula "14"))
                                                                              )
                                                                           )
                                                                           (branch
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "158") (ifseqformula "95"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "158") (term "0") (ifseqformula "73"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "158") (term "0,0") (ifseqformula "52"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "158") (term "0,0,0") (ifseqformula "39"))
                                                                              (rule "orRight" (formula "158"))
                                                                              (rule "orRight" (formula "158"))
                                                                              (rule "orRight" (formula "158"))
                                                                              (rule "orRight" (formula "158"))
                                                                              (rule "close" (formula "158") (ifseqformula "41"))
                                                                           )
                                                                        )
                                                                        (branch
                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "158") (ifseqformula "95"))
                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "158") (term "0") (ifseqformula "73"))
                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "158") (term "0,0") (ifseqformula "52"))
                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "158") (term "0,0,0") (ifseqformula "39"))
                                                                           (rule "orRight" (formula "158"))
                                                                           (rule "orRight" (formula "158"))
                                                                           (rule "orRight" (formula "158"))
                                                                           (rule "orRight" (formula "158"))
                                                                           (rule "close" (formula "158") (ifseqformula "16"))
                                                                        )
                                                                     )
                                                                     (branch
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "158") (ifseqformula "95"))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "158") (term "0") (ifseqformula "73"))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "158") (term "0,0") (ifseqformula "52"))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "158") (term "0,0,0") (ifseqformula "39"))
                                                                        (rule "orRight" (formula "158"))
                                                                        (rule "orRight" (formula "158"))
                                                                        (rule "close" (formula "159") (ifseqformula "75"))
                                                                     )
                                                                  )
                                                                  (branch
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "158") (ifseqformula "95"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "158") (term "0") (ifseqformula "73"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "158") (term "0,0") (ifseqformula "52"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "158") (term "0,0,0") (ifseqformula "39"))
                                                                     (rule "orRight" (formula "158"))
                                                                     (rule "orRight" (formula "158"))
                                                                     (rule "orRight" (formula "158"))
                                                                     (rule "orRight" (formula "158"))
                                                                     (rule "close" (formula "158") (ifseqformula "17"))
                                                                  )
                                                               )
                                                               (branch
                                                                  (rule "orRight" (formula "158"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "159") (ifseqformula "95"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "159") (term "0") (ifseqformula "73"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "159") (term "0,0") (ifseqformula "52"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "159") (term "0,0,0") (ifseqformula "39"))
                                                                  (rule "orRight" (formula "159"))
                                                                  (rule "orRight" (formula "159"))
                                                                  (rule "orRight" (formula "159"))
                                                                  (rule "orRight" (formula "159"))
                                                                  (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "159"))
                                                                   (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "158")))
                                                                  (rule "closeFalse" (formula "8"))
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch "Exceptional Post (permute)"
                                                          (builtin "One Step Simplification" (formula "95"))
                                                          (builtin "One Step Simplification" (formula "151"))
                                                         (rule "andLeft" (formula "95"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "1,0") (ifseqformula "95"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "0,1,0") (ifseqformula "73"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "0,0,1,0") (ifseqformula "52"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "0,0,0,1,0") (ifseqformula "39"))
                                                         (rule "andLeft" (formula "96"))
                                                         (rule "andLeft" (formula "97"))
                                                         (rule "andLeft" (formula "96"))
                                                         (rule "andLeft" (formula "98"))
                                                         (rule "notLeft" (formula "96"))
                                                         (rule "close" (formula "100") (ifseqformula "99"))
                                                      )
                                                      (branch "Pre (permute)"
                                                          (builtin "One Step Simplification" (formula "149") (ifInst ""  (formula "84")) (ifInst ""  (formula "86")) (ifInst ""  (formula "148")) (ifInst ""  (formula "146")) (ifInst ""  (formula "97")) (ifInst ""  (formula "148")) (ifInst ""  (formula "146")) (ifInst ""  (formula "97")))
                                                         (rule "andRight" (formula "149"))
                                                         (branch
                                                            (rule "andRight" (formula "149"))
                                                            (branch
                                                               (rule "notRight" (formula "149"))
                                                               (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "6"))
                                                               (rule "true_left" (formula "6"))
                                                               (rule "polySimp_homoEq" (formula "65") (term "1,0"))
                                                               (rule "polySimp_homoEq" (formula "64") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "65") (term "0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "64") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "64") (term "0,0,1,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "64") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "64") (term "0,1,0,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "93") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "30") (term "0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "81") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_gtToGeq" (formula "31"))
                                                               (rule "mul_literals" (formula "31") (term "1,0,0"))
                                                               (rule "add_literals" (formula "31") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "62") (term "1,0,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "62") (term "0,1,0,0"))
                                                               (rule "add_literals" (formula "62") (term "1,0,1,0,0"))
                                                               (rule "times_zero_1" (formula "62") (term "0,1,0,0"))
                                                               (rule "qeq_literals" (formula "62") (term "1,0,0"))
                                                                (builtin "One Step Simplification" (formula "62"))
                                                               (rule "inEqSimp_homoInEq0" (formula "81") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "81") (term "1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "81") (term "1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "81") (term "1,1,0,1,0"))
                                                               (rule "polySimp_rightDist" (formula "81") (term "0,1,0,1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "81") (term "0,0,1,0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "81") (term "0,0,0,1,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "81") (term "0,0,1,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "81") (term "0,0,1,0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "81") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "81") (term "0,0,1,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "28"))
                                                               (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "28") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                               (rule "applyEq" (formula "114") (term "0") (ifseqformula "1"))
                                                               (rule "eqSymm" (formula "114"))
                                                               (rule "applyEq" (formula "131") (term "0") (ifseqformula "1"))
                                                               (rule "eqSymm" (formula "131"))
                                                               (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "131"))
                                                                (builtin "One Step Simplification" (formula "9"))
                                                               (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "131"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "applyEq" (formula "138") (term "0") (ifseqformula "1"))
                                                               (rule "eqSymm" (formula "138"))
                                                               (rule "replace_known_right" (formula "46") (term "0") (ifseqformula "138"))
                                                                (builtin "One Step Simplification" (formula "46"))
                                                               (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "138"))
                                                                (builtin "One Step Simplification" (formula "4"))
                                                               (rule "applyEq" (formula "141") (term "1") (ifseqformula "1"))
                                                               (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "141"))
                                                                (builtin "One Step Simplification" (formula "7"))
                                                               (rule "applyEq" (formula "120") (term "1") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "126") (term "0") (ifseqformula "1"))
                                                               (rule "eqSymm" (formula "126"))
                                                               (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "126"))
                                                                (builtin "One Step Simplification" (formula "6"))
                                                               (rule "applyEq" (formula "135") (term "0") (ifseqformula "1"))
                                                               (rule "eqSymm" (formula "135"))
                                                               (rule "replace_known_right" (formula "44") (term "0") (ifseqformula "135"))
                                                                (builtin "One Step Simplification" (formula "44"))
                                                               (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "135"))
                                                                (builtin "One Step Simplification" (formula "3"))
                                                               (rule "applyEq" (formula "142") (term "0") (ifseqformula "1"))
                                                               (rule "eqSymm" (formula "142"))
                                                               (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "142"))
                                                                (builtin "One Step Simplification" (formula "8"))
                                                               (rule "applyEq" (formula "106") (term "0") (ifseqformula "1"))
                                                               (rule "eqSymm" (formula "106"))
                                                               (rule "polySimp_sepPosMonomial" (formula "65") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "65") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "65") (term "1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "65") (term "0,1,1,0"))
                                                               (rule "polySimp_sepNegMonomial" (formula "64") (term "0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "64") (term "0,0,1,0"))
                                                               (rule "polySimp_elimOne" (formula "64") (term "0,0,1,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "93") (term "1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "93") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "93") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "93") (term "1,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "81") (term "1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "81") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "81") (term "1,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                               (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "31") (term "1"))
                                                               (rule "mul_literals" (formula "31") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "81") (term "1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "81") (term "1,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0"))
                                                               (rule "polySimp_rightDist" (formula "81") (term "0,1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "81") (term "0,0,1,1,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                               (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                               (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "26"))
                                                               (rule "leq_literals" (formula "25") (term "0"))
                                                                (builtin "One Step Simplification" (formula "25"))
                                                               (rule "true_left" (formula "25"))
                                                               (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "22"))
                                                               (rule "leq_literals" (formula "13") (term "0"))
                                                                (builtin "One Step Simplification" (formula "13"))
                                                               (rule "true_left" (formula "13"))
                                                               (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "29"))
                                                               (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                                               (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                               (rule "add_literals" (formula "22") (term "0,0"))
                                                               (rule "qeq_literals" (formula "22") (term "0"))
                                                                (builtin "One Step Simplification" (formula "22"))
                                                               (rule "true_left" (formula "22"))
                                                               (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "22"))
                                                               (rule "polySimp_mulComm0" (formula "24") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "24") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                               (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "24"))
                                                               (rule "leq_literals" (formula "13") (term "0"))
                                                                (builtin "One Step Simplification" (formula "13"))
                                                               (rule "true_left" (formula "13"))
                                                               (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "54"))
                                                               (rule "mul_literals" (formula "52") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "52"))
                                                               (rule "mul_literals" (formula "52") (term "1"))
                                                               (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "54"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "53"))
                                                               (rule "polySimp_mulLiterals" (formula "53") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "53") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "53") (ifseqformula "28"))
                                                               (rule "inEqSimp_homoInEq0" (formula "53") (term "0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0"))
                                                               (rule "add_literals" (formula "53") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "53") (term "1,0,0"))
                                                               (rule "add_literals" (formula "53") (term "0,0"))
                                                               (rule "qeq_literals" (formula "53") (term "0"))
                                                                (builtin "One Step Simplification" (formula "53"))
                                                               (rule "true_left" (formula "53"))
                                                               (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "25"))
                                                               (rule "mul_literals" (formula "13") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                               (rule "add_literals" (formula "13") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                               (rule "mul_literals" (formula "13") (term "1"))
                                                               (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "21"))
                                                               (rule "leq_literals" (formula "13") (term "0"))
                                                                (builtin "One Step Simplification" (formula "13"))
                                                               (rule "true_left" (formula "13"))
                                                               (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "51"))
                                                               (rule "polySimp_mulComm0" (formula "53") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "53") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "53"))
                                                               (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                               (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "23"))
                                                               (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                               (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                               (rule "add_literals" (formula "28") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                               (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "28"))
                                                               (rule "leq_literals" (formula "12") (term "0"))
                                                                (builtin "One Step Simplification" (formula "12"))
                                                               (rule "true_left" (formula "12"))
                                                               (rule "inEqSimp_and_subsumption2" (formula "79") (term "0,0,0,0"))
                                                               (rule "leq_literals" (formula "79") (term "0,0,0,0,0,0"))
                                                                (builtin "One Step Simplification" (formula "79"))
                                                               (rule "inEqSimp_and_subsumption3" (formula "61") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "61") (term "0,1,0,0,0,0"))
                                                                (builtin "One Step Simplification" (formula "61"))
                                                               (rule "inEqSimp_and_subsumption3" (formula "90") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "90") (term "0,1,0,0,0,0"))
                                                                (builtin "One Step Simplification" (formula "90"))
                                                               (rule "inEqSimp_and_subsumption3" (formula "26") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "26") (term "0,1,0,0,0,0"))
                                                                (builtin "One Step Simplification" (formula "26"))
                                                               (rule "inEqSimp_and_subsumption3" (formula "78") (term "0,0,0"))
                                                               (rule "leq_literals" (formula "78") (term "0,1,0,0,0,0"))
                                                                (builtin "One Step Simplification" (formula "78"))
                                                               (rule "nnf_imp2or" (formula "62") (term "0"))
                                                               (rule "nnf_imp2or" (formula "79") (term "0"))
                                                               (rule "nnf_imp2or" (formula "61") (term "0"))
                                                               (rule "nnf_imp2or" (formula "90") (term "0"))
                                                               (rule "nnf_imp2or" (formula "26") (term "0"))
                                                               (rule "nnf_imp2or" (formula "78") (term "0"))
                                                               (rule "nnf_notAnd" (formula "62") (term "0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                                                               (rule "inEqSimp_notGeq" (formula "62") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "62") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "62") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                                                               (rule "mul_literals" (formula "62") (term "1,0,0,0"))
                                                               (rule "nnf_notAnd" (formula "79") (term "0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "79") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "1,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "79") (term "1,1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "79") (term "1,1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1,0,0"))
                                                               (rule "mul_literals" (formula "79") (term "0,1,1,0,0"))
                                                               (rule "polySimp_elimOne" (formula "79") (term "1,1,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "61") (term "0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "61") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "61") (term "1,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "61") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "61") (term "1,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "90") (term "0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "90") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "90") (term "1,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "90") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "90") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "90") (term "1,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "26") (term "1,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "26") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "26") (term "1,1,0,0"))
                                                               (rule "nnf_notAnd" (formula "78") (term "0,0"))
                                                               (rule "inEqSimp_notLeq" (formula "78") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "78") (term "1,0,0,1,0,0"))
                                                               (rule "add_literals" (formula "78") (term "0,0,1,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "78") (term "1,1,0,0"))
                                                               (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "30"))
                                                                (builtin "One Step Simplification" (formula "30"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "translateJavaSubInt" (formula "35") (term "0,2,1"))
                                                               (rule "translateJavaSubInt" (formula "35") (term "0,2,0"))
                                                               (rule "translateJavaMulInt" (formula "32") (term "1,1"))
                                                               (rule "eqSymm" (formula "35"))
                                                               (rule "eqSymm" (formula "32"))
                                                               (rule "polySimp_elimSub" (formula "35") (term "0,2,0"))
                                                               (rule "mul_literals" (formula "35") (term "1,0,2,0"))
                                                               (rule "eqSymm" (formula "35"))
                                                               (rule "polySimp_elimSub" (formula "35") (term "0,2,0"))
                                                               (rule "mul_literals" (formula "35") (term "1,0,2,0"))
                                                               (rule "eqSymm" (formula "35"))
                                                               (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "35") (term "0,2,0"))
                                                               (rule "eqSymm" (formula "35"))
                                                               (rule "polySimp_addComm0" (formula "35") (term "0,2,0"))
                                                               (rule "eqSymm" (formula "35"))
                                                               (rule "inEqSimp_commuteLeq" (formula "30"))
                                                               (rule "applyEq" (formula "30") (term "0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "31") (term "0") (ifseqformula "39"))
                                                               (rule "applyEq" (formula "32") (term "1") (ifseqformula "39"))
                                                               (rule "inEqSimp_subsumption0" (formula "37") (ifseqformula "31"))
                                                               (rule "leq_literals" (formula "37") (term "0"))
                                                                (builtin "One Step Simplification" (formula "37"))
                                                               (rule "true_left" (formula "37"))
                                                               (rule "inEqSimp_subsumption1" (formula "64") (term "0,0") (ifseqformula "30"))
                                                               (rule "leq_literals" (formula "64") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "64"))
                                                               (rule "inEqSimp_subsumption1" (formula "37") (ifseqformula "30"))
                                                               (rule "leq_literals" (formula "37") (term "0"))
                                                                (builtin "One Step Simplification" (formula "37"))
                                                               (rule "true_left" (formula "37"))
                                                               (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "87"))
                                                               (rule "andLeft" (formula "87"))
                                                               (rule "notLeft" (formula "88"))
                                                               (rule "notLeft" (formula "87"))
                                                               (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "94"))
                                                                (builtin "One Step Simplification" (formula "5"))
                                                               (rule "Contract_axiom_for_initialReadAreasCount_in_BucketPointers" (formula "89") (term "0"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "89") (term "1,0,0") (ifseqformula "74"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "89") (term "0,1,0,0") (ifseqformula "53"))
                                                               (rule "wellFormedAnonEQ" (formula "89") (term "1,0,0,0") (ifseqformula "74"))
                                                               (rule "wellFormedAnonEQ" (formula "89") (term "0,1,0,0,0") (ifseqformula "53"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "89") (term "0,0,1,0,0") (ifseqformula "40"))
                                                               (rule "wellFormedAnonEQ" (formula "89") (term "0,0,1,0,0,0") (ifseqformula "40"))
                                                               (rule "replace_known_left" (formula "89") (term "1,1,1") (ifseqformula "84"))
                                                                (builtin "One Step Simplification" (formula "89") (ifInst ""  (formula "85")) (ifInst ""  (formula "148")) (ifInst ""  (formula "10")) (ifInst ""  (formula "39")) (ifInst ""  (formula "52")) (ifInst ""  (formula "73")) (ifInst ""  (formula "96")) (ifInst ""  (formula "97")) (ifInst ""  (formula "98")) (ifInst ""  (formula "76")) (ifInst ""  (formula "99")) (ifInst ""  (formula "85")) (ifInst ""  (formula "90")))
                                                               (rule "true_left" (formula "89"))
                                                               (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "68"))
                                                                (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "33")))
                                                               (rule "andLeft" (formula "68"))
                                                               (rule "andLeft" (formula "68"))
                                                               (rule "andLeft" (formula "68"))
                                                               (rule "andLeft" (formula "68"))
                                                               (rule "andLeft" (formula "68"))
                                                               (rule "translateJavaSubInt" (formula "72") (term "0,2,0"))
                                                               (rule "translateJavaSubInt" (formula "72") (term "0,2,1"))
                                                               (rule "translateJavaMulInt" (formula "70") (term "1,1"))
                                                               (rule "eqSymm" (formula "72"))
                                                               (rule "eqSymm" (formula "70"))
                                                               (rule "polySimp_elimSub" (formula "72") (term "0,2,1"))
                                                               (rule "mul_literals" (formula "72") (term "1,0,2,1"))
                                                               (rule "polySimp_elimSub" (formula "72") (term "0,2,0"))
                                                               (rule "mul_literals" (formula "72") (term "1,0,2,0"))
                                                               (rule "polySimp_mulComm0" (formula "70") (term "1,0"))
                                                               (rule "polySimp_addComm0" (formula "72") (term "0,2,1"))
                                                               (rule "polySimp_addComm0" (formula "72") (term "0,2,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "68"))
                                                               (rule "applyEq" (formula "32") (term "0") (ifseqformula "70"))
                                                               (rule "pullOutSelect" (formula "71") (term "1") (inst "selectSK=arr_3"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "71") (ifseqformula "52"))
                                                                (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "131")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "71") (term "0,1,0,0") (ifseqformula "39"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "72") (ifseqformula "52"))
                                                                (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "131")))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "72") (term "0,1,0,0") (ifseqformula "39"))
                                                               (rule "replace_known_left" (formula "72") (term "0,0,1,0,0") (ifseqformula "6"))
                                                                (builtin "One Step Simplification" (formula "72"))
                                                               (rule "replace_known_left" (formula "71") (term "0,0,1,0,0") (ifseqformula "6"))
                                                                (builtin "One Step Simplification" (formula "71"))
                                                               (rule "elementOfUnion" (formula "72") (term "0,0"))
                                                               (rule "elementOfArrayRangeConcrete" (formula "72") (term "1,0,0"))
                                                               (rule "replace_known_right" (formula "72") (term "0,0,1,0,0") (ifseqformula "130"))
                                                                (builtin "One Step Simplification" (formula "72"))
                                                               (rule "elementOfUnion" (formula "71") (term "0,0"))
                                                               (rule "elementOfArrayRangeConcrete" (formula "71") (term "1,0,0"))
                                                               (rule "replace_known_right" (formula "71") (term "0,0,1,0,0") (ifseqformula "130"))
                                                                (builtin "One Step Simplification" (formula "71"))
                                                               (rule "elementOfUnion" (formula "72") (term "0,0"))
                                                               (rule "elementOfArrayRangeConcrete" (formula "72") (term "1,0,0"))
                                                               (rule "replace_known_right" (formula "72") (term "0,0,1,0,0") (ifseqformula "129"))
                                                                (builtin "One Step Simplification" (formula "72"))
                                                               (rule "elementOfUnion" (formula "71") (term "0,0"))
                                                               (rule "elementOfArrayRangeConcrete" (formula "71") (term "1,0,0"))
                                                               (rule "replace_known_right" (formula "71") (term "0,0,1,0,0") (ifseqformula "129"))
                                                                (builtin "One Step Simplification" (formula "71"))
                                                               (rule "elementOfUnion" (formula "72") (term "0,0"))
                                                               (rule "elementOfArrayRangeConcrete" (formula "72") (term "0,0,0"))
                                                               (rule "replace_known_right" (formula "72") (term "0,0,0,0,0") (ifseqformula "115"))
                                                                (builtin "One Step Simplification" (formula "72"))
                                                               (rule "elementOfArrayRangeConcrete" (formula "72") (term "0,0"))
                                                               (rule "replace_known_right" (formula "72") (term "0,0,0,0") (ifseqformula "108"))
                                                                (builtin "One Step Simplification" (formula "72"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "72") (ifseqformula "39"))
                                                                (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "131")) (ifInst ""  (formula "6")))
                                                               (rule "elementOfArrayRangeConcrete" (formula "72") (term "0,0"))
                                                               (rule "replace_known_right" (formula "72") (term "0,0,0,0") (ifseqformula "130"))
                                                                (builtin "One Step Simplification" (formula "72"))
                                                               (rule "applyEqReverse" (formula "71") (term "1") (ifseqformula "72"))
                                                               (rule "hideAuxiliaryEq" (formula "72"))
                                                               (rule "applyEq" (formula "71") (term "1") (ifseqformula "34"))
                                                               (rule "elementOfUnion" (formula "71") (term "0,0"))
                                                               (rule "elementOfArrayRangeConcrete" (formula "71") (term "1,0,0"))
                                                               (rule "replace_known_right" (formula "71") (term "0,0,1,0,0") (ifseqformula "107"))
                                                                (builtin "One Step Simplification" (formula "71"))
                                                               (rule "elementOfArrayRangeConcrete" (formula "71") (term "0,0"))
                                                               (rule "replace_known_right" (formula "71") (term "0,0,0,0") (ifseqformula "114"))
                                                                (builtin "One Step Simplification" (formula "71"))
                                                               (rule "pullOutSelect" (formula "71") (term "0") (inst "selectSK=arr_4"))
                                                               (rule "simplifySelectOfAnonEQ" (formula "71") (ifseqformula "39"))
                                                                (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "131")) (ifInst ""  (formula "6")))
                                                               (rule "eqSymm" (formula "72"))
                                                               (rule "applyEqReverse" (formula "71") (term "1") (ifseqformula "72"))
                                                                (builtin "One Step Simplification" (formula "71"))
                                                               (rule "hideAuxiliaryEq" (formula "72"))
                                                               (rule "elementOfArrayRangeConcrete" (formula "71") (term "0,0"))
                                                               (rule "replace_known_right" (formula "71") (term "0,0,0,0") (ifseqformula "129"))
                                                                (builtin "One Step Simplification" (formula "71"))
                                                               (rule "true_left" (formula "71"))
                                                               (rule "applyEq" (formula "68") (term "0") (ifseqformula "36"))
                                                               (rule "applyEq" (formula "67") (term "0") (ifseqformula "36"))
                                                               (rule "applyEq" (formula "67") (term "1") (ifseqformula "36"))
                                                               (rule "Definition_axiom_for_initialReadAreasCount_in_de_wiesler_BucketPointers" (formula "90") (term "0") (inst "element=element"))
                                                                (builtin "One Step Simplification" (formula "90"))
                                                               (rule "expand_inInt" (formula "90") (term "0,0"))
                                                               (rule "replace_int_MAX" (formula "90") (term "1,0,0,0"))
                                                               (rule "replace_int_MIN" (formula "90") (term "0,1,0,0"))
                                                               (rule "eqSymm" (formula "90") (term "1,0"))
                                                               (rule "translateJavaAddInt" (formula "90") (term "3,1,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "90") (term "1,0,0"))
                                                               (rule "applyEq" (formula "90") (term "1,3,1,1,0") (ifseqformula "81"))
                                                               (rule "polySimp_addAssoc" (formula "90") (term "3,1,1,0"))
                                                               (rule "polySimp_pullOutFactor1" (formula "90") (term "0,3,1,1,0"))
                                                               (rule "add_literals" (formula "90") (term "1,0,3,1,1,0"))
                                                               (rule "times_zero_1" (formula "90") (term "0,3,1,1,0"))
                                                               (rule "add_zero_left" (formula "90") (term "3,1,1,0"))
                                                               (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "58") (term "0"))
                                                                (builtin "One Step Simplification" (formula "58"))
                                                               (rule "translateJavaMod" (formula "58") (term "0"))
                                                               (rule "jmod_axiom" (formula "58") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "58") (term "1,0"))
                                                               (rule "polySimp_sepNegMonomial" (formula "58"))
                                                               (rule "polySimp_mulLiterals" (formula "58") (term "0"))
                                                               (rule "newSym_eq" (formula "58") (inst "l=l_0") (inst "newSymDef=add(mul(begin, Z(0(#))), mul(result_176, Z(0(#))))"))
                                                               (rule "times_zero_1" (formula "58") (term "0,1,1"))
                                                               (rule "times_zero_1" (formula "58") (term "1,1,1"))
                                                               (rule "add_zero_left" (formula "58") (term "1,1"))
                                                               (rule "add_zero_right" (formula "58") (term "1"))
                                                               (rule "applyEq" (formula "59") (term "0,0") (ifseqformula "58"))
                                                               (rule "polySimp_homoEq" (formula "59"))
                                                               (rule "polySimp_mulLiterals" (formula "59") (term "1,0"))
                                                               (rule "polySimp_addComm1" (formula "59") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "59") (term "0,0"))
                                                               (rule "polySimp_sepPosMonomial" (formula "59"))
                                                               (rule "polySimp_mulComm0" (formula "59") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "59") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "59") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "59") (term "1,1"))
                                                               (rule "polySimp_mulComm0" (formula "59") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "59") (term "0,1"))
                                                               (rule "applyEq" (formula "55") (term "0") (ifseqformula "59"))
                                                               (rule "inEqSimp_homoInEq1" (formula "55"))
                                                               (rule "polySimp_mulComm0" (formula "55") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "55") (term "1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "55") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "55") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "55") (term "0"))
                                                               (rule "applyEq" (formula "58") (term "1,0,0") (ifseqformula "59"))
                                                               (rule "polySimp_addAssoc" (formula "58") (term "0,0"))
                                                               (rule "polySimp_addComm0" (formula "58") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "58") (term "0,0"))
                                                               (rule "add_literals" (formula "58") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "58") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "58") (term "0,0"))
                                                               (rule "applyEq" (formula "54") (term "0") (ifseqformula "59"))
                                                               (rule "inEqSimp_homoInEq0" (formula "54"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "54") (term "1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "54") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "54") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "54") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "54") (term "0"))
                                                               (rule "applyEq" (formula "66") (term "3,0,1,0") (ifseqformula "59"))
                                                               (rule "applyEq" (formula "57") (term "0") (ifseqformula "59"))
                                                               (rule "inEqSimp_commuteLeq" (formula "57"))
                                                               (rule "applyEq" (formula "60") (term "4,0") (ifseqformula "59"))
                                                               (rule "applyEq" (formula "56") (term "0") (ifseqformula "59"))
                                                               (rule "inEqSimp_homoInEq1" (formula "56"))
                                                               (rule "polySimp_mulComm0" (formula "56") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "56") (term "1,0"))
                                                               (rule "polySimp_mulAssoc" (formula "56") (term "0,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "56") (term "0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "56") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "56") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "56") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "56") (term "0"))
                                                               (rule "add_literals" (formula "56") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "56") (term "1,0"))
                                                               (rule "add_zero_right" (formula "56") (term "0"))
                                                               (rule "applyEq" (formula "91") (term "3,1,1,0") (ifseqformula "59"))
                                                               (rule "applyEq" (formula "95") (term "4,1,1,0") (ifseqformula "59"))
                                                               (rule "applyEq" (formula "82") (term "1,1") (ifseqformula "59"))
                                                               (rule "polySimp_addAssoc" (formula "82") (term "1"))
                                                               (rule "polySimp_addComm0" (formula "82") (term "0,1"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "82") (term "1"))
                                                               (rule "add_literals" (formula "82") (term "1,1,1"))
                                                               (rule "times_zero_1" (formula "82") (term "1,1"))
                                                               (rule "add_zero_right" (formula "82") (term "1"))
                                                               (rule "applyEq" (formula "65") (term "4,1,0,1,0,1,0") (ifseqformula "59"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "55"))
                                                               (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "55") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "54"))
                                                               (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "54") (term "0"))
                                                               (rule "inEqSimp_invertInEq0" (formula "56"))
                                                               (rule "polySimp_mulLiterals" (formula "56") (term "0"))
                                                               (rule "times_zero_2" (formula "56") (term "1"))
                                                               (rule "elimGcdGeq_antec" (formula "56") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                                               (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "56") (term "1,0,1,0"))
                                                               (rule "leq_literals" (formula "56") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "56"))
                                                               (rule "mul_literals" (formula "56") (term "1,0,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "56") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "56") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "56") (term "0,0"))
                                                               (rule "add_literals" (formula "56") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "56") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "56") (term "0,0"))
                                                               (rule "leq_literals" (formula "56") (term "0"))
                                                                (builtin "One Step Simplification" (formula "56"))
                                                               (rule "inEqSimp_exactShadow3" (formula "55") (ifseqformula "27"))
                                                               (rule "polySimp_rightDist" (formula "55") (term "0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "55") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "55") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "55") (term "0"))
                                                               (rule "add_literals" (formula "55") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "55"))
                                                               (rule "mul_literals" (formula "55") (term "1"))
                                                               (rule "inEqSimp_subsumption6" (formula "55") (ifseqformula "57"))
                                                               (rule "mul_literals" (formula "55") (term "1,1,0"))
                                                               (rule "greater_literals" (formula "55") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "55"))
                                                               (rule "leq_literals" (formula "55") (term "0"))
                                                                (builtin "One Step Simplification" (formula "55"))
                                                               (rule "true_left" (formula "55"))
                                                               (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "54"))
                                                               (rule "mul_literals" (formula "19") (term "0,0"))
                                                               (rule "add_zero_left" (formula "19") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                               (rule "elimGcdLeq_antec" (formula "19") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,1,0"))
                                                               (rule "neg_literal" (formula "19") (term "0,0,0,0,0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                                                               (rule "leq_literals" (formula "19") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "19"))
                                                               (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                                               (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                               (rule "add_literals" (formula "19") (term "0,0"))
                                                               (rule "qeq_literals" (formula "19") (term "0"))
                                                                (builtin "One Step Simplification" (formula "19"))
                                                               (rule "inEqSimp_exactShadow3" (formula "58") (ifseqformula "23"))
                                                               (rule "polySimp_rightDist" (formula "58") (term "0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "58") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "58") (term "0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "58") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "58") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "58") (term "0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "58"))
                                                               (rule "polySimp_mulLiterals" (formula "58") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "58") (term "0"))
                                                               (rule "inEqSimp_subsumption0" (formula "55") (ifseqformula "58"))
                                                               (rule "inEqSimp_homoInEq0" (formula "55") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "55") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "55") (term "1,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0"))
                                                               (rule "mul_literals" (formula "55") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "55") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "55") (term "0,0,0"))
                                                               (rule "add_literals" (formula "55") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "55") (term "0,0"))
                                                               (rule "add_literals" (formula "55") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "55") (term "1,0,0"))
                                                               (rule "add_literals" (formula "55") (term "0,0"))
                                                               (rule "qeq_literals" (formula "55") (term "0"))
                                                                (builtin "One Step Simplification" (formula "55"))
                                                               (rule "true_left" (formula "55"))
                                                               (rule "inEqSimp_exactShadow3" (formula "58") (ifseqformula "25"))
                                                               (rule "polySimp_rightDist" (formula "58") (term "0,0"))
                                                               (rule "polySimp_mulAssoc" (formula "58") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "58") (term "0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "58") (term "0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "58") (term "0"))
                                                               (rule "polySimp_addComm1" (formula "58") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor2b" (formula "58") (term "0"))
                                                               (rule "add_literals" (formula "58") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "58") (term "1,0"))
                                                               (rule "add_zero_right" (formula "58") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "58") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "58"))
                                                               (rule "polySimp_mulLiterals" (formula "58") (term "0"))
                                                               (rule "inEqSimp_subsumption4" (formula "58") (ifseqformula "19"))
                                                               (rule "mul_literals" (formula "58") (term "0,1,0"))
                                                               (rule "greater_literals" (formula "58") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "58"))
                                                               (rule "leq_literals" (formula "58") (term "0"))
                                                                (builtin "One Step Simplification" (formula "58"))
                                                               (rule "true_left" (formula "58"))
                                                               (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "57"))
                                                               (rule "times_zero_1" (formula "20") (term "0,0"))
                                                               (rule "add_zero_left" (formula "20") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                               (rule "elimGcdLeq_antec" (formula "20") (inst "elimGcdRightDiv=Z(7(2(1(#))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                                               (rule "leq_literals" (formula "20") (term "0,0"))
                                                                (builtin "One Step Simplification" (formula "20"))
                                                               (rule "neg_literal" (formula "20") (term "0,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_addLiterals" (formula "20") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                                               (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                               (rule "add_literals" (formula "20") (term "0,0"))
                                                               (rule "qeq_literals" (formula "20") (term "0"))
                                                                (builtin "One Step Simplification" (formula "20"))
                                                               (rule "inEqSimp_subsumption0" (formula "19") (ifseqformula "20"))
                                                               (rule "leq_literals" (formula "19") (term "0"))
                                                                (builtin "One Step Simplification" (formula "19"))
                                                               (rule "true_left" (formula "19"))
                                                               (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "73"))
                                                               (rule "andLeft" (formula "73"))
                                                               (rule "notLeft" (formula "73"))
                                                               (rule "notLeft" (formula "73"))
                                                               (rule "Free_class_invariant_axiom_for_de_wiesler_Storage" (formula "30"))
                                                                (builtin "One Step Simplification" (formula "30"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "32"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "33"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "34"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "35"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "36"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "37"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "38"))
                                                               (rule "andLeft" (formula "30"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "andLeft" (formula "39"))
                                                               (rule "translateJavaMulInt" (formula "33") (term "1"))
                                                               (rule "mul_literals" (formula "33") (term "1"))
                                                               (rule "translateJavaMulInt" (formula "32") (term "1"))
                                                               (rule "mul_literals" (formula "32") (term "1"))
                                                               (rule "disjointDefinition" (formula "66"))
                                                                (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "181")))
                                                               (rule "true_left" (formula "66"))
                                                               (rule "disjointDefinition" (formula "65"))
                                                                (builtin "One Step Simplification" (formula "65"))
                                                               (rule "notLeft" (formula "65"))
                                                               (rule "disjointDefinition" (formula "64"))
                                                                (builtin "One Step Simplification" (formula "64"))
                                                               (rule "notLeft" (formula "64"))
                                                               (rule "eqSymm" (formula "129"))
                                                               (rule "disjointDefinition" (formula "63"))
                                                                (builtin "One Step Simplification" (formula "63"))
                                                               (rule "notLeft" (formula "63"))
                                                               (rule "eqSymm" (formula "128"))
                                                               (rule "disjointDefinition" (formula "62"))
                                                                (builtin "One Step Simplification" (formula "62"))
                                                               (rule "notLeft" (formula "62"))
                                                               (rule "eqSymm" (formula "127"))
                                                               (rule "disjointDefinition" (formula "61"))
                                                                (builtin "One Step Simplification" (formula "61"))
                                                               (rule "notLeft" (formula "61"))
                                                               (rule "eqSymm" (formula "126"))
                                                               (rule "disjointDefinition" (formula "60"))
                                                                (builtin "One Step Simplification" (formula "60"))
                                                               (rule "notLeft" (formula "60"))
                                                               (rule "eqSymm" (formula "125"))
                                                               (rule "disjointDefinition" (formula "59"))
                                                                (builtin "One Step Simplification" (formula "59"))
                                                               (rule "notLeft" (formula "59"))
                                                               (rule "eqSymm" (formula "124"))
                                                               (rule "disjointDefinition" (formula "58"))
                                                                (builtin "One Step Simplification" (formula "58"))
                                                               (rule "notLeft" (formula "58"))
                                                               (rule "eqSymm" (formula "123"))
                                                               (rule "disjointDefinition" (formula "57"))
                                                                (builtin "One Step Simplification" (formula "57"))
                                                               (rule "notLeft" (formula "57"))
                                                               (rule "eqSymm" (formula "122"))
                                                               (rule "disjointDefinition" (formula "56"))
                                                                (builtin "One Step Simplification" (formula "56"))
                                                               (rule "notLeft" (formula "56"))
                                                               (rule "eqSymm" (formula "121"))
                                                               (rule "disjointDefinition" (formula "55"))
                                                                (builtin "One Step Simplification" (formula "55"))
                                                               (rule "notLeft" (formula "55"))
                                                               (rule "eqSymm" (formula "120"))
                                                               (rule "disjointDefinition" (formula "54"))
                                                                (builtin "One Step Simplification" (formula "54"))
                                                               (rule "notLeft" (formula "54"))
                                                               (rule "eqSymm" (formula "119"))
                                                               (rule "disjointDefinition" (formula "53"))
                                                                (builtin "One Step Simplification" (formula "53"))
                                                               (rule "notLeft" (formula "53"))
                                                               (rule "eqSymm" (formula "118"))
                                                               (rule "disjointDefinition" (formula "52"))
                                                                (builtin "One Step Simplification" (formula "52"))
                                                               (rule "notLeft" (formula "52"))
                                                               (rule "eqSymm" (formula "117"))
                                                               (rule "disjointDefinition" (formula "51"))
                                                                (builtin "One Step Simplification" (formula "51"))
                                                               (rule "notLeft" (formula "51"))
                                                               (rule "disjointDefinition" (formula "50"))
                                                                (builtin "One Step Simplification" (formula "50"))
                                                               (rule "notLeft" (formula "50"))
                                                               (rule "eqSymm" (formula "115"))
                                                               (rule "disjointDefinition" (formula "49"))
                                                                (builtin "One Step Simplification" (formula "49"))
                                                               (rule "notLeft" (formula "49"))
                                                               (rule "eqSymm" (formula "114"))
                                                               (rule "disjointDefinition" (formula "48"))
                                                                (builtin "One Step Simplification" (formula "48"))
                                                               (rule "notLeft" (formula "48"))
                                                               (rule "disjointDefinition" (formula "47"))
                                                                (builtin "One Step Simplification" (formula "47"))
                                                               (rule "notLeft" (formula "47"))
                                                               (rule "disjointDefinition" (formula "46"))
                                                                (builtin "One Step Simplification" (formula "46"))
                                                               (rule "notLeft" (formula "46"))
                                                               (rule "disjointDefinition" (formula "45"))
                                                                (builtin "One Step Simplification" (formula "45"))
                                                               (rule "notLeft" (formula "45"))
                                                               (rule "disjointDefinition" (formula "44"))
                                                                (builtin "One Step Simplification" (formula "44"))
                                                               (rule "notLeft" (formula "44"))
                                                               (rule "disjointDefinition" (formula "43"))
                                                                (builtin "One Step Simplification" (formula "43"))
                                                               (rule "notLeft" (formula "43"))
                                                               (rule "disjointDefinition" (formula "42"))
                                                                (builtin "One Step Simplification" (formula "42"))
                                                               (rule "notLeft" (formula "42"))
                                                               (rule "disjointDefinition" (formula "41"))
                                                                (builtin "One Step Simplification" (formula "41"))
                                                               (rule "notLeft" (formula "41"))
                                                               (rule "disjointDefinition" (formula "39"))
                                                                (builtin "One Step Simplification" (formula "39"))
                                                               (rule "notLeft" (formula "39"))
                                                               (rule "disjointDefinition" (formula "39"))
                                                                (builtin "One Step Simplification" (formula "39"))
                                                               (rule "notLeft" (formula "39"))
                                                               (rule "applyEq" (formula "130") (term "0") (ifseqformula "1"))
                                                               (rule "eqSymm" (formula "130"))
                                                               (rule "applyEq" (formula "128") (term "1") (ifseqformula "56"))
                                                               (rule "applyEq" (formula "128") (term "1") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "126") (term "1") (ifseqformula "56"))
                                                               (rule "applyEq" (formula "127") (term "1") (ifseqformula "56"))
                                                               (rule "applyEq" (formula "124") (term "1") (ifseqformula "54"))
                                                               (rule "applyEq" (formula "125") (term "0") (ifseqformula "1"))
                                                               (rule "eqSymm" (formula "125"))
                                                               (rule "applyEq" (formula "124") (term "1") (ifseqformula "54"))
                                                               (rule "applyEq" (formula "123") (term "1") (ifseqformula "54"))
                                                               (rule "applyEq" (formula "123") (term "0") (ifseqformula "1"))
                                                               (rule "eqSymm" (formula "123"))
                                                               (rule "applyEq" (formula "33") (term "0,0") (ifseqformula "54"))
                                                               (rule "applyEq" (formula "34") (term "0,0") (ifseqformula "56"))
                                                               (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "89"))
                                                               (rule "applyEq" (formula "38") (term "0,1,0,1,1") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "38") (term "0,1,1,0,1") (ifseqformula "54"))
                                                               (rule "applyEq" (formula "122") (term "1") (ifseqformula "54"))
                                                               (rule "applyEq" (formula "121") (term "1") (ifseqformula "89"))
                                                               (rule "applyEq" (formula "120") (term "1") (ifseqformula "89"))
                                                               (rule "applyEq" (formula "118") (term "1") (ifseqformula "89"))
                                                               (rule "applyEq" (formula "119") (term "1") (ifseqformula "89"))
                                                               (rule "applyEq" (formula "120") (term "0") (ifseqformula "56"))
                                                               (rule "applyEq" (formula "38") (term "0,0,1,0,1") (ifseqformula "89"))
                                                               (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "38") (term "0,0,0,1,1") (ifseqformula "56"))
                                                               (rule "applyEq" (formula "118") (term "0") (ifseqformula "56"))
                                                               (rule "applyEq" (formula "117") (term "0") (ifseqformula "54"))
                                                               (rule "eqSymm" (formula "117"))
                                                               (rule "applyEq" (formula "114") (term "0") (ifseqformula "1"))
                                                               (rule "eqSymm" (formula "114"))
                                                               (rule "applyEq" (formula "113") (term "1") (ifseqformula "56"))
                                                               (rule "applyEq" (formula "118") (term "0") (ifseqformula "1"))
                                                               (rule "eqSymm" (formula "118"))
                                                               (rule "applyEq" (formula "111") (term "1") (ifseqformula "89"))
                                                               (rule "applyEq" (formula "112") (term "1") (ifseqformula "54"))
                                                               (rule "applyEq" (formula "107") (term "1") (ifseqformula "56"))
                                                               (rule "applyEq" (formula "106") (term "1") (ifseqformula "54"))
                                                               (rule "applyEq" (formula "104") (term "1") (ifseqformula "89"))
                                                               (rule "applyEq" (formula "108") (term "1") (ifseqformula "1"))
                                                               (rule "applyEq" (formula "117") (term "0") (ifseqformula "89"))
                                                               (rule "eqSymm" (formula "117"))
                                                               (rule "Contract_axiom_for_isEmpty_in_Buffers" (formula "57") (term "0") (inst "element=element"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "1,0,0") (ifseqformula "48"))
                                                               (rule "wellFormedAnonEQ" (formula "57") (term "1,0,0,0") (ifseqformula "48"))
                                                               (rule "expand_inInt" (formula "57") (term "0,0,1,0,1,1,1"))
                                                               (rule "replace_int_MIN" (formula "57") (term "0,1,0,0,1,0,1,1,1"))
                                                               (rule "replace_int_MAX" (formula "57") (term "1,0,0,0,1,0,1,1,1"))
                                                               (rule "replace_known_right" (formula "57") (term "0,1,0") (ifseqformula "124"))
                                                                (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "60")) (ifInst ""  (formula "10")) (ifInst ""  (formula "47")) (ifInst ""  (formula "123")) (ifInst ""  (formula "50")) (ifInst ""  (formula "60")) (ifInst ""  (formula "58")) (ifInst ""  (formula "58")) (ifInst ""  (formula "59")))
                                                               (rule "andLeft" (formula "57"))
                                                               (rule "inEqSimp_commuteLeq" (formula "58") (term "1,0,0"))
                                                               (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "97"))
                                                               (rule "notLeft" (formula "97"))
                                                               (rule "Contract_axiom_for_initialReadAreasBlockClassified_in_BucketPointers" (formula "101") (term "0"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "1,0,0") (ifseqformula "86"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "0,1,0,0") (ifseqformula "63"))
                                                               (rule "wellFormedAnonEQ" (formula "101") (term "1,0,0,0") (ifseqformula "86"))
                                                               (rule "wellFormedAnonEQ" (formula "101") (term "0,1,0,0,0") (ifseqformula "63"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "101") (term "0,0,1,0,0") (ifseqformula "48"))
                                                               (rule "wellFormedAnonEQ" (formula "101") (term "0,0,1,0,0,0") (ifseqformula "48"))
                                                               (rule "translateJavaAddInt" (formula "101") (term "4,0,0,1,1,1,0,0,0,0"))
                                                               (rule "eqSymm" (formula "101") (term "0,1,0,0,0,0"))
                                                               (rule "translateJavaSubInt" (formula "101") (term "1,0,1,0,0,0,0"))
                                                               (rule "translateJavaCastInt" (formula "101") (term "0,0,1,0,0,0,0"))
                                                               (rule "replace_known_left" (formula "101") (term "1,1,1") (ifseqformula "96"))
                                                                (builtin "One Step Simplification" (formula "101") (ifInst ""  (formula "93")) (ifInst ""  (formula "170")) (ifInst ""  (formula "172")) (ifInst ""  (formula "10")) (ifInst ""  (formula "47")) (ifInst ""  (formula "62")) (ifInst ""  (formula "85")) (ifInst ""  (formula "120")) (ifInst ""  (formula "121")) (ifInst ""  (formula "122")) (ifInst ""  (formula "88")) (ifInst ""  (formula "123")) (ifInst ""  (formula "102")))
                                                               (rule "polySimp_elimSub" (formula "101") (term "1,0,1,0"))
                                                               (rule "polySimp_addComm0" (formula "101") (term "1,0,1,0"))
                                                               (rule "castedGetAny" (formula "101") (term "0,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "101") (term "1,0,0"))
                                                               (rule "replace_known_left" (formula "101") (term "1,0,0") (ifseqformula "24"))
                                                                (builtin "One Step Simplification" (formula "101"))
                                                               (rule "inEqSimp_commuteLeq" (formula "101") (term "0,0,0"))
                                                               (rule "replace_known_left" (formula "101") (term "0,0,0") (ifseqformula "20"))
                                                                (builtin "One Step Simplification" (formula "101"))
                                                               (rule "inEqSimp_commuteLeq" (formula "101") (term "0,0"))
                                                               (rule "applyEq" (formula "101") (term "1,0,0,1,0") (ifseqformula "90"))
                                                               (rule "replace_known_left" (formula "101") (term "0,1,0") (ifseqformula "75"))
                                                                (builtin "One Step Simplification" (formula "101"))
                                                               (rule "applyEq" (formula "101") (term "1,4,0,0,1,0") (ifseqformula "92"))
                                                               (rule "polySimp_addComm0" (formula "101") (term "4,0,0,1,0"))
                                                               (rule "inEqSimp_subsumption1" (formula "101") (term "0,0") (ifseqformula "29"))
                                                               (rule "inEqSimp_homoInEq0" (formula "101") (term "0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "101") (term "0,0,0,0"))
                                                               (rule "add_literals" (formula "101") (term "1,1,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "101") (term "1,0,0,0,0"))
                                                               (rule "add_literals" (formula "101") (term "0,0,0,0"))
                                                               (rule "qeq_literals" (formula "101") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "101"))
                                                               (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "61"))
                                                               (rule "andLeft" (formula "61"))
                                                               (rule "notLeft" (formula "62"))
                                                               (rule "notLeft" (formula "61"))
                                                               (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "17"))
                                                               (rule "andLeft" (formula "17"))
                                                               (rule "andLeft" (formula "17"))
                                                               (rule "notLeft" (formula "19"))
                                                               (rule "andLeft" (formula "17"))
                                                               (rule "notLeft" (formula "19"))
                                                               (rule "andLeft" (formula "17"))
                                                               (rule "notLeft" (formula "19"))
                                                               (rule "close" (formula "106") (ifseqformula "1"))
                                                            )
                                                            (branch
                                                               (rule "andRight" (formula "149"))
                                                               (branch
                                                                  (rule "notRight" (formula "149"))
                                                                  (rule "replace_known_left" (formula "8") (term "0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "true_left" (formula "8"))
                                                                  (rule "polySimp_homoEq" (formula "65") (term "1,0"))
                                                                  (rule "polySimp_homoEq" (formula "64") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "65") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "64") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "0,0,1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "64") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "64") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "93") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "30") (term "0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "81") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "31"))
                                                                  (rule "mul_literals" (formula "31") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "31") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "62") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "62") (term "0,1,0,0"))
                                                                  (rule "add_literals" (formula "62") (term "1,0,1,0,0"))
                                                                  (rule "times_zero_1" (formula "62") (term "0,1,0,0"))
                                                                  (rule "qeq_literals" (formula "62") (term "1,0,0"))
                                                                   (builtin "One Step Simplification" (formula "62"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "81") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "81") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "81") (term "1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "81") (term "1,1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "81") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "81") (term "0,0,1,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "81") (term "0,0,0,1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "81") (term "0,0,1,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "81") (term "0,0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "81") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "81") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "28"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                                  (rule "applyEq" (formula "133") (term "0") (ifseqformula "1"))
                                                                  (rule "eqSymm" (formula "133"))
                                                                  (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "133"))
                                                                   (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "133"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "applyEq" (formula "115") (term "0") (ifseqformula "1"))
                                                                  (rule "eqSymm" (formula "115"))
                                                                  (rule "applyEq" (formula "107") (term "0") (ifseqformula "1"))
                                                                  (rule "eqSymm" (formula "107"))
                                                                  (rule "applyEq" (formula "138") (term "0") (ifseqformula "1"))
                                                                  (rule "eqSymm" (formula "138"))
                                                                  (rule "replace_known_right" (formula "46") (term "0") (ifseqformula "138"))
                                                                   (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "138"))
                                                                   (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "applyEq" (formula "120") (term "1") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "142") (term "0") (ifseqformula "1"))
                                                                  (rule "eqSymm" (formula "142"))
                                                                  (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "142"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "applyEq" (formula "140") (term "0") (ifseqformula "1"))
                                                                  (rule "eqSymm" (formula "140"))
                                                                  (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "140"))
                                                                   (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "applyEq" (formula "135") (term "0") (ifseqformula "1"))
                                                                  (rule "eqSymm" (formula "135"))
                                                                  (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "135"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "replace_known_right" (formula "44") (term "0") (ifseqformula "135"))
                                                                   (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "applyEq" (formula "126") (term "0") (ifseqformula "1"))
                                                                  (rule "eqSymm" (formula "126"))
                                                                  (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "126"))
                                                                   (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "65") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "65") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "65") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "65") (term "0,1,1,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "64") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "64") (term "0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "64") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "93") (term "1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "93") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "93") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "93") (term "1,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "81") (term "1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "81") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "81") (term "1,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "31") (term "1"))
                                                                  (rule "mul_literals" (formula "31") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "81") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "81") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "81") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "81") (term "0,0,1,1,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                                  (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "22"))
                                                                  (rule "leq_literals" (formula "13") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "true_left" (formula "13"))
                                                                  (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "30"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                                                  (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "22") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "22") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "22"))
                                                                  (rule "true_left" (formula "22"))
                                                                  (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "24"))
                                                                  (rule "leq_literals" (formula "23") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "true_left" (formula "23"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "51"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "53") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "53"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "13"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                                  (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                                  (rule "add_literals" (formula "28") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "28"))
                                                                  (rule "leq_literals" (formula "12") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "true_left" (formula "12"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "24"))
                                                                  (rule "mul_literals" (formula "13") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                                  (rule "add_literals" (formula "13") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                                  (rule "mul_literals" (formula "13") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "21"))
                                                                  (rule "leq_literals" (formula "13") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "true_left" (formula "13"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "21"))
                                                                  (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "23") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                                  (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "23"))
                                                                  (rule "leq_literals" (formula "12") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "true_left" (formula "12"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "54"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "53"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "53") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "53") (ifseqformula "28"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "53") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0"))
                                                                  (rule "add_literals" (formula "53") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "53") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "53") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "53") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "53"))
                                                                  (rule "true_left" (formula "53"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "54"))
                                                                  (rule "mul_literals" (formula "52") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "52"))
                                                                  (rule "mul_literals" (formula "52") (term "1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "22"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                                  (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                                  (rule "add_literals" (formula "28") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "27") (ifseqformula "28"))
                                                                  (rule "leq_literals" (formula "27") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "27"))
                                                                  (rule "true_left" (formula "27"))
                                                                  (rule "inEqSimp_and_subsumption2" (formula "79") (term "0,0,0,0"))
                                                                  (rule "leq_literals" (formula "79") (term "0,0,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "79"))
                                                                  (rule "inEqSimp_and_subsumption3" (formula "61") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "61") (term "0,1,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "61"))
                                                                  (rule "inEqSimp_and_subsumption3" (formula "90") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "90") (term "0,1,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "90"))
                                                                  (rule "inEqSimp_and_subsumption3" (formula "26") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "26") (term "0,1,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "26"))
                                                                  (rule "inEqSimp_and_subsumption3" (formula "78") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "78") (term "0,1,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "78"))
                                                                  (rule "nnf_imp2or" (formula "62") (term "0"))
                                                                  (rule "nnf_imp2or" (formula "79") (term "0"))
                                                                  (rule "nnf_imp2or" (formula "61") (term "0"))
                                                                  (rule "nnf_imp2or" (formula "90") (term "0"))
                                                                  (rule "nnf_imp2or" (formula "26") (term "0"))
                                                                  (rule "nnf_imp2or" (formula "78") (term "0"))
                                                                  (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "17"))
                                                                  (rule "andLeft" (formula "17"))
                                                                  (rule "notLeft" (formula "18"))
                                                                  (rule "andLeft" (formula "17"))
                                                                  (rule "andLeft" (formula "17"))
                                                                  (rule "notLeft" (formula "19"))
                                                                  (rule "close" (formula "92") (ifseqformula "1"))
                                                               )
                                                               (branch
                                                                  (rule "notRight" (formula "149"))
                                                                  (rule "replace_known_left" (formula "9") (term "0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "true_left" (formula "9"))
                                                                  (rule "polySimp_homoEq" (formula "65") (term "1,0"))
                                                                  (rule "polySimp_homoEq" (formula "64") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "65") (term "0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "64") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "0,0,1,0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "64") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "64") (term "0,1,0,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "30") (term "0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "81") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_gtToGeq" (formula "31"))
                                                                  (rule "mul_literals" (formula "31") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "31") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "93") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "28"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "28") (term "0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "28") (term "0,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "62") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "62") (term "0,1,0,0"))
                                                                  (rule "add_literals" (formula "62") (term "1,0,1,0,0"))
                                                                  (rule "times_zero_1" (formula "62") (term "0,1,0,0"))
                                                                  (rule "qeq_literals" (formula "62") (term "1,0,0"))
                                                                   (builtin "One Step Simplification" (formula "62"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "81") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "81") (term "1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "81") (term "1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "81") (term "1,1,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "81") (term "0,1,0,1,0"))
                                                                  (rule "polySimp_mulAssoc" (formula "81") (term "0,0,1,0,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "81") (term "0,0,0,1,0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "81") (term "0,0,1,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "81") (term "0,0,1,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "81") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "81") (term "0,0,1,0"))
                                                                  (rule "applyEq" (formula "108") (term "0") (ifseqformula "1"))
                                                                  (rule "eqSymm" (formula "108"))
                                                                  (rule "applyEq" (formula "122") (term "1") (ifseqformula "1"))
                                                                  (rule "applyEq" (formula "137") (term "0") (ifseqformula "1"))
                                                                  (rule "eqSymm" (formula "137"))
                                                                  (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "137"))
                                                                   (builtin "One Step Simplification" (formula "3"))
                                                                  (rule "replace_known_right" (formula "44") (term "0") (ifseqformula "137"))
                                                                   (builtin "One Step Simplification" (formula "44"))
                                                                  (rule "applyEq" (formula "143") (term "1") (ifseqformula "1"))
                                                                  (rule "replace_known_right" (formula "8") (term "0") (ifseqformula "143"))
                                                                   (builtin "One Step Simplification" (formula "8"))
                                                                  (rule "applyEq" (formula "133") (term "0") (ifseqformula "1"))
                                                                  (rule "eqSymm" (formula "133"))
                                                                  (rule "replace_known_right" (formula "9") (term "0") (ifseqformula "133"))
                                                                   (builtin "One Step Simplification" (formula "9"))
                                                                  (rule "replace_known_right" (formula "2") (term "0") (ifseqformula "133"))
                                                                   (builtin "One Step Simplification" (formula "2"))
                                                                  (rule "applyEq" (formula "142") (term "1") (ifseqformula "1"))
                                                                  (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "142"))
                                                                   (builtin "One Step Simplification" (formula "6"))
                                                                  (rule "applyEq" (formula "140") (term "0") (ifseqformula "1"))
                                                                  (rule "eqSymm" (formula "140"))
                                                                  (rule "replace_known_right" (formula "46") (term "0") (ifseqformula "140"))
                                                                   (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "140"))
                                                                   (builtin "One Step Simplification" (formula "4"))
                                                                  (rule "applyEq" (formula "128") (term "0") (ifseqformula "1"))
                                                                  (rule "eqSymm" (formula "128"))
                                                                  (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "128"))
                                                                   (builtin "One Step Simplification" (formula "7"))
                                                                  (rule "applyEq" (formula "115") (term "0") (ifseqformula "1"))
                                                                  (rule "eqSymm" (formula "115"))
                                                                  (rule "polySimp_sepPosMonomial" (formula "65") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "65") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "65") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "65") (term "0,1,1,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "64") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "64") (term "0,0,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "64") (term "0,0,1,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "30") (term "1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "81") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "81") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "81") (term "1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "81") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "81") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "81") (term "1,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                                  (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "31") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                                                  (rule "mul_literals" (formula "31") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "93") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "93") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "93") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "93") (term "1,1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "93") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "93") (term "1,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "81") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "81") (term "1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "81") (term "1,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "81") (term "1,1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "81") (term "1,1,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "81") (term "0,1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "81") (term "0,0,1,1,0"))
                                                                  (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "22"))
                                                                  (rule "leq_literals" (formula "13") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "true_left" (formula "13"))
                                                                  (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "25"))
                                                                  (rule "leq_literals" (formula "24") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "24"))
                                                                  (rule "true_left" (formula "24"))
                                                                  (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "29"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                                                  (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "22") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "22") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "22"))
                                                                  (rule "true_left" (formula "22"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "54"))
                                                                  (rule "mul_literals" (formula "52") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "52"))
                                                                  (rule "mul_literals" (formula "52") (term "1"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "22"))
                                                                  (rule "polySimp_mulComm0" (formula "24") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "24") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                                  (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "24"))
                                                                  (rule "leq_literals" (formula "13") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "true_left" (formula "13"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "54"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "53"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "1"))
                                                                  (rule "polySimp_elimOne" (formula "53") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "53") (ifseqformula "28"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "53") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "53") (term "0,0"))
                                                                  (rule "add_literals" (formula "53") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "53") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "53") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "53") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "53"))
                                                                  (rule "true_left" (formula "53"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "51"))
                                                                  (rule "polySimp_mulComm0" (formula "53") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "53") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "53"))
                                                                  (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "53") (term "0"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "25"))
                                                                  (rule "mul_literals" (formula "13") (term "0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                                  (rule "add_literals" (formula "13") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                                  (rule "mul_literals" (formula "13") (term "1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "21"))
                                                                  (rule "leq_literals" (formula "13") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "13"))
                                                                  (rule "true_left" (formula "13"))
                                                                  (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "23"))
                                                                  (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                                  (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                                  (rule "add_literals" (formula "28") (term "0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                                  (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                                  (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "28"))
                                                                  (rule "leq_literals" (formula "12") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "true_left" (formula "12"))
                                                                  (rule "inEqSimp_and_subsumption2" (formula "79") (term "0,0,0,0"))
                                                                  (rule "leq_literals" (formula "79") (term "0,0,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "79"))
                                                                  (rule "inEqSimp_and_subsumption3" (formula "26") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "26") (term "0,1,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "26"))
                                                                  (rule "inEqSimp_and_subsumption3" (formula "61") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "61") (term "0,1,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "61"))
                                                                  (rule "inEqSimp_and_subsumption3" (formula "78") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "78") (term "0,1,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "78"))
                                                                  (rule "inEqSimp_and_subsumption3" (formula "90") (term "0,0,0"))
                                                                  (rule "leq_literals" (formula "90") (term "0,1,0,0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "90"))
                                                                  (rule "nnf_imp2or" (formula "62") (term "0"))
                                                                  (rule "nnf_imp2or" (formula "79") (term "0"))
                                                                  (rule "nnf_imp2or" (formula "26") (term "0"))
                                                                  (rule "nnf_imp2or" (formula "61") (term "0"))
                                                                  (rule "nnf_imp2or" (formula "78") (term "0"))
                                                                  (rule "nnf_imp2or" (formula "90") (term "0"))
                                                                  (rule "nnf_notAnd" (formula "62") (term "0,0"))
                                                                  (rule "inEqSimp_notGeq" (formula "62") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "62") (term "1,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "62") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "0,0,0"))
                                                                  (rule "mul_literals" (formula "62") (term "1,0,0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "62") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "62") (term "1,0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "62") (term "0,0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "62") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "62") (term "1,1,0,0"))
                                                                  (rule "nnf_notAnd" (formula "79") (term "0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "79") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "79") (term "1,0,0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "79") (term "1,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "79") (term "1,1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "79") (term "1,1,0,0"))
                                                                  (rule "mul_literals" (formula "79") (term "0,1,1,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "79") (term "1,1,1,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "79") (term "1,1,1,0,0"))
                                                                  (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "26") (term "1,0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "26") (term "0,0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "26") (term "1,1,0,0"))
                                                                  (rule "nnf_notAnd" (formula "61") (term "0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "61") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "61") (term "1,0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "61") (term "0,0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "61") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "61") (term "1,1,0,0"))
                                                                  (rule "nnf_notAnd" (formula "78") (term "0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "78") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "78") (term "1,0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "78") (term "0,0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "78") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "78") (term "1,1,0,0"))
                                                                  (rule "nnf_notAnd" (formula "90") (term "0,0"))
                                                                  (rule "inEqSimp_notLeq" (formula "90") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "90") (term "1,0,0,1,0,0"))
                                                                  (rule "add_literals" (formula "90") (term "0,0,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "90") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "90") (term "1,1,0,0"))
                                                                  (rule "Definition_axiom_for_isAtInitialState_in_de_wiesler_BucketPointers" (formula "77") (term "0") (inst "b=b"))
                                                                   (builtin "One Step Simplification" (formula "77"))
                                                                  (rule "expand_inInt" (formula "77") (term "1,0,0"))
                                                                  (rule "replace_int_MAX" (formula "77") (term "1,0,1,0,0"))
                                                                  (rule "replace_int_MIN" (formula "77") (term "0,1,1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "77") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "77") (term "1,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "77") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "77") (term "1,1,0,0"))
                                                                  (rule "applyEq" (formula "77") (term "0,1,0,0,1,0,0,0") (ifseqformula "74"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "77") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "77") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "77") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "77") (term "1,1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "77") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "77") (term "1,1,1,0,0,0"))
                                                                  (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "30"))
                                                                   (builtin "One Step Simplification" (formula "30"))
                                                                  (rule "andLeft" (formula "30"))
                                                                  (rule "andLeft" (formula "30"))
                                                                  (rule "andLeft" (formula "30"))
                                                                  (rule "andLeft" (formula "30"))
                                                                  (rule "andLeft" (formula "30"))
                                                                  (rule "andLeft" (formula "30"))
                                                                  (rule "translateJavaSubInt" (formula "35") (term "0,2,1"))
                                                                  (rule "translateJavaSubInt" (formula "35") (term "0,2,0"))
                                                                  (rule "translateJavaMulInt" (formula "32") (term "1,1"))
                                                                  (rule "eqSymm" (formula "35"))
                                                                  (rule "eqSymm" (formula "32"))
                                                                  (rule "polySimp_elimSub" (formula "35") (term "0,2,1"))
                                                                  (rule "mul_literals" (formula "35") (term "1,0,2,1"))
                                                                  (rule "polySimp_elimSub" (formula "35") (term "0,2,0"))
                                                                  (rule "mul_literals" (formula "35") (term "1,0,2,0"))
                                                                  (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                                  (rule "polySimp_addComm0" (formula "35") (term "0,2,1"))
                                                                  (rule "polySimp_addComm0" (formula "35") (term "0,2,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "30"))
                                                                  (rule "applyEq" (formula "31") (term "0") (ifseqformula "39"))
                                                                  (rule "applyEq" (formula "30") (term "0") (ifseqformula "39"))
                                                                  (rule "applyEq" (formula "32") (term "1") (ifseqformula "39"))
                                                                  (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "30"))
                                                                  (rule "leq_literals" (formula "38") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "38"))
                                                                  (rule "true_left" (formula "38"))
                                                                  (rule "inEqSimp_subsumption0" (formula "37") (ifseqformula "31"))
                                                                  (rule "leq_literals" (formula "37") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "37"))
                                                                  (rule "true_left" (formula "37"))
                                                                  (rule "inEqSimp_subsumption1" (formula "63") (term "0,0") (ifseqformula "30"))
                                                                  (rule "leq_literals" (formula "63") (term "0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "63"))
                                                                  (rule "Definition_axiom_for_isClassifiedWith_in_de_wiesler_Buffers" (formula "61") (term "0") (inst "b=b"))
                                                                   (builtin "One Step Simplification" (formula "61"))
                                                                  (rule "expand_inInt" (formula "61") (term "1,0,0"))
                                                                  (rule "replace_int_MAX" (formula "61") (term "1,0,1,0,0"))
                                                                  (rule "replace_int_MIN" (formula "61") (term "0,1,1,0,0"))
                                                                  (rule "translateJavaMulInt" (formula "61") (term "0,4,0,1,0"))
                                                                  (rule "translateJavaMulInt" (formula "61") (term "3,0,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "61") (term "4,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "61") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "61") (term "1,1,0,0"))
                                                                  (rule "applyEq" (formula "61") (term "0,1,0,0,1,0,0,0") (ifseqformula "44"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "61") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "61") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "61") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "61") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "61") (term "1,1,1,0,0,0"))
                                                                  (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "70"))
                                                                  (rule "andLeft" (formula "70"))
                                                                  (rule "notLeft" (formula "71"))
                                                                  (rule "notLeft" (formula "70"))
                                                                  (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "94"))
                                                                   (builtin "One Step Simplification" (formula "5"))
                                                                  (rule "Contract_axiom_for_initialReadAreasBlockClassified_in_BucketPointers" (formula "90") (term "0"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "90") (term "1,0,0") (ifseqformula "73"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "90") (term "0,1,0,0") (ifseqformula "53"))
                                                                  (rule "wellFormedAnonEQ" (formula "90") (term "1,0,0,0") (ifseqformula "73"))
                                                                  (rule "wellFormedAnonEQ" (formula "90") (term "0,1,0,0,0") (ifseqformula "53"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "90") (term "0,0,1,0,0") (ifseqformula "40"))
                                                                  (rule "wellFormedAnonEQ" (formula "90") (term "0,0,1,0,0,0") (ifseqformula "40"))
                                                                  (rule "translateJavaSubInt" (formula "90") (term "0,0,1,0,0,0,0"))
                                                                  (rule "translateJavaAddInt" (formula "90") (term "4,0,0,1,1,1,0,0,0,0"))
                                                                  (rule "translateJavaCastInt" (formula "90") (term "1,0,1,0,0,0,0"))
                                                                  (rule "eqSymm" (formula "90") (term "0,1,0,0,0,0"))
                                                                  (rule "replace_known_left" (formula "90") (term "1,1,1") (ifseqformula "83"))
                                                                   (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "84")) (ifInst ""  (formula "146")) (ifInst ""  (formula "148")) (ifInst ""  (formula "10")) (ifInst ""  (formula "39")) (ifInst ""  (formula "52")) (ifInst ""  (formula "72")) (ifInst ""  (formula "96")) (ifInst ""  (formula "97")) (ifInst ""  (formula "98")) (ifInst ""  (formula "75")) (ifInst ""  (formula "99")) (ifInst ""  (formula "84")) (ifInst ""  (formula "91")))
                                                                  (rule "true_left" (formula "90"))
                                                                  (rule "Contract_axiom_for_bucketStart_in_BucketPointers" (formula "87") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "99")))
                                                                  (rule "translateJavaAddInt" (formula "87") (term "1,1,1,0,1,1,1"))
                                                                  (rule "translateJavaSubInt" (formula "87") (term "1,0,1,1,1,1,1"))
                                                                  (rule "polySimp_elimSub" (formula "87") (term "1,0,1,1,1,1,1"))
                                                                  (rule "mul_literals" (formula "87") (term "1,1,0,1,1,1,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "87") (term "1,1,1,0,1,1,1"))
                                                                  (rule "polySimp_addComm0" (formula "87") (term "1,0,1,1,1,1,1"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "87") (term "0,0,1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0,0,1,1,1"))
                                                                  (rule "polySimp_addComm1" (formula "87") (term "0,0,0,1,1,1"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "87") (term "0,0,1,1,1,1"))
                                                                  (rule "add_zero_right" (formula "87") (term "0,0,0,1,1,1,1"))
                                                                  (rule "polySimp_mulComm0" (formula "87") (term "1,0,0,0,1,1,1,1"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "87") (term "1,0,1,1,1,1"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "87") (term "1,0,0,1"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "87") (term "0,0,0,1"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "87") (term "1,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "87") (term "0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "87") (term "1,0,1,1,1"))
                                                                  (rule "applyEq" (formula "87") (term "0,1,0,0") (ifseqformula "77"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "87") (term "1,0,0"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "87") (term "0,1,0,0"))
                                                                  (rule "add_literals" (formula "87") (term "1,0,1,0,0"))
                                                                  (rule "times_zero_1" (formula "87") (term "0,1,0,0"))
                                                                  (rule "leq_literals" (formula "87") (term "1,0,0"))
                                                                   (builtin "One Step Simplification" (formula "87"))
                                                                  (rule "applyEq" (formula "87") (term "1,0,1,0,1") (ifseqformula "77"))
                                                                  (rule "applyEq" (formula "87") (term "1,1,0,1,1,1") (ifseqformula "88"))
                                                                  (rule "applyEq" (formula "87") (term "0,0,0,1,1") (ifseqformula "88"))
                                                                  (rule "applyEq" (formula "87") (term "0,1,0,0,0,1,1,1") (ifseqformula "77"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "87") (term "0,0,0,1,1,1"))
                                                                  (rule "add_literals" (formula "87") (term "1,1,0,0,0,1,1,1"))
                                                                  (rule "times_zero_1" (formula "87") (term "1,0,0,0,1,1,1"))
                                                                  (rule "add_zero_right" (formula "87") (term "0,0,0,1,1,1"))
                                                                  (rule "leq_literals" (formula "87") (term "0,0,1,1,1"))
                                                                   (builtin "One Step Simplification" (formula "87"))
                                                                  (rule "applyEq" (formula "87") (term "1,0,1,0,0,1") (ifseqformula "77"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "87") (term "1,0,0,1"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "87") (term "0,1,0,0,1"))
                                                                  (rule "add_literals" (formula "87") (term "1,0,1,0,0,1"))
                                                                  (rule "times_zero_1" (formula "87") (term "0,1,0,0,1"))
                                                                  (rule "leq_literals" (formula "87") (term "1,0,0,1"))
                                                                   (builtin "One Step Simplification" (formula "87"))
                                                                  (rule "applyEq" (formula "87") (term "0,1,0,1,1,1") (ifseqformula "77"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "87") (term "1,0,1,1,1"))
                                                                  (rule "polySimp_pullOutFactor1" (formula "87") (term "0,1,0,1,1,1"))
                                                                  (rule "add_literals" (formula "87") (term "1,0,1,0,1,1,1"))
                                                                  (rule "times_zero_1" (formula "87") (term "0,1,0,1,1,1"))
                                                                  (rule "leq_literals" (formula "87") (term "1,0,1,1,1"))
                                                                   (builtin "One Step Simplification" (formula "87"))
                                                                  (rule "applyEq" (formula "87") (term "0,0,0,1") (ifseqformula "88"))
                                                                  (rule "applyEq" (formula "87") (term "0,1,0,1") (ifseqformula "88"))
                                                                  (rule "applyEq" (formula "87") (term "1,1,1,1,1") (ifseqformula "88"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "87") (term "0,1,1,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "87") (term "0,0,1,1,1"))
                                                                  (rule "polySimp_elimOne" (formula "87") (term "0,0,1,1,1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "87") (term "0,0") (ifseqformula "30"))
                                                                  (rule "leq_literals" (formula "87") (term "0,0,0"))
                                                                   (builtin "One Step Simplification" (formula "87"))
                                                                  (rule "inEqSimp_subsumption1" (formula "87") (term "0,1,1,1") (ifseqformula "30"))
                                                                  (rule "leq_literals" (formula "87") (term "0,0,1,1,1"))
                                                                   (builtin "One Step Simplification" (formula "87"))
                                                                  (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "88") (term "0"))
                                                                  (rule "translateJavaCastInt" (formula "88") (term "0,0"))
                                                                  (rule "castedGetAny" (formula "88") (term "0,0"))
                                                                  (rule "applyEq" (formula "88") (term "0,0") (ifseqformula "64"))
                                                                   (builtin "One Step Simplification" (formula "88"))
                                                                  (rule "true_left" (formula "88"))
                                                                  (rule "Contract_axiom_for_isEmpty_in_Buffers" (formula "49") (term "0") (inst "element=element"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "49") (term "1,0,0") (ifseqformula "40"))
                                                                  (rule "wellFormedAnonEQ" (formula "49") (term "1,0,0,0") (ifseqformula "40"))
                                                                  (rule "expand_inInt" (formula "49") (term "0,0,1,0,1,1,1"))
                                                                  (rule "replace_int_MIN" (formula "49") (term "0,1,0,0,1,0,1,1,1"))
                                                                  (rule "replace_int_MAX" (formula "49") (term "1,0,0,0,1,0,1,1,1"))
                                                                  (rule "replace_known_left" (formula "49") (term "0,0,1,1") (ifseqformula "50"))
                                                                   (builtin "One Step Simplification" (formula "49") (ifInst ""  (formula "52")) (ifInst ""  (formula "10")) (ifInst ""  (formula "39")) (ifInst ""  (formula "100")) (ifInst ""  (formula "42")) (ifInst ""  (formula "101")) (ifInst ""  (formula "52")) (ifInst ""  (formula "50")) (ifInst ""  (formula "51")))
                                                                  (rule "andLeft" (formula "49"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "50") (term "1,0,0"))
                                                                  (rule "Contract_axiom_for_initialReadAreasCount_in_BucketPointers" (formula "91") (term "0"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "91") (term "1,0,0") (ifseqformula "75"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "91") (term "0,1,0,0") (ifseqformula "55"))
                                                                  (rule "wellFormedAnonEQ" (formula "91") (term "1,0,0,0") (ifseqformula "75"))
                                                                  (rule "wellFormedAnonEQ" (formula "91") (term "0,1,0,0,0") (ifseqformula "55"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "91") (term "0,0,1,0,0") (ifseqformula "40"))
                                                                  (rule "wellFormedAnonEQ" (formula "91") (term "0,0,1,0,0,0") (ifseqformula "40"))
                                                                  (rule "replace_known_left" (formula "91") (term "1,1,1") (ifseqformula "85"))
                                                                   (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "86")) (ifInst ""  (formula "150")) (ifInst ""  (formula "10")) (ifInst ""  (formula "39")) (ifInst ""  (formula "54")) (ifInst ""  (formula "74")) (ifInst ""  (formula "98")) (ifInst ""  (formula "99")) (ifInst ""  (formula "100")) (ifInst ""  (formula "77")) (ifInst ""  (formula "101")) (ifInst ""  (formula "86")) (ifInst ""  (formula "92")))
                                                                  (rule "true_left" (formula "91"))
                                                                  (rule "Definition_axiom_for_isClassifiedBlocksRange_in_de_wiesler_Classifier" (formula "62") (term "0") (inst "block=block"))
                                                                   (builtin "One Step Simplification" (formula "62"))
                                                                  (rule "expand_inInt" (formula "62") (term "1,0,0"))
                                                                  (rule "replace_int_MAX" (formula "62") (term "1,0,1,0,0"))
                                                                  (rule "replace_int_MIN" (formula "62") (term "0,1,1,0,0"))
                                                                  (rule "translateJavaAddInt" (formula "62") (term "0,1,4,0,1,0"))
                                                                  (rule "translateJavaDivInt" (formula "62") (term "1,1,0,0,0"))
                                                                  (rule "translateJavaAddInt" (formula "62") (term "3,0,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "62") (term "4,0,1,0"))
                                                                  (rule "translateJavaSubInt" (formula "62") (term "0,1,1,0,0,0"))
                                                                  (rule "translateJavaMulInt" (formula "62") (term "1,3,0,1,0"))
                                                                  (rule "translateJavaMulInt" (formula "62") (term "1,4,0,1,0"))
                                                                  (rule "polySimp_elimSub" (formula "62") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "62") (term "1,4,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "62") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_addComm0" (formula "62") (term "1,1,4,0,1,0"))
                                                                  (rule "polySimp_rightDist" (formula "62") (term "1,4,0,1,0"))
                                                                  (rule "mul_literals" (formula "62") (term "0,1,4,0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "62") (term "4,0,1,0"))
                                                                  (rule "polySimp_addComm0" (formula "62") (term "0,4,0,1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "62") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "62") (term "1,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "62") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "62") (term "1,1,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "62") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "62") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "62") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0,0,0"))
                                                                  (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "17"))
                                                                  (rule "andLeft" (formula "17"))
                                                                  (rule "andLeft" (formula "17"))
                                                                  (rule "notLeft" (formula "19"))
                                                                  (rule "close" (formula "97") (ifseqformula "1"))
                                                               )
                                                            )
                                                         )
                                                         (branch
                                                            (rule "andRight" (formula "149"))
                                                            (branch
                                                               (rule "andRight" (formula "149"))
                                                               (branch
                                                                  (rule "andRight" (formula "149"))
                                                                  (branch
                                                                     (rule "andRight" (formula "149"))
                                                                     (branch
                                                                        (rule "andRight" (formula "149"))
                                                                        (branch
                                                                           (rule "andRight" (formula "149"))
                                                                           (branch
                                                                              (rule "andRight" (formula "149"))
                                                                              (branch
                                                                                 (rule "andRight" (formula "149"))
                                                                                 (branch
                                                                                    (rule "wellFormedAnonEQ" (formula "149") (ifseqformula "73"))
                                                                                    (rule "wellFormedAnonEQ" (formula "149") (term "0") (ifseqformula "52"))
                                                                                    (rule "wellFormedAnonEQ" (formula "149") (term "0,0") (ifseqformula "39"))
                                                                                    (rule "replace_known_left" (formula "149") (term "1") (ifseqformula "72"))
                                                                                     (builtin "One Step Simplification" (formula "149") (ifInst ""  (formula "10")) (ifInst ""  (formula "38")) (ifInst ""  (formula "51")))
                                                                                    (rule "closeTrue" (formula "149"))
                                                                                 )
                                                                                 (branch
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "149") (ifseqformula "73"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "149") (term "0") (ifseqformula "52"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "149") (term "0,0") (ifseqformula "39"))
                                                                                    (rule "orRight" (formula "149"))
                                                                                    (rule "orRight" (formula "149"))
                                                                                    (rule "orRight" (formula "149"))
                                                                                    (rule "close" (formula "149") (ifseqformula "11"))
                                                                                 )
                                                                              )
                                                                              (branch
                                                                                 (rule "expand_inInt" (formula "149"))
                                                                                 (rule "replace_int_MAX" (formula "149") (term "1,0"))
                                                                                 (rule "replace_int_MIN" (formula "149") (term "0,1"))
                                                                                 (rule "replace_known_left" (formula "149") (term "0") (ifseqformula "12"))
                                                                                  (builtin "One Step Simplification" (formula "149"))
                                                                                 (rule "polySimp_homoEq" (formula "64") (term "0,1,0"))
                                                                                 (rule "polySimp_homoEq" (formula "65") (term "1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0"))
                                                                                 (rule "polySimp_addComm1" (formula "65") (term "0,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1,0"))
                                                                                 (rule "polySimp_mulAssoc" (formula "64") (term "0,1,0,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "64") (term "0,0,1,0,0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "64") (term "0,1,0,0,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "64") (term "0,1,0,0,1,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0"))
                                                                                 (rule "inEqSimp_leqRight" (formula "149"))
                                                                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                                 (rule "add_literals" (formula "1") (term "0,0"))
                                                                                 (rule "inEqSimp_gtToGeq" (formula "32"))
                                                                                 (rule "mul_literals" (formula "32") (term "1,0,0"))
                                                                                 (rule "add_literals" (formula "32") (term "0,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "82") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "94") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,0,0"))
                                                                                 (rule "add_literals" (formula "31") (term "0,0,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_homoInEq0" (formula "29"))
                                                                                 (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                                                 (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                                                 (rule "inEqSimp_homoInEq0" (formula "82") (term "1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "82") (term "1,0,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "82") (term "1,0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "82") (term "1,1,0,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "82") (term "0,1,0,1,0"))
                                                                                 (rule "polySimp_mulAssoc" (formula "82") (term "0,0,1,0,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "82") (term "0,0,0,1,0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "82") (term "0,0,1,0,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "82") (term "0,0,1,0,1,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "82") (term "0,1,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "82") (term "0,0,1,0"))
                                                                                 (rule "inEqSimp_homoInEq0" (formula "63") (term "1,0,0"))
                                                                                 (rule "polySimp_pullOutFactor1" (formula "63") (term "0,1,0,0"))
                                                                                 (rule "add_literals" (formula "63") (term "1,0,1,0,0"))
                                                                                 (rule "times_zero_1" (formula "63") (term "0,1,0,0"))
                                                                                 (rule "qeq_literals" (formula "63") (term "1,0,0"))
                                                                                  (builtin "One Step Simplification" (formula "63"))
                                                                                 (rule "polySimp_sepPosMonomial" (formula "66") (term "1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "66") (term "1,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "66") (term "1,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "66") (term "0,1,1,0"))
                                                                                 (rule "polySimp_sepNegMonomial" (formula "65") (term "0,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "65") (term "0,0,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "65") (term "0,0,1,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                                 (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                                                                 (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                                                                 (rule "polySimp_rightDist" (formula "32") (term "1"))
                                                                                 (rule "mul_literals" (formula "32") (term "0,1"))
                                                                                 (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                                                                 (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "82") (term "1,0,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "82") (term "0,1,0,0,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "0,0,0,0,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0"))
                                                                                 (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "94") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "polySimp_elimOne" (formula "94") (term "1,1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,0,0"))
                                                                                 (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
                                                                                 (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                                                 (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                                 (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                                 (rule "inEqSimp_sepPosMonomial1" (formula "82") (term "1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "82") (term "1,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "82") (term "1,1,0"))
                                                                                 (rule "polySimp_mulLiterals" (formula "82") (term "1,1,1,0"))
                                                                                 (rule "polySimp_elimOne" (formula "82") (term "1,1,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "82") (term "0,1,1,0"))
                                                                                 (rule "polySimp_mulComm0" (formula "82") (term "0,0,1,1,0"))
                                                                                 (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "23"))
                                                                                 (rule "leq_literals" (formula "14") (term "0"))
                                                                                  (builtin "One Step Simplification" (formula "14"))
                                                                                 (rule "true_left" (formula "14"))
                                                                                 (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "31"))
                                                                                 (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                                                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                                                                 (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                                                 (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                                                 (rule "add_zero_right" (formula "23") (term "0,0"))
                                                                                 (rule "qeq_literals" (formula "23") (term "0"))
                                                                                  (builtin "One Step Simplification" (formula "23"))
                                                                                 (rule "true_left" (formula "23"))
                                                                                 (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "1"))
                                                                                 (rule "qeq_literals" (formula "22") (term "0"))
                                                                                  (builtin "One Step Simplification" (formula "22"))
                                                                                 (rule "closeFalse" (formula "22"))
                                                                              )
                                                                           )
                                                                           (branch
                                                                              (rule "expand_inInt" (formula "149"))
                                                                              (rule "replace_int_MAX" (formula "149") (term "1,0"))
                                                                              (rule "replace_int_MIN" (formula "149") (term "0,1"))
                                                                              (rule "replace_known_left" (formula "149") (term "0") (ifseqformula "14"))
                                                                               (builtin "One Step Simplification" (formula "149"))
                                                                              (rule "polySimp_homoEq" (formula "64") (term "0,1,0"))
                                                                              (rule "polySimp_homoEq" (formula "65") (term "1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1,0"))
                                                                              (rule "polySimp_addComm1" (formula "65") (term "0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1,0"))
                                                                              (rule "polySimp_mulAssoc" (formula "64") (term "0,1,0,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "64") (term "0,0,1,0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "64") (term "0,1,0,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "64") (term "0,1,0,0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0"))
                                                                              (rule "inEqSimp_leqRight" (formula "149"))
                                                                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                              (rule "add_literals" (formula "1") (term "0,0"))
                                                                              (rule "inEqSimp_gtToGeq" (formula "32"))
                                                                              (rule "mul_literals" (formula "32") (term "1,0,0"))
                                                                              (rule "add_literals" (formula "32") (term "0,0"))
                                                                              (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "82") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "94") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0,0,0"))
                                                                              (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0,0,0"))
                                                                              (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0,0,0"))
                                                                              (rule "add_literals" (formula "31") (term "0,0,0,0,0,0,0"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "29"))
                                                                              (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                                              (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                                              (rule "polySimp_mulAssoc" (formula "29") (term "0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "29") (term "0,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "29") (term "0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "29") (term "0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "63") (term "1,0,0"))
                                                                              (rule "polySimp_pullOutFactor1" (formula "63") (term "0,1,0,0"))
                                                                              (rule "add_literals" (formula "63") (term "1,0,1,0,0"))
                                                                              (rule "times_zero_1" (formula "63") (term "0,1,0,0"))
                                                                              (rule "qeq_literals" (formula "63") (term "1,0,0"))
                                                                               (builtin "One Step Simplification" (formula "63"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "82") (term "1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "82") (term "1,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "82") (term "1,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "82") (term "1,1,0,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "82") (term "0,1,0,1,0"))
                                                                              (rule "polySimp_mulAssoc" (formula "82") (term "0,0,1,0,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "82") (term "0,0,0,1,0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "82") (term "0,0,1,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "82") (term "0,0,1,0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "82") (term "0,1,0"))
                                                                              (rule "polySimp_addAssoc" (formula "82") (term "0,0,1,0"))
                                                                              (rule "polySimp_sepPosMonomial" (formula "66") (term "1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "66") (term "1,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "66") (term "1,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "66") (term "1,1,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "66") (term "0,1,1,0"))
                                                                              (rule "polySimp_sepNegMonomial" (formula "65") (term "0,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "65") (term "0,0,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "65") (term "0,0,1,0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                                                              (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                                                              (rule "polySimp_rightDist" (formula "32") (term "1"))
                                                                              (rule "mul_literals" (formula "32") (term "0,1"))
                                                                              (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                                                              (rule "polySimp_elimOne" (formula "32") (term "1,1"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                                                                              (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "82") (term "1,0,0,0,0,0"))
                                                                              (rule "mul_literals" (formula "82") (term "0,1,0,0,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "94") (term "0,0,0,0,0"))
                                                                              (rule "polySimp_mulComm0" (formula "94") (term "1,0,0,0,0,0"))
                                                                              (rule "polySimp_rightDist" (formula "94") (term "1,0,0,0,0,0"))
                                                                              (rule "mul_literals" (formula "94") (term "0,1,0,0,0,0,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "94") (term "1,1,0,0,0,0,0"))
                                                                              (rule "polySimp_elimOne" (formula "94") (term "1,1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,0,0"))
                                                                              (rule "mul_literals" (formula "31") (term "1,0,0,0,0,0"))
                                                                              (rule "inEqSimp_sepNegMonomial1" (formula "29"))
                                                                              (rule "polySimp_mulLiterals" (formula "29") (term "0"))
                                                                              (rule "polySimp_elimOne" (formula "29") (term "0"))
                                                                              (rule "inEqSimp_sepPosMonomial1" (formula "82") (term "1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "82") (term "1,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "82") (term "1,1,0"))
                                                                              (rule "polySimp_mulLiterals" (formula "82") (term "1,1,1,0"))
                                                                              (rule "polySimp_elimOne" (formula "82") (term "1,1,1,0"))
                                                                              (rule "polySimp_rightDist" (formula "82") (term "0,1,1,0"))
                                                                              (rule "polySimp_mulComm0" (formula "82") (term "0,0,1,1,0"))
                                                                              (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "32"))
                                                                              (rule "inEqSimp_homoInEq0" (formula "24") (term "0"))
                                                                              (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0"))
                                                                              (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                                                              (rule "times_zero_1" (formula "24") (term "1,0,0"))
                                                                              (rule "add_zero_right" (formula "24") (term "0,0"))
                                                                              (rule "qeq_literals" (formula "24") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "24"))
                                                                              (rule "true_left" (formula "24"))
                                                                              (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "26"))
                                                                              (rule "leq_literals" (formula "25") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "25"))
                                                                              (rule "true_left" (formula "25"))
                                                                              (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "1"))
                                                                              (rule "qeq_literals" (formula "16") (term "0"))
                                                                               (builtin "One Step Simplification" (formula "16"))
                                                                              (rule "closeFalse" (formula "16"))
                                                                           )
                                                                        )
                                                                        (branch
                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "149") (ifseqformula "73"))
                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "149") (term "0") (ifseqformula "52"))
                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "149") (term "0,0") (ifseqformula "39"))
                                                                           (rule "orRight" (formula "149"))
                                                                           (rule "orRight" (formula "149"))
                                                                           (rule "orRight" (formula "149"))
                                                                           (rule "close" (formula "149") (ifseqformula "17"))
                                                                        )
                                                                     )
                                                                     (branch
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "149") (ifseqformula "73"))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "149") (term "0") (ifseqformula "52"))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "149") (term "0,0") (ifseqformula "39"))
                                                                        (rule "orRight" (formula "149"))
                                                                        (rule "close" (formula "150") (ifseqformula "75"))
                                                                     )
                                                                  )
                                                                  (branch
                                                                     (rule "orRight" (formula "149"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "150") (ifseqformula "73"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "150") (term "0") (ifseqformula "52"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "150") (term "0,0") (ifseqformula "39"))
                                                                     (rule "orRight" (formula "150"))
                                                                     (rule "orRight" (formula "150"))
                                                                     (rule "orRight" (formula "150"))
                                                                     (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "149"))
                                                                      (builtin "One Step Simplification" (formula "5") (ifInst ""  (formula "150")))
                                                                     (rule "closeFalse" (formula "5"))
                                                                  )
                                                               )
                                                               (branch
                                                                  (rule "orRight" (formula "149"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "150") (ifseqformula "73"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "150") (term "0") (ifseqformula "52"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "150") (term "0,0") (ifseqformula "39"))
                                                                  (rule "orRight" (formula "150"))
                                                                  (rule "orRight" (formula "150"))
                                                                  (rule "orRight" (formula "150"))
                                                                  (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "149"))
                                                                   (builtin "One Step Simplification" (formula "7") (ifInst ""  (formula "150")))
                                                                  (rule "closeFalse" (formula "7"))
                                                               )
                                                            )
                                                            (branch
                                                               (rule "orRight" (formula "149"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "150") (ifseqformula "73"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "150") (term "0") (ifseqformula "52"))
                                                               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "150") (term "0,0") (ifseqformula "39"))
                                                               (rule "orRight" (formula "150"))
                                                               (rule "orRight" (formula "150"))
                                                               (rule "orRight" (formula "150"))
                                                               (rule "replace_known_right" (formula "8") (term "1") (ifseqformula "150"))
                                                                (builtin "One Step Simplification" (formula "8") (ifInst ""  (formula "149")))
                                                               (rule "closeFalse" (formula "8"))
                                                            )
                                                         )
                                                      )
                                                   )
                                                   (branch "Null Reference (_storage = null)"
                                                      (rule "false_right" (formula "150"))
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "146")))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                )
                                                (branch "Null Reference (_storage = null)"
                                                   (rule "false_right" (formula "150"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "146")))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                             (branch "Null Reference (_storage = null)"
                                                (rule "false_right" (formula "150"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "146")))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                        (branch "Exceptional Post (BucketPointers)"
                            (builtin "One Step Simplification" (formula "68"))
                            (builtin "One Step Simplification" (formula "120"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "0,0,1,0,0,1,0,1") (ifseqformula "47"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "68") (term "0,0,0,1,0,0,1,0,1") (ifseqformula "36"))
                           (rule "expand_inInt" (formula "68") (term "1,0,0,0,1,1,1,1,1,1,0,1"))
                           (rule "expand_inInt" (formula "68") (term "1,0,0,0,1,1,1,1,1,0,1"))
                           (rule "replace_int_MAX" (formula "68") (term "1,0,1,0,0,0,1,1,1,1,1,1,0,1"))
                           (rule "replace_int_MIN" (formula "68") (term "0,1,1,0,0,0,1,1,1,1,1,1,0,1"))
                           (rule "replace_int_MAX" (formula "68") (term "1,0,1,0,0,0,1,1,1,1,1,0,1"))
                           (rule "replace_int_MIN" (formula "68") (term "0,1,1,0,0,0,1,1,1,1,1,0,1"))
                           (rule "andLeft" (formula "68"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "1,0,0") (ifseqformula "68"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "0,1,0,0") (ifseqformula "47"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "0,0,1,0,0") (ifseqformula "36"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "1,1,0,0,1,0") (ifseqformula "68"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "0,1,1,0,0,1,0") (ifseqformula "47"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "0,0,1,1,0,0,1,0") (ifseqformula "36"))
                           (rule "andLeft" (formula "69"))
                           (rule "andLeft" (formula "70"))
                           (rule "andLeft" (formula "69"))
                           (rule "andLeft" (formula "70"))
                           (rule "andLeft" (formula "69"))
                           (rule "andLeft" (formula "71"))
                           (rule "andLeft" (formula "73"))
                           (rule "notLeft" (formula "69"))
                           (rule "close" (formula "76") (ifseqformula "75"))
                        )
                        (branch "Pre (BucketPointers)"
                            (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "116")) (ifInst ""  (formula "116")))
                           (rule "andRight" (formula "118"))
                           (branch
                              (rule "notRight" (formula "118"))
                              (rule "replace_known_left" (formula "7") (term "0") (ifseqformula "1"))
                               (builtin "One Step Simplification" (formula "7"))
                              (rule "true_left" (formula "7"))
                              (rule "polySimp_homoEq" (formula "58"))
                              (rule "polySimp_homoEq" (formula "60") (term "1,0"))
                              (rule "polySimp_homoEq" (formula "59") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "58") (term "0"))
                              (rule "polySimp_addComm1" (formula "60") (term "0,1,0"))
                              (rule "polySimp_addComm0" (formula "58") (term "0,0"))
                              (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,0"))
                              (rule "polySimp_mulAssoc" (formula "59") (term "0,1,0,0,1,0"))
                              (rule "polySimp_mulComm0" (formula "59") (term "0,0,1,0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "59") (term "0,1,0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "59") (term "0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,0,0"))
                              (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,0,0"))
                              (rule "add_literals" (formula "27") (term "0,0,0,0,0,0,0"))
                              (rule "inEqSimp_gtToGeq" (formula "28"))
                              (rule "mul_literals" (formula "28") (term "1,0,0"))
                              (rule "add_literals" (formula "28") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0"))
                              (rule "inEqSimp_homoInEq0" (formula "57") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "57") (term "0,1,0,0"))
                              (rule "add_literals" (formula "57") (term "1,0,1,0,0"))
                              (rule "times_zero_1" (formula "57") (term "0,1,0,0"))
                              (rule "qeq_literals" (formula "57") (term "1,0,0"))
                               (builtin "One Step Simplification" (formula "57"))
                              (rule "inEqSimp_homoInEq0" (formula "25"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "25") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0"))
                              (rule "applyEq" (formula "101") (term "1") (ifseqformula "1"))
                              (rule "replace_known_right" (formula "3") (term "0") (ifseqformula "101"))
                               (builtin "One Step Simplification" (formula "3"))
                              (rule "applyEq" (formula "102") (term "1") (ifseqformula "1"))
                              (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "102"))
                               (builtin "One Step Simplification" (formula "5"))
                              (rule "applyEq" (formula "99") (term "0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "99"))
                              (rule "applyEq" (formula "80") (term "0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "80"))
                              (rule "applyEq" (formula "72") (term "0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "72"))
                              (rule "applyEq" (formula "85") (term "1") (ifseqformula "1"))
                              (rule "applyEq" (formula "91") (term "0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "91"))
                              (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "91"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "applyEq" (formula "98") (term "0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "98"))
                              (rule "applyEq" (formula "101") (term "1") (ifseqformula "1"))
                              (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "101"))
                               (builtin "One Step Simplification" (formula "6"))
                              (rule "polySimp_sepPosMonomial" (formula "60") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "60") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "60") (term "1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "60") (term "1,1,1,0"))
                              (rule "polySimp_elimOne" (formula "60") (term "1,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "60") (term "0,1,1,0"))
                              (rule "polySimp_sepPosMonomial" (formula "58"))
                              (rule "polySimp_mulComm0" (formula "58") (term "1"))
                              (rule "polySimp_rightDist" (formula "58") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "58") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "58") (term "1,1"))
                              (rule "polySimp_mulAssoc" (formula "58") (term "0,1"))
                              (rule "polySimp_mulComm0" (formula "58") (term "0,0,1"))
                              (rule "polySimp_mulLiterals" (formula "58") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "58") (term "0,1"))
                              (rule "applyEq" (formula "47") (term "1,2,1,0,0,1,0") (ifseqformula "58"))
                              (rule "polySimp_addAssoc" (formula "47") (term "2,1,0,0,1,0"))
                              (rule "applyEq" (formula "20") (term "0") (ifseqformula "58"))
                              (rule "inEqSimp_homoInEq1" (formula "20"))
                              (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "20") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "20") (term "0"))
                              (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                              (rule "add_literals" (formula "20") (term "1,1,0"))
                              (rule "times_zero_1" (formula "20") (term "1,0"))
                              (rule "add_zero_right" (formula "20") (term "0"))
                              (rule "applyEq" (formula "12") (term "0") (ifseqformula "58"))
                              (rule "inEqSimp_homoInEq1" (formula "12"))
                              (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "12") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "12") (term "0"))
                              (rule "applyEq" (formula "11") (term "0") (ifseqformula "58"))
                              (rule "inEqSimp_homoInEq0" (formula "11"))
                              (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "11") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "11") (term "0"))
                              (rule "applyEq" (formula "25") (term "0,1,0") (ifseqformula "58"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                              (rule "add_literals" (formula "25") (term "1,1,0"))
                              (rule "times_zero_1" (formula "25") (term "1,0"))
                              (rule "add_zero_right" (formula "25") (term "0"))
                              (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "58"))
                              (rule "polySimp_addAssoc" (formula "28") (term "0"))
                              (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "28") (term "0"))
                              (rule "add_literals" (formula "28") (term "1,1,0"))
                              (rule "times_zero_1" (formula "28") (term "1,0"))
                              (rule "add_zero_right" (formula "28") (term "0"))
                              (rule "applyEq" (formula "52") (term "1") (ifseqformula "58"))
                              (rule "applyEq" (formula "24") (term "1") (ifseqformula "58"))
                              (rule "applyEq" (formula "60") (term "3,1,1,1,0") (ifseqformula "58"))
                              (rule "polySimp_sepNegMonomial" (formula "59") (term "0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "59") (term "0,0,1,0"))
                              (rule "polySimp_elimOne" (formula "59") (term "0,0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,0,0"))
                              (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0"))
                              (rule "inEqSimp_invertInEq0" (formula "20"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                              (rule "times_zero_2" (formula "20") (term "1"))
                              (rule "polySimp_elimOne" (formula "20") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                              (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                              (rule "polySimp_elimOne" (formula "12") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                              (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                              (rule "polySimp_elimOne" (formula "11") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                              (rule "polySimp_elimOne" (formula "25") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                              (rule "mul_literals" (formula "28") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "19"))
                              (rule "leq_literals" (formula "10") (term "0"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "27"))
                              (rule "leq_literals" (formula "19") (term "0"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "21"))
                              (rule "leq_literals" (formula "20") (term "0"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "19"))
                              (rule "polySimp_rightDist" (formula "21") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "21") (term "0"))
                              (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                              (rule "polySimp_elimOne" (formula "21") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "21"))
                              (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,0,0"))
                              (rule "mul_literals" (formula "10") (term "0,1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0,0,0"))
                              (rule "add_literals" (formula "10") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "10") (term "0,0"))
                              (rule "add_literals" (formula "10") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "10") (term "1,0,0"))
                              (rule "add_literals" (formula "10") (term "0,0"))
                              (rule "qeq_literals" (formula "10") (term "0"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "49"))
                              (rule "mul_literals" (formula "47") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "47") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "47"))
                              (rule "polySimp_mulComm0" (formula "47") (term "1"))
                              (rule "polySimp_rightDist" (formula "47") (term "1"))
                              (rule "mul_literals" (formula "47") (term "0,1"))
                              (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "46"))
                              (rule "polySimp_mulComm0" (formula "48") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "48") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "48"))
                              (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                              (rule "polySimp_elimOne" (formula "48") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "49"))
                              (rule "polySimp_mulComm0" (formula "48") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "48") (term "0"))
                              (rule "polySimp_addComm0" (formula "48") (term "0,0"))
                              (rule "polySimp_pullOutFactor2b" (formula "48") (term "0"))
                              (rule "add_literals" (formula "48") (term "1,1,0"))
                              (rule "times_zero_1" (formula "48") (term "1,0"))
                              (rule "add_zero_right" (formula "48") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "48") (ifseqformula "25"))
                              (rule "leq_literals" (formula "48") (term "0"))
                               (builtin "One Step Simplification" (formula "48"))
                              (rule "true_left" (formula "48"))
                              (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "9"))
                              (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "1,0,0"))
                              (rule "mul_literals" (formula "10") (term "0,0,0"))
                              (rule "polySimp_elimOne" (formula "10") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "10") (term "0"))
                              (rule "add_literals" (formula "10") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                              (rule "mul_literals" (formula "10") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "26"))
                              (rule "leq_literals" (formula "10") (term "0"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "20"))
                              (rule "times_zero_1" (formula "17") (term "0,0"))
                              (rule "add_zero_left" (formula "17") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                              (rule "polySimp_elimOne" (formula "17") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "23") (ifseqformula "17"))
                              (rule "leq_literals" (formula "23") (term "0"))
                               (builtin "One Step Simplification" (formula "23"))
                              (rule "true_left" (formula "23"))
                              (rule "inEqSimp_and_subsumption3" (formula "56") (term "0,0,0"))
                              (rule "leq_literals" (formula "56") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "56"))
                              (rule "inEqSimp_and_subsumption3" (formula "24") (term "0,0,0"))
                              (rule "leq_literals" (formula "24") (term "0,1,0,0,0,0"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "nnf_imp2or" (formula "57") (term "0"))
                              (rule "nnf_imp2or" (formula "56") (term "0"))
                              (rule "nnf_imp2or" (formula "24") (term "0"))
                              (rule "Definition_axiom_for_isValidBucketStarts_in_de_wiesler_Functions" (formula "53") (term "0"))
                               (builtin "One Step Simplification" (formula "53"))
                              (rule "andLeft" (formula "53"))
                              (rule "andLeft" (formula "53"))
                              (rule "andLeft" (formula "53"))
                              (rule "translateJavaAddInt" (formula "55") (term "3,0"))
                              (rule "translateJavaAddInt" (formula "54") (term "0"))
                              (rule "polySimp_addComm0" (formula "55") (term "3,0"))
                              (rule "polySimp_addComm0" (formula "54") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "53"))
                              (rule "inEqSimp_commuteLeq" (formula "54"))
                              (rule "applyEq" (formula "54") (term "0") (ifseqformula "23"))
                              (rule "inEqSimp_homoInEq1" (formula "54"))
                              (rule "mul_literals" (formula "54") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "54") (term "0"))
                              (rule "add_literals" (formula "54") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "54"))
                              (rule "mul_literals" (formula "54") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "53"))
                              (rule "leq_literals" (formula "29") (term "0"))
                               (builtin "One Step Simplification" (formula "29"))
                              (rule "true_left" (formula "29"))
                              (rule "inEqSimp_subsumption0" (formula "28") (ifseqformula "53"))
                              (rule "leq_literals" (formula "28") (term "0"))
                               (builtin "One Step Simplification" (formula "28"))
                              (rule "true_left" (formula "28"))
                              (rule "inEqSimp_subsumption1" (formula "55") (term "0,0") (ifseqformula "51"))
                              (rule "leq_literals" (formula "55") (term "0,0,0"))
                               (builtin "One Step Simplification" (formula "55"))
                              (rule "applyEqReverse" (formula "42") (term "1,0,2,1,0,0,1,0") (ifseqformula "55"))
                              (rule "applyEqReverse" (formula "21") (term "0,1,1") (ifseqformula "55"))
                              (rule "applyEqReverse" (formula "17") (term "0") (ifseqformula "55"))
                              (rule "applyEqReverse" (formula "25") (term "0") (ifseqformula "55"))
                              (rule "applyEqReverse" (formula "22") (term "0,1") (ifseqformula "55"))
                              (rule "applyEqReverse" (formula "47") (term "0,1") (ifseqformula "55"))
                              (rule "applyEqReverse" (formula "58") (term "0,3,1,1,1,0") (ifseqformula "55"))
                              (rule "applyEqReverse" (formula "10") (term "0,1,1") (ifseqformula "55"))
                              (rule "applyEqReverse" (formula "56") (term "0,1") (ifseqformula "55"))
                              (rule "hideAuxiliaryEq" (formula "55"))
                              (rule "polySimp_homoEq" (formula "55"))
                              (rule "polySimp_addComm1" (formula "42") (term "2,1,0,0,1,0"))
                              (rule "polySimp_addComm0" (formula "22") (term "1"))
                              (rule "polySimp_addComm0" (formula "47") (term "1"))
                              (rule "polySimp_addComm0" (formula "57") (term "3,1,1,1,0"))
                              (rule "polySimp_addComm0" (formula "55") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "55") (term "0"))
                              (rule "inEqSimp_homoInEq0" (formula "21"))
                              (rule "polySimp_addComm1" (formula "21") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "10"))
                              (rule "polySimp_addComm1" (formula "10") (term "0"))
                              (rule "inEqSimp_homoInEq1" (formula "22"))
                              (rule "polySimp_addComm1" (formula "22") (term "0"))
                              (rule "inEqSimp_homoInEq0" (formula "47"))
                              (rule "polySimp_addComm1" (formula "47") (term "0"))
                              (rule "polySimp_sepPosMonomial" (formula "55"))
                              (rule "polySimp_mulComm0" (formula "55") (term "1"))
                              (rule "polySimp_rightDist" (formula "55") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "55") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "55") (term "1,1"))
                              (rule "polySimp_mulComm0" (formula "55") (term "0,1"))
                              (rule "applyEq" (formula "47") (term "1,0") (ifseqformula "55"))
                              (rule "polySimp_addComm1" (formula "47") (term "0"))
                              (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "47") (term "0,0,0"))
                              (rule "add_literals" (formula "47") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "47") (term "0,0,0"))
                              (rule "add_zero_left" (formula "47") (term "0,0"))
                              (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "55"))
                              (rule "polySimp_addComm1" (formula "22") (term "0"))
                              (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "22") (term "0,0,0"))
                              (rule "add_literals" (formula "22") (term "1,0,0,0"))
                              (rule "times_zero_1" (formula "22") (term "0,0,0"))
                              (rule "add_zero_left" (formula "22") (term "0,0"))
                              (rule "applyEq" (formula "10") (term "0,1,0") (ifseqformula "55"))
                              (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "10") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "10") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "10") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "10") (term "0"))
                              (rule "polySimp_pullOutFactor2b" (formula "10") (term "0,0"))
                              (rule "add_literals" (formula "10") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "10") (term "1,0,0"))
                              (rule "add_literals" (formula "10") (term "0,0"))
                              (rule "applyEq" (formula "42") (term "1,2,1,0,0,1,0") (ifseqformula "55"))
                              (rule "polySimp_addAssoc" (formula "42") (term "2,1,0,0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,2,1,0,0,1,0"))
                              (rule "add_literals" (formula "42") (term "1,1,0,2,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "42") (term "1,0,2,1,0,0,1,0"))
                              (rule "add_literals" (formula "42") (term "0,2,1,0,0,1,0"))
                              (rule "applyEq" (formula "17") (term "0") (ifseqformula "55"))
                              (rule "inEqSimp_homoInEq0" (formula "17"))
                              (rule "polySimp_mulComm0" (formula "17") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "17") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "17") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "17") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "17") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0"))
                              (rule "applyEq" (formula "21") (term "0,1,0") (ifseqformula "55"))
                              (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "21") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "21") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "21") (term "0"))
                              (rule "polySimp_pullOutFactor2b" (formula "21") (term "0,0"))
                              (rule "add_literals" (formula "21") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "21") (term "1,0,0"))
                              (rule "add_literals" (formula "21") (term "0,0"))
                              (rule "applyEq" (formula "25") (term "0") (ifseqformula "55"))
                              (rule "inEqSimp_homoInEq1" (formula "25"))
                              (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                              (rule "polySimp_mulAssoc" (formula "25") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "25") (term "0,0,1,0"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                              (rule "polySimp_elimOne" (formula "25") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "25") (term "0"))
                              (rule "applyEq" (formula "57") (term "1,3,1,1,1,0") (ifseqformula "55"))
                              (rule "polySimp_addAssoc" (formula "57") (term "3,1,1,1,0"))
                              (rule "polySimp_pullOutFactor1" (formula "57") (term "0,3,1,1,1,0"))
                              (rule "add_literals" (formula "57") (term "1,0,3,1,1,1,0"))
                              (rule "times_zero_1" (formula "57") (term "0,3,1,1,1,0"))
                              (rule "add_zero_left" (formula "57") (term "3,1,1,1,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                              (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                              (rule "polySimp_elimOne" (formula "47") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "22"))
                              (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                              (rule "polySimp_elimOne" (formula "22") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                              (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                              (rule "polySimp_elimOne" (formula "10") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                              (rule "polySimp_elimOne" (formula "17") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                              (rule "polySimp_elimOne" (formula "21") (term "0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                              (rule "polySimp_elimOne" (formula "25") (term "0"))
                              (rule "pullOutSelect" (formula "54") (term "0") (inst "selectSK=arr_2"))
                              (rule "simplifySelectOfAnonEQ" (formula "54") (ifseqformula "42"))
                               (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "112")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "54") (term "0,1,0,0") (ifseqformula "31"))
                              (rule "replace_known_left" (formula "54") (term "0,0,1,0,0") (ifseqformula "11"))
                               (builtin "One Step Simplification" (formula "54"))
                              (rule "applyEq" (formula "54") (term "1") (ifseqformula "55"))
                              (rule "ifEqualsInteger" (formula "54"))
                              (rule "elementOfUnion" (formula "54") (term "0,0,1"))
                              (rule "elementOfArrayRangeConcrete" (formula "54") (term "1,0,0,1"))
                              (rule "leq_literals" (formula "54") (term "1,0,1,0,0,1"))
                               (builtin "One Step Simplification" (formula "54"))
                              (rule "eqSymm" (formula "54") (term "0,1,0,0,1"))
                              (rule "replace_known_right" (formula "54") (term "0,1,0,0,1") (ifseqformula "78"))
                               (builtin "One Step Simplification" (formula "54"))
                              (rule "elementOfUnion" (formula "54") (term "0,0"))
                              (rule "elementOfArrayRangeConcrete" (formula "54") (term "1,0,0"))
                              (rule "leq_literals" (formula "54") (term "1,0,1,0,0"))
                               (builtin "One Step Simplification" (formula "54"))
                              (rule "eqSymm" (formula "54") (term "0,1,0,0"))
                              (rule "replace_known_right" (formula "54") (term "0,1,0,0") (ifseqformula "78"))
                               (builtin "One Step Simplification" (formula "54"))
                              (rule "elementOfUnion" (formula "54") (term "0,0,1"))
                              (rule "elementOfArrayRangeConcrete" (formula "54") (term "1,0,0,1"))
                              (rule "leq_literals" (formula "54") (term "1,0,1,0,0,1"))
                               (builtin "One Step Simplification" (formula "54"))
                              (rule "eqSymm" (formula "54") (term "0,1,0,0,1"))
                              (rule "replace_known_right" (formula "54") (term "0,1,0,0,1") (ifseqformula "77"))
                               (builtin "One Step Simplification" (formula "54"))
                              (rule "elementOfUnion" (formula "54") (term "0,0"))
                              (rule "elementOfArrayRangeConcrete" (formula "54") (term "1,0,0"))
                              (rule "leq_literals" (formula "54") (term "1,0,1,0,0"))
                               (builtin "One Step Simplification" (formula "54"))
                              (rule "eqSymm" (formula "54") (term "0,1,0,0"))
                              (rule "replace_known_right" (formula "54") (term "0,1,0,0") (ifseqformula "77"))
                               (builtin "One Step Simplification" (formula "54"))
                              (rule "elementOfUnion" (formula "54") (term "0,0,1"))
                              (rule "elementOfArrayRangeConcrete" (formula "54") (term "1,0,0,1"))
                              (rule "eqSymm" (formula "54") (term "0,0,1,0,0,1"))
                              (rule "replace_known_right" (formula "54") (term "0,0,1,0,0,1") (ifseqformula "68"))
                               (builtin "One Step Simplification" (formula "54"))
                              (rule "elementOfArrayRangeConcrete" (formula "54") (term "0,0,1"))
                               (builtin "One Step Simplification" (formula "54"))
                              (rule "leq_literals" (formula "54") (term "0,0,0,1"))
                               (builtin "One Step Simplification" (formula "54"))
                              (rule "inEqSimp_commuteLeq" (formula "54") (term "0,0,1"))
                              (rule "inEqSimp_subsumption1" (formula "54") (term "0,0,1") (ifseqformula "51"))
                              (rule "leq_literals" (formula "54") (term "0,0,0,1"))
                               (builtin "One Step Simplification" (formula "54"))
                              (rule "andLeft" (formula "54"))
                              (rule "elementOfUnion" (formula "54"))
                              (rule "elementOfArrayRangeConcrete" (formula "54") (term "0"))
                               (builtin "One Step Simplification" (formula "54"))
                              (rule "leq_literals" (formula "54") (term "0,0"))
                               (builtin "One Step Simplification" (formula "54"))
                              (rule "elementOfArrayRangeConcrete" (formula "54") (term "1"))
                              (rule "eqSymm" (formula "54") (term "0,0,1"))
                              (rule "replace_known_right" (formula "54") (term "0,0,1") (ifseqformula "69"))
                               (builtin "One Step Simplification" (formula "54"))
                              (rule "inEqSimp_commuteLeq" (formula "54"))
                              (rule "inEqSimp_subsumption1" (formula "54") (ifseqformula "51"))
                              (rule "leq_literals" (formula "54") (term "0"))
                               (builtin "One Step Simplification" (formula "54"))
                              (rule "true_left" (formula "54"))
                              (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "47"))
                              (rule "polySimp_mulComm0" (formula "46") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                              (rule "polySimp_mulLiterals" (formula "46") (term "1"))
                              (rule "polySimp_elimOne" (formula "46") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "46") (ifseqformula "25"))
                              (rule "inEqSimp_homoInEq0" (formula "46") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0"))
                              (rule "add_literals" (formula "46") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "46") (term "1,0,0"))
                              (rule "add_literals" (formula "46") (term "0,0"))
                              (rule "qeq_literals" (formula "46") (term "0"))
                               (builtin "One Step Simplification" (formula "46"))
                              (rule "true_left" (formula "46"))
                              (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "47"))
                              (rule "mul_literals" (formula "45") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "45"))
                              (rule "mul_literals" (formula "45") (term "1"))
                              (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "21"))
                              (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                              (rule "mul_literals" (formula "25") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "25") (term "0"))
                              (rule "add_literals" (formula "25") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                              (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                              (rule "polySimp_elimOne" (formula "25") (term "0"))
                              (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "25"))
                              (rule "leq_literals" (formula "9") (term "0"))
                               (builtin "One Step Simplification" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "18"))
                              (rule "polySimp_mulComm0" (formula "21") (term "0,0"))
                              (rule "polySimp_addComm0" (formula "21") (term "0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                              (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                              (rule "polySimp_elimOne" (formula "21") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "16"))
                              (rule "mul_literals" (formula "9") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0"))
                              (rule "add_literals" (formula "9") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                              (rule "mul_literals" (formula "9") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "18"))
                              (rule "leq_literals" (formula "9") (term "0"))
                               (builtin "One Step Simplification" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "Definition_axiom_for_isClassifiedWith_in_de_wiesler_Buffers" (formula "50") (term "0") (inst "b=b"))
                               (builtin "One Step Simplification" (formula "50"))
                              (rule "expand_inInt" (formula "50") (term "1,0,0"))
                              (rule "replace_int_MAX" (formula "50") (term "1,0,1,0,0"))
                              (rule "replace_int_MIN" (formula "50") (term "0,1,1,0,0"))
                              (rule "translateJavaAddInt" (formula "50") (term "4,0,1,0"))
                              (rule "translateJavaMulInt" (formula "50") (term "3,0,1,0"))
                              (rule "translateJavaMulInt" (formula "50") (term "0,4,0,1,0"))
                              (rule "inEqSimp_ltToLeq" (formula "50") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "50") (term "0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "50") (term "1,1,0,0"))
                              (rule "applyEq" (formula "50") (term "0,1,0,0,1,0,0,0") (ifseqformula "35"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "50") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "50") (term "1,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "50") (term "1,1,1,0,0,0"))
                              (rule "mul_literals" (formula "50") (term "0,1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "50") (term "1,1,1,0,0,0"))
                              (rule "Free_class_invariant_axiom_for_de_wiesler_Buffers" (formula "39") (inst "b=b"))
                               (builtin "One Step Simplification" (formula "39"))
                              (rule "expand_inInt" (formula "39") (term "1,0,0,1"))
                              (rule "replace_int_MIN" (formula "39") (term "0,1,1,0,0,1"))
                              (rule "replace_int_MAX" (formula "39") (term "1,0,1,0,0,1"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "40"))
                              (rule "andLeft" (formula "39"))
                              (rule "andLeft" (formula "39"))
                              (rule "notLeft" (formula "39"))
                              (rule "translateJavaMulInt" (formula "39") (term "1"))
                              (rule "mul_literals" (formula "39") (term "1"))
                              (rule "eqSymm" (formula "69"))
                              (rule "inEqSimp_ltToLeq" (formula "43") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "43") (term "1,1,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "43") (term "0,0,0,0"))
                              (rule "inEqSimp_commuteLeq" (formula "43") (term "0,1,0"))
                              (rule "inEqSimp_commuteLeq" (formula "41"))
                              (rule "applyEq" (formula "41") (term "0") (ifseqformula "35"))
                              (rule "applyEq" (formula "42") (term "0") (ifseqformula "35"))
                              (rule "applyEq" (formula "42") (term "0,1,0,0,1,0,0,0") (ifseqformula "35"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,0"))
                              (rule "mul_literals" (formula "42") (term "0,1,1,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,0"))
                              (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,0"))
                              (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "54"))
                              (rule "leq_literals" (formula "41") (term "0"))
                               (builtin "One Step Simplification" (formula "41"))
                              (rule "true_left" (formula "41"))
                              (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "62"))
                               (builtin "One Step Simplification" (formula "62"))
                              (rule "andLeft" (formula "62"))
                              (rule "andLeft" (formula "62"))
                              (rule "andLeft" (formula "62"))
                              (rule "andLeft" (formula "62"))
                              (rule "andLeft" (formula "62"))
                              (rule "andLeft" (formula "62"))
                              (rule "translateJavaSubInt" (formula "67") (term "0,2,1"))
                              (rule "translateJavaSubInt" (formula "67") (term "0,2,0"))
                              (rule "translateJavaMulInt" (formula "64") (term "1,1"))
                              (rule "eqSymm" (formula "67"))
                              (rule "eqSymm" (formula "64"))
                              (rule "polySimp_elimSub" (formula "67") (term "0,2,1"))
                              (rule "mul_literals" (formula "67") (term "1,0,2,1"))
                              (rule "polySimp_elimSub" (formula "67") (term "0,2,0"))
                              (rule "mul_literals" (formula "67") (term "1,0,2,0"))
                              (rule "polySimp_mulComm0" (formula "64") (term "1,0"))
                              (rule "polySimp_addComm0" (formula "67") (term "0,2,1"))
                              (rule "polySimp_addComm0" (formula "67") (term "0,2,0"))
                              (rule "inEqSimp_commuteLeq" (formula "62"))
                              (rule "applyEq" (formula "63") (term "0") (ifseqformula "28"))
                              (rule "applyEq" (formula "62") (term "0") (ifseqformula "28"))
                              (rule "applyEq" (formula "62") (term "1") (ifseqformula "28"))
                              (rule "pullOutSelect" (formula "65") (term "1") (inst "selectSK=arr_3"))
                              (rule "simplifySelectOfAnonEQ" (formula "66") (ifseqformula "44"))
                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "96")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "66") (term "0,1,0,0") (ifseqformula "31"))
                              (rule "simplifySelectOfAnonEQ" (formula "65") (ifseqformula "44"))
                               (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "96")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "65") (term "0,1,0,0") (ifseqformula "31"))
                              (rule "replace_known_left" (formula "66") (term "0,0,1,0,0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "66"))
                              (rule "replace_known_left" (formula "65") (term "0,0,1,0,0") (ifseqformula "4"))
                               (builtin "One Step Simplification" (formula "65"))
                              (rule "elementOfUnion" (formula "66") (term "0,0"))
                              (rule "elementOfArrayRangeConcrete" (formula "66") (term "1,0,0"))
                              (rule "replace_known_right" (formula "66") (term "0,0,1,0,0") (ifseqformula "98"))
                               (builtin "One Step Simplification" (formula "66"))
                              (rule "elementOfUnion" (formula "65") (term "0,0"))
                              (rule "elementOfArrayRangeConcrete" (formula "65") (term "1,0,0"))
                              (rule "replace_known_right" (formula "65") (term "0,0,1,0,0") (ifseqformula "98"))
                               (builtin "One Step Simplification" (formula "65"))
                              (rule "elementOfUnion" (formula "66") (term "0,0"))
                              (rule "elementOfArrayRangeConcrete" (formula "66") (term "1,0,0"))
                              (rule "replace_known_right" (formula "66") (term "0,0,1,0,0") (ifseqformula "97"))
                               (builtin "One Step Simplification" (formula "66"))
                              (rule "elementOfUnion" (formula "65") (term "0,0"))
                              (rule "elementOfArrayRangeConcrete" (formula "65") (term "1,0,0"))
                              (rule "replace_known_right" (formula "65") (term "0,0,1,0,0") (ifseqformula "97"))
                               (builtin "One Step Simplification" (formula "65"))
                              (rule "elementOfUnion" (formula "66") (term "0,0"))
                              (rule "elementOfArrayRangeConcrete" (formula "66") (term "0,0,0"))
                              (rule "replace_known_right" (formula "66") (term "0,0,0,0,0") (ifseqformula "83"))
                               (builtin "One Step Simplification" (formula "66"))
                              (rule "elementOfArrayRangeConcrete" (formula "66") (term "0,0"))
                              (rule "replace_known_right" (formula "66") (term "0,0,0,0") (ifseqformula "76"))
                               (builtin "One Step Simplification" (formula "66"))
                              (rule "simplifySelectOfAnonEQ" (formula "66") (ifseqformula "31"))
                               (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "96")) (ifInst ""  (formula "4")))
                              (rule "elementOfArrayRangeConcrete" (formula "66") (term "0,0"))
                              (rule "replace_known_right" (formula "66") (term "0,0,0,0") (ifseqformula "98"))
                               (builtin "One Step Simplification" (formula "66"))
                              (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "66"))
                              (rule "hideAuxiliaryEq" (formula "66"))
                              (rule "elementOfUnion" (formula "65") (term "0,0"))
                              (rule "elementOfArrayRangeConcrete" (formula "65") (term "1,0,0"))
                              (rule "replace_known_right" (formula "65") (term "0,0,1,0,0") (ifseqformula "75"))
                               (builtin "One Step Simplification" (formula "65"))
                              (rule "elementOfArrayRangeConcrete" (formula "65") (term "0,0"))
                              (rule "replace_known_right" (formula "65") (term "0,0,0,0") (ifseqformula "82"))
                               (builtin "One Step Simplification" (formula "65"))
                              (rule "pullOutSelect" (formula "65") (term "0") (inst "selectSK=arr_4"))
                              (rule "simplifySelectOfAnonEQ" (formula "65") (ifseqformula "31"))
                               (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "96")) (ifInst ""  (formula "4")))
                              (rule "eqSymm" (formula "66"))
                              (rule "applyEqReverse" (formula "65") (term "1") (ifseqformula "66"))
                              (rule "hideAuxiliaryEq" (formula "66"))
                              (rule "elementOfArrayRangeConcrete" (formula "65") (term "0,0"))
                              (rule "replace_known_right" (formula "65") (term "0,0,0,0") (ifseqformula "97"))
                               (builtin "One Step Simplification" (formula "65"))
                              (rule "eqSymm" (formula "65"))
                              (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "14"))
                              (rule "andLeft" (formula "14"))
                              (rule "notLeft" (formula "15"))
                              (rule "andLeft" (formula "14"))
                              (rule "notLeft" (formula "15"))
                              (rule "andLeft" (formula "14"))
                              (rule "notLeft" (formula "15"))
                              (rule "andLeft" (formula "14"))
                              (rule "notLeft" (formula "15"))
                              (rule "andLeft" (formula "14"))
                              (rule "notLeft" (formula "15"))
                              (rule "andLeft" (formula "14"))
                              (rule "notLeft" (formula "15"))
                              (rule "close" (formula "71") (ifseqformula "1"))
                           )
                           (branch
                              (rule "andRight" (formula "118"))
                              (branch
                                 (rule "andRight" (formula "118"))
                                 (branch
                                    (rule "andRight" (formula "118"))
                                    (branch
                                       (rule "andRight" (formula "118"))
                                       (branch
                                          (rule "wellFormedAnonEQ" (formula "118") (ifseqformula "47"))
                                          (rule "wellFormedAnonEQ" (formula "118") (term "0") (ifseqformula "36"))
                                          (rule "replace_known_left" (formula "118") (term "1") (ifseqformula "46"))
                                           (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "7")) (ifInst ""  (formula "35")))
                                          (rule "closeTrue" (formula "118"))
                                       )
                                       (branch
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "118") (ifseqformula "47"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "118") (term "0") (ifseqformula "36"))
                                          (rule "orRight" (formula "118"))
                                          (rule "orRight" (formula "118"))
                                          (rule "close" (formula "118") (ifseqformula "13"))
                                       )
                                    )
                                    (branch
                                       (rule "expand_inInt" (formula "118"))
                                       (rule "replace_int_MIN" (formula "118") (term "0,1"))
                                       (rule "replace_int_MAX" (formula "118") (term "1,0"))
                                       (rule "replace_known_left" (formula "118") (term "0") (ifseqformula "31"))
                                        (builtin "One Step Simplification" (formula "118"))
                                       (rule "polySimp_homoEq" (formula "59") (term "0,1,0"))
                                       (rule "polySimp_homoEq" (formula "58"))
                                       (rule "polySimp_homoEq" (formula "60") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "58") (term "0"))
                                       (rule "polySimp_addComm1" (formula "60") (term "0,1,0"))
                                       (rule "polySimp_addComm0" (formula "58") (term "0,0"))
                                       (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,0"))
                                       (rule "polySimp_mulAssoc" (formula "59") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "59") (term "0,0,1,0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "59") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "59") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,0"))
                                       (rule "inEqSimp_leqRight" (formula "118"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,0,0"))
                                       (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0,0,0"))
                                       (rule "add_literals" (formula "28") (term "0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "29"))
                                       (rule "mul_literals" (formula "29") (term "1,0,0"))
                                       (rule "add_literals" (formula "29") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "58") (term "1,0,0"))
                                       (rule "polySimp_pullOutFactor1" (formula "58") (term "0,1,0,0"))
                                       (rule "add_literals" (formula "58") (term "1,0,1,0,0"))
                                       (rule "times_zero_1" (formula "58") (term "0,1,0,0"))
                                       (rule "qeq_literals" (formula "58") (term "1,0,0"))
                                        (builtin "One Step Simplification" (formula "58"))
                                       (rule "inEqSimp_homoInEq0" (formula "26"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                       (rule "polySimp_mulAssoc" (formula "26") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                       (rule "polySimp_sepPosMonomial" (formula "61") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "61") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "61") (term "1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "61") (term "1,1,1,0"))
                                       (rule "polySimp_mulComm0" (formula "61") (term "0,1,1,0"))
                                       (rule "polySimp_sepPosMonomial" (formula "59"))
                                       (rule "polySimp_mulComm0" (formula "59") (term "1"))
                                       (rule "polySimp_rightDist" (formula "59") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "59") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "59") (term "1,1"))
                                       (rule "polySimp_mulAssoc" (formula "59") (term "0,1"))
                                       (rule "polySimp_mulComm0" (formula "59") (term "0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "59") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "59") (term "0,1"))
                                       (rule "applyEq" (formula "12") (term "0") (ifseqformula "59"))
                                       (rule "inEqSimp_homoInEq0" (formula "12"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "12") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                       (rule "applyEq" (formula "26") (term "0,1,0") (ifseqformula "59"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                       (rule "add_literals" (formula "26") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "26") (term "1,0"))
                                       (rule "add_zero_right" (formula "26") (term "0"))
                                       (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "59"))
                                       (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                       (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                       (rule "polySimp_pullOutFactor2b" (formula "29") (term "0"))
                                       (rule "add_literals" (formula "29") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "29") (term "1,0"))
                                       (rule "add_zero_right" (formula "29") (term "0"))
                                       (rule "applyEq" (formula "21") (term "0") (ifseqformula "59"))
                                       (rule "inEqSimp_homoInEq1" (formula "21"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "21") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                       (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                       (rule "add_literals" (formula "21") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "21") (term "1,0"))
                                       (rule "add_zero_right" (formula "21") (term "0"))
                                       (rule "applyEq" (formula "13") (term "0") (ifseqformula "59"))
                                       (rule "inEqSimp_homoInEq1" (formula "13"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                       (rule "applyEq" (formula "53") (term "1") (ifseqformula "59"))
                                       (rule "applyEq" (formula "25") (term "1") (ifseqformula "59"))
                                       (rule "applyEq" (formula "48") (term "1,2,1,0,0,1,0") (ifseqformula "59"))
                                       (rule "polySimp_addAssoc" (formula "48") (term "2,1,0,0,1,0"))
                                       (rule "applyEq" (formula "61") (term "3,1,1,1,0") (ifseqformula "59"))
                                       (rule "polySimp_sepNegMonomial" (formula "60") (term "0,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "60") (term "0,0,1,0"))
                                       (rule "polySimp_elimOne" (formula "60") (term "0,0,1,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                       (rule "polySimp_elimOne" (formula "1") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,0,0"))
                                       (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "60") (term "0,0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "60") (term "1,1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                       (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                       (rule "polySimp_elimOne" (formula "12") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                       (rule "mul_literals" (formula "29") (term "1"))
                                       (rule "inEqSimp_invertInEq0" (formula "21"))
                                       (rule "mul_literals" (formula "21") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                       (rule "polySimp_elimOne" (formula "21") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "33") (ifseqformula "1"))
                                       (rule "qeq_literals" (formula "33") (term "0"))
                                        (builtin "One Step Simplification" (formula "33"))
                                       (rule "closeFalse" (formula "33"))
                                    )
                                 )
                                 (branch
                                    (rule "expand_inInt" (formula "118"))
                                    (rule "replace_int_MIN" (formula "118") (term "0,1"))
                                    (rule "replace_int_MAX" (formula "118") (term "1,0"))
                                    (rule "polySimp_homoEq" (formula "60") (term "1,0"))
                                    (rule "polySimp_homoEq" (formula "58"))
                                    (rule "polySimp_homoEq" (formula "59") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,1,0"))
                                    (rule "polySimp_addComm1" (formula "60") (term "0,1,0"))
                                    (rule "polySimp_addComm1" (formula "58") (term "0"))
                                    (rule "polySimp_addComm0" (formula "58") (term "0,0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,0,0,1,0"))
                                    (rule "polySimp_mulAssoc" (formula "59") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "0,0,1,0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "59") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "59") (term "0,1,0,0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "59") (term "0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "27") (term "0,0,0,0,0"))
                                    (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0,0,0"))
                                    (rule "add_literals" (formula "27") (term "0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "59") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "28"))
                                    (rule "mul_literals" (formula "28") (term "1,0,0"))
                                    (rule "add_literals" (formula "28") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                    (rule "inEqSimp_homoInEq0" (formula "57") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "57") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "57") (term "1,0,1,0,0"))
                                    (rule "times_zero_1" (formula "57") (term "0,1,0,0"))
                                    (rule "qeq_literals" (formula "57") (term "1,0,0"))
                                     (builtin "One Step Simplification" (formula "57"))
                                    (rule "inEqSimp_homoInEq0" (formula "25"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                    (rule "polySimp_mulAssoc" (formula "25") (term "0,1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "0,0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                    (rule "inEqSimp_homoInEq0" (formula "118") (term "1"))
                                    (rule "mul_literals" (formula "118") (term "1,0,1"))
                                    (rule "polySimp_addComm1" (formula "118") (term "0,1"))
                                    (rule "polySimp_addComm0" (formula "118") (term "0,0,1"))
                                    (rule "inEqSimp_homoInEq0" (formula "118") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "118") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "118") (term "1,0,0"))
                                    (rule "polySimp_mulAssoc" (formula "118") (term "0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "118") (term "0,0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "118") (term "0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "118") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "118") (term "0,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "60") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "60") (term "1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "60") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "60") (term "1,1,1,0"))
                                    (rule "polySimp_mulComm0" (formula "60") (term "0,1,1,0"))
                                    (rule "polySimp_sepPosMonomial" (formula "58"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "1"))
                                    (rule "polySimp_rightDist" (formula "58") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "58") (term "1,1"))
                                    (rule "polySimp_mulAssoc" (formula "58") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "58") (term "0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "58") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "58") (term "0,1"))
                                    (rule "applyEq" (formula "25") (term "0,1,0") (ifseqformula "58"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                    (rule "add_literals" (formula "25") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0"))
                                    (rule "add_zero_right" (formula "25") (term "0"))
                                    (rule "applyEq" (formula "12") (term "0") (ifseqformula "58"))
                                    (rule "inEqSimp_homoInEq1" (formula "12"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                    (rule "applyEq" (formula "47") (term "1,2,1,0,0,1,0") (ifseqformula "58"))
                                    (rule "polySimp_addAssoc" (formula "47") (term "2,1,0,0,1,0"))
                                    (rule "applyEq" (formula "20") (term "0") (ifseqformula "58"))
                                    (rule "inEqSimp_homoInEq1" (formula "20"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "20") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                    (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "20") (term "0"))
                                    (rule "add_literals" (formula "20") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "20") (term "1,0"))
                                    (rule "add_zero_right" (formula "20") (term "0"))
                                    (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "58"))
                                    (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                    (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "28") (term "0"))
                                    (rule "add_literals" (formula "28") (term "1,1,0"))
                                    (rule "times_zero_1" (formula "28") (term "1,0"))
                                    (rule "add_zero_right" (formula "28") (term "0"))
                                    (rule "applyEq" (formula "52") (term "1") (ifseqformula "58"))
                                    (rule "applyEq" (formula "11") (term "0") (ifseqformula "58"))
                                    (rule "inEqSimp_homoInEq0" (formula "11"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0"))
                                    (rule "applyEq" (formula "24") (term "1") (ifseqformula "58"))
                                    (rule "applyEq" (formula "60") (term "3,1,1,1,0") (ifseqformula "58"))
                                    (rule "polySimp_sepNegMonomial" (formula "59") (term "0,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "59") (term "0,0,1,0"))
                                    (rule "polySimp_elimOne" (formula "59") (term "0,0,1,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,0,0"))
                                    (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "59") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "59") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "59") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "59") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "59") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "59") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "118") (term "1"))
                                    (rule "polySimp_mulComm0" (formula "118") (term "1,1"))
                                    (rule "polySimp_rightDist" (formula "118") (term "1,1"))
                                    (rule "mul_literals" (formula "118") (term "0,1,1"))
                                    (rule "polySimp_mulLiterals" (formula "118") (term "1,1,1"))
                                    (rule "polySimp_elimOne" (formula "118") (term "1,1,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "118") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "118") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "118") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "0"))
                                    (rule "inEqSimp_invertInEq0" (formula "20"))
                                    (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                    (rule "times_zero_2" (formula "20") (term "1"))
                                    (rule "polySimp_elimOne" (formula "20") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                    (rule "mul_literals" (formula "28") (term "1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "0"))
                                    (rule "inEqSimp_subsumption1" (formula "118") (term "1") (ifseqformula "51"))
                                    (rule "inEqSimp_homoInEq0" (formula "118") (term "0,1"))
                                    (rule "polySimp_mulComm0" (formula "118") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "118") (term "1,0,0,1"))
                                    (rule "mul_literals" (formula "118") (term "0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "118") (term "0,0,1"))
                                    (rule "polySimp_addComm0" (formula "118") (term "0,0,0,1"))
                                    (rule "polySimp_pullOutFactor1b" (formula "118") (term "0,0,1"))
                                    (rule "add_literals" (formula "118") (term "1,1,0,0,1"))
                                    (rule "times_zero_1" (formula "118") (term "1,0,0,1"))
                                    (rule "add_zero_right" (formula "118") (term "0,0,1"))
                                    (rule "qeq_literals" (formula "118") (term "0,1"))
                                     (builtin "One Step Simplification" (formula "118"))
                                    (rule "inEqSimp_leqRight" (formula "118"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "20"))
                                    (rule "leq_literals" (formula "11") (term "0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "28"))
                                    (rule "leq_literals" (formula "20") (term "0"))
                                     (builtin "One Step Simplification" (formula "20"))
                                    (rule "true_left" (formula "20"))
                                    (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "22"))
                                    (rule "leq_literals" (formula "21") (term "0"))
                                     (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "inEqSimp_subsumption1" (formula "49") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "49") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0"))
                                    (rule "add_literals" (formula "49") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "49") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "49") (term "0,0"))
                                    (rule "qeq_literals" (formula "49") (term "0"))
                                     (builtin "One Step Simplification" (formula "49"))
                                    (rule "true_left" (formula "49"))
                                    (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "20"))
                                    (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0"))
                                    (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "22"))
                                    (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                    (rule "polySimp_mulComm0" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0,0,0"))
                                    (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor2b" (formula "11") (term "0,0"))
                                    (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "11") (term "0,0"))
                                    (rule "qeq_literals" (formula "11") (term "0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "10"))
                                    (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "11") (term "1,0,0"))
                                    (rule "mul_literals" (formula "11") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "11") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "11") (term "0"))
                                    (rule "add_literals" (formula "11") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                    (rule "mul_literals" (formula "11") (term "1"))
                                    (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "27"))
                                    (rule "leq_literals" (formula "11") (term "0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "49"))
                                    (rule "mul_literals" (formula "48") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                    (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                    (rule "polySimp_rightDist" (formula "48") (term "1"))
                                    (rule "mul_literals" (formula "48") (term "0,1"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "47"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "1"))
                                    (rule "leq_literals" (formula "11") (term "0"))
                                     (builtin "One Step Simplification" (formula "11"))
                                    (rule "true_left" (formula "11"))
                                    (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "18") (term "0"))
                                     (builtin "One Step Simplification" (formula "18"))
                                    (rule "closeFalse" (formula "18"))
                                 )
                              )
                              (branch
                                 (rule "orRight" (formula "118"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "119") (ifseqformula "47"))
                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "119") (term "0") (ifseqformula "36"))
                                 (rule "orRight" (formula "119"))
                                 (rule "orRight" (formula "119"))
                                 (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "118"))
                                  (builtin "One Step Simplification" (formula "6") (ifInst ""  (formula "119")))
                                 (rule "closeFalse" (formula "6"))
                              )
                           )
                        )
                     )
                     (branch "Null Reference (_storage = null)"
                        (rule "false_right" (formula "119"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "115")))
                        (rule "closeFalse" (formula "1"))
                     )
                  )
               )
               (branch "Exceptional Post (num_buckets)"
                   (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "64")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "65") (term "1,0") (ifseqformula "47"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "65") (term "0,1,0") (ifseqformula "36"))
                  (rule "andLeft" (formula "65"))
                  (rule "andLeft" (formula "65"))
                  (rule "notLeft" (formula "65"))
                  (rule "close" (formula "67") (ifseqformula "66"))
               )
               (branch "Pre (num_buckets)"
                   (builtin "One Step Simplification" (formula "116") (ifInst ""  (formula "64")))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "116") (term "1") (ifseqformula "47"))
                  (rule "wellFormedAnonEQ" (formula "116") (term "0") (ifseqformula "47"))
                  (rule "wellFormedAnonEQ" (formula "116") (term "0,0") (ifseqformula "36"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "116") (term "0,1") (ifseqformula "36"))
                  (rule "replace_known_left" (formula "116") (term "1,0,0") (ifseqformula "35"))
                   (builtin "One Step Simplification" (formula "116") (ifInst ""  (formula "7")) (ifInst ""  (formula "46")) (ifInst ""  (formula "14")))
                  (rule "closeTrue" (formula "116"))
               )
               (branch "Null reference (_classifier = null)"
                   (builtin "One Step Simplification" (formula "116") (ifInst ""  (formula "113")))
                  (rule "closeTrue" (formula "116"))
               )
            )
            (branch "Exceptional Post (classify_locally)"
                (builtin "One Step Simplification" (formula "38"))
                (builtin "One Step Simplification" (formula "90"))
               (rule "andLeft" (formula "38"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "1,0") (ifseqformula "38"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,1,0") (ifseqformula "27"))
               (rule "andLeft" (formula "39"))
               (rule "andLeft" (formula "39"))
               (rule "andLeft" (formula "41"))
               (rule "notLeft" (formula "39"))
               (rule "close" (formula "42") (ifseqformula "41"))
            )
            (branch "Pre (classify_locally)"
                (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "87")) (ifInst ""  (formula "86")) (ifInst ""  (formula "38")) (ifInst ""  (formula "87")) (ifInst ""  (formula "86")) (ifInst ""  (formula "38")))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "88") (term "1,1") (ifseqformula "27"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "88") (term "1,0,1") (ifseqformula "27"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "88") (term "1,0,0,0,0,1") (ifseqformula "27"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "88") (term "1,0,0,0,0,0,1") (ifseqformula "27"))
               (rule "wellFormedAnonEQ" (formula "88") (term "0,0,0,0,0,0,1") (ifseqformula "27"))
               (rule "expand_inInt" (formula "88") (term "1,0,0,0,1"))
               (rule "expand_inInt" (formula "88") (term "1,0,0,1"))
               (rule "replace_int_MIN" (formula "88") (term "0,1,1,0,0,0,1"))
               (rule "replace_int_MAX" (formula "88") (term "1,0,1,0,0,0,1"))
               (rule "replace_int_MIN" (formula "88") (term "0,1,1,0,0,1"))
               (rule "replace_int_MAX" (formula "88") (term "1,0,1,0,0,1"))
               (rule "replace_known_right" (formula "88") (term "0,1,1") (ifseqformula "37"))
                (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "1")) (ifInst ""  (formula "26")) (ifInst ""  (formula "8")) (ifInst ""  (formula "2")) (ifInst ""  (formula "3")) (ifInst ""  (formula "5")) (ifInst ""  (formula "7")) (ifInst ""  (formula "29")))
               (rule "inEqSimp_gtToGeq" (formula "19"))
               (rule "mul_literals" (formula "19") (term "1,0,0"))
               (rule "add_literals" (formula "19") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,0,0"))
               (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,0,0"))
               (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "88") (term "0,1"))
               (rule "replace_known_left" (formula "88") (term "0,1") (ifseqformula "4"))
                (builtin "One Step Simplification" (formula "88"))
               (rule "inEqSimp_commuteLeq" (formula "88") (term "1"))
               (rule "replace_known_left" (formula "88") (term "1") (ifseqformula "6"))
                (builtin "One Step Simplification" (formula "88"))
               (rule "inEqSimp_homoInEq0" (formula "16"))
               (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
               (rule "polySimp_rightDist" (formula "16") (term "1,0"))
               (rule "polySimp_mulAssoc" (formula "16") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "16") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "16") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "19"))
               (rule "polySimp_mulComm0" (formula "19") (term "1"))
               (rule "polySimp_rightDist" (formula "19") (term "1"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
               (rule "mul_literals" (formula "19") (term "0,1"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,0,0"))
               (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "16"))
               (rule "polySimp_mulLiterals" (formula "16") (term "0"))
               (rule "polySimp_elimOne" (formula "16") (term "0"))
               (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "13"))
               (rule "leq_literals" (formula "4") (term "0"))
                (builtin "One Step Simplification" (formula "4"))
               (rule "true_left" (formula "4"))
               (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "18"))
               (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
               (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
               (rule "add_literals" (formula "13") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "13") (term "1,0,0"))
               (rule "add_zero_right" (formula "13") (term "0,0"))
               (rule "qeq_literals" (formula "13") (term "0"))
                (builtin "One Step Simplification" (formula "13"))
               (rule "true_left" (formula "13"))
               (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "14"))
               (rule "mul_literals" (formula "5") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "5") (term "0"))
               (rule "add_literals" (formula "5") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "5"))
               (rule "mul_literals" (formula "5") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "13"))
               (rule "leq_literals" (formula "5") (term "0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "4"))
               (rule "polySimp_rightDist" (formula "17") (term "0,0"))
               (rule "mul_literals" (formula "17") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "17") (term "0"))
               (rule "add_literals" (formula "17") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "17"))
               (rule "polySimp_mulLiterals" (formula "17") (term "0"))
               (rule "polySimp_elimOne" (formula "17") (term "0"))
               (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "17"))
               (rule "leq_literals" (formula "3") (term "0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "true_left" (formula "3"))
               (rule "inEqSimp_and_subsumption3" (formula "15") (term "0,0,0"))
               (rule "leq_literals" (formula "15") (term "0,1,0,0,0,0"))
                (builtin "One Step Simplification" (formula "15"))
               (rule "nnf_imp2or" (formula "15") (term "0"))
               (rule "nnf_notAnd" (formula "15") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
               (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "15") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
               (rule "mul_literals" (formula "15") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
               (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0,0"))
               (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0,0"))
               (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0,0"))
               (rule "mul_literals" (formula "15") (term "1,0,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0,0"))
               (rule "times_zero_1" (formula "15") (term "1,0,0,1,0,0,0"))
               (rule "add_zero_right" (formula "15") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0"))
               (rule "mul_literals" (formula "15") (term "1,1,0,0,0"))
               (rule "Contract_axiom_for_isEmpty_in_Buffers" (formula "32") (term "0") (inst "element=element"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "32") (term "1,0,0") (ifseqformula "25"))
               (rule "wellFormedAnonEQ" (formula "32") (term "1,0,0,0") (ifseqformula "25"))
               (rule "expand_inInt" (formula "32") (term "0,0,1,0,1,1,1"))
               (rule "replace_int_MIN" (formula "32") (term "0,1,0,0,1,0,1,1,1"))
               (rule "replace_int_MAX" (formula "32") (term "1,0,0,0,1,0,1,1,1"))
               (rule "replace_known_left" (formula "32") (term "0,0,1,1,1") (ifseqformula "33"))
                (builtin "One Step Simplification" (formula "32") (ifInst ""  (formula "35")) (ifInst ""  (formula "1")) (ifInst ""  (formula "24")) (ifInst ""  (formula "36")) (ifInst ""  (formula "27")) (ifInst ""  (formula "37")) (ifInst ""  (formula "35")) (ifInst ""  (formula "33")) (ifInst ""  (formula "34")))
               (rule "andLeft" (formula "32"))
               (rule "inEqSimp_commuteLeq" (formula "33") (term "1,0,0"))
               (rule "nnf_imp2or" (formula "33") (term "0"))
               (rule "nnf_notAnd" (formula "33") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "33") (term "0,0,0"))
               (rule "mul_literals" (formula "33") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "33") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,0,0"))
               (rule "mul_literals" (formula "33") (term "1,0,0,0"))
               (rule "inEqSimp_notGeq" (formula "33") (term "1,0,0"))
               (rule "mul_literals" (formula "33") (term "1,0,0,1,0,0"))
               (rule "add_literals" (formula "33") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
               (rule "mul_literals" (formula "33") (term "1,1,0,0"))
               (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "10"))
               (rule "andLeft" (formula "10"))
               (rule "notLeft" (formula "11"))
               (rule "notLeft" (formula "10"))
               (rule "Definition_axiom_for_isEmpty_in_de_wiesler_Buffers" (formula "33") (term "0") (inst "b=b"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "expand_inInt" (formula "33") (term "1,0,0"))
               (rule "replace_int_MIN" (formula "33") (term "0,1,1,0,0"))
               (rule "replace_int_MAX" (formula "33") (term "1,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "33") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "33") (term "1,1,0,0"))
               (rule "applyEq" (formula "33") (term "0,1,0,0,1,0,0,0") (ifseqformula "28"))
               (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0,0"))
               (rule "mul_literals" (formula "33") (term "0,1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0,0"))
               (rule "nnf_imp2or" (formula "33") (term "0"))
               (rule "nnf_notAnd" (formula "33") (term "0,0"))
               (rule "nnf_notAnd" (formula "33") (term "1,0,0"))
               (rule "inEqSimp_notLeq" (formula "33") (term "0,1,0,0"))
               (rule "mul_literals" (formula "33") (term "1,0,0,0,1,0,0"))
               (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,1,0,0"))
               (rule "mul_literals" (formula "33") (term "1,0,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "33") (term "1,1,0,0"))
               (rule "mul_literals" (formula "33") (term "1,0,0,1,1,0,0"))
               (rule "add_literals" (formula "33") (term "0,0,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,1,0,0"))
               (rule "mul_literals" (formula "33") (term "1,1,1,0,0"))
               (rule "nnf_notAnd" (formula "33") (term "0,0,0"))
               (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0,0"))
               (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,0,0"))
               (rule "add_literals" (formula "33") (term "0,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0,0"))
               (rule "mul_literals" (formula "33") (term "1,0,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,0"))
               (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,0"))
               (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,0"))
               (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,0"))
               (rule "add_zero_left" (formula "33") (term "0,0,1,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0"))
               (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "18"))
                (builtin "One Step Simplification" (formula "18"))
               (rule "andLeft" (formula "18"))
               (rule "andLeft" (formula "18"))
               (rule "andLeft" (formula "18"))
               (rule "andLeft" (formula "18"))
               (rule "andLeft" (formula "18"))
               (rule "andLeft" (formula "18"))
               (rule "translateJavaSubInt" (formula "23") (term "0,2,1"))
               (rule "translateJavaSubInt" (formula "23") (term "0,2,0"))
               (rule "eqSymm" (formula "20"))
               (rule "eqSymm" (formula "23"))
               (rule "translateJavaMulInt" (formula "20") (term "1,0"))
               (rule "polySimp_elimSub" (formula "23") (term "0,2,0"))
               (rule "mul_literals" (formula "23") (term "1,0,2,0"))
               (rule "eqSymm" (formula "23"))
               (rule "polySimp_elimSub" (formula "23") (term "0,2,0"))
               (rule "mul_literals" (formula "23") (term "1,0,2,0"))
               (rule "eqSymm" (formula "23"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
               (rule "polySimp_addComm0" (formula "23") (term "0,2,0"))
               (rule "eqSymm" (formula "23"))
               (rule "polySimp_addComm0" (formula "23") (term "0,2,0"))
               (rule "eqSymm" (formula "23"))
               (rule "inEqSimp_commuteLeq" (formula "18"))
               (rule "applyEq" (formula "19") (term "0") (ifseqformula "27"))
               (rule "applyEq" (formula "18") (term "0") (ifseqformula "27"))
               (rule "applyEq" (formula "20") (term "1") (ifseqformula "27"))
               (rule "inEqSimp_subsumption0" (formula "25") (ifseqformula "19"))
               (rule "leq_literals" (formula "25") (term "0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "true_left" (formula "25"))
               (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "18"))
               (rule "leq_literals" (formula "25") (term "0"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "true_left" (formula "25"))
               (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "39"))
               (rule "andLeft" (formula "39"))
               (rule "notLeft" (formula "40"))
               (rule "notLeft" (formula "39"))
               (rule "Free_class_invariant_axiom_for_de_wiesler_Buffers" (formula "38") (inst "b=b"))
                (builtin "One Step Simplification" (formula "38"))
               (rule "expand_inInt" (formula "38") (term "1,0,0,1"))
               (rule "replace_int_MIN" (formula "38") (term "0,1,1,0,0,1"))
               (rule "replace_int_MAX" (formula "38") (term "1,0,1,0,0,1"))
               (rule "andLeft" (formula "38"))
               (rule "andLeft" (formula "38"))
               (rule "andLeft" (formula "39"))
               (rule "andLeft" (formula "38"))
               (rule "andLeft" (formula "38"))
               (rule "notLeft" (formula "38"))
               (rule "translateJavaMulInt" (formula "38") (term "1"))
               (rule "mul_literals" (formula "38") (term "1"))
               (rule "eqSymm" (formula "43"))
               (rule "inEqSimp_ltToLeq" (formula "42") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "42") (term "1,1,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "42") (term "0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "40"))
               (rule "applyEq" (formula "41") (term "0") (ifseqformula "32"))
               (rule "applyEq" (formula "40") (term "0") (ifseqformula "32"))
               (rule "applyEq" (formula "41") (term "0,1,0,0,1,0,0,0") (ifseqformula "32"))
               (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0,0,0"))
               (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,0"))
               (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,0"))
               (rule "mul_literals" (formula "41") (term "0,1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,0"))
               (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "18"))
               (rule "leq_literals" (formula "40") (term "0"))
                (builtin "One Step Simplification" (formula "40"))
               (rule "true_left" (formula "40"))
               (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "9"))
               (rule "andLeft" (formula "9"))
               (rule "andLeft" (formula "9"))
               (rule "notLeft" (formula "11"))
               (rule "notLeft" (formula "10"))
               (rule "andLeft" (formula "9"))
               (rule "andLeft" (formula "9"))
               (rule "notLeft" (formula "11"))
               (rule "notLeft" (formula "10"))
               (rule "andLeft" (formula "9"))
               (rule "notLeft" (formula "10"))
               (rule "andLeft" (formula "9"))
               (rule "notLeft" (formula "10"))
               (rule "andLeft" (formula "9"))
               (rule "notLeft" (formula "9"))
               (rule "notLeft" (formula "9"))
               (rule "applyEq" (formula "44") (term "0") (ifseqformula "33"))
               (rule "applyEq" (formula "43") (term "0") (ifseqformula "32"))
               (rule "Free_class_invariant_axiom_for_de_wiesler_Storage" (formula "16"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "andLeft" (formula "16"))
               (rule "andLeft" (formula "16"))
               (rule "andLeft" (formula "18"))
               (rule "andLeft" (formula "16"))
               (rule "andLeft" (formula "19"))
               (rule "andLeft" (formula "16"))
               (rule "andLeft" (formula "20"))
               (rule "andLeft" (formula "16"))
               (rule "andLeft" (formula "21"))
               (rule "andLeft" (formula "16"))
               (rule "andLeft" (formula "22"))
               (rule "andLeft" (formula "16"))
               (rule "andLeft" (formula "23"))
               (rule "andLeft" (formula "16"))
               (rule "andLeft" (formula "24"))
               (rule "andLeft" (formula "16"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "25"))
               (rule "translateJavaMulInt" (formula "19") (term "1"))
               (rule "mul_literals" (formula "19") (term "1"))
               (rule "translateJavaMulInt" (formula "18") (term "1"))
               (rule "mul_literals" (formula "18") (term "1"))
               (rule "disjointDefinition" (formula "52"))
                (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "132")))
               (rule "true_left" (formula "52"))
               (rule "disjointDefinition" (formula "51"))
                (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "130")))
               (rule "true_left" (formula "51"))
               (rule "disjointDefinition" (formula "50"))
                (builtin "One Step Simplification" (formula "50"))
               (rule "notLeft" (formula "50"))
               (rule "eqSymm" (formula "73"))
               (rule "disjointDefinition" (formula "49"))
                (builtin "One Step Simplification" (formula "49"))
               (rule "notLeft" (formula "49"))
               (rule "eqSymm" (formula "72"))
               (rule "disjointDefinition" (formula "48"))
                (builtin "One Step Simplification" (formula "48"))
               (rule "notLeft" (formula "48"))
               (rule "eqSymm" (formula "71"))
               (rule "disjointDefinition" (formula "47"))
                (builtin "One Step Simplification" (formula "47"))
               (rule "notLeft" (formula "47"))
               (rule "eqSymm" (formula "70"))
               (rule "disjointDefinition" (formula "46"))
                (builtin "One Step Simplification" (formula "46"))
               (rule "notLeft" (formula "46"))
               (rule "eqSymm" (formula "69"))
               (rule "disjointDefinition" (formula "45"))
                (builtin "One Step Simplification" (formula "45"))
               (rule "notLeft" (formula "45"))
               (rule "eqSymm" (formula "68"))
               (rule "disjointDefinition" (formula "44"))
                (builtin "One Step Simplification" (formula "44"))
               (rule "notLeft" (formula "44"))
               (rule "eqSymm" (formula "67"))
               (rule "disjointDefinition" (formula "43"))
                (builtin "One Step Simplification" (formula "43"))
               (rule "notLeft" (formula "43"))
               (rule "eqSymm" (formula "66"))
               (rule "disjointDefinition" (formula "42"))
                (builtin "One Step Simplification" (formula "42"))
               (rule "notLeft" (formula "42"))
               (rule "eqSymm" (formula "65"))
               (rule "disjointDefinition" (formula "41"))
                (builtin "One Step Simplification" (formula "41"))
               (rule "notLeft" (formula "41"))
               (rule "eqSymm" (formula "64"))
               (rule "disjointDefinition" (formula "40"))
                (builtin "One Step Simplification" (formula "40"))
               (rule "notLeft" (formula "40"))
               (rule "eqSymm" (formula "63"))
               (rule "disjointDefinition" (formula "39"))
                (builtin "One Step Simplification" (formula "39"))
               (rule "notLeft" (formula "39"))
               (rule "eqSymm" (formula "62"))
               (rule "disjointDefinition" (formula "38"))
                (builtin "One Step Simplification" (formula "38"))
               (rule "notLeft" (formula "38"))
               (rule "eqSymm" (formula "61"))
               (rule "disjointDefinition" (formula "37"))
                (builtin "One Step Simplification" (formula "37"))
               (rule "notLeft" (formula "37"))
               (rule "disjointDefinition" (formula "36"))
                (builtin "One Step Simplification" (formula "36"))
               (rule "notLeft" (formula "36"))
               (rule "eqSymm" (formula "59"))
               (rule "disjointDefinition" (formula "35"))
                (builtin "One Step Simplification" (formula "35"))
               (rule "notLeft" (formula "35"))
               (rule "eqSymm" (formula "58"))
               (rule "disjointDefinition" (formula "34"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "notLeft" (formula "34"))
               (rule "disjointDefinition" (formula "33"))
                (builtin "One Step Simplification" (formula "33"))
               (rule "notLeft" (formula "33"))
               (rule "disjointDefinition" (formula "32"))
                (builtin "One Step Simplification" (formula "32"))
               (rule "notLeft" (formula "32"))
               (rule "disjointDefinition" (formula "31"))
                (builtin "One Step Simplification" (formula "31"))
               (rule "notLeft" (formula "31"))
               (rule "disjointDefinition" (formula "30"))
                (builtin "One Step Simplification" (formula "30"))
               (rule "notLeft" (formula "30"))
               (rule "disjointDefinition" (formula "29"))
                (builtin "One Step Simplification" (formula "29"))
               (rule "notLeft" (formula "29"))
               (rule "disjointDefinition" (formula "28"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "notLeft" (formula "28"))
               (rule "disjointDefinition" (formula "27"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "notLeft" (formula "27"))
               (rule "disjointDefinition" (formula "25"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "notLeft" (formula "25"))
               (rule "disjointDefinition" (formula "25"))
                (builtin "One Step Simplification" (formula "25"))
               (rule "notLeft" (formula "25"))
               (rule "applyEq" (formula "20") (term "0,0") (ifseqformula "41"))
               (rule "applyEq" (formula "23") (term "0,0,0,1,1") (ifseqformula "40"))
               (rule "applyEq" (formula "23") (term "0,1,1,0,1") (ifseqformula "39"))
               (rule "applyEq" (formula "68") (term "1") (ifseqformula "40"))
               (rule "applyEq" (formula "67") (term "1") (ifseqformula "40"))
               (rule "applyEq" (formula "63") (term "1") (ifseqformula "39"))
               (rule "applyEq" (formula "63") (term "1") (ifseqformula "39"))
               (rule "applyEq" (formula "64") (term "1") (ifseqformula "40"))
               (rule "applyEq" (formula "62") (term "0") (ifseqformula "40"))
               (rule "eqSymm" (formula "62"))
               (rule "applyEq" (formula "61") (term "0") (ifseqformula "40"))
               (rule "eqSymm" (formula "61"))
               (rule "applyEq" (formula "62") (term "1") (ifseqformula "39"))
               (rule "applyEq" (formula "19") (term "0,0") (ifseqformula "39"))
               (rule "applyEq" (formula "59") (term "0") (ifseqformula "38"))
               (rule "eqSymm" (formula "59"))
               (rule "applyEq" (formula "54") (term "1") (ifseqformula "38"))
               (rule "applyEq" (formula "48") (term "1") (ifseqformula "38"))
               (rule "applyEq" (formula "49") (term "1") (ifseqformula "39"))
               (rule "applyEq" (formula "55") (term "1") (ifseqformula "39"))
               (rule "applyEq" (formula "59") (term "0") (ifseqformula "38"))
               (rule "eqSymm" (formula "59"))
               (rule "commuteUnion" (formula "22") (term "0,0,1"))
               (rule "commuteUnion" (formula "22") (term "1,1,1"))
               (rule "commuteUnion" (formula "22") (term "1,0,1"))
               (rule "commuteUnion_2" (formula "22") (term "0,1"))
               (rule "commuteUnion" (formula "22") (term "0,0,1"))
               (rule "commuteUnion_2" (formula "22") (term "1"))
               (rule "nnf_imp2or" (formula "45") (term "0"))
               (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "120"))
               (rule "replace_known_right" (formula "120") (term "0,1") (ifseqformula "68"))
                (builtin "One Step Simplification" (formula "120") (ifInst ""  (formula "67")))
               (rule "closeTrue" (formula "120"))
            )
            (branch "Null reference (_classifier = null)"
                (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "85")))
               (rule "closeTrue" (formula "88"))
            )
         )
         (branch "Exceptional Post (Buffers)"
             (builtin "One Step Simplification" (formula "27"))
             (builtin "One Step Simplification" (formula "77"))
            (rule "andLeft" (formula "27"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1,0,0") (ifseqformula "27"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "1,1,0,0,1,0") (ifseqformula "27"))
            (rule "andLeft" (formula "28"))
            (rule "andLeft" (formula "29"))
            (rule "andLeft" (formula "28"))
            (rule "andLeft" (formula "29"))
            (rule "andLeft" (formula "28"))
            (rule "andLeft" (formula "30"))
            (rule "andLeft" (formula "32"))
            (rule "notLeft" (formula "28"))
            (rule "close" (formula "35") (ifseqformula "34"))
         )
         (branch "Pre (Buffers)"
             (builtin "One Step Simplification" (formula "75") (ifInst ""  (formula "1")))
            (rule "expand_inInt" (formula "75") (term "1,1"))
            (rule "replace_int_MAX" (formula "75") (term "1,0,1,1"))
            (rule "replace_int_MIN" (formula "75") (term "0,1,1,1"))
            (rule "replace_known_left" (formula "75") (term "0,1,1") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "75"))
            (rule "inEqSimp_ltToLeq" (formula "18") (term "0,0,0,0,0"))
            (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0,0,0"))
            (rule "add_literals" (formula "18") (term "0,0,0,0,0,0,0"))
            (rule "inEqSimp_gtToGeq" (formula "19"))
            (rule "mul_literals" (formula "19") (term "1,0,0"))
            (rule "add_literals" (formula "19") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "19") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "75") (term "1,1"))
            (rule "replace_known_left" (formula "75") (term "1,1") (ifseqformula "23"))
             (builtin "One Step Simplification" (formula "75"))
            (rule "inEqSimp_homoInEq0" (formula "16"))
            (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
            (rule "polySimp_rightDist" (formula "16") (term "1,0"))
            (rule "polySimp_mulAssoc" (formula "16") (term "0,1,0"))
            (rule "polySimp_mulComm0" (formula "16") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "16") (term "0,1,0"))
            (rule "polySimp_elimOne" (formula "16") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "16") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,0,0"))
            (rule "mul_literals" (formula "18") (term "1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "19"))
            (rule "polySimp_mulComm0" (formula "19") (term "1"))
            (rule "polySimp_rightDist" (formula "19") (term "1"))
            (rule "mul_literals" (formula "19") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
            (rule "polySimp_elimOne" (formula "19") (term "1,1"))
            (rule "inEqSimp_sepNegMonomial1" (formula "16"))
            (rule "polySimp_mulLiterals" (formula "16") (term "0"))
            (rule "polySimp_elimOne" (formula "16") (term "0"))
            (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "19"))
            (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
            (rule "add_literals" (formula "14") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "14") (term "1,0,0"))
            (rule "add_zero_right" (formula "14") (term "0,0"))
            (rule "qeq_literals" (formula "14") (term "0"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "13"))
            (rule "leq_literals" (formula "4") (term "0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "true_left" (formula "4"))
            (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "14"))
            (rule "mul_literals" (formula "5") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "5") (term "0"))
            (rule "add_literals" (formula "5") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "5"))
            (rule "mul_literals" (formula "5") (term "1"))
            (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "13"))
            (rule "leq_literals" (formula "5") (term "0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "4"))
            (rule "polySimp_rightDist" (formula "17") (term "0,0"))
            (rule "mul_literals" (formula "17") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "17") (term "0"))
            (rule "add_literals" (formula "17") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "17"))
            (rule "polySimp_mulLiterals" (formula "17") (term "0"))
            (rule "polySimp_elimOne" (formula "17") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "17"))
            (rule "leq_literals" (formula "3") (term "0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "true_left" (formula "3"))
            (rule "inEqSimp_and_subsumption3" (formula "15") (term "0,0,0"))
            (rule "leq_literals" (formula "15") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "nnf_imp2or" (formula "15") (term "0"))
            (rule "nnf_notAnd" (formula "15") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
            (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "15") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
            (rule "mul_literals" (formula "15") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "15") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "15") (term "0,0,0,0"))
            (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0,0"))
            (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "0,0,0,0"))
            (rule "mul_literals" (formula "15") (term "1,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "15") (term "1,0,0,0"))
            (rule "mul_literals" (formula "15") (term "1,0,0,1,0,0,0"))
            (rule "add_literals" (formula "15") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,0"))
            (rule "mul_literals" (formula "15") (term "1,1,0,0,0"))
            (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "19"))
             (builtin "One Step Simplification" (formula "19"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "19"))
            (rule "translateJavaSubInt" (formula "24") (term "0,2,1"))
            (rule "translateJavaSubInt" (formula "24") (term "0,2,0"))
            (rule "translateJavaMulInt" (formula "21") (term "1,1"))
            (rule "eqSymm" (formula "24"))
            (rule "eqSymm" (formula "21"))
            (rule "polySimp_elimSub" (formula "24") (term "0,2,1"))
            (rule "mul_literals" (formula "24") (term "1,0,2,1"))
            (rule "polySimp_elimSub" (formula "24") (term "0,2,0"))
            (rule "mul_literals" (formula "24") (term "1,0,2,0"))
            (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
            (rule "polySimp_addComm0" (formula "24") (term "0,2,1"))
            (rule "polySimp_addComm0" (formula "24") (term "0,2,0"))
            (rule "inEqSimp_commuteLeq" (formula "19"))
            (rule "applyEq" (formula "20") (term "0") (ifseqformula "28"))
            (rule "applyEq" (formula "19") (term "0") (ifseqformula "28"))
            (rule "applyEq" (formula "21") (term "1") (ifseqformula "28"))
            (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "19"))
            (rule "leq_literals" (formula "27") (term "0"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "true_left" (formula "27"))
            (rule "inEqSimp_subsumption0" (formula "26") (ifseqformula "20"))
            (rule "leq_literals" (formula "26") (term "0"))
             (builtin "One Step Simplification" (formula "26"))
            (rule "true_left" (formula "26"))
            (rule "Class_invariant_axiom_for_de_wiesler_Storage" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "notLeft" (formula "11"))
            (rule "andLeft" (formula "9"))
            (rule "notLeft" (formula "11"))
            (rule "andLeft" (formula "9"))
            (rule "notLeft" (formula "11"))
            (rule "andLeft" (formula "9"))
            (rule "notLeft" (formula "11"))
            (rule "andLeft" (formula "9"))
            (rule "notLeft" (formula "11"))
            (rule "andLeft" (formula "9"))
            (rule "notLeft" (formula "11"))
            (rule "notLeft" (formula "9"))
            (rule "notLeft" (formula "9"))
            (rule "replace_known_right" (formula "84") (term "0,1,1") (ifseqformula "31"))
             (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "30")) (ifInst ""  (formula "31")) (ifInst ""  (formula "30")))
            (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "9"))
            (rule "andLeft" (formula "9"))
            (rule "notLeft" (formula "9"))
            (rule "notLeft" (formula "9"))
            (rule "Free_class_invariant_axiom_for_de_wiesler_Storage" (formula "16"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "17"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "18"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "19"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "20"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "21"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "22"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "23"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "24"))
            (rule "andLeft" (formula "16"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "andLeft" (formula "25"))
            (rule "translateJavaMulInt" (formula "19") (term "1"))
            (rule "mul_literals" (formula "19") (term "1"))
            (rule "translateJavaMulInt" (formula "18") (term "1"))
            (rule "mul_literals" (formula "18") (term "1"))
            (rule "disjointDefinition" (formula "52"))
             (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "116")))
            (rule "true_left" (formula "52"))
            (rule "disjointDefinition" (formula "51"))
             (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "114")))
            (rule "true_left" (formula "51"))
            (rule "disjointDefinition" (formula "50"))
             (builtin "One Step Simplification" (formula "50"))
            (rule "notLeft" (formula "50"))
            (rule "eqSymm" (formula "59"))
            (rule "disjointDefinition" (formula "49"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "notLeft" (formula "49"))
            (rule "eqSymm" (formula "58"))
            (rule "disjointDefinition" (formula "48"))
             (builtin "One Step Simplification" (formula "48"))
            (rule "notLeft" (formula "48"))
            (rule "eqSymm" (formula "57"))
            (rule "disjointDefinition" (formula "47"))
             (builtin "One Step Simplification" (formula "47"))
            (rule "notLeft" (formula "47"))
            (rule "eqSymm" (formula "56"))
            (rule "disjointDefinition" (formula "46"))
             (builtin "One Step Simplification" (formula "46"))
            (rule "notLeft" (formula "46"))
            (rule "eqSymm" (formula "55"))
            (rule "disjointDefinition" (formula "45"))
             (builtin "One Step Simplification" (formula "45"))
            (rule "notLeft" (formula "45"))
            (rule "eqSymm" (formula "54"))
            (rule "disjointDefinition" (formula "44"))
             (builtin "One Step Simplification" (formula "44"))
            (rule "notLeft" (formula "44"))
            (rule "eqSymm" (formula "53"))
            (rule "disjointDefinition" (formula "43"))
             (builtin "One Step Simplification" (formula "43"))
            (rule "notLeft" (formula "43"))
            (rule "eqSymm" (formula "52"))
            (rule "disjointDefinition" (formula "42"))
             (builtin "One Step Simplification" (formula "42"))
            (rule "notLeft" (formula "42"))
            (rule "eqSymm" (formula "51"))
            (rule "disjointDefinition" (formula "41"))
             (builtin "One Step Simplification" (formula "41"))
            (rule "notLeft" (formula "41"))
            (rule "eqSymm" (formula "50"))
            (rule "disjointDefinition" (formula "40"))
             (builtin "One Step Simplification" (formula "40"))
            (rule "notLeft" (formula "40"))
            (rule "eqSymm" (formula "49"))
            (rule "disjointDefinition" (formula "39"))
             (builtin "One Step Simplification" (formula "39"))
            (rule "notLeft" (formula "39"))
            (rule "eqSymm" (formula "48"))
            (rule "disjointDefinition" (formula "38"))
             (builtin "One Step Simplification" (formula "38"))
            (rule "notLeft" (formula "38"))
            (rule "eqSymm" (formula "47"))
            (rule "disjointDefinition" (formula "37"))
             (builtin "One Step Simplification" (formula "37"))
            (rule "notLeft" (formula "37"))
            (rule "disjointDefinition" (formula "36"))
             (builtin "One Step Simplification" (formula "36"))
            (rule "notLeft" (formula "36"))
            (rule "eqSymm" (formula "45"))
            (rule "disjointDefinition" (formula "35"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "notLeft" (formula "35"))
            (rule "eqSymm" (formula "44"))
            (rule "disjointDefinition" (formula "34"))
             (builtin "One Step Simplification" (formula "34"))
            (rule "notLeft" (formula "34"))
            (rule "disjointDefinition" (formula "33"))
             (builtin "One Step Simplification" (formula "33"))
            (rule "notLeft" (formula "33"))
            (rule "disjointDefinition" (formula "32"))
             (builtin "One Step Simplification" (formula "32"))
            (rule "notLeft" (formula "32"))
            (rule "disjointDefinition" (formula "31"))
             (builtin "One Step Simplification" (formula "31"))
            (rule "notLeft" (formula "31"))
            (rule "disjointDefinition" (formula "30"))
             (builtin "One Step Simplification" (formula "30"))
            (rule "notLeft" (formula "30"))
            (rule "disjointDefinition" (formula "29"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "notLeft" (formula "29"))
            (rule "disjointDefinition" (formula "28"))
             (builtin "One Step Simplification" (formula "28"))
            (rule "notLeft" (formula "28"))
            (rule "disjointDefinition" (formula "27"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "notLeft" (formula "27"))
            (rule "disjointDefinition" (formula "25"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "notLeft" (formula "25"))
            (rule "disjointDefinition" (formula "25"))
             (builtin "One Step Simplification" (formula "25"))
            (rule "notLeft" (formula "25"))
            (rule "commuteUnion" (formula "24") (term "1,1,1"))
            (rule "commuteUnion" (formula "24") (term "0,0,1"))
            (rule "commuteUnion_2" (formula "24") (term "0,1"))
            (rule "commuteUnion" (formula "24") (term "0,0,1"))
            (rule "commuteUnion_2" (formula "24") (term "1"))
            (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "31"))
            (rule "andLeft" (formula "31"))
            (rule "notLeft" (formula "31"))
            (rule "notLeft" (formula "31"))
            (rule "applyEq" (formula "34") (term "0") (ifseqformula "28"))
            (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "29") (term "0") (inst "j=j") (inst "i=i"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "expand_inInt" (formula "29") (term "1,0,0"))
            (rule "expand_inInt" (formula "29") (term "1,0,0,1,0"))
            (rule "replace_int_MAX" (formula "29") (term "1,0,1,0,0"))
            (rule "replace_int_MIN" (formula "29") (term "0,1,1,0,0"))
            (rule "replace_int_MAX" (formula "29") (term "1,0,1,0,0,1,0"))
            (rule "replace_int_MIN" (formula "29") (term "0,1,1,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "29") (term "1,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "29") (term "1,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "29") (term "1,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0"))
            (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0"))
            (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0,1,0"))
            (rule "nnf_imp2or" (formula "29") (term "0"))
            (rule "nnf_notAnd" (formula "29") (term "0,0"))
            (rule "nnf_imp2or" (formula "29") (term "0,1,0"))
            (rule "nnf_notAnd" (formula "29") (term "0,0,0"))
            (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,0"))
            (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0"))
            (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0"))
            (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0"))
            (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0"))
            (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
            (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0,0"))
            (rule "mul_literals" (formula "29") (term "1,0,0,0,0,0,0"))
            (rule "add_zero_right" (formula "29") (term "0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,0"))
            (rule "mul_literals" (formula "29") (term "1,0,0,0,0"))
            (rule "nnf_notAnd" (formula "29") (term "1,0,0"))
            (rule "inEqSimp_notLeq" (formula "29") (term "0,1,0,0"))
            (rule "mul_literals" (formula "29") (term "1,0,0,0,1,0,0"))
            (rule "add_literals" (formula "29") (term "0,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,1,0,0"))
            (rule "mul_literals" (formula "29") (term "1,0,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "29") (term "1,1,0,0"))
            (rule "mul_literals" (formula "29") (term "1,0,0,1,1,0,0"))
            (rule "add_literals" (formula "29") (term "0,0,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,1,0,0"))
            (rule "mul_literals" (formula "29") (term "1,1,1,0,0"))
            (rule "nnf_notAnd" (formula "29") (term "0,0,1,0"))
            (rule "commute_or" (formula "13") (term "0,0,0"))
            (rule "inEqSimp_or_subsumption3" (formula "13") (term "0,0"))
            (rule "qeq_literals" (formula "13") (term "0,1,0,0"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "nnf_notAnd" (formula "29") (term "0,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0,1,0"))
            (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,0,1,0"))
            (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,0,1,0"))
            (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,0,1,0"))
            (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,1,0"))
            (rule "nnf_notAnd" (formula "29") (term "1,0,0,1,0"))
            (rule "inEqSimp_notLeq" (formula "29") (term "0,1,0,0,1,0"))
            (rule "mul_literals" (formula "29") (term "1,0,0,0,1,0,0,1,0"))
            (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "0,1,0,0,1,0"))
            (rule "mul_literals" (formula "29") (term "1,0,1,0,0,1,0"))
            (rule "inEqSimp_notGeq" (formula "29") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "29") (term "1,0,0,1,1,0,0,1,0"))
            (rule "add_literals" (formula "29") (term "0,0,1,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "29") (term "1,1,1,0,0,1,0"))
            (rule "arrayLengthIsAShort" (formula "10") (term "0"))
            (rule "expand_inShort" (formula "10"))
            (rule "replace_short_MIN" (formula "10") (term "0,1"))
            (rule "replace_short_MAX" (formula "10") (term "1,0"))
            (rule "andLeft" (formula "10"))
            (rule "inEqSimp_commuteLeq" (formula "11"))
            (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "10"))
            (rule "polySimp_mulComm0" (formula "12") (term "0,0"))
            (rule "polySimp_addComm0" (formula "12") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "12"))
            (rule "polySimp_mulLiterals" (formula "12") (term "0"))
            (rule "polySimp_elimOne" (formula "12") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "12"))
            (rule "leq_literals" (formula "3") (term "0"))
             (builtin "One Step Simplification" (formula "3"))
            (rule "true_left" (formula "3"))
            (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "11"))
            (rule "polySimp_rightDist" (formula "17") (term "0,0"))
            (rule "mul_literals" (formula "17") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "17") (term "0"))
            (rule "add_literals" (formula "17") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "17"))
            (rule "polySimp_mulLiterals" (formula "17") (term "0"))
            (rule "polySimp_elimOne" (formula "17") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "16") (ifseqformula "17"))
            (rule "leq_literals" (formula "16") (term "0"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "true_left" (formula "16"))
            (rule "arrayLengthNotNegative" (formula "12") (term "0"))
            (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "12"))
            (rule "leq_literals" (formula "10") (term "0"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "true_left" (formula "10"))
            (rule "ifthenelse_split" (formula "29") (term "0"))
            (branch "classifier.equal_buckets = TRUE TRUE"
               (rule "newSym_eq" (formula "30") (inst "newSymDef=mul(result_175, Z(0(#)))") (inst "l=l_0"))
               (rule "times_zero_1" (formula "30") (term "1,1"))
               (rule "add_zero_right" (formula "30") (term "1"))
               (rule "applyEq" (formula "33") (term "1,1,0,0,0,1,0") (ifseqformula "30"))
               (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "30"))
               (rule "eqSymm" (formula "31"))
               (rule "applyEq" (formula "33") (term "1,1,0,0,0") (ifseqformula "30"))
               (rule "applyEq" (formula "34") (term "1,0,2,0") (ifseqformula "30"))
               (rule "eqSymm" (formula "34"))
               (rule "applyEq" (formula "27") (term "0") (ifseqformula "31"))
               (rule "applyEq" (formula "28") (term "0") (ifseqformula "31"))
               (rule "applyEq" (formula "34") (term "1,0,2,0") (ifseqformula "30"))
               (rule "eqSymm" (formula "34"))
               (rule "applyEq" (formula "35") (term "1") (ifseqformula "31"))
               (rule "elimGcdLeq_antec" (formula "28") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(4(6(#)))"))
               (rule "leq_literals" (formula "28") (term "0,0"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0,0,0,0"))
               (rule "neg_literal" (formula "28") (term "0,0,0,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0"))
               (rule "mul_literals" (formula "28") (term "1,0,0,0,0,0"))
               (rule "polySimp_addLiterals" (formula "28") (term "0,0,0,0"))
               (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "28") (term "0,0"))
               (rule "add_literals" (formula "28") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "28") (term "1,0,0"))
               (rule "add_literals" (formula "28") (term "0,0"))
               (rule "qeq_literals" (formula "28") (term "0"))
                (builtin "One Step Simplification" (formula "28"))
               (rule "elimGcdGeq_antec" (formula "27") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(1(#))"))
               (rule "polySimp_mulLiterals" (formula "27") (term "1,0,1,0"))
               (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0,1,0"))
               (rule "leq_literals" (formula "27") (term "0,0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "mul_literals" (formula "27") (term "1,0,0,0,0,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "27") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0"))
               (rule "add_literals" (formula "27") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "27") (term "1,0,0"))
               (rule "add_literals" (formula "27") (term "0,0"))
               (rule "leq_literals" (formula "27") (term "0"))
                (builtin "One Step Simplification" (formula "27"))
               (rule "commute_or" (formula "33") (term "1,0,0"))
               (rule "associativeLawUnion" (formula "26") (term "0,1"))
               (rule "commute_or" (formula "33") (term "1,0,0,1,0"))
               (rule "cut_direct" (formula "110") (term "0"))
               (branch "CUT: storage.buffers_buffer.<created> = TRUE TRUE"
                   (builtin "One Step Simplification" (formula "111"))
                  (rule "arrayLengthIsAShort" (formula "26") (term "0"))
                  (rule "expand_inShort" (formula "26"))
                  (rule "replace_short_MIN" (formula "26") (term "0,1"))
                  (rule "replace_short_MAX" (formula "26") (term "1,0"))
                  (rule "andLeft" (formula "26"))
                  (rule "inEqSimp_commuteLeq" (formula "27"))
                  (rule "applyEq" (formula "27") (term "0") (ifseqformula "28"))
                  (rule "qeq_literals" (formula "27"))
                  (rule "true_left" (formula "27"))
                  (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                  (rule "leq_literals" (formula "26"))
                  (rule "true_left" (formula "26"))
                  (rule "arrayLengthNotNegative" (formula "26") (term "0"))
                  (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                  (rule "qeq_literals" (formula "26"))
                  (rule "true_left" (formula "26"))
                  (rule "arrayLengthIsAShort" (formula "25") (term "0"))
                  (rule "expand_inShort" (formula "25"))
                  (rule "replace_short_MIN" (formula "25") (term "0,1"))
                  (rule "replace_short_MAX" (formula "25") (term "1,0"))
                  (rule "andLeft" (formula "25"))
                  (rule "inEqSimp_commuteLeq" (formula "26"))
                  (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                  (rule "qeq_literals" (formula "26"))
                  (rule "true_left" (formula "26"))
                  (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                  (rule "leq_literals" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "arrayLengthNotNegative" (formula "25") (term "0"))
                  (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                  (rule "qeq_literals" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "arrayLengthIsAShort" (formula "24") (term "0"))
                  (rule "expand_inShort" (formula "24"))
                  (rule "replace_short_MIN" (formula "24") (term "0,1"))
                  (rule "replace_short_MAX" (formula "24") (term "1,0"))
                  (rule "andLeft" (formula "24"))
                  (rule "inEqSimp_commuteLeq" (formula "25"))
                  (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                  (rule "qeq_literals" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                  (rule "leq_literals" (formula "24"))
                  (rule "true_left" (formula "24"))
                  (rule "arrayLengthNotNegative" (formula "24") (term "0"))
                  (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                  (rule "qeq_literals" (formula "24"))
                  (rule "true_left" (formula "24"))
                  (rule "commute_or_2" (formula "34") (term "0,0"))
                  (rule "arrayLengthIsAShort" (formula "23") (term "0"))
                  (rule "expand_inShort" (formula "23"))
                  (rule "replace_short_MAX" (formula "23") (term "1,0"))
                  (rule "replace_short_MIN" (formula "23") (term "0,1"))
                  (rule "andLeft" (formula "23"))
                  (rule "inEqSimp_commuteLeq" (formula "24"))
                  (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                  (rule "qeq_literals" (formula "24"))
                  (rule "true_left" (formula "24"))
                  (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                  (rule "leq_literals" (formula "23"))
                  (rule "true_left" (formula "23"))
                  (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                  (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                  (rule "qeq_literals" (formula "23"))
                  (rule "true_left" (formula "23"))
                  (rule "arrayLengthIsAShort" (formula "22") (term "0"))
                  (rule "expand_inShort" (formula "22"))
                  (rule "replace_short_MAX" (formula "22") (term "1,0"))
                  (rule "replace_short_MIN" (formula "22") (term "0,1"))
                  (rule "andLeft" (formula "22"))
                  (rule "inEqSimp_commuteLeq" (formula "23"))
                  (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                  (rule "qeq_literals" (formula "23"))
                  (rule "true_left" (formula "23"))
                  (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                  (rule "leq_literals" (formula "22"))
                  (rule "closeFalse" (formula "22"))
               )
               (branch "CUT: storage.buffers_buffer.<created> = TRUE FALSE"
                   (builtin "One Step Simplification" (formula "111"))
                  (rule "false_right" (formula "111"))
                  (rule "arrayLengthIsAShort" (formula "25") (term "0"))
                  (rule "expand_inShort" (formula "25"))
                  (rule "replace_short_MIN" (formula "25") (term "0,1"))
                  (rule "replace_short_MAX" (formula "25") (term "1,0"))
                  (rule "andLeft" (formula "25"))
                  (rule "inEqSimp_commuteLeq" (formula "26"))
                  (rule "applyEq" (formula "25") (term "0") (ifseqformula "27"))
                  (rule "leq_literals" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                  (rule "qeq_literals" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "arrayLengthNotNegative" (formula "25") (term "0"))
                  (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                  (rule "qeq_literals" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "arrayLengthIsAShort" (formula "24") (term "0"))
                  (rule "expand_inShort" (formula "24"))
                  (rule "replace_short_MIN" (formula "24") (term "0,1"))
                  (rule "replace_short_MAX" (formula "24") (term "1,0"))
                  (rule "andLeft" (formula "24"))
                  (rule "inEqSimp_commuteLeq" (formula "25"))
                  (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                  (rule "qeq_literals" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                  (rule "leq_literals" (formula "24"))
                  (rule "true_left" (formula "24"))
                  (rule "arrayLengthNotNegative" (formula "24") (term "0"))
                  (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                  (rule "qeq_literals" (formula "24"))
                  (rule "true_left" (formula "24"))
                  (rule "arrayLengthIsAShort" (formula "23") (term "0"))
                  (rule "expand_inShort" (formula "23"))
                  (rule "replace_short_MIN" (formula "23") (term "0,1"))
                  (rule "replace_short_MAX" (formula "23") (term "1,0"))
                  (rule "andLeft" (formula "23"))
                  (rule "inEqSimp_commuteLeq" (formula "24"))
                  (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                  (rule "qeq_literals" (formula "24"))
                  (rule "true_left" (formula "24"))
                  (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                  (rule "leq_literals" (formula "23"))
                  (rule "true_left" (formula "23"))
                  (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                  (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                  (rule "qeq_literals" (formula "23"))
                  (rule "true_left" (formula "23"))
                  (rule "commute_or_2" (formula "33") (term "0,0"))
                  (rule "arrayLengthIsAShort" (formula "22") (term "0"))
                  (rule "expand_inShort" (formula "22"))
                  (rule "replace_short_MIN" (formula "22") (term "0,1"))
                  (rule "replace_short_MAX" (formula "22") (term "1,0"))
                  (rule "andLeft" (formula "22"))
                  (rule "inEqSimp_commuteLeq" (formula "23"))
                  (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                  (rule "qeq_literals" (formula "23"))
                  (rule "true_left" (formula "23"))
                  (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                  (rule "leq_literals" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                  (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                  (rule "qeq_literals" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                  (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                  (rule "qeq_literals" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "arrayLengthIsAShort" (formula "21") (term "0"))
                  (rule "expand_inShort" (formula "21"))
                  (rule "replace_short_MIN" (formula "21") (term "0,1"))
                  (rule "replace_short_MAX" (formula "21") (term "1,0"))
                  (rule "andLeft" (formula "21"))
                  (rule "inEqSimp_commuteLeq" (formula "22"))
                  (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                  (rule "qeq_literals" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                  (rule "leq_literals" (formula "21"))
                  (rule "closeFalse" (formula "21"))
               )
            )
            (branch "classifier.equal_buckets = TRUE FALSE"
               (rule "applyEq" (formula "31") (term "1,1,0,0,0,1,0") (ifseqformula "29"))
               (rule "applyEq" (formula "31") (term "1,1,0,0,0") (ifseqformula "29"))
               (rule "applyEq" (formula "32") (term "1,0,2,0") (ifseqformula "29"))
               (rule "eqSymm" (formula "32"))
               (rule "applyEq" (formula "32") (term "1,0,2,0") (ifseqformula "29"))
               (rule "eqSymm" (formula "32"))
               (rule "commute_or" (formula "31") (term "1,0,0"))
               (rule "associativeLawUnion" (formula "26") (term "0,1"))
               (rule "commute_or_2" (formula "31") (term "0,0"))
               (rule "commute_or" (formula "31") (term "1,0,0,1,0"))
               (rule "cut_direct" (formula "109") (term "1"))
               (branch "CUT: storage.buffers_indices.<created> = TRUE TRUE"
                   (builtin "One Step Simplification" (formula "110"))
                  (rule "arrayLengthIsAShort" (formula "26") (term "0"))
                  (rule "expand_inShort" (formula "26"))
                  (rule "replace_short_MIN" (formula "26") (term "0,1"))
                  (rule "replace_short_MAX" (formula "26") (term "1,0"))
                  (rule "andLeft" (formula "26"))
                  (rule "inEqSimp_commuteLeq" (formula "27"))
                  (rule "applyEq" (formula "26") (term "0") (ifseqformula "28"))
                  (rule "leq_literals" (formula "26"))
                  (rule "true_left" (formula "26"))
                  (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                  (rule "qeq_literals" (formula "26"))
                  (rule "true_left" (formula "26"))
                  (rule "arrayLengthNotNegative" (formula "26") (term "0"))
                  (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                  (rule "qeq_literals" (formula "26"))
                  (rule "true_left" (formula "26"))
                  (rule "arrayLengthIsAShort" (formula "25") (term "0"))
                  (rule "expand_inShort" (formula "25"))
                  (rule "replace_short_MIN" (formula "25") (term "0,1"))
                  (rule "replace_short_MAX" (formula "25") (term "1,0"))
                  (rule "andLeft" (formula "25"))
                  (rule "inEqSimp_commuteLeq" (formula "26"))
                  (rule "applyEq" (formula "25") (term "0") (ifseqformula "27"))
                  (rule "leq_literals" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                  (rule "qeq_literals" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "arrayLengthNotNegative" (formula "25") (term "0"))
                  (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                  (rule "qeq_literals" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "arrayLengthIsAShort" (formula "24") (term "0"))
                  (rule "expand_inShort" (formula "24"))
                  (rule "replace_short_MIN" (formula "24") (term "0,1"))
                  (rule "replace_short_MAX" (formula "24") (term "1,0"))
                  (rule "andLeft" (formula "24"))
                  (rule "inEqSimp_commuteLeq" (formula "25"))
                  (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                  (rule "qeq_literals" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                  (rule "leq_literals" (formula "24"))
                  (rule "true_left" (formula "24"))
                  (rule "arrayLengthNotNegative" (formula "24") (term "0"))
                  (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                  (rule "qeq_literals" (formula "24"))
                  (rule "true_left" (formula "24"))
                  (rule "arrayLengthIsAShort" (formula "23") (term "0"))
                  (rule "expand_inShort" (formula "23"))
                  (rule "replace_short_MIN" (formula "23") (term "0,1"))
                  (rule "replace_short_MAX" (formula "23") (term "1,0"))
                  (rule "andLeft" (formula "23"))
                  (rule "inEqSimp_commuteLeq" (formula "24"))
                  (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                  (rule "qeq_literals" (formula "24"))
                  (rule "true_left" (formula "24"))
                  (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                  (rule "leq_literals" (formula "23"))
                  (rule "true_left" (formula "23"))
                  (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                  (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                  (rule "qeq_literals" (formula "23"))
                  (rule "true_left" (formula "23"))
                  (rule "arrayLengthIsAShort" (formula "22") (term "0"))
                  (rule "expand_inShort" (formula "22"))
                  (rule "replace_short_MIN" (formula "22") (term "0,1"))
                  (rule "replace_short_MAX" (formula "22") (term "1,0"))
                  (rule "andLeft" (formula "22"))
                  (rule "inEqSimp_commuteLeq" (formula "23"))
                  (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                  (rule "qeq_literals" (formula "23"))
                  (rule "true_left" (formula "23"))
                  (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                  (rule "leq_literals" (formula "22"))
                  (rule "closeFalse" (formula "22"))
               )
               (branch "CUT: storage.buffers_indices.<created> = TRUE FALSE"
                   (builtin "One Step Simplification" (formula "110"))
                  (rule "false_right" (formula "110"))
                  (rule "arrayLengthIsAShort" (formula "25") (term "0"))
                  (rule "expand_inShort" (formula "25"))
                  (rule "replace_short_MIN" (formula "25") (term "0,1"))
                  (rule "replace_short_MAX" (formula "25") (term "1,0"))
                  (rule "andLeft" (formula "25"))
                  (rule "inEqSimp_commuteLeq" (formula "26"))
                  (rule "applyEq" (formula "26") (term "0") (ifseqformula "27"))
                  (rule "qeq_literals" (formula "26"))
                  (rule "true_left" (formula "26"))
                  (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                  (rule "leq_literals" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "arrayLengthNotNegative" (formula "25") (term "0"))
                  (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                  (rule "qeq_literals" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "arrayLengthIsAShort" (formula "24") (term "0"))
                  (rule "expand_inShort" (formula "24"))
                  (rule "replace_short_MIN" (formula "24") (term "0,1"))
                  (rule "replace_short_MAX" (formula "24") (term "1,0"))
                  (rule "andLeft" (formula "24"))
                  (rule "inEqSimp_commuteLeq" (formula "25"))
                  (rule "applyEq" (formula "25") (term "0") (ifseqformula "26"))
                  (rule "qeq_literals" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                  (rule "leq_literals" (formula "24"))
                  (rule "true_left" (formula "24"))
                  (rule "arrayLengthNotNegative" (formula "24") (term "0"))
                  (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                  (rule "qeq_literals" (formula "24"))
                  (rule "true_left" (formula "24"))
                  (rule "arrayLengthIsAShort" (formula "23") (term "0"))
                  (rule "expand_inShort" (formula "23"))
                  (rule "replace_short_MIN" (formula "23") (term "0,1"))
                  (rule "replace_short_MAX" (formula "23") (term "1,0"))
                  (rule "andLeft" (formula "23"))
                  (rule "inEqSimp_commuteLeq" (formula "24"))
                  (rule "applyEq" (formula "24") (term "0") (ifseqformula "25"))
                  (rule "qeq_literals" (formula "24"))
                  (rule "true_left" (formula "24"))
                  (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                  (rule "leq_literals" (formula "23"))
                  (rule "true_left" (formula "23"))
                  (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                  (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                  (rule "qeq_literals" (formula "23"))
                  (rule "true_left" (formula "23"))
                  (rule "arrayLengthIsAShort" (formula "22") (term "0"))
                  (rule "expand_inShort" (formula "22"))
                  (rule "replace_short_MIN" (formula "22") (term "0,1"))
                  (rule "replace_short_MAX" (formula "22") (term "1,0"))
                  (rule "andLeft" (formula "22"))
                  (rule "inEqSimp_commuteLeq" (formula "23"))
                  (rule "applyEq" (formula "23") (term "0") (ifseqformula "24"))
                  (rule "qeq_literals" (formula "23"))
                  (rule "true_left" (formula "23"))
                  (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                  (rule "leq_literals" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "arrayLengthNotNegative" (formula "22") (term "0"))
                  (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                  (rule "qeq_literals" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "arrayLengthNotNegative" (formula "21") (term "0"))
                  (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                  (rule "qeq_literals" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "arrayLengthIsAShort" (formula "21") (term "0"))
                  (rule "expand_inShort" (formula "21"))
                  (rule "replace_short_MAX" (formula "21") (term "1,0"))
                  (rule "replace_short_MIN" (formula "21") (term "0,1"))
                  (rule "andLeft" (formula "21"))
                  (rule "inEqSimp_commuteLeq" (formula "22"))
                  (rule "applyEq" (formula "22") (term "0") (ifseqformula "23"))
                  (rule "qeq_literals" (formula "22"))
                  (rule "true_left" (formula "22"))
                  (rule "applyEq" (formula "21") (term "0") (ifseqformula "22"))
                  (rule "leq_literals" (formula "21"))
                  (rule "closeFalse" (formula "21"))
               )
            )
         )
      )
      (branch "Exceptional Post (num_buckets)"
          (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "12")))
         (rule "andLeft" (formula "22"))
         (rule "andLeft" (formula "22"))
         (rule "notLeft" (formula "22"))
         (rule "close" (formula "24") (ifseqformula "23"))
      )
      (branch "Pre (num_buckets)"
          (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "12")) (ifInst ""  (formula "1")) (ifInst ""  (formula "8")))
         (rule "closeTrue" (formula "71"))
      )
      (branch "Null reference (_classifier = null)"
          (builtin "One Step Simplification" (formula "71") (ifInst ""  (formula "68")))
         (rule "closeTrue" (formula "71"))
      )
   )
   (branch "Null Reference (_storage = null)"
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "Null Reference (_storage = null)"
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "68")))
   (rule "closeFalse" (formula "1"))
)
)
}
