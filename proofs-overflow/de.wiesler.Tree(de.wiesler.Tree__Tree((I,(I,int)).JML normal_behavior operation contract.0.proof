\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Jun 02 20:14:56 CEST 2022
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , finalFields-finalFields\\:onHeap , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsCheckingOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Thu Jun 02 20:14:56 CEST 2022
contract=de.wiesler.Tree[de.wiesler.Tree\\:\\:Tree([I,[I,int)].JML normal_behavior operation contract.0
name=de.wiesler.Tree[de.wiesler.Tree\\:\\:Tree([I,[I,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))

(autoModeTime "525")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre_0,o,f"))
(rule "expand_inInt" (formula "1") (term "1,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,1,0,0,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "4"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "12"))
(rule "translateJavaSubInt" (formula "11") (term "3,0"))
(rule "replace_known_right" (formula "3") (term "0") (ifseqformula "14"))
 (builtin "One Step Simplification" (formula "3"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "15"))
 (builtin "One Step Simplification" (formula "2"))
(rule "polySimp_elimSub" (formula "11") (term "3,0"))
(rule "mul_literals" (formula "11") (term "1,3,0"))
(rule "polySimp_addComm0" (formula "11") (term "3,0"))
(rule "disjointDefinition" (formula "13"))
 (builtin "One Step Simplification" (formula "13"))
(rule "notLeft" (formula "13"))
(rule "eqSymm" (formula "13"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "10"))
(rule "inEqSimp_commuteLeq" (formula "9"))
(rule "inEqSimp_commuteLeq" (formula "5"))
(rule "inEqSimp_commuteLeq" (formula "12"))
(rule "assignment" (formula "16") (term "1"))
 (builtin "One Step Simplification" (formula "16"))
(rule "variableDeclarationAssign" (formula "16") (term "1"))
(rule "variableDeclaration" (formula "16") (term "1") (newnames "self_207"))
(rule "arrayLengthNotNegative" (formula "10") (term "0"))
(rule "arrayLengthIsAShort" (formula "11") (term "0"))
(rule "expand_inShort" (formula "11"))
(rule "replace_short_MAX" (formula "11") (term "1,0"))
(rule "replace_short_MIN" (formula "11") (term "0,1"))
(rule "andLeft" (formula "11"))
(rule "inEqSimp_commuteLeq" (formula "12"))
(rule "arrayLengthIsAShort" (formula "15") (term "0"))
(rule "expand_inShort" (formula "15"))
(rule "replace_short_MIN" (formula "15") (term "0,1"))
(rule "replace_short_MAX" (formula "15") (term "1,0"))
(rule "andLeft" (formula "15"))
(rule "inEqSimp_commuteLeq" (formula "16"))
(rule "arrayLengthNotNegative" (formula "17") (term "0"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "22") (term "1") (inst "#v0=t"))
(rule "variableDeclaration" (formula "22") (term "1") (newnames "t"))
(rule "methodBodyExpand" (formula "22") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
 (builtin "One Step Simplification" (formula "22"))
(rule "variableDeclaration" (formula "22") (term "1") (newnames "__NEW__"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "22") (term "1") (inst "#v0=t_1"))
(rule "variableDeclaration" (formula "22") (term "1") (newnames "t_1"))
(rule "allocateInstance" (formula "22"))
 (builtin "One Step Simplification" (formula "23"))
 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "blockEmpty" (formula "25") (term "1"))
(rule "assignment" (formula "25") (term "1"))
 (builtin "One Step Simplification" (formula "25"))
(rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
 (builtin "One Step Simplification" (formula "25"))
(rule "assignment_write_attribute_this" (formula "25"))
 (builtin "One Step Simplification" (formula "25"))
(rule "methodCallWithinClass" (formula "25") (term "1"))
(rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
 (builtin "One Step Simplification" (formula "25"))
(rule "methodCallSuper" (formula "25") (term "1"))
(rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
 (builtin "One Step Simplification" (formula "25"))
(rule "methodCallEmpty" (formula "25") (term "1"))
(rule "blockEmpty" (formula "25") (term "1"))
(rule "assignment_write_attribute_this" (formula "25"))
 (builtin "One Step Simplification" (formula "25"))
(rule "assignment_write_attribute_this" (formula "25"))
 (builtin "One Step Simplification" (formula "25"))
(rule "assignment_write_attribute_this" (formula "25"))
 (builtin "One Step Simplification" (formula "25"))
(rule "assignment_write_attribute_this" (formula "25"))
 (builtin "One Step Simplification" (formula "25"))
(rule "methodCallEmpty" (formula "25") (term "1"))
(rule "blockEmpty" (formula "25") (term "1"))
(rule "methodCallReturnIgnoreResult" (formula "25") (term "1"))
(rule "methodCallReturn" (formula "25") (term "1"))
(rule "assignment" (formula "25") (term "1"))
 (builtin "One Step Simplification" (formula "25"))
(rule "methodCallEmpty" (formula "25") (term "1"))
(rule "blockEmpty" (formula "25") (term "1"))
(rule "assignment" (formula "25") (term "1"))
 (builtin "One Step Simplification" (formula "25"))
(rule "blockEmpty" (formula "25") (term "1"))
(rule "variableDeclarationAssign" (formula "25") (term "1"))
(rule "variableDeclaration" (formula "25") (term "1") (newnames "var"))
(rule "assignment" (formula "25") (term "1"))
 (builtin "One Step Simplification" (formula "25"))
(rule "variableDeclarationAssign" (formula "25") (term "1"))
(rule "variableDeclaration" (formula "25") (term "1") (newnames "var_1"))
(rule "assignment" (formula "25") (term "1"))
 (builtin "One Step Simplification" (formula "25"))
(rule "variableDeclarationAssign" (formula "25") (term "1"))
(rule "variableDeclaration" (formula "25") (term "1") (newnames "var_2"))
(rule "assignment" (formula "25") (term "1"))
 (builtin "One Step Simplification" (formula "25"))
(rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
 (builtin "One Step Simplification" (formula "25"))
(rule "methodCallSuper" (formula "25") (term "1"))
(rule "methodBodyExpand" (formula "25") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
 (builtin "One Step Simplification" (formula "25"))
(rule "methodCallEmpty" (formula "25") (term "1"))
(rule "blockEmpty" (formula "25") (term "1"))
(rule "eval_order_access4_this" (formula "25") (term "1") (inst "#v1=x"))
(rule "variableDeclarationAssign" (formula "25") (term "1"))
(rule "variableDeclaration" (formula "25") (term "1") (newnames "x"))
(rule "assignmentShiftLeftInt" (formula "25") (term "1"))
 (builtin "One Step Simplification" (formula "25"))
(rule "assignment_write_attribute_this" (formula "25"))
 (builtin "One Step Simplification" (formula "25"))
(rule "assignment_write_attribute_this" (formula "25"))
 (builtin "One Step Simplification" (formula "25"))
(rule "variableDeclarationFinalAssign" (formula "25") (term "1"))
(rule "variableDeclarationFinal" (formula "25") (term "1") (newnames "num_buckets"))
(rule "assignmentShiftLeftInt" (formula "25") (term "1"))
 (builtin "One Step Simplification" (formula "25"))
(rule "variableDeclarationFinalAssign" (formula "25") (term "1"))
(rule "variableDeclarationFinal" (formula "25") (term "1") (newnames "num_splitters"))
(rule "assignmentSubtractionInt" (formula "25") (term "1"))
(branch "Overflow check"
    (builtin "One Step Simplification" (formula "25"))
   (rule "expand_inInt" (formula "25"))
   (rule "replace_int_MIN" (formula "25") (term "0,1"))
   (rule "replace_int_MAX" (formula "25") (term "1,0"))
   (rule "polySimp_elimSub" (formula "25") (term "1,1"))
   (rule "mul_literals" (formula "25") (term "1,1,1"))
   (rule "polySimp_elimSub" (formula "25") (term "0,0"))
   (rule "mul_literals" (formula "25") (term "1,0,0"))
   (rule "polySimp_addComm0" (formula "25") (term "1,1"))
   (rule "polySimp_addComm0" (formula "25") (term "0,0"))
   (rule "inEqSimp_homoInEq0" (formula "25") (term "1"))
   (rule "mul_literals" (formula "25") (term "1,0,1"))
   (rule "polySimp_addComm1" (formula "25") (term "0,1"))
   (rule "add_literals" (formula "25") (term "0,0,1"))
   (rule "inEqSimp_homoInEq0" (formula "25") (term "0"))
   (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
   (rule "mul_literals" (formula "25") (term "0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "25") (term "0,0"))
   (rule "add_literals" (formula "25") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1"))
   (rule "mul_literals" (formula "25") (term "1,1"))
   (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "0"))
   (rule "polySimp_mulLiterals" (formula "25") (term "0,0"))
   (rule "polySimp_elimOne" (formula "25") (term "0,0"))
   (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "11"))
   (rule "leq_literals" (formula "13") (term "0"))
    (builtin "One Step Simplification" (formula "13"))
   (rule "true_left" (formula "13"))
   (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "17"))
   (rule "leq_literals" (formula "16") (term "0"))
    (builtin "One Step Simplification" (formula "16"))
   (rule "true_left" (formula "16"))
   (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "9"))
   (rule "leq_literals" (formula "5") (term "0"))
    (builtin "One Step Simplification" (formula "5"))
   (rule "true_left" (formula "5"))
   (rule "inEqSimp_subsumption1" (formula "22") (term "1") (ifseqformula "9"))
   (rule "leq_literals" (formula "22") (term "0,1"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "inEqSimp_leqRight" (formula "22"))
   (rule "mul_literals" (formula "1") (term "1,0,0"))
   (rule "add_literals" (formula "1") (term "0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
   (rule "mul_literals" (formula "1") (term "1"))
   (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "8"))
   (rule "leq_literals" (formula "6") (term "0"))
    (builtin "One Step Simplification" (formula "6"))
   (rule "true_left" (formula "6"))
   (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "1"))
   (rule "leq_literals" (formula "9") (term "0"))
    (builtin "One Step Simplification" (formula "9"))
   (rule "true_left" (formula "9"))
   (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "10"))
   (rule "polySimp_mulComm0" (formula "11") (term "0,0"))
   (rule "polySimp_addComm0" (formula "11") (term "0"))
   (rule "inEqSimp_sepNegMonomial1" (formula "11"))
   (rule "polySimp_mulLiterals" (formula "11") (term "0"))
   (rule "polySimp_elimOne" (formula "11") (term "0"))
   (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "1"))
   (rule "qeq_literals" (formula "11") (term "0"))
    (builtin "One Step Simplification" (formula "11"))
   (rule "closeFalse" (formula "11"))
)
(branch "Usage"
    (builtin "One Step Simplification" (formula "25"))
    (builtin "Block Contract (Internal)" (formula "25") (newnames "exc_207,heap_Before_BLOCK,savedHeap_Before_BLOCK,o,f"))
   (branch "Validity"
       (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "7")) (ifInst ""  (formula "22")) (ifInst ""  (formula "1")))
       (builtin "One Step Simplification" (formula "26"))
      (rule "andLeft" (formula "20"))
      (rule "eqSymm" (formula "27") (term "0,0,1,0,1"))
      (rule "dismissNonSelectedField" (formula "21") (term "0"))
      (rule "dismissNonSelectedField" (formula "21") (term "0"))
      (rule "dismissNonSelectedField" (formula "21") (term "0"))
      (rule "dismissNonSelectedField" (formula "21") (term "0"))
      (rule "dismissNonSelectedField" (formula "21") (term "0"))
      (rule "variableDeclarationAssign" (formula "27") (term "1"))
      (rule "variableDeclaration" (formula "27") (term "1") (newnames "exc_207_1"))
      (rule "assignment" (formula "27") (term "1"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "emptyStatement" (formula "27") (term "1"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "emptyStatement" (formula "27") (term "1"))
      (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=java_lang_Object_created__0"))
      (rule "simplifySelectOfCreate" (formula "21"))
       (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "24")))
      (rule "castDel" (formula "21") (term "0"))
      (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "21"))
       (builtin "One Step Simplification" (formula "22"))
      (rule "true_left" (formula "22"))
      (rule "hideAuxiliaryEq" (formula "21"))
      (rule "tryEmpty" (formula "26") (term "1"))
      (rule "blockEmptyLabel" (formula "26") (term "1"))
      (rule "blockEmpty" (formula "26") (term "1"))
      (rule "methodCallEmpty" (formula "26") (term "1"))
       (builtin "One Step Simplification" (formula "26"))
      (rule "emptyModality" (formula "26") (term "1"))
      (rule "andRight" (formula "26"))
      (branch
          (builtin "One Step Simplification" (formula "26"))
         (rule "closeTrue" (formula "26"))
      )
      (branch
          (builtin "One Step Simplification" (formula "26"))
         (rule "closeTrue" (formula "26"))
      )
   )
   (branch "Precondition"
      (rule "andRight" (formula "25"))
      (branch
         (rule "andRight" (formula "25"))
         (branch
             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "7")))
            (rule "closeTrue" (formula "25"))
         )
         (branch
             (builtin "One Step Simplification" (formula "25"))
            (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "8"))
            (rule "leq_literals" (formula "6") (term "0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "true_left" (formula "6"))
            (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "10"))
            (rule "leq_literals" (formula "12") (term "0"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "16"))
            (rule "leq_literals" (formula "15") (term "0"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "true_left" (formula "15"))
            (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "8"))
            (rule "leq_literals" (formula "5") (term "0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "wellFormedStoreObject" (formula "21"))
             (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "20")))
            (rule "wellFormedStorePrimitive" (formula "21") (term "0"))
            (rule "wellFormedStorePrimitive" (formula "21") (term "0"))
            (rule "dismissNonSelectedField" (formula "21") (term "0,1"))
            (rule "dismissNonSelectedField" (formula "21") (term "0,1"))
            (rule "dismissNonSelectedField" (formula "21") (term "0,1"))
            (rule "dismissNonSelectedField" (formula "21") (term "0,1"))
            (rule "wellFormedStoreObject" (formula "21") (term "0"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "wellFormedStorePrimitive" (formula "21") (term "0"))
            (rule "wellFormedCreate" (formula "21") (term "0"))
            (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "2"))
             (builtin "One Step Simplification" (formula "21"))
            (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=java_lang_Object_created__0"))
            (rule "simplifySelectOfCreate" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "21"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
            (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
            (rule "close" (formula "22") (ifseqformula "4"))
         )
      )
      (branch
         (rule "andRight" (formula "25"))
         (branch
            (rule "andRight" (formula "25"))
            (branch
                (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "21")))
               (rule "closeTrue" (formula "25"))
            )
            (branch
                (builtin "One Step Simplification" (formula "25"))
               (rule "dismissNonSelectedField" (formula "25") (term "0"))
               (rule "dismissNonSelectedField" (formula "25") (term "0"))
               (rule "dismissNonSelectedField" (formula "25") (term "0"))
               (rule "dismissNonSelectedField" (formula "25") (term "0"))
               (rule "dismissNonSelectedField" (formula "25") (term "0"))
               (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "8"))
               (rule "leq_literals" (formula "6") (term "0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "true_left" (formula "6"))
               (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "17"))
               (rule "leq_literals" (formula "16") (term "0"))
                (builtin "One Step Simplification" (formula "16"))
               (rule "true_left" (formula "16"))
               (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "8"))
               (rule "leq_literals" (formula "5") (term "0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "9"))
               (rule "leq_literals" (formula "11") (term "0"))
                (builtin "One Step Simplification" (formula "11"))
               (rule "true_left" (formula "11"))
               (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=java_lang_Object_created__0"))
               (rule "simplifySelectOfCreate" (formula "1"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
               (rule "castDel" (formula "1") (term "0"))
               (rule "applyEqReverse" (formula "22") (term "0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "22"))
               (rule "closeTrue" (formula "22"))
            )
         )
         (branch
             (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "1")))
            (rule "closeTrue" (formula "25"))
         )
      )
   )
   (branch "Usage"
       (builtin "One Step Simplification" (formula "26"))
       (builtin "One Step Simplification" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "20"))
      (rule "andLeft" (formula "22"))
      (rule "translateJavaSubInt" (formula "29") (term "0,1,0"))
      (rule "replace_known_left" (formula "21") (term "0") (ifseqformula "20"))
       (builtin "One Step Simplification" (formula "21"))
      (rule "true_left" (formula "21"))
      (rule "polySimp_elimSub" (formula "28") (term "0,1,0"))
      (rule "mul_literals" (formula "28") (term "1,0,1,0"))
      (rule "polySimp_addComm0" (formula "28") (term "0,1,0"))
      (rule "inEqSimp_commuteLeq" (formula "21"))
      (rule "inEqSimp_commuteLeq" (formula "22"))
      (rule "elim_double_block_2" (formula "27") (term "1"))
      (rule "ifUnfold" (formula "27") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "27") (term "1") (newnames "x_1"))
      (rule "inequality_comparison_simple" (formula "27") (term "1"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "replace_known_left" (formula "27") (term "0,0,1,0") (ifseqformula "20"))
       (builtin "One Step Simplification" (formula "27"))
      (rule "ifSplit" (formula "27"))
      (branch "if x_1 true"
          (builtin "One Step Simplification" (formula "28"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x_1 false"
          (builtin "One Step Simplification" (formula "28"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "blockEmpty" (formula "27") (term "1"))
         (rule "assignment_write_attribute_this" (formula "27"))
          (builtin "One Step Simplification" (formula "27"))
         (rule "assignment_write_attribute_this" (formula "27"))
          (builtin "One Step Simplification" (formula "27"))
          (builtin "Use Operation Contract" (formula "27") (newnames "heapBefore_build,exc_208,heapAfter_build,anon_heap_build") (contract "de.wiesler.Tree[de.wiesler.Tree::build(int,[I,int,int)].JML normal_behavior operation contract.0"))
         (branch "Post (build)"
             (builtin "One Step Simplification" (formula "23"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "andLeft" (formula "23"))
            (rule "dismissNonSelectedField" (formula "23") (term "1,2,1,0"))
            (rule "pullOutSelect" (formula "23") (term "0,1,0") (inst "selectSK=de_wiesler_Tree_tree_0"))
            (rule "simplifySelectOfStore" (formula "23"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "castDel" (formula "23") (term "0"))
            (rule "applyEqReverse" (formula "24") (term "0,1,0") (ifseqformula "23"))
            (rule "hideAuxiliaryEq" (formula "23"))
            (rule "pullOutSelect" (formula "23") (term "1,2,1,0") (inst "selectSK=de_wiesler_Tree_log_buckets_0"))
            (rule "simplifySelectOfStore" (formula "23"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "castDel" (formula "23") (term "0"))
            (rule "applyEqReverse" (formula "24") (term "1,2,1,0") (ifseqformula "23"))
            (rule "hideAuxiliaryEq" (formula "23"))
            (rule "methodCallEmpty" (formula "30") (term "1"))
            (rule "blockEmpty" (formula "30") (term "1"))
            (rule "assignment_write_attribute" (formula "30"))
            (branch "Normal Execution (self_207 != null)"
                (builtin "One Step Simplification" (formula "30"))
               (rule "tryEmpty" (formula "30") (term "1"))
               (rule "emptyModality" (formula "30") (term "1"))
               (rule "andRight" (formula "30"))
               (branch
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "9"))
                  (rule "leq_literals" (formula "5") (term "0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "7"))
                  (rule "leq_literals" (formula "5") (term "0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "19"))
                  (rule "leq_literals" (formula "8") (term "0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "15"))
                  (rule "leq_literals" (formula "14") (term "0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "true_left" (formula "14"))
                  (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "8"))
                  (rule "leq_literals" (formula "10") (term "0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "12"))
                  (rule "polySimp_mulComm0" (formula "14") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "14") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                  (rule "polySimp_elimOne" (formula "14") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "9"))
                  (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "10") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                  (rule "polySimp_elimOne" (formula "10") (term "0"))
                  (rule "Definition_axiom_for_isSortedSliceTransitive_in_de_wiesler_Functions" (formula "11") (term "0") (inst "i=i") (inst "j=j"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "expand_inInt" (formula "11") (term "1,0,0"))
                  (rule "expand_inInt" (formula "11") (term "1,0,0,1,0"))
                  (rule "replace_int_MIN" (formula "11") (term "0,1,1,0,0"))
                  (rule "replace_int_MAX" (formula "11") (term "1,0,1,0,0"))
                  (rule "replace_int_MIN" (formula "11") (term "0,1,1,0,0,1,0"))
                  (rule "replace_int_MAX" (formula "11") (term "1,0,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0,1,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "11") (term "1,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "11") (term "1,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "11") (term "1,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0,1,0"))
                  (rule "nnf_imp2or" (formula "11") (term "0"))
                  (rule "nnf_notAnd" (formula "11") (term "0,0"))
                  (rule "nnf_imp2or" (formula "11") (term "0,1,0"))
                  (rule "nnf_notAnd" (formula "11") (term "0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,0"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "11") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "11") (term "1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "11") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,1,1,0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "11") (term "1,1,1,0,0"))
                  (rule "inEqSimp_notLeq" (formula "11") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0,1,0,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "11") (term "1,0,1,0,0"))
                  (rule "nnf_notAnd" (formula "11") (term "0,0,1,0"))
                  (rule "nnf_notAnd" (formula "11") (term "0,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0,0,1,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,0,1,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,0,0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,0,1,0"))
                  (rule "nnf_notAnd" (formula "11") (term "1,0,0,1,0"))
                  (rule "inEqSimp_notGeq" (formula "11") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,1,1,0,0,1,0"))
                  (rule "add_literals" (formula "11") (term "0,0,1,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "11") (term "1,1,1,0,0,1,0"))
                  (rule "inEqSimp_notLeq" (formula "11") (term "0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "11") (term "1,0,0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "11") (term "0,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "0,1,0,0,1,0"))
                  (rule "mul_literals" (formula "11") (term "1,0,1,0,0,1,0"))
                  (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "26"))
                  (rule "dismissNonSelectedField" (formula "26") (term "0,0,1"))
                  (rule "dismissNonSelectedField" (formula "26") (term "0,0,0"))
                  (rule "pullOutSelect" (formula "26") (term "0,0,1") (inst "selectSK=de_wiesler_Tree_tree_1"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
                  (rule "replaceKnownSelect_taclet0121_0" (formula "1") (term "2,0"))
                  (rule "replaceKnownAuxiliaryConstant_taclet0121_1" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "pullOutSelect" (formula "27") (term "0,0,0") (inst "selectSK=de_wiesler_Tree_sorted_splitters_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "21"))
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "24")))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "2,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                  (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "ifthenelse_negated" (formula "1") (term "0"))
                  (rule "pullOutSelect" (formula "2") (term "0,0,0") (inst "selectSK=java_lang_Object_created__0"))
                  (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "2"))
                  (rule "simplifySelectOfCreate" (formula "2"))
                   (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "25")))
                  (rule "castDel" (formula "2") (term "0"))
                  (rule "applyEqReverse" (formula "3") (term "0,0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "3"))
                  (rule "applyEqReverse" (formula "1") (term "0,0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "simplifySelectOfStore" (formula "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "castDel" (formula "1") (term "0"))
                  (rule "applyEqReverse" (formula "29") (term "0,0,1") (ifseqformula "3"))
                  (rule "applyEqReverse" (formula "29") (term "0,0,0") (ifseqformula "1"))
                  (rule "hideAuxiliaryEq" (formula "2"))
                  (rule "hideAuxiliaryEq" (formula "2"))
                  (rule "hideAuxiliaryEq" (formula "1"))
                  (rule "replace_known_right" (formula "26") (term "0,0") (ifseqformula "25"))
                   (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "24")))
                  (rule "closeTrue" (formula "26"))
               )
               (branch
                   (builtin "One Step Simplification" (formula "30"))
                  (rule "closeTrue" (formula "30"))
               )
            )
            (branch "Null Reference (self_207 = null)"
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "27")))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "Exceptional Post (build)"
             (builtin "One Step Simplification" (formula "23"))
             (builtin "One Step Simplification" (formula "29"))
            (rule "andLeft" (formula "23"))
            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "1,0") (ifseqformula "23"))
            (rule "andLeft" (formula "24"))
            (rule "andLeft" (formula "24"))
            (rule "notLeft" (formula "24"))
            (rule "close" (formula "26") (ifseqformula "25"))
         )
         (branch "Pre (build)"
             (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "26")) (ifInst ""  (formula "26")))
            (rule "expand_inInt" (formula "27") (term "1,0,0"))
            (rule "expand_inInt" (formula "27") (term "1,0,0,0,0"))
            (rule "expand_inInt" (formula "27") (term "1,0"))
            (rule "replace_int_MAX" (formula "27") (term "1,0,1,0,0"))
            (rule "replace_int_MIN" (formula "27") (term "0,1,1,0,0"))
            (rule "replace_int_MAX" (formula "27") (term "1,0,1,0,0,0,0"))
            (rule "replace_int_MIN" (formula "27") (term "0,1,1,0,0,0,0"))
            (rule "replace_int_MIN" (formula "27") (term "0,1,1,0"))
            (rule "replace_int_MAX" (formula "27") (term "1,0,1,0"))
            (rule "leq_literals" (formula "27") (term "0,1,0,0"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "leq_literals" (formula "27") (term "0,1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "leq_literals" (formula "27") (term "1,0,0,0,0"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "leq_literals" (formula "27") (term "1,0,0"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "translateJavaSubInt" (formula "27") (term "0,1"))
            (rule "polySimp_elimSub" (formula "27") (term "0,1"))
            (rule "times_zero_2" (formula "27") (term "1,0,1"))
            (rule "add_zero_right" (formula "27") (term "0,1"))
            (rule "dismissNonSelectedField" (formula "27") (term "0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "27") (term "0,1,0,0"))
            (rule "measuredByCheckEmpty" (formula "27") (term "1") (ifseqformula "7"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "dismissNonSelectedField" (formula "27") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "27") (term "0,1,0"))
            (rule "dismissNonSelectedField" (formula "27") (term "0,1,0"))
            (rule "inEqSimp_homoInEq0" (formula "27") (term "0,1"))
            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1"))
            (rule "mul_literals" (formula "27") (term "0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
            (rule "add_literals" (formula "27") (term "0,0,0,1"))
            (rule "inEqSimp_homoInEq0" (formula "27") (term "1,1"))
            (rule "mul_literals" (formula "27") (term "1,0,1,1"))
            (rule "polySimp_addComm1" (formula "27") (term "0,1,1"))
            (rule "add_literals" (formula "27") (term "0,0,1,1"))
            (rule "inEqSimp_sepNegMonomial1" (formula "27") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "27") (term "0,0,1"))
            (rule "polySimp_elimOne" (formula "27") (term "0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,1"))
            (rule "mul_literals" (formula "27") (term "1,1,1"))
            (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "8"))
            (rule "leq_literals" (formula "6") (term "0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "true_left" (formula "6"))
            (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "10"))
            (rule "leq_literals" (formula "12") (term "0"))
             (builtin "One Step Simplification" (formula "12"))
            (rule "true_left" (formula "12"))
            (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "8"))
            (rule "leq_literals" (formula "5") (term "0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "15"))
            (rule "leq_literals" (formula "14") (term "0"))
             (builtin "One Step Simplification" (formula "14"))
            (rule "true_left" (formula "14"))
            (rule "inEqSimp_subsumption1" (formula "23") (term "1,1") (ifseqformula "17"))
            (rule "leq_literals" (formula "23") (term "0,1,1"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "17"))
            (rule "leq_literals" (formula "8") (term "0"))
             (builtin "One Step Simplification" (formula "8"))
            (rule "true_left" (formula "8"))
            (rule "wellFormedStoreObject" (formula "22") (term "0,0"))
             (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "20")))
            (rule "wellFormedStorePrimitive" (formula "22") (term "0,0,0"))
            (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,0"))
            (rule "dismissNonSelectedField" (formula "22") (term "0,1,0,0"))
            (rule "wellFormedStoreObject" (formula "22") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "21")))
            (rule "wellFormedStorePrimitive" (formula "22") (term "0,0,0,0"))
            (rule "wellFormedStorePrimitive" (formula "22") (term "0,0,0,0"))
            (rule "wellFormedCreate" (formula "22") (term "0,0,0,0"))
            (rule "replace_known_left" (formula "22") (term "0,0,0,0") (ifseqformula "2"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "dismissNonSelectedField" (formula "22") (term "0,0,0,0"))
            (rule "dismissNonSelectedField" (formula "22") (term "0,0,0,0"))
            (rule "pullOutSelect" (formula "22") (term "0,1,0") (inst "selectSK=java_lang_Object_created__0"))
            (rule "applyEq" (formula "23") (term "0,0,0,0") (ifseqformula "1"))
            (rule "simplifySelectOfCreate" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
            (rule "applyEqReverse" (formula "23") (term "0,1,0") (ifseqformula "1"))
            (rule "applyEqReverse" (formula "23") (term "0,0,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "replace_known_left" (formula "22") (term "1,0") (ifseqformula "3"))
             (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "3")))
            (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "12"))
            (rule "polySimp_mulComm0" (formula "14") (term "0,0"))
            (rule "polySimp_addComm0" (formula "14") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "14"))
            (rule "polySimp_mulLiterals" (formula "14") (term "0"))
            (rule "polySimp_elimOne" (formula "14") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "23") (term "1") (ifseqformula "14"))
            (rule "leq_literals" (formula "23") (term "0,1"))
             (builtin "One Step Simplification" (formula "23"))
            (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "9"))
            (rule "polySimp_mulComm0" (formula "10") (term "0,0"))
            (rule "polySimp_addComm0" (formula "10") (term "0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "10"))
            (rule "polySimp_mulLiterals" (formula "10") (term "0"))
            (rule "polySimp_elimOne" (formula "10") (term "0"))
            (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=java_lang_Object_created__1"))
            (rule "simplifySelectOfCreate" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
            (rule "castDel" (formula "1") (term "1,0"))
            (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
            (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "22"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "20")))
            (rule "applyEqReverse" (formula "24") (term "0") (ifseqformula "1"))
            (rule "close" (formula "24") (ifseqformula "5"))
         )
      )
   )
)
)
}
