\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Jun 05 14:06:18 CEST 2022
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , finalFields-finalFields\\:immutable , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsCheckingOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../src";

\proofObligation "#Proof Obligation Settings
#Sun Jun 05 14:06:18 CEST 2022
contract=de.wiesler.Classifier[de.wiesler.Classifier\\:\\:finish_batch([I,[I,int,int,int,int,[I,de.wiesler.Buffers)].JML normal_behavior operation contract.0
name=de.wiesler.Classifier[de.wiesler.Classifier\\:\\:finish_batch([I,[I,int,int,int,int,[I,de.wiesler.Buffers)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "1" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))

(autoModeTime "70852")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0,0,0,1,0,0,0"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0,0,1,0,0,0"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0,1,0,0,0"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0"))
(rule "expand_inInt" (formula "1") (term "1,0,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0,0,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0,0,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,1,0,0,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "notLeft" (formula "7"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "11"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "11"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "17"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "19"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "16"))
(rule "andLeft" (formula "24"))
(rule "andLeft" (formula "26"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "18"))
(rule "andLeft" (formula "28"))
(rule "andLeft" (formula "32"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "36"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "38"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "40"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "20"))
(rule "translateJavaAddInt" (formula "19") (term "1"))
(rule "eqSymm" (formula "41"))
(rule "translateJavaAddInt" (formula "47") (term "0"))
(rule "translateJavaSubInt" (formula "48") (term "0,0"))
(rule "translateJavaMod" (formula "49") (term "0"))
(rule "translateJavaAddInt" (formula "51") (term "0,2,2,0,1,0"))
(rule "translateJavaSubInt" (formula "49") (term "0,0"))
(rule "replace_known_right" (formula "15") (term "0") (ifseqformula "55"))
 (builtin "One Step Simplification" (formula "15"))
(rule "replace_known_right" (formula "14") (term "0") (ifseqformula "56"))
 (builtin "One Step Simplification" (formula "14"))
(rule "replace_known_right" (formula "5") (term "0") (ifseqformula "57"))
 (builtin "One Step Simplification" (formula "5"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "58"))
 (builtin "One Step Simplification" (formula "4"))
(rule "polySimp_elimSub" (formula "48") (term "0,0"))
(rule "polySimp_elimSub" (formula "49") (term "0,0"))
(rule "polySimp_addComm0" (formula "19") (term "1"))
(rule "disjointDefinition" (formula "40"))
 (builtin "One Step Simplification" (formula "40"))
(rule "notLeft" (formula "40"))
(rule "polySimp_addComm0" (formula "47") (term "0,0"))
(rule "polySimp_addComm0" (formula "48") (term "0,0"))
(rule "disjointDefinition" (formula "39"))
 (builtin "One Step Simplification" (formula "39"))
(rule "notLeft" (formula "39"))
(rule "disjointDefinition" (formula "38"))
 (builtin "One Step Simplification" (formula "38"))
(rule "notLeft" (formula "38"))
(rule "eqSymm" (formula "51"))
(rule "disjointDefinition" (formula "37"))
 (builtin "One Step Simplification" (formula "37"))
(rule "notLeft" (formula "37"))
(rule "disjointDefinition" (formula "36"))
 (builtin "One Step Simplification" (formula "36"))
(rule "notLeft" (formula "36"))
(rule "eqSymm" (formula "49"))
(rule "disjointDefinition" (formula "35"))
 (builtin "One Step Simplification" (formula "35"))
(rule "notLeft" (formula "35"))
(rule "eqSymm" (formula "48"))
(rule "disjointDefinition" (formula "34"))
 (builtin "One Step Simplification" (formula "34"))
(rule "notLeft" (formula "34"))
(rule "disjointDefinition" (formula "33"))
 (builtin "One Step Simplification" (formula "33"))
(rule "notLeft" (formula "33"))
(rule "eqSymm" (formula "46"))
(rule "disjointDefinition" (formula "32"))
 (builtin "One Step Simplification" (formula "32"))
(rule "notLeft" (formula "32"))
(rule "eqSymm" (formula "45"))
(rule "disjointDefinition" (formula "31"))
 (builtin "One Step Simplification" (formula "31"))
(rule "notLeft" (formula "31"))
(rule "eqSymm" (formula "44"))
(rule "disjointDefinition" (formula "30"))
 (builtin "One Step Simplification" (formula "30"))
(rule "notLeft" (formula "30"))
(rule "eqSymm" (formula "43"))
(rule "disjointDefinition" (formula "29"))
 (builtin "One Step Simplification" (formula "29"))
(rule "notLeft" (formula "29"))
(rule "eqSymm" (formula "42"))
(rule "disjointDefinition" (formula "28"))
 (builtin "One Step Simplification" (formula "28"))
(rule "notLeft" (formula "28"))
(rule "eqSymm" (formula "41"))
(rule "disjointDefinition" (formula "27"))
 (builtin "One Step Simplification" (formula "27"))
(rule "notLeft" (formula "27"))
(rule "eqSymm" (formula "40"))
(rule "disjointDefinition" (formula "26"))
 (builtin "One Step Simplification" (formula "26"))
(rule "notLeft" (formula "26"))
(rule "eqSymm" (formula "39"))
(rule "disjointDefinition" (formula "25"))
 (builtin "One Step Simplification" (formula "25"))
(rule "notLeft" (formula "25"))
(rule "disjointDefinition" (formula "24"))
 (builtin "One Step Simplification" (formula "24"))
(rule "notLeft" (formula "24"))
(rule "eqSymm" (formula "37"))
(rule "disjointDefinition" (formula "23"))
 (builtin "One Step Simplification" (formula "23"))
(rule "notLeft" (formula "23"))
(rule "eqSymm" (formula "36"))
(rule "disjointDefinition" (formula "22"))
 (builtin "One Step Simplification" (formula "22"))
(rule "notLeft" (formula "22"))
(rule "eqSymm" (formula "35"))
(rule "disjointDefinition" (formula "20"))
 (builtin "One Step Simplification" (formula "20"))
(rule "notLeft" (formula "20"))
(rule "disjointDefinition" (formula "20"))
 (builtin "One Step Simplification" (formula "20"))
(rule "notLeft" (formula "20"))
(rule "eqSymm" (formula "33"))
(rule "inEqSimp_commuteLeq" (formula "13"))
(rule "inEqSimp_commuteLeq" (formula "23"))
(rule "inEqSimp_commuteLeq" (formula "11"))
(rule "inEqSimp_commuteLeq" (formula "22"))
(rule "inEqSimp_commuteLeq" (formula "21"))
(rule "inEqSimp_commuteLeq" (formula "9"))
(rule "inEqSimp_commuteLeq" (formula "24"))
(rule "inEqSimp_commuteLeq" (formula "7"))
(rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "30") (term "1,1,0,0"))
(rule "assignment" (formula "59") (term "1"))
 (builtin "One Step Simplification" (formula "59"))
(rule "applyEq" (formula "19") (term "1,1") (ifseqformula "20"))
(rule "commute_and" (formula "30") (term "0,0,0"))
(rule "commute_and" (formula "30") (term "1,0,0"))
(rule "shift_paren_and" (formula "30") (term "0,0"))
(rule "commute_and_2" (formula "30") (term "0,0,0"))
(rule "methodBodyExpand" (formula "59") (term "1") (newnames "heapBefore_finish_batch,savedHeapBefore_finish_batch,_beginBefore_finish_batch,_bucket_startsBefore_finish_batch,_buffersBefore_finish_batch,_endBefore_finish_batch,_iBefore_finish_batch,_indicesBefore_finish_batch,_valuesBefore_finish_batch,_writeBefore_finish_batch,bucketBefore_finish_batch"))
 (builtin "One Step Simplification" (formula "59"))
(rule "variableDeclarationGhostAssign" (formula "59") (term "1"))
(rule "variableDeclarationGhost" (formula "59") (term "1") (newnames "old_write"))
(rule "assignment" (formula "59") (term "1"))
 (builtin "One Step Simplification" (formula "59"))
(rule "for_to_while" (formula "59") (term "1") (inst "#innerLabel=_label0") (inst "#outerLabel=_label1"))
(rule "variableDeclarationAssign" (formula "59") (term "1"))
(rule "variableDeclaration" (formula "59") (term "1") (newnames "j"))
(rule "assignment" (formula "59") (term "1"))
 (builtin "One Step Simplification" (formula "59"))
(rule "elim_double_block_3" (formula "59") (term "1"))
(rule "arrayLengthNotNegative" (formula "19") (term "0"))
(rule "arrayLengthIsAShort" (formula "20") (term "0"))
(rule "expand_inShort" (formula "20"))
(rule "replace_short_MIN" (formula "20") (term "0,1"))
(rule "replace_short_MAX" (formula "20") (term "1,0"))
(rule "andLeft" (formula "20"))
(rule "inEqSimp_commuteLeq" (formula "21"))
(rule "arrayLengthNotNegative" (formula "32") (term "0"))
(rule "arrayLengthIsAShort" (formula "33") (term "0"))
(rule "expand_inShort" (formula "33"))
(rule "replace_short_MIN" (formula "33") (term "0,1"))
(rule "replace_short_MAX" (formula "33") (term "1,0"))
(rule "andLeft" (formula "33"))
(rule "inEqSimp_commuteLeq" (formula "34"))
(rule "loopScopeInvDia" (formula "65") (term "1") (newnames "j_0,_write_0,o,f") (inst "anon_heap_LOOP=anon_heap_LOOP_0") (inst "anon_savedHeap_LOOP=anon_savedHeap_LOOP_0") (inst "anon_permissions_LOOP=anon_permissions_LOOP_0") (inst "#heapBefore_LOOP=h") (inst "#savedHeapBefore_LOOP=h_1") (inst "#permissionsBefore_LOOP=h_2") (inst "#variant=x") (inst "#x=x_1"))
(branch "Invariant Initially Valid"
   (rule "closeTrue" (formula "65"))
)
(branch "Invariant Preserved and Used"
    (builtin "One Step Simplification" (formula "66"))
   (rule "expand_inInt" (formula "66") (term "0,0,1,0,0"))
   (rule "replace_int_MIN" (formula "66") (term "0,1,0,0,1,0,0"))
   (rule "replace_int_MAX" (formula "66") (term "1,0,0,0,1,0,0"))
   (rule "impRight" (formula "66"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "3"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "2"))
   (rule "andLeft" (formula "1"))
   (rule "translateJavaSubInt" (formula "75") (term "2,1,0,0,1,0,1,0,1,0"))
   (rule "translateJavaSubInt" (formula "75") (term "2,0,0,0,1,0,1,0,1,0"))
   (rule "translateJavaSubInt" (formula "75") (term "0,1,1,0,1"))
   (rule "translateJavaSubInt" (formula "75") (term "2,1,0,1,0,1,0,1,0"))
   (rule "translateJavaSubInt" (formula "75") (term "2,1,1,0,1,0,1,0"))
   (rule "translateJavaSubInt" (formula "75") (term "0,1,1,0"))
   (rule "translateJavaSubInt" (formula "7") (term "2,1,1,0,1,1,0"))
   (rule "translateJavaSubInt" (formula "7") (term "2,0,0,0,1,0,1,1,0"))
   (rule "translateJavaSubInt" (formula "7") (term "2,1,0,1,0,1,1,0"))
   (rule "translateJavaAddInt" (formula "7") (term "4,1,1,0"))
   (rule "translateJavaSubInt" (formula "7") (term "2,1,0,0,1,0,1,1,0"))
   (rule "translateJavaMulInt" (formula "9") (term "0,2,1,0,0,1,0"))
   (rule "translateJavaSubInt" (formula "9") (term "2,1,0,1,0"))
   (rule "translateJavaMulInt" (formula "8") (term "0,2,1,0,0,1,0"))
   (rule "translateJavaSubInt" (formula "8") (term "2,0,0,0,1,0"))
   (rule "translateJavaSubInt" (formula "9") (term "2,1,1,0"))
   (rule "translateJavaSubInt" (formula "8") (term "2,1,1,0"))
   (rule "translateJavaSubInt" (formula "8") (term "2,1,0,1,0"))
   (rule "translateJavaSubInt" (formula "9") (term "2,0,0,0,1,0"))
   (rule "translateJavaAddInt" (formula "6") (term "5,0"))
   (rule "translateJavaSubInt" (formula "6") (term "2,1,0,0,1,0,0"))
   (rule "translateJavaSubInt" (formula "6") (term "2,1,0,1,0,0"))
   (rule "translateJavaSubInt" (formula "6") (term "2,1,1,0,0"))
   (rule "translateJavaSubInt" (formula "6") (term "2,0,0,0,1,0,0"))
   (rule "translateJavaSubInt" (formula "5") (term "0,0"))
   (rule "translateJavaMulInt" (formula "75") (term "0,2,1,0,0,1,0,1,0,1,0"))
   (rule "eqSymm" (formula "7") (term "1,0"))
   (rule "translateJavaSubInt" (formula "9") (term "2,1,0,0,1,0"))
   (rule "translateJavaSubInt" (formula "8") (term "2,1,0,0,1,0"))
   (rule "translateJavaMulInt" (formula "6") (term "0,2,1,0,0,1,0,0"))
   (rule "translateJavaMulInt" (formula "7") (term "0,2,1,0,0,1,0,0,1,0"))
   (rule "polySimp_elimSub" (formula "75") (term "2,0,0,0,1,0,1,0,1,0"))
   (rule "mul_literals" (formula "75") (term "1,2,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_elimSub" (formula "75") (term "0,1,1,0,1"))
   (rule "polySimp_elimSub" (formula "75") (term "2,1,0,1,0,1,0,1,0"))
   (rule "mul_literals" (formula "75") (term "1,2,1,0,1,0,1,0,1,0"))
   (rule "polySimp_elimSub" (formula "75") (term "2,1,1,0,1,0,1,0"))
   (rule "mul_literals" (formula "75") (term "1,2,1,1,0,1,0,1,0"))
   (rule "polySimp_elimSub" (formula "75") (term "0,1,1,0"))
   (rule "polySimp_elimSub" (formula "9") (term "2,1,0,1,0"))
   (rule "mul_literals" (formula "9") (term "1,2,1,0,1,0"))
   (rule "polySimp_elimSub" (formula "8") (term "2,0,0,0,1,0"))
   (rule "mul_literals" (formula "8") (term "1,2,0,0,0,1,0"))
   (rule "polySimp_elimSub" (formula "9") (term "2,1,1,0"))
   (rule "mul_literals" (formula "9") (term "1,2,1,1,0"))
   (rule "polySimp_elimSub" (formula "8") (term "2,1,1,0"))
   (rule "mul_literals" (formula "8") (term "1,2,1,1,0"))
   (rule "polySimp_elimSub" (formula "8") (term "2,1,0,1,0"))
   (rule "mul_literals" (formula "8") (term "1,2,1,0,1,0"))
   (rule "polySimp_elimSub" (formula "9") (term "2,0,0,0,1,0"))
   (rule "mul_literals" (formula "9") (term "1,2,0,0,0,1,0"))
   (rule "polySimp_elimSub" (formula "6") (term "2,1,0,1,0,0"))
   (rule "mul_literals" (formula "6") (term "1,2,1,0,1,0,0"))
   (rule "polySimp_elimSub" (formula "6") (term "2,1,1,0,0"))
   (rule "mul_literals" (formula "6") (term "1,2,1,1,0,0"))
   (rule "polySimp_elimSub" (formula "6") (term "2,0,0,0,1,0,0"))
   (rule "mul_literals" (formula "6") (term "1,2,0,0,0,1,0,0"))
   (rule "polySimp_elimSub" (formula "5") (term "0,0"))
   (rule "polySimp_elimSub" (formula "75") (term "2,1,0,0,1,0,1,0,1,0"))
   (rule "mul_literals" (formula "75") (term "1,2,1,0,0,1,0,1,0,1,0"))
   (rule "polySimp_elimSub" (formula "7") (term "2,1,1,0,0,1,0"))
   (rule "mul_literals" (formula "7") (term "1,2,1,1,0,0,1,0"))
   (rule "polySimp_elimSub" (formula "7") (term "2,0,0,0,1,0,0,1,0"))
   (rule "mul_literals" (formula "7") (term "1,2,0,0,0,1,0,0,1,0"))
   (rule "polySimp_elimSub" (formula "7") (term "2,1,0,1,0,0,1,0"))
   (rule "mul_literals" (formula "7") (term "1,2,1,0,1,0,0,1,0"))
   (rule "polySimp_elimSub" (formula "9") (term "2,1,0,0,1,0"))
   (rule "mul_literals" (formula "9") (term "1,2,1,0,0,1,0"))
   (rule "polySimp_elimSub" (formula "8") (term "2,1,0,0,1,0"))
   (rule "mul_literals" (formula "8") (term "1,2,1,0,0,1,0"))
   (rule "polySimp_elimSub" (formula "6") (term "2,1,0,0,1,0,0"))
   (rule "mul_literals" (formula "6") (term "1,2,1,0,0,1,0,0"))
   (rule "polySimp_elimSub" (formula "7") (term "2,1,0,0,1,0,0,1,0"))
   (rule "mul_literals" (formula "7") (term "1,2,1,0,0,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "75") (term "0,2,1,0,0,1,0,1,0,1,0"))
   (rule "polySimp_mulComm0" (formula "9") (term "0,2,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "8") (term "0,2,1,0,0,1,0"))
   (rule "polySimp_mulComm0" (formula "6") (term "0,2,1,0,0,1,0,0"))
   (rule "polySimp_mulComm0" (formula "7") (term "0,2,1,0,0,1,0,0,1,0"))
   (rule "polySimp_addComm0" (formula "75") (term "2,0,0,0,1,0,1,0,1,0"))
   (rule "polySimp_addComm0" (formula "75") (term "0,1,1,0,1"))
   (rule "polySimp_addComm0" (formula "75") (term "2,1,0,1,0,1,0,1,0"))
   (rule "polySimp_addComm0" (formula "75") (term "2,1,1,0,1,0,1,0"))
   (rule "polySimp_addComm0" (formula "75") (term "0,1,1,0"))
   (rule "polySimp_addComm0" (formula "9") (term "2,1,0,1,0"))
   (rule "polySimp_addComm0" (formula "8") (term "2,0,0,0,1,0"))
   (rule "polySimp_addComm0" (formula "9") (term "2,1,1,0"))
   (rule "polySimp_addComm0" (formula "8") (term "2,1,1,0"))
   (rule "polySimp_addComm0" (formula "8") (term "2,1,0,1,0"))
   (rule "polySimp_addComm0" (formula "9") (term "2,0,0,0,1,0"))
   (rule "polySimp_addComm0" (formula "6") (term "2,1,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "6") (term "2,1,1,0,0"))
   (rule "polySimp_addComm0" (formula "6") (term "2,0,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "7") (term "2,1,1,0,0,1,0"))
   (rule "polySimp_addComm0" (formula "7") (term "2,0,0,0,1,0,0,1,0"))
   (rule "polySimp_addComm0" (formula "7") (term "2,1,0,1,0,0,1,0"))
   (rule "polySimp_addComm0" (formula "75") (term "2,1,0,0,1,0,1,0,1,0"))
   (rule "polySimp_addComm0" (formula "9") (term "2,1,0,0,1,0"))
   (rule "polySimp_addComm0" (formula "8") (term "2,1,0,0,1,0"))
   (rule "polySimp_addComm0" (formula "6") (term "2,1,0,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "7") (term "2,1,0,0,1,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "7") (term "1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "4"))
   (rule "inEqSimp_commuteLeq" (formula "2"))
   (rule "inEqSimp_commuteLeq" (formula "1"))
   (rule "variableDeclaration" (formula "75") (term "1") (newnames "x_1"))
   (rule "applyEq" (formula "6") (term "0,1,2,1,0,0,1,0,0") (ifseqformula "33"))
   (rule "applyEq" (formula "7") (term "0,1,2,1,0,0,1,0,0,1,0") (ifseqformula "33"))
   (rule "applyEq" (formula "9") (term "0,1,2,1,0,0,1,0") (ifseqformula "33"))
   (rule "applyEq" (formula "8") (term "0,1,2,1,0,0,1,0") (ifseqformula "33"))
   (rule "applyEq" (formula "7") (term "1,2,1,1,0,0,1,0") (ifseqformula "33"))
   (rule "applyEq" (formula "6") (term "1,2,1,1,0,0") (ifseqformula "33"))
   (rule "applyEq" (formula "7") (term "1,2,0,0,0,1,0,0,1,0") (ifseqformula "33"))
   (rule "applyEq" (formula "75") (term "1,2,1,1,0,1,0,1,0") (ifseqformula "33"))
   (rule "applyEq" (formula "75") (term "1,2,0,0,0,1,0,1,0,1,0") (ifseqformula "33"))
   (rule "applyEq" (formula "6") (term "1,2,0,0,0,1,0,0") (ifseqformula "33"))
   (rule "applyEq" (formula "9") (term "1,2,1,1,0") (ifseqformula "33"))
   (rule "applyEq" (formula "8") (term "1,2,0,0,0,1,0") (ifseqformula "33"))
   (rule "applyEq" (formula "75") (term "0,1,2,1,0,0,1,0,1,0,1,0") (ifseqformula "33"))
   (rule "applyEq" (formula "9") (term "1,2,0,0,0,1,0") (ifseqformula "33"))
   (rule "applyEq" (formula "8") (term "1,2,1,1,0") (ifseqformula "33"))
   (rule "commuteUnion_2" (formula "7") (term "1,0,0,1,0"))
   (rule "commuteUnion" (formula "6") (term "0,1,0,0"))
   (rule "commuteUnion" (formula "8") (term "0,0,1,0"))
   (rule "commuteUnion_2" (formula "75") (term "1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "9") (term "0,1,0"))
   (rule "commuteUnion_2" (formula "7") (term "0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "6") (term "1,0,0"))
   (rule "commuteUnion" (formula "8") (term "1,0"))
   (rule "commuteUnion_2" (formula "75") (term "0,1,0,1,0,1,0"))
   (rule "commuteUnion" (formula "9") (term "0,0,1,0"))
   (rule "commuteUnion" (formula "7") (term "0,0,1,0,0,1,0"))
   (rule "commuteUnion" (formula "6") (term "1,1,1,0,0"))
   (rule "commuteUnion" (formula "8") (term "1,1,0"))
   (rule "commuteUnion" (formula "75") (term "0,0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "9") (term "0,1,0"))
   (rule "commuteUnion_2" (formula "7") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "75") (term "0,1,0,1,0,1,0"))
   (rule "commuteUnion_2" (formula "9") (term "1,0"))
   (rule "commuteUnion_2" (formula "7") (term "0,1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "75") (term "1,0,1,0,1,0"))
   (rule "commuteUnion" (formula "9") (term "0,1,0"))
   (rule "commuteUnion_2" (formula "7") (term "1,0,0,1,0"))
   (rule "commuteUnion_2" (formula "75") (term "0,1,0,1,0,1,0"))
   (rule "commute_and" (formula "7") (term "0,0"))
   (rule "associativeLawUnion" (formula "8") (term "1,0"))
   (rule "associativeLawUnion" (formula "8") (term "1,0"))
   (rule "associativeLawUnion" (formula "6") (term "1,0,0"))
   (rule "arrayLengthNotNegative" (formula "36") (term "0"))
   (rule "arrayLengthIsAShort" (formula "37") (term "0"))
   (rule "expand_inShort" (formula "37"))
   (rule "replace_short_MIN" (formula "37") (term "0,1"))
   (rule "replace_short_MAX" (formula "37") (term "1,0"))
   (rule "andLeft" (formula "37"))
   (rule "inEqSimp_commuteLeq" (formula "38"))
   (rule "associativeLawUnion" (formula "9") (term "0,1,0"))
   (rule "associativeLawUnion" (formula "6") (term "1,0,0"))
   (rule "onlyCreatedObjectsAreReferencedFinal" (formula "72") (term "0,0") (ifseqformula "11") (ifseqformula "12"))
   (rule "onlyCreatedObjectsAreReferencedFinal" (formula "72") (term "0") (ifseqformula "12") (ifseqformula "13"))
   (rule "ifElseUnfold" (formula "80") (term "1") (inst "#boolv=x_2"))
   (rule "variableDeclaration" (formula "80") (term "1") (newnames "x_2"))
   (rule "compound_less_than_comparison_2" (formula "80") (term "1") (inst "#v0=x_3") (inst "#v1=x_4"))
   (rule "variableDeclarationAssign" (formula "80") (term "1"))
   (rule "variableDeclaration" (formula "80") (term "1") (newnames "x_3"))
   (rule "assignment" (formula "80") (term "1"))
    (builtin "One Step Simplification" (formula "80"))
   (rule "variableDeclarationAssign" (formula "80") (term "1"))
   (rule "variableDeclaration" (formula "80") (term "1") (newnames "x_4"))
   (rule "assignment_read_length" (formula "80"))
   (branch "Normal Execution (_indices != null)"
       (builtin "One Step Simplification" (formula "80"))
      (rule "less_than_comparison_simple" (formula "80") (term "1"))
       (builtin "One Step Simplification" (formula "80"))
      (rule "ifElseSplit" (formula "80"))
      (branch "if x_2 true"
          (builtin "One Step Simplification" (formula "81"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "variableDeclarationGhostAssign" (formula "81") (term "1"))
         (rule "variableDeclarationGhost" (formula "81") (term "1") (newnames "heapAtLoopBodyBegin"))
         (rule "assignment" (formula "81") (term "1"))
          (builtin "One Step Simplification" (formula "81"))
         (rule "variableDeclarationAssign" (formula "81") (term "1"))
         (rule "variableDeclaration" (formula "81") (term "1") (newnames "bucket"))
         (rule "assignment_array2" (formula "81"))
         (branch "Normal Execution (_indices != null)"
             (builtin "One Step Simplification" (formula "81"))
            (rule "pullOutSelect" (formula "81") (term "0,1,0") (inst "selectSK=arr_0"))
            (rule "simplifySelectOfAnon" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "81")) (ifInst ""  (formula "18")))
            (rule "variableDeclarationAssign" (formula "82") (term "1"))
            (rule "variableDeclaration" (formula "82") (term "1") (newnames "value"))
            (rule "eval_order_array_access5" (formula "82") (term "1") (inst "#ar1=x_arr") (inst "#v1=x_2"))
            (rule "variableDeclarationAssign" (formula "82") (term "1"))
            (rule "variableDeclaration" (formula "82") (term "1") (newnames "x_arr"))
            (rule "assignment" (formula "82") (term "1"))
             (builtin "One Step Simplification" (formula "82"))
            (rule "variableDeclarationAssign" (formula "82") (term "1"))
            (rule "variableDeclaration" (formula "82") (term "1") (newnames "x_5"))
            (rule "elementOfUnion" (formula "1") (term "0,0"))
            (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0,1,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "73"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfUnion" (formula "1") (term "0,0"))
            (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
            (rule "eqSymm" (formula "1") (term "0,0,1,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "70"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfUnion" (formula "1") (term "0,0"))
            (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "66"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
            (rule "eqSymm" (formula "1") (term "0,0,0,0"))
            (rule "replace_known_right" (formula "1") (term "0,0,0,0") (ifseqformula "61"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "applyEqReverse" (formula "82") (term "0,1,0,0") (ifseqformula "1"))
            (rule "hideAuxiliaryEq" (formula "1"))
            (rule "assignmentAdditionInt" (formula "81") (term "1"))
            (branch "Overflow check"
                (builtin "One Step Simplification" (formula "81"))
               (rule "expand_inInt" (formula "81") (userinteraction))
               (rule "andRight" (formula "81") (userinteraction))
               (branch "Case 1"
                  (rule "replace_int_MAX" (formula "81") (term "1"))
                  (rule "inEqSimp_leqRight" (formula "81"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "inEqSimp_homoInEq1" (formula "36"))
                  (rule "polySimp_addComm1" (formula "36") (term "0"))
                  (rule "inEqSimp_homoInEq0" (formula "46"))
                  (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "46") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "46") (term "0"))
                  (rule "jmod_axiom" (formula "48") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,0"))
                  (rule "polySimp_sepNegMonomial" (formula "48"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "36"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1"))
                  (rule "polySimp_rightDist" (formula "36") (term "1"))
                  (rule "mul_literals" (formula "36") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "46"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                  (rule "polySimp_elimOne" (formula "46") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "33"))
                  (rule "leq_literals" (formula "35") (term "0"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "true_left" (formula "35"))
                  (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "39"))
                  (rule "leq_literals" (formula "41") (term "0"))
                   (builtin "One Step Simplification" (formula "41"))
                  (rule "true_left" (formula "41"))
                  (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0"))
                  (rule "qeq_literals" (formula "6") (term "0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "inEqSimp_subsumption1" (formula "48") (ifseqformula "46"))
                  (rule "leq_literals" (formula "48") (term "0"))
                   (builtin "One Step Simplification" (formula "48"))
                  (rule "true_left" (formula "48"))
                  (rule "inEqSimp_subsumption0" (formula "47") (ifseqformula "48"))
                  (rule "leq_literals" (formula "47") (term "0"))
                   (builtin "One Step Simplification" (formula "47"))
                  (rule "true_left" (formula "47"))
                  (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "36"))
                  (rule "leq_literals" (formula "20") (term "0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "true_left" (formula "20"))
                  (rule "newSym_eq" (formula "44") (inst "newSymDef=add(mul(begin, Z(0(#))), mul(i, Z(0(#))))") (inst "l=l_0"))
                  (rule "times_zero_1" (formula "44") (term "1,1,1"))
                  (rule "times_zero_1" (formula "44") (term "0,1,1"))
                  (rule "add_zero_right" (formula "44") (term "1,1"))
                  (rule "add_zero_right" (formula "44") (term "1"))
                  (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "44"))
                  (rule "polySimp_homoEq" (formula "45"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "45") (term "0"))
                  (rule "polySimp_addComm0" (formula "45") (term "0,0"))
                  (rule "polySimp_sepPosMonomial" (formula "45"))
                  (rule "polySimp_mulComm0" (formula "45") (term "1"))
                  (rule "polySimp_rightDist" (formula "45") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "45") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "45") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "0,1"))
                  (rule "applyEq" (formula "41") (term "1") (ifseqformula "45"))
                  (rule "applyEq" (formula "22") (term "0") (ifseqformula "45"))
                  (rule "inEqSimp_homoInEq0" (formula "22"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                  (rule "polySimp_mulAssoc" (formula "22") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0"))
                  (rule "applyEq" (formula "11") (term "1,2,1,0,0,1,0") (ifseqformula "45"))
                  (rule "polySimp_addAssoc" (formula "11") (term "2,1,0,0,1,0"))
                  (rule "applyEq" (formula "49") (term "5,0") (ifseqformula "45"))
                  (rule "applyEq" (formula "12") (term "1,2,1,0,0,1,0") (ifseqformula "45"))
                  (rule "polySimp_addAssoc" (formula "12") (term "2,1,0,0,1,0"))
                  (rule "applyEq" (formula "44") (term "1,0,0") (ifseqformula "45"))
                  (rule "polySimp_addAssoc" (formula "44") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "44") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "44") (term "0,0"))
                  (rule "add_literals" (formula "44") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "44") (term "1,0,0"))
                  (rule "add_zero_right" (formula "44") (term "0,0"))
                  (rule "applyEq" (formula "7") (term "0") (ifseqformula "45"))
                  (rule "inEqSimp_homoInEq1" (formula "7"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                  (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                  (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                  (rule "applyEq" (formula "1") (term "0,1,1") (ifseqformula "45"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                  (rule "polySimp_mulAssoc" (formula "1") (term "0,1,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,1,1"))
                  (rule "polySimp_addAssoc" (formula "1") (term "1"))
                  (rule "applyEq" (formula "10") (term "1,2,1,0,0,1,0,0,1,0") (ifseqformula "45"))
                  (rule "polySimp_addAssoc" (formula "10") (term "2,1,0,0,1,0,0,1,0"))
                  (rule "applyEq" (formula "9") (term "1,2,1,0,0,1,0,0") (ifseqformula "45"))
                  (rule "polySimp_addAssoc" (formula "9") (term "2,1,0,0,1,0,0"))
                  (rule "applyEq" (formula "23") (term "0") (ifseqformula "45"))
                  (rule "inEqSimp_homoInEq1" (formula "23"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                  (rule "polySimp_mulAssoc" (formula "23") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0"))
                  (rule "applyEq" (formula "42") (term "0,1,1") (ifseqformula "45"))
                  (rule "polySimp_mulComm0" (formula "42") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "42") (term "1,1"))
                  (rule "polySimp_mulAssoc" (formula "42") (term "0,1,1"))
                  (rule "polySimp_mulComm0" (formula "42") (term "0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "0,1,1"))
                  (rule "polySimp_addComm0" (formula "42") (term "1"))
                  (rule "applyEq" (formula "10") (term "4,1,1,0") (ifseqformula "45"))
                  (rule "applyEq" (formula "9") (term "0,5,0") (ifseqformula "45"))
                  (rule "applyEq" (formula "10") (term "0,4,0,1,0") (ifseqformula "45"))
                  (rule "applyEq" (formula "48") (term "0,0,2,2,0,1,0") (ifseqformula "45"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                  (rule "polySimp_elimOne" (formula "7") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                  (rule "polySimp_elimOne" (formula "23") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "6"))
                  (rule "polySimp_mulComm0" (formula "40") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "40") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                  (rule "polySimp_elimOne" (formula "40") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "42"))
                  (rule "polySimp_mulComm0" (formula "41") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "41") (term "0"))
                  (rule "polySimp_addComm0" (formula "41") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "41") (term "0"))
                  (rule "add_literals" (formula "41") (term "1,1,0"))
                  (rule "times_zero_1" (formula "41") (term "1,0"))
                  (rule "add_zero_right" (formula "41") (term "0"))
                  (rule "elimGcdGeq_antec" (formula "41") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(0(#))"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0"))
                  (rule "leq_literals" (formula "41") (term "0,0"))
                   (builtin "One Step Simplification" (formula "41"))
                  (rule "add_zero_right" (formula "41") (term "0,0,0,0"))
                  (rule "mul_literals" (formula "41") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "41") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                  (rule "add_literals" (formula "41") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "41") (term "1,0,0"))
                  (rule "add_literals" (formula "41") (term "0,0"))
                  (rule "leq_literals" (formula "41") (term "0"))
                   (builtin "One Step Simplification" (formula "41"))
                  (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "44"))
                  (rule "times_zero_1" (formula "48") (term "0,0"))
                  (rule "add_zero_left" (formula "48") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1"))
                  (rule "polySimp_rightDist" (formula "48") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "48") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "43"))
                  (rule "mul_literals" (formula "21") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                  (rule "polySimp_mulComm0" (formula "21") (term "1"))
                  (rule "polySimp_rightDist" (formula "21") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                  (rule "mul_literals" (formula "21") (term "0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "22"))
                  (rule "times_zero_1" (formula "35") (term "0,0"))
                  (rule "add_zero_left" (formula "35") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "35") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(7(2(7(7(1(2(4(3(1(#))))))))))"))
                  (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "35") (term "0,0"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0"))
                  (rule "mul_literals" (formula "35") (term "1,0,0,0,0,0"))
                  (rule "neg_literal" (formula "35") (term "0,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "35") (term "0,0,0,0"))
                  (rule "add_literals" (formula "35") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                  (rule "add_literals" (formula "35") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "35") (term "1,0,0"))
                  (rule "add_literals" (formula "35") (term "0,0"))
                  (rule "qeq_literals" (formula "35") (term "0"))
                   (builtin "One Step Simplification" (formula "35"))
                  (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "39"))
                  (rule "polySimp_mulComm0" (formula "40") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "40") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                  (rule "polySimp_elimOne" (formula "40") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "24") (ifseqformula "40"))
                  (rule "leq_literals" (formula "24") (term "0"))
                   (builtin "One Step Simplification" (formula "24"))
                  (rule "true_left" (formula "24"))
                  (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "45"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "7"))
                  (rule "mul_literals" (formula "22") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                  (rule "mul_literals" (formula "22") (term "1"))
                  (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "21"))
                  (rule "polySimp_mulComm0" (formula "45") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "45") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "45"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                  (rule "polySimp_elimOne" (formula "45") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "53"))
                  (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                  (rule "mul_literals" (formula "3") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "3") (term "0"))
                  (rule "add_literals" (formula "3") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "21"))
                  (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "9") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0"))
                  (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "26"))
                  (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                  (rule "polySimp_mulComm0" (formula "10") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "10") (term "0"))
                  (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "10") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "10") (term "0,0"))
                  (rule "add_literals" (formula "10") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "10") (term "1,0,0"))
                  (rule "add_zero_right" (formula "10") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                  (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                  (rule "polySimp_elimOne" (formula "10") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "23"))
                  (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                  (rule "mul_literals" (formula "28") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "28") (term "0"))
                  (rule "add_literals" (formula "28") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                  (rule "mul_literals" (formula "28") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "28") (ifseqformula "48"))
                  (rule "times_zero_1" (formula "28") (term "1,1,0"))
                  (rule "greater_literals" (formula "28") (term "0,0"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "leq_literals" (formula "28") (term "0"))
                   (builtin "One Step Simplification" (formula "28"))
                  (rule "true_left" (formula "28"))
                  (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "46"))
                  (rule "mul_literals" (formula "40") (term "0,0"))
                  (rule "add_zero_left" (formula "40") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "40"))
                  (rule "leq_literals" (formula "25") (term "0"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "true_left" (formula "25"))
                  (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "46"))
                  (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                  (rule "mul_literals" (formula "27") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1"))
                  (rule "polySimp_rightDist" (formula "27") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                  (rule "mul_literals" (formula "27") (term "0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "47"))
                  (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "11") (term "0"))
                  (rule "add_literals" (formula "11") (term "1,1,0"))
                  (rule "times_zero_1" (formula "11") (term "1,0"))
                  (rule "add_zero_right" (formula "11") (term "0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                  (rule "inEqSimp_subsumption6" (formula "11") (ifseqformula "49"))
                  (rule "times_zero_1" (formula "11") (term "1,1,0"))
                  (rule "greater_literals" (formula "11") (term "0,0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "leq_literals" (formula "11") (term "0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "46") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "46") (term "0"))
                   (builtin "One Step Simplification" (formula "46"))
                  (rule "closeFalse" (formula "46"))
               )
               (branch "Case 2"
                  (rule "replace_int_MIN" (formula "81") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "81"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_homoInEq1" (formula "36"))
                  (rule "polySimp_addComm1" (formula "36") (term "0"))
                  (rule "inEqSimp_homoInEq0" (formula "46"))
                  (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "46") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "46") (term "0"))
                  (rule "jmod_axiom" (formula "48") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,0"))
                  (rule "polySimp_sepNegMonomial" (formula "48"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "36"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1"))
                  (rule "polySimp_rightDist" (formula "36") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                  (rule "mul_literals" (formula "36") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "46"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                  (rule "polySimp_elimOne" (formula "46") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "40"))
                  (rule "leq_literals" (formula "42") (term "0"))
                   (builtin "One Step Simplification" (formula "42"))
                  (rule "true_left" (formula "42"))
                  (rule "inEqSimp_subsumption1" (formula "50") (ifseqformula "48"))
                  (rule "leq_literals" (formula "50") (term "0"))
                   (builtin "One Step Simplification" (formula "50"))
                  (rule "true_left" (formula "50"))
                  (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "38"))
                  (rule "leq_literals" (formula "21") (term "0"))
                   (builtin "One Step Simplification" (formula "21"))
                  (rule "true_left" (formula "21"))
                  (rule "inEqSimp_subsumption0" (formula "48") (ifseqformula "49"))
                  (rule "leq_literals" (formula "48") (term "0"))
                   (builtin "One Step Simplification" (formula "48"))
                  (rule "true_left" (formula "48"))
                  (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "32"))
                  (rule "leq_literals" (formula "34") (term "0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "true_left" (formula "34"))
                  (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "2"))
                  (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                  (rule "add_literals" (formula "6") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0,0"))
                  (rule "add_literals" (formula "6") (term "0,0"))
                  (rule "qeq_literals" (formula "6") (term "0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "newSym_eq" (formula "44") (inst "newSymDef=add(mul(begin, Z(0(#))), mul(i, Z(0(#))))") (inst "l=l_0"))
                  (rule "times_zero_1" (formula "44") (term "1,1,1"))
                  (rule "times_zero_1" (formula "44") (term "0,1,1"))
                  (rule "add_literals" (formula "44") (term "1,1"))
                  (rule "add_zero_right" (formula "44") (term "1"))
                  (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "44"))
                  (rule "polySimp_homoEq" (formula "45"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "45") (term "0"))
                  (rule "polySimp_addComm0" (formula "45") (term "0,0"))
                  (rule "polySimp_sepPosMonomial" (formula "45"))
                  (rule "polySimp_mulComm0" (formula "45") (term "1"))
                  (rule "polySimp_rightDist" (formula "45") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "45") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "45") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "0,1"))
                  (rule "applyEq" (formula "7") (term "0") (ifseqformula "45"))
                  (rule "inEqSimp_homoInEq1" (formula "7"))
                  (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                  (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0"))
                  (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                  (rule "applyEq" (formula "9") (term "1,2,1,0,0,1,0,0") (ifseqformula "45"))
                  (rule "polySimp_addAssoc" (formula "9") (term "2,1,0,0,1,0,0"))
                  (rule "applyEq" (formula "12") (term "1,2,1,0,0,1,0") (ifseqformula "45"))
                  (rule "polySimp_addAssoc" (formula "12") (term "2,1,0,0,1,0"))
                  (rule "applyEq" (formula "44") (term "1,0,0") (ifseqformula "45"))
                  (rule "polySimp_addAssoc" (formula "44") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "44") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "44") (term "0,0"))
                  (rule "add_literals" (formula "44") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "44") (term "1,0,0"))
                  (rule "add_zero_right" (formula "44") (term "0,0"))
                  (rule "applyEq" (formula "1") (term "0,1,1") (ifseqformula "45"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                  (rule "polySimp_mulAssoc" (formula "1") (term "0,1,1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,1,1"))
                  (rule "polySimp_addAssoc" (formula "1") (term "1"))
                  (rule "applyEq" (formula "23") (term "0") (ifseqformula "45"))
                  (rule "inEqSimp_homoInEq1" (formula "23"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                  (rule "polySimp_mulAssoc" (formula "23") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "23") (term "0"))
                  (rule "applyEq" (formula "42") (term "0,1,1") (ifseqformula "45"))
                  (rule "polySimp_mulComm0" (formula "42") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "42") (term "1,1"))
                  (rule "polySimp_mulAssoc" (formula "42") (term "0,1,1"))
                  (rule "polySimp_mulComm0" (formula "42") (term "0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "0,1,1"))
                  (rule "polySimp_addComm0" (formula "42") (term "1"))
                  (rule "applyEq" (formula "22") (term "0") (ifseqformula "45"))
                  (rule "inEqSimp_homoInEq0" (formula "22"))
                  (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                  (rule "polySimp_mulAssoc" (formula "22") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "22") (term "0"))
                  (rule "applyEq" (formula "41") (term "1") (ifseqformula "45"))
                  (rule "applyEq" (formula "10") (term "1,2,1,0,0,1,0,0,1,0") (ifseqformula "45"))
                  (rule "polySimp_addAssoc" (formula "10") (term "2,1,0,0,1,0,0,1,0"))
                  (rule "applyEq" (formula "49") (term "5,0") (ifseqformula "45"))
                  (rule "applyEq" (formula "11") (term "1,2,1,0,0,1,0") (ifseqformula "45"))
                  (rule "polySimp_addAssoc" (formula "11") (term "2,1,0,0,1,0"))
                  (rule "applyEq" (formula "10") (term "4,1,1,0") (ifseqformula "45"))
                  (rule "applyEq" (formula "48") (term "0,0,2,2,0,1,0") (ifseqformula "45"))
                  (rule "applyEq" (formula "9") (term "0,5,0") (ifseqformula "45"))
                  (rule "applyEq" (formula "10") (term "0,4,0,1,0") (ifseqformula "45"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                  (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                  (rule "polySimp_elimOne" (formula "7") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                  (rule "polySimp_elimOne" (formula "23") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                  (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                  (rule "polySimp_elimOne" (formula "22") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "20"))
                  (rule "polySimp_mulComm0" (formula "40") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "40") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                  (rule "polySimp_elimOne" (formula "40") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "42"))
                  (rule "mul_literals" (formula "46") (term "0,0"))
                  (rule "add_zero_left" (formula "46") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                  (rule "polySimp_mulComm0" (formula "46") (term "1"))
                  (rule "polySimp_rightDist" (formula "46") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "46") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "0,1"))
                  (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "6"))
                  (rule "mul_literals" (formula "21") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                  (rule "mul_literals" (formula "21") (term "1"))
                  (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "1"))
                  (rule "times_zero_1" (formula "5") (term "0,0"))
                  (rule "add_zero_left" (formula "5") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                  (rule "polySimp_elimOne" (formula "5") (term "0"))
                  (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "25"))
                  (rule "andLeft" (formula "5"))
                  (rule "inEqSimp_homoInEq1" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                  (rule "mul_literals" (formula "5") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0"))
                  (rule "polySimp_addAssoc" (formula "5") (term "0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                  (rule "add_literals" (formula "5") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "5") (term "0"))
                  (rule "add_literals" (formula "5") (term "1,1,0"))
                  (rule "times_zero_1" (formula "5") (term "1,0"))
                  (rule "add_literals" (formula "5") (term "0"))
                  (rule "leq_literals" (formula "5"))
                  (rule "closeFalse" (formula "5"))
               )
            )
            (branch "Usage"
                (builtin "One Step Simplification" (formula "81"))
               (rule "translateJavaAddInt" (formula "81") (term "0,1,0"))
               (rule "assignment_array2" (formula "81"))
               (branch "Normal Execution (x_arr != null)"
                   (builtin "One Step Simplification" (formula "81"))
                   (builtin "Block Contract (Internal)" (formula "81") (newnames "result_21,exc_25,heap_Before_BLOCK,savedHeap_Before_BLOCK,o,f"))
                  (branch "Validity"
                      (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "29")) (ifInst ""  (formula "16")) (ifInst ""  (formula "77")) (ifInst ""  (formula "15")))
                      (builtin "One Step Simplification" (formula "82"))
                     (rule "eqSymm" (formula "82") (term "0,0,1,0,1"))
                     (rule "pullOutSelect" (formula "82") (term "0,1,0,0") (inst "selectSK=arr_1"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "81")) (ifInst ""  (formula "19")))
                     (rule "variableDeclarationAssign" (formula "83") (term "1"))
                     (rule "variableDeclaration" (formula "83") (term "1") (newnames "exc_25_1"))
                     (rule "assignment" (formula "83") (term "1"))
                      (builtin "One Step Simplification" (formula "83"))
                     (rule "emptyStatement" (formula "83") (term "1"))
                      (builtin "One Step Simplification" (formula "83"))
                     (rule "emptyStatement" (formula "83") (term "1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,1,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "59"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,1,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "57"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "58"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "commute_and" (formula "1") (term "0,0"))
                     (rule "tryEmpty" (formula "83") (term "1"))
                     (rule "blockEmptyLabel" (formula "83") (term "1"))
                     (rule "blockEmpty" (formula "83") (term "1"))
                     (rule "methodCallEmpty" (formula "83") (term "1"))
                     (rule "emptyModality" (formula "83") (term "1"))
                     (rule "andRight" (formula "83"))
                     (branch "Case 1"
                         (builtin "One Step Simplification" (formula "83"))
                        (rule "closeTrue" (formula "83"))
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "83"))
                        (rule "closeTrue" (formula "83"))
                     )
                  )
                  (branch "Precondition"
                     (rule "andRight" (formula "81"))
                     (branch "Case 1"
                        (rule "andRight" (formula "81"))
                        (branch "Case 1"
                            (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "29")))
                           (rule "closeTrue" (formula "81"))
                        )
                        (branch "Case 2"
                            (builtin "One Step Simplification" (formula "81"))
                           (rule "wellFormedAnon" (formula "81"))
                           (rule "replace_known_left" (formula "81") (term "0") (ifseqformula "14"))
                            (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "13")))
                           (rule "closeTrue" (formula "81"))
                        )
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "81"))
                        (branch "Case 1"
                           (rule "andRight" (formula "81"))
                           (branch "Case 1"
                               (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "76")))
                              (rule "closeTrue" (formula "81"))
                           )
                           (branch "Case 2"
                               (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "15")))
                              (rule "closeTrue" (formula "81"))
                           )
                        )
                        (branch "Case 2"
                            (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "16")))
                           (rule "closeTrue" (formula "81"))
                        )
                     )
                  )
                  (branch "Usage"
                      (builtin "One Step Simplification" (formula "82"))
                      (builtin "One Step Simplification" (formula "55"))
                     (rule "expand_inInt" (formula "55") (term "0,1,0"))
                     (rule "replace_int_MIN" (formula "55") (term "0,1,0,1,0"))
                     (rule "replace_int_MAX" (formula "55") (term "1,0,0,1,0"))
                     (rule "andLeft" (formula "55"))
                     (rule "andLeft" (formula "55"))
                     (rule "andLeft" (formula "56"))
                     (rule "andLeft" (formula "56"))
                     (rule "replace_known_left" (formula "58") (term "0") (ifseqformula "55"))
                      (builtin "One Step Simplification" (formula "58"))
                     (rule "true_left" (formula "58"))
                     (rule "inEqSimp_commuteLeq" (formula "57"))
                     (rule "pullOutSelect" (formula "85") (term "0,1,0") (inst "selectSK=arr_1"))
                     (rule "applyEq" (formula "59") (term "2,0") (ifseqformula "1"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "84")) (ifInst ""  (formula "19")))
                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,1,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "62"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                     (rule "eqSymm" (formula "1") (term "0,0,1,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,1,0,0") (ifseqformula "60"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfUnion" (formula "1") (term "0,0"))
                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "1,0,0"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0,0"))
                     (rule "replace_known_right" (formula "1") (term "0,0,0,0,0") (ifseqformula "61"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "commute_and" (formula "1") (term "0,0"))
                     (rule "elim_double_block_2" (formula "86") (term "1"))
                     (rule "onlyCreatedObjectsAreReferencedFinal" (formula "75") (term "1") (ifseqformula "15") (ifseqformula "29"))
                     (rule "onlyCreatedObjectsAreReferencedFinal" (formula "67") (term "0") (ifseqformula "16") (ifseqformula "30"))
                     (rule "ifUnfold" (formula "88") (term "1") (inst "#boolv=x_2"))
                     (rule "variableDeclaration" (formula "88") (term "1") (newnames "x_6"))
                     (rule "inequality_comparison_simple" (formula "88") (term "1"))
                      (builtin "One Step Simplification" (formula "88"))
                     (rule "replace_known_left" (formula "88") (term "0,0,1,0") (ifseqformula "58"))
                      (builtin "One Step Simplification" (formula "88"))
                     (rule "ifSplit" (formula "88"))
                     (branch "if x_6 true"
                         (builtin "One Step Simplification" (formula "89"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "if x_6 false"
                         (builtin "One Step Simplification" (formula "89"))
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "blockEmpty" (formula "88") (term "1"))
                         (builtin "Block Contract (Internal)" (formula "88") (newnames "result_22,exc_26,heap_Before_BLOCK_0,savedHeap_Before_BLOCK_0,o,f"))
                        (branch "Validity"
                            (builtin "One Step Simplification" (formula "62") (ifInst ""  (formula "32")) (ifInst ""  (formula "19")) (ifInst ""  (formula "84")) (ifInst ""  (formula "18")))
                            (builtin "One Step Simplification" (formula "89"))
                           (rule "eqSymm" (formula "89") (term "0,0,1,0,1"))
                           (rule "variableDeclarationAssign" (formula "89") (term "1"))
                           (rule "variableDeclaration" (formula "89") (term "1") (newnames "exc_26_1"))
                           (rule "assignment" (formula "89") (term "1"))
                            (builtin "One Step Simplification" (formula "89"))
                           (rule "emptyStatement" (formula "89") (term "1"))
                            (builtin "One Step Simplification" (formula "89"))
                           (rule "emptyStatement" (formula "89") (term "1"))
                           (rule "tryEmpty" (formula "89") (term "1"))
                           (rule "blockEmptyLabel" (formula "89") (term "1"))
                           (rule "blockEmpty" (formula "89") (term "1"))
                           (rule "methodCallEmpty" (formula "89") (term "1"))
                           (rule "emptyModality" (formula "89") (term "1"))
                           (rule "andRight" (formula "89"))
                           (branch "Case 1"
                               (builtin "One Step Simplification" (formula "89"))
                              (rule "closeTrue" (formula "89"))
                           )
                           (branch "Case 2"
                               (builtin "One Step Simplification" (formula "89"))
                              (rule "closeTrue" (formula "89"))
                           )
                        )
                        (branch "Precondition"
                           (rule "andRight" (formula "88"))
                           (branch "Case 1"
                              (rule "andRight" (formula "88"))
                              (branch "Case 1"
                                  (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "32")))
                                 (rule "closeTrue" (formula "88"))
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "88"))
                                 (rule "wellFormedAnon" (formula "88"))
                                 (rule "replace_known_left" (formula "88") (term "0") (ifseqformula "17"))
                                  (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "16")))
                                 (rule "closeTrue" (formula "88"))
                              )
                           )
                           (branch "Case 2"
                              (rule "andRight" (formula "88"))
                              (branch "Case 1"
                                 (rule "andRight" (formula "88"))
                                 (branch "Case 1"
                                     (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "83")))
                                    (rule "closeTrue" (formula "88"))
                                 )
                                 (branch "Case 2"
                                     (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "18")))
                                    (rule "closeTrue" (formula "88"))
                                 )
                              )
                              (branch "Case 2"
                                  (builtin "One Step Simplification" (formula "88") (ifInst ""  (formula "19")))
                                 (rule "closeTrue" (formula "88"))
                              )
                           )
                        )
                        (branch "Usage"
                            (builtin "One Step Simplification" (formula "62"))
                            (builtin "One Step Simplification" (formula "89"))
                           (rule "expand_inInt" (formula "62") (term "0,1,0"))
                           (rule "replace_int_MIN" (formula "62") (term "0,1,0,1,0"))
                           (rule "replace_int_MAX" (formula "62") (term "1,0,0,1,0"))
                           (rule "andLeft" (formula "62"))
                           (rule "andLeft" (formula "62"))
                           (rule "andLeft" (formula "64"))
                           (rule "andLeft" (formula "63"))
                           (rule "andLeft" (formula "63"))
                           (rule "replace_known_left" (formula "65") (term "0") (ifseqformula "62"))
                            (builtin "One Step Simplification" (formula "65"))
                           (rule "true_left" (formula "65"))
                           (rule "inEqSimp_commuteLeq" (formula "65"))
                           (rule "inEqSimp_commuteLeq" (formula "64"))
                           (rule "applyEq" (formula "66") (term "1") (ifseqformula "39"))
                           (rule "elim_double_block_2" (formula "93") (term "1"))
                           (rule "ifUnfold" (formula "93") (term "1") (inst "#boolv=x_2"))
                           (rule "variableDeclaration" (formula "93") (term "1") (newnames "x_7"))
                           (rule "inequality_comparison_simple" (formula "93") (term "1"))
                            (builtin "One Step Simplification" (formula "93"))
                           (rule "replace_known_left" (formula "93") (term "0,0,1,0") (ifseqformula "62"))
                            (builtin "One Step Simplification" (formula "93"))
                           (rule "ifSplit" (formula "93"))
                           (branch "if x_7 true"
                               (builtin "One Step Simplification" (formula "94"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "if x_7 false"
                               (builtin "One Step Simplification" (formula "94"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "blockEmpty" (formula "93") (term "1"))
                               (builtin "Block Contract (Internal)" (formula "93") (newnames "anonOut_heap,result_23,exc_27,heap_Before_BLOCK_1,savedHeap_Before_BLOCK_1,write_Before_BLOCK#11,o,f,anonOut__write"))
                              (branch "Validity"
                                  (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "32")) (ifInst ""  (formula "92")) (ifInst ""  (formula "21")) (ifInst ""  (formula "91")) (ifInst ""  (formula "30")) (ifInst ""  (formula "90")) (ifInst ""  (formula "31")) (ifInst ""  (formula "19")) (ifInst ""  (formula "89")) (ifInst ""  (formula "18")))
                                  (builtin "One Step Simplification" (formula "94"))
                                 (rule "expand_inInt" (formula "67") (term "1,0,1"))
                                 (rule "expand_inInt" (formula "67") (term "1,1"))
                                 (rule "expand_inInt" (formula "67") (term "0,0,1"))
                                 (rule "replace_int_MAX" (formula "67") (term "1,0,1,0,1"))
                                 (rule "replace_int_MIN" (formula "67") (term "0,1,1,0,1"))
                                 (rule "replace_int_MIN" (formula "67") (term "0,1,1,1"))
                                 (rule "replace_int_MAX" (formula "67") (term "1,0,1,1"))
                                 (rule "replace_int_MAX" (formula "67") (term "1,0,0,0,1"))
                                 (rule "replace_int_MIN" (formula "67") (term "0,1,0,0,1"))
                                 (rule "andLeft" (formula "67"))
                                 (rule "andLeft" (formula "68"))
                                 (rule "andLeft" (formula "68"))
                                 (rule "andLeft" (formula "70"))
                                 (rule "andLeft" (formula "68"))
                                 (rule "andLeft" (formula "69"))
                                 (rule "inEqSimp_commuteLeq" (formula "72"))
                                 (rule "inEqSimp_commuteLeq" (formula "68"))
                                 (rule "inEqSimp_commuteLeq" (formula "69"))
                                 (rule "variableDeclarationAssign" (formula "98") (term "1"))
                                 (rule "variableDeclaration" (formula "98") (term "1") (newnames "exc_27_1"))
                                 (rule "assignment" (formula "98") (term "1"))
                                  (builtin "One Step Simplification" (formula "98"))
                                 (rule "ifUnfold" (formula "98") (term "1") (inst "#boolv=x"))
                                  (builtin "One Step Simplification" (formula "98"))
                                 (rule "variableDeclaration" (formula "98") (term "1") (newnames "x"))
                                 (rule "compound_equality_comparison_1" (formula "98") (term "1") (inst "#v0=x_1"))
                                 (rule "variableDeclarationAssign" (formula "98") (term "1"))
                                 (rule "variableDeclaration" (formula "98") (term "1") (newnames "x_8"))
                                  (builtin "Use Operation Contract" (formula "98") (newnames "heapBefore_len,result_24,exc_28") (contract "de.wiesler.Buffers[de.wiesler.Buffers::len(int)].JML normal_behavior operation contract.0"))
                                 (branch "Post (len)"
                                     (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "14")))
                                    (rule "expand_inInt" (formula "72") (term "0,1,0"))
                                    (rule "replace_int_MIN" (formula "72") (term "0,1,0,1,0"))
                                    (rule "replace_int_MAX" (formula "72") (term "1,0,0,1,0"))
                                    (rule "andLeft" (formula "72"))
                                    (rule "andLeft" (formula "72"))
                                    (rule "andLeft" (formula "72"))
                                    (rule "andLeft" (formula "73"))
                                    (rule "andLeft" (formula "72"))
                                    (rule "eqSymm" (formula "74"))
                                    (rule "inEqSimp_commuteLeq" (formula "73"))
                                    (rule "assignment" (formula "103") (term "1"))
                                     (builtin "One Step Simplification" (formula "103"))
                                    (rule "equality_comparison_simple" (formula "103") (term "1"))
                                     (builtin "One Step Simplification" (formula "103"))
                                    (rule "ifSplit" (formula "103"))
                                    (branch "if x true"
                                        (builtin "Block Contract (Internal)" (formula "104") (newnames "result_25,exc_29,heap_Before_BLOCK_2,savedHeap_Before_BLOCK_2,o,f"))
                                       (branch "Validity"
                                           (builtin "One Step Simplification" (formula "1"))
                                           (builtin "One Step Simplification" (formula "105"))
                                           (builtin "One Step Simplification" (formula "78") (ifInst ""  (formula "33")) (ifInst ""  (formula "68")) (ifInst ""  (formula "20")) (ifInst ""  (formula "100")) (ifInst ""  (formula "19")))
                                          (rule "true_left" (formula "78"))
                                          (rule "eqSymm" (formula "104") (term "0,0,1,0,1"))
                                          (rule "variableDeclarationAssign" (formula "104") (term "1"))
                                          (rule "variableDeclaration" (formula "104") (term "1") (newnames "exc_29_1"))
                                          (rule "assignment" (formula "104") (term "1"))
                                           (builtin "One Step Simplification" (formula "104"))
                                          (rule "emptyStatement" (formula "104") (term "1"))
                                           (builtin "One Step Simplification" (formula "104"))
                                          (rule "emptyStatement" (formula "104") (term "1"))
                                          (rule "applyEq" (formula "73") (term "0") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "73"))
                                          (rule "true_left" (formula "73"))
                                          (rule "applyEq" (formula "73") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "73"))
                                          (rule "true_left" (formula "73"))
                                          (rule "applyEq" (formula "73") (term "1") (ifseqformula "1"))
                                          (rule "tryEmpty" (formula "102") (term "1"))
                                          (rule "blockEmptyLabel" (formula "102") (term "1"))
                                          (rule "blockEmpty" (formula "102") (term "1"))
                                          (rule "methodCallEmpty" (formula "102") (term "1"))
                                          (rule "emptyModality" (formula "102") (term "1"))
                                          (rule "andRight" (formula "102"))
                                          (branch "Case 1"
                                              (builtin "One Step Simplification" (formula "102"))
                                             (rule "closeTrue" (formula "102"))
                                          )
                                          (branch "Case 2"
                                              (builtin "One Step Simplification" (formula "102"))
                                             (rule "closeTrue" (formula "102"))
                                          )
                                       )
                                       (branch "Precondition"
                                          (rule "andRight" (formula "104"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "104"))
                                             (branch "Case 1"
                                                 (builtin "One Step Simplification" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "104") (ifInst ""  (formula "33")))
                                                (rule "closeTrue" (formula "104"))
                                             )
                                             (branch "Case 2"
                                                 (builtin "One Step Simplification" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "104") (ifInst ""  (formula "68")))
                                                (rule "closeTrue" (formula "104"))
                                             )
                                          )
                                          (branch "Case 2"
                                             (rule "andRight" (formula "104"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "104"))
                                                (branch "Case 1"
                                                    (builtin "One Step Simplification" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "104") (ifInst ""  (formula "99")))
                                                   (rule "closeTrue" (formula "104"))
                                                )
                                                (branch "Case 2"
                                                    (builtin "One Step Simplification" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "104") (ifInst ""  (formula "19")))
                                                   (rule "closeTrue" (formula "104"))
                                                )
                                             )
                                             (branch "Case 2"
                                                 (builtin "One Step Simplification" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "104") (ifInst ""  (formula "20")))
                                                (rule "closeTrue" (formula "104"))
                                             )
                                          )
                                       )
                                       (branch "Usage"
                                           (builtin "One Step Simplification" (formula "1"))
                                           (builtin "One Step Simplification" (formula "78"))
                                           (builtin "One Step Simplification" (formula "105"))
                                          (rule "expand_inInt" (formula "78") (term "0,1,0"))
                                          (rule "replace_int_MIN" (formula "78") (term "0,1,0,1,0"))
                                          (rule "replace_int_MAX" (formula "78") (term "1,0,0,1,0"))
                                          (rule "andLeft" (formula "78"))
                                          (rule "andLeft" (formula "79"))
                                          (rule "andLeft" (formula "78"))
                                          (rule "andLeft" (formula "80"))
                                          (rule "andLeft" (formula "79"))
                                          (rule "andLeft" (formula "79"))
                                          (rule "translateJavaAddInt" (formula "82") (term "0"))
                                          (rule "translateJavaSubInt" (formula "83") (term "1,0"))
                                          (rule "replace_known_left" (formula "81") (term "0") (ifseqformula "78"))
                                           (builtin "One Step Simplification" (formula "81"))
                                          (rule "true_left" (formula "81"))
                                          (rule "polySimp_elimSub" (formula "82") (term "1,0"))
                                          (rule "polySimp_addComm0" (formula "81") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "80"))
                                          (rule "inEqSimp_commuteLeq" (formula "81"))
                                          (rule "applyEq" (formula "74") (term "0") (ifseqformula "1"))
                                          (rule "qeq_literals" (formula "74"))
                                          (rule "true_left" (formula "74"))
                                          (rule "applyEq" (formula "73") (term "0") (ifseqformula "1"))
                                          (rule "leq_literals" (formula "73"))
                                          (rule "true_left" (formula "73"))
                                          (rule "applyEq" (formula "73") (term "1") (ifseqformula "1"))
                                          (rule "pullOutSelect" (formula "81") (term "1,0") (inst "selectSK=arr_2"))
                                          (rule "simplifySelectOfAnon" (formula "81"))
                                           (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "106")) (ifInst ""  (formula "31")))
                                          (rule "elementOfUnion" (formula "81") (term "0,0"))
                                          (rule "elementOfArrayRangeConcrete" (formula "81") (term "1,0,0"))
                                          (rule "eqSymm" (formula "81") (term "0,0,1,0,0"))
                                          (rule "replace_known_right" (formula "81") (term "0,0,1,0,0") (ifseqformula "90"))
                                           (builtin "One Step Simplification" (formula "81"))
                                          (rule "elementOfUnion" (formula "81") (term "0,0"))
                                          (rule "elementOfArrayRangeConcrete" (formula "81") (term "1,0,0"))
                                          (rule "eqSymm" (formula "81") (term "0,0,1,0,0"))
                                          (rule "replace_known_right" (formula "81") (term "0,0,1,0,0") (ifseqformula "89"))
                                           (builtin "One Step Simplification" (formula "81"))
                                          (rule "elementOfUnion" (formula "81") (term "0,0"))
                                          (rule "elementOfArrayRangeConcrete" (formula "81") (term "0,0,0"))
                                           (builtin "One Step Simplification" (formula "81"))
                                          (rule "elementOfArrayRangeConcrete" (formula "81") (term "1,0,0"))
                                          (rule "eqSymm" (formula "81") (term "0,0,1,0,0"))
                                          (rule "replace_known_right" (formula "81") (term "0,0,1,0,0") (ifseqformula "84"))
                                           (builtin "One Step Simplification" (formula "81"))
                                          (rule "inEqSimp_commuteLeq" (formula "81") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "81") (term "0,0,0") (ifseqformula "66"))
                                           (builtin "One Step Simplification" (formula "81"))
                                          (rule "elim_double_block_2" (formula "109") (term "1"))
                                          (rule "ifUnfold" (formula "109") (term "1") (inst "#boolv=x"))
                                          (rule "variableDeclaration" (formula "109") (term "1") (newnames "x_9"))
                                          (rule "inequality_comparison_simple" (formula "109") (term "1"))
                                           (builtin "One Step Simplification" (formula "109"))
                                          (rule "replace_known_left" (formula "109") (term "0,0,1,0") (ifseqformula "76"))
                                           (builtin "One Step Simplification" (formula "109"))
                                           (builtin "Use Dependency Contract" (formula "16") (ifInst ""  (formula "109") (term "1,1,0,1")) (contract "de.wiesler.Classifier[java.lang.Object::<inv>()].JML accessible clause.0"))
                                          (rule "wellFormedAnon" (formula "83") (term "1,1,0,0,0"))
                                          (rule "replace_known_left" (formula "83") (term "0,1,0,0,0") (ifseqformula "18"))
                                           (builtin "One Step Simplification" (formula "83") (ifInst ""  (formula "105")) (ifInst ""  (formula "19")) (ifInst ""  (formula "18")) (ifInst ""  (formula "17")) (ifInst ""  (formula "34")) (ifInst ""  (formula "16")) (ifInst ""  (formula "34")))
                                          (rule "true_left" (formula "83"))
                                          (rule "ifSplit" (formula "109"))
                                          (branch "if x_9 true"
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "if x_9 false"
                                              (builtin "One Step Simplification" (formula "1"))
                                              (builtin "One Step Simplification" (formula "110"))
                                             (rule "true_left" (formula "1"))
                                             (rule "blockEmpty" (formula "109") (term "1"))
                                             (rule "compound_assignment_op_plus_array" (formula "109") (term "1") (inst "#v0=x_arr") (inst "#v1=x"))
                                             (rule "variableDeclarationAssign" (formula "109") (term "1"))
                                             (rule "variableDeclaration" (formula "109") (term "1") (newnames "x_arr_1"))
                                             (rule "assignment" (formula "109") (term "1"))
                                              (builtin "One Step Simplification" (formula "109"))
                                             (rule "variableDeclarationAssign" (formula "109") (term "1"))
                                             (rule "variableDeclaration" (formula "109") (term "1") (newnames "x_10"))
                                             (rule "assignment" (formula "109") (term "1"))
                                              (builtin "One Step Simplification" (formula "109"))
                                             (rule "eval_order_array_access3" (formula "109") (term "1") (inst "#v0=x_arr_2") (inst "#v2=x_11") (inst "#v1=x_12"))
                                             (rule "variableDeclarationAssign" (formula "109") (term "1"))
                                             (rule "variableDeclaration" (formula "109") (term "1") (newnames "x_arr_2"))
                                             (rule "assignment" (formula "109") (term "1"))
                                              (builtin "One Step Simplification" (formula "109"))
                                             (rule "variableDeclarationAssign" (formula "109") (term "1"))
                                             (rule "variableDeclaration" (formula "109") (term "1") (newnames "x_11"))
                                             (rule "assignment" (formula "109") (term "1"))
                                              (builtin "One Step Simplification" (formula "109"))
                                             (rule "variableDeclarationAssign" (formula "109") (term "1"))
                                             (rule "variableDeclaration" (formula "109") (term "1") (newnames "x_12"))
                                             (rule "compound_int_cast_expression" (formula "109") (term "1") (inst "#v=x_13"))
                                             (rule "variableDeclarationAssign" (formula "109") (term "1"))
                                             (rule "variableDeclaration" (formula "109") (term "1") (newnames "x_13"))
                                             (rule "remove_parentheses_right" (formula "109") (term "1"))
                                             (rule "compound_addition_1" (formula "109") (term "1") (inst "#v=x_14"))
                                             (rule "variableDeclarationAssign" (formula "109") (term "1"))
                                             (rule "variableDeclaration" (formula "109") (term "1") (newnames "x_14"))
                                             (rule "assignment_array2" (formula "109"))
                                             (branch "Normal Execution (x_arr_1 != null)"
                                                 (builtin "One Step Simplification" (formula "109"))
                                                (rule "replaceKnownSelect_taclet20001212010001_3" (formula "109") (term "0,1,0"))
                                                (rule "assignmentAdditionInt" (formula "109") (term "1"))
                                                (branch "Overflow check"
                                                    (builtin "One Step Simplification" (formula "109"))
                                                   (rule "applyEqReverse" (formula "109") (term "0,0") (ifseqformula "81") (userinteraction))
                                                   (rule "ifthenelse_split" (formula "109") (term "0,0") (userinteraction))
                                                   (branch "indices[j_0] <= -1 + buffers.num_buckets TRUE"
                                                      (rule "Definition_axiom_for_isClassifiedUntil_in_de_wiesler_Classifier" (formula "14") (term "0") (inst "b=b") (userinteraction))
                                                       (builtin "One Step Simplification" (formula "14") (userinteraction))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "Definition_axiom_for_allElementsCounted_in_de_wiesler_Classifier" (formula "14") (term "0") (inst "b_0=b_0") (inst "b=b") (userinteraction))
                                                       (builtin "One Step Simplification" (formula "14") (userinteraction))
                                                      (rule "andLeft" (formula "14"))
                                                      (rule "translateJavaCastInt" (formula "15") (term "0") (userinteraction))
                                                      (rule "cut" (inst "cutFormula=leq(int::select(anon_heap_LOOP_0<<anonHeapFunction>>,
                bucket_starts,
                arr(int::select(heap,
                                indices,
                                arr(j_0)))),
    javaSubInt(_write_0, begin))<<origin(\"User_Interaction @ node 20710 (cut)\",\"[]\")>>") (userinteraction))
                                                      (branch "CUT: bucket_starts[indices[j_0]]@anon_heap_LOOP_0<<anonHeapFunction>> <= javaSubInt(_write_0, begin) TRUE"
                                                         (rule "expand_inInt" (formula "116") (userinteraction))
                                                         (rule "andRight" (formula "116") (userinteraction))
                                                         (branch "Case 1"
                                                            (rule "expand_inInt" (formula "19") (term "1,0,0"))
                                                            (rule "expand_inInt" (formula "15") (term "1,0,0"))
                                                            (rule "replace_int_MAX" (formula "116") (term "1"))
                                                            (rule "replace_int_MIN" (formula "19") (term "0,1,1,0,0"))
                                                            (rule "replace_int_MAX" (formula "19") (term "1,0,1,0,0"))
                                                            (rule "replace_int_MIN" (formula "15") (term "0,1,1,0,0"))
                                                            (rule "replace_int_MAX" (formula "15") (term "1,0,1,0,0"))
                                                            (rule "translateJavaSubInt" (formula "1") (term "1"))
                                                            (rule "translateJavaSubInt" (formula "16") (term "1"))
                                                            (rule "translateJavaSubInt" (formula "20") (term "1"))
                                                            (rule "replace_known_left" (formula "88") (term "0,0") (ifseqformula "2"))
                                                             (builtin "One Step Simplification" (formula "88"))
                                                            (rule "applyEqReverse" (formula "89") (term "1,0") (ifseqformula "88"))
                                                            (rule "hideAuxiliaryEq" (formula "88"))
                                                            (rule "polySimp_elimSub" (formula "1") (term "1"))
                                                            (rule "polySimp_elimSub" (formula "16") (term "1"))
                                                            (rule "polySimp_elimSub" (formula "20") (term "1"))
                                                            (rule "polySimp_addComm0" (formula "115") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "20") (term "1"))
                                                            (rule "polySimp_addComm0" (formula "20") (term "0,1"))
                                                            (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "74"))
                                                            (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "7"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                            (rule "inEqSimp_leqRight" (formula "115"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                            (rule "add_literals" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "20") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "16") (term "1,1,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "47"))
                                                            (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0,0"))
                                                            (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
                                                            (rule "add_literals" (formula "7") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "57"))
                                                            (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "57") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                                            (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "48"))
                                                            (rule "applyEq" (formula "20") (term "0,1,0,0,1,0,0,0") (ifseqformula "48"))
                                                            (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0,0") (ifseqformula "48"))
                                                            (rule "jmod_axiom" (formula "59") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "59") (term "1,0"))
                                                            (rule "polySimp_sepNegMonomial" (formula "59"))
                                                            (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "75"))
                                                            (rule "polySimp_mulComm0" (formula "75") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "75") (term "1"))
                                                            (rule "mul_literals" (formula "75") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "75") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "75") (term "1,1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                            (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "mul_literals" (formula "1") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "47"))
                                                            (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "47") (term "1"))
                                                            (rule "mul_literals" (formula "47") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "47") (term "1,1"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "7") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "0,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "57"))
                                                            (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "57") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0"))
                                                            (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0"))
                                                            (rule "inEqSimp_subsumption1" (formula "79") (ifseqformula "74"))
                                                            (rule "leq_literals" (formula "79") (term "0"))
                                                             (builtin "One Step Simplification" (formula "79"))
                                                            (rule "true_left" (formula "79"))
                                                            (rule "inEqSimp_subsumption1" (formula "62") (ifseqformula "60"))
                                                            (rule "leq_literals" (formula "62") (term "0"))
                                                             (builtin "One Step Simplification" (formula "62"))
                                                            (rule "true_left" (formula "62"))
                                                            (rule "inEqSimp_subsumption1" (formula "32") (ifseqformula "49"))
                                                            (rule "leq_literals" (formula "32") (term "0"))
                                                             (builtin "One Step Simplification" (formula "32"))
                                                            (rule "true_left" (formula "32"))
                                                            (rule "inEqSimp_subsumption1" (formula "45") (ifseqformula "43"))
                                                            (rule "leq_literals" (formula "45") (term "0"))
                                                             (builtin "One Step Simplification" (formula "45"))
                                                            (rule "true_left" (formula "45"))
                                                            (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "82"))
                                                            (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                                            (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                            (rule "add_literals" (formula "14") (term "0,0"))
                                                            (rule "qeq_literals" (formula "14") (term "0"))
                                                             (builtin "One Step Simplification" (formula "14"))
                                                            (rule "true_left" (formula "14"))
                                                            (rule "inEqSimp_subsumption1" (formula "50") (ifseqformula "48"))
                                                            (rule "leq_literals" (formula "50") (term "0"))
                                                             (builtin "One Step Simplification" (formula "50"))
                                                            (rule "true_left" (formula "50"))
                                                            (rule "inEqSimp_contradInEq1" (formula "7") (term "0,0,0") (ifseqformula "11"))
                                                            (rule "qeq_literals" (formula "7") (term "0,0,0,0"))
                                                             (builtin "One Step Simplification" (formula "7"))
                                                            (rule "applyEqReverse" (formula "65") (term "2,0") (ifseqformula "7"))
                                                            (rule "hideAuxiliaryEq" (formula "7"))
                                                            (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "7"))
                                                            (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                                                            (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                            (rule "add_literals" (formula "11") (term "0,0"))
                                                            (rule "qeq_literals" (formula "11") (term "0"))
                                                             (builtin "One Step Simplification" (formula "11"))
                                                            (rule "true_left" (formula "11"))
                                                            (rule "inEqSimp_subsumption0" (formula "55") (ifseqformula "56"))
                                                            (rule "leq_literals" (formula "55") (term "0"))
                                                             (builtin "One Step Simplification" (formula "55"))
                                                            (rule "true_left" (formula "55"))
                                                            (rule "newSym_eq" (formula "53") (inst "newSymDef=add(mul(begin, Z(0(#))), mul(i, Z(0(#))))") (inst "l=l_0"))
                                                            (rule "times_zero_1" (formula "53") (term "1,1,1"))
                                                            (rule "times_zero_1" (formula "53") (term "0,1,1"))
                                                            (rule "add_zero_left" (formula "53") (term "1,1"))
                                                            (rule "add_zero_right" (formula "53") (term "1"))
                                                            (rule "applyEq" (formula "54") (term "0,0") (ifseqformula "53"))
                                                            (rule "polySimp_homoEq" (formula "54"))
                                                            (rule "polySimp_mulLiterals" (formula "54") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "54") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "54") (term "0,0"))
                                                            (rule "polySimp_sepPosMonomial" (formula "54"))
                                                            (rule "polySimp_mulComm0" (formula "54") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "54") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "54") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "54") (term "1,1"))
                                                            (rule "polySimp_mulComm0" (formula "54") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "54") (term "0,1"))
                                                            (rule "applyEq" (formula "51") (term "0,1,1") (ifseqformula "54"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "51") (term "1,1"))
                                                            (rule "polySimp_mulAssoc" (formula "51") (term "0,1,1"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "0,0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "51") (term "0,1,1"))
                                                            (rule "polySimp_addComm0" (formula "51") (term "1"))
                                                            (rule "applyEq" (formula "50") (term "1") (ifseqformula "54"))
                                                            (rule "applyEq" (formula "79") (term "1,2,1,0,0,1,0,0") (ifseqformula "54"))
                                                            (rule "polySimp_addAssoc" (formula "79") (term "2,1,0,0,1,0,0"))
                                                            (rule "applyEq" (formula "17") (term "1,2,1,0,0,1,0,0,0,1,0") (ifseqformula "54"))
                                                            (rule "polySimp_addAssoc" (formula "17") (term "2,1,0,0,1,0,0,0,1,0"))
                                                            (rule "applyEq" (formula "68") (term "1,2,1,0,0,1,0") (ifseqformula "54"))
                                                            (rule "polySimp_addAssoc" (formula "68") (term "2,1,0,0,1,0"))
                                                            (rule "applyEq" (formula "20") (term "1,2,1,0,0,1,0") (ifseqformula "54"))
                                                            (rule "polySimp_addAssoc" (formula "20") (term "2,1,0,0,1,0"))
                                                            (rule "applyEq" (formula "14") (term "1,2,1,0,0,1,0,2,0") (ifseqformula "54"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "2,1,0,0,1,0,2,0"))
                                                            (rule "applyEq" (formula "13") (term "1,2,1,0,0,1,0,0,1,0") (ifseqformula "54"))
                                                            (rule "polySimp_addAssoc" (formula "13") (term "2,1,0,0,1,0,0,1,0"))
                                                            (rule "applyEq" (formula "15") (term "1,2,1,0,0,1,0,0") (ifseqformula "54"))
                                                            (rule "polySimp_addAssoc" (formula "15") (term "2,1,0,0,1,0,0"))
                                                            (rule "applyEq" (formula "58") (term "5,0") (ifseqformula "54"))
                                                            (rule "applyEq" (formula "53") (term "1,0,0") (ifseqformula "54"))
                                                            (rule "polySimp_addAssoc" (formula "53") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "53") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "53") (term "0,0"))
                                                            (rule "add_literals" (formula "53") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "53") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "53") (term "0,0"))
                                                            (rule "applyEq" (formula "78") (term "0") (ifseqformula "54"))
                                                            (rule "inEqSimp_homoInEq1" (formula "78"))
                                                            (rule "polySimp_mulComm0" (formula "78") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "78") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "78") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "78") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "78") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "78") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "78") (term "0,0"))
                                                            (rule "applyEq" (formula "18") (term "1,2,1,0,0,1,0,0") (ifseqformula "54"))
                                                            (rule "polySimp_addAssoc" (formula "18") (term "2,1,0,0,1,0,0"))
                                                            (rule "applyEq" (formula "17") (term "1,2,1,0,0,1,0,1,0,1,0") (ifseqformula "54"))
                                                            (rule "polySimp_addAssoc" (formula "17") (term "2,1,0,0,1,0,1,0,1,0"))
                                                            (rule "applyEq" (formula "16") (term "1,2,1,0,0,1,0,0") (ifseqformula "54"))
                                                            (rule "polySimp_addAssoc" (formula "16") (term "2,1,0,0,1,0,0"))
                                                            (rule "applyEq" (formula "73") (term "1,2,1,0,0,1,0") (ifseqformula "54"))
                                                            (rule "polySimp_addAssoc" (formula "73") (term "2,1,0,0,1,0"))
                                                            (rule "applyEq" (formula "72") (term "1,2,1,0,0,1,0,0") (ifseqformula "54"))
                                                            (rule "polySimp_addAssoc" (formula "72") (term "2,1,0,0,1,0,0"))
                                                            (rule "applyEq" (formula "31") (term "0") (ifseqformula "54"))
                                                            (rule "inEqSimp_homoInEq0" (formula "31"))
                                                            (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "31") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "31") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "31") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                            (rule "applyEq" (formula "63") (term "1,2,1,0,0,1,0,0") (ifseqformula "54"))
                                                            (rule "polySimp_addAssoc" (formula "63") (term "2,1,0,0,1,0,0"))
                                                            (rule "applyEq" (formula "80") (term "1,2,1,0,0,1,0,0") (ifseqformula "54"))
                                                            (rule "polySimp_addAssoc" (formula "80") (term "2,1,0,0,1,0,0"))
                                                            (rule "applyEq" (formula "19") (term "1,2,1,0,0,1,0,0,1,0") (ifseqformula "54"))
                                                            (rule "polySimp_addAssoc" (formula "19") (term "2,1,0,0,1,0,0,1,0"))
                                                            (rule "applyEq" (formula "21") (term "1,2,1,0,0,1,0") (ifseqformula "54"))
                                                            (rule "polySimp_addAssoc" (formula "21") (term "2,1,0,0,1,0"))
                                                            (rule "applyEq" (formula "32") (term "0") (ifseqformula "54"))
                                                            (rule "inEqSimp_homoInEq1" (formula "32"))
                                                            (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "32") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "32") (term "0,0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "32") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                            (rule "applyEq" (formula "13") (term "1,2,1,0,0,1,0,1,1,0") (ifseqformula "54"))
                                                            (rule "polySimp_addAssoc" (formula "13") (term "2,1,0,0,1,0,1,1,0"))
                                                            (rule "applyEq" (formula "19") (term "4,1,1,0") (ifseqformula "54"))
                                                            (rule "applyEq" (formula "57") (term "0,0,2,2,0,1,0") (ifseqformula "54"))
                                                            (rule "applyEq" (formula "63") (term "0,0,2,2,0") (ifseqformula "54"))
                                                            (rule "applyEq" (formula "19") (term "0,4,0,1,0") (ifseqformula "54"))
                                                            (rule "applyEq" (formula "18") (term "1,0,1") (ifseqformula "54"))
                                                            (rule "polySimp_addAssoc" (formula "18") (term "0,1"))
                                                            (rule "polySimp_addComm0" (formula "18") (term "0,0,1"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "78"))
                                                            (rule "polySimp_mulLiterals" (formula "78") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "78") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                                            (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "32"))
                                                            (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "29"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "49") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "49"))
                                                            (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "49") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "33"))
                                                            (rule "polySimp_mulComm0" (formula "45") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "45") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "45"))
                                                            (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "45") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "47"))
                                                            (rule "polySimp_mulComm0" (formula "48") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "48") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "48"))
                                                            (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "48") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "33") (ifseqformula "48"))
                                                            (rule "leq_literals" (formula "33") (term "0"))
                                                             (builtin "One Step Simplification" (formula "33"))
                                                            (rule "true_left" (formula "33"))
                                                            (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "11"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "49") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "49"))
                                                            (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "49") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "11"))
                                                            (rule "mul_literals" (formula "30") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                                            (rule "mul_literals" (formula "30") (term "1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "68") (ifseqformula "3"))
                                                            (rule "mul_literals" (formula "68") (term "0,0"))
                                                            (rule "add_zero_left" (formula "68") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "68"))
                                                            (rule "mul_literals" (formula "68") (term "1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "57"))
                                                            (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                            (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                            (rule "add_literals" (formula "7") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                            (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "32"))
                                                            (rule "mul_literals" (formula "44") (term "0,0"))
                                                            (rule "add_zero_left" (formula "44") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "44"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                            (rule "elimGcdLeq_antec" (formula "44") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(7(2(7(7(1(2(4(3(1(#))))))))))"))
                                                            (rule "leq_literals" (formula "44") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "44"))
                                                            (rule "mul_literals" (formula "44") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "44") (term "1,0,0"))
                                                            (rule "neg_literal" (formula "44") (term "0,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "44") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_addLiterals" (formula "44") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "44") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "44") (term "0,0"))
                                                            (rule "add_literals" (formula "44") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "44") (term "1,0,0"))
                                                            (rule "add_literals" (formula "44") (term "0,0"))
                                                            (rule "qeq_literals" (formula "44") (term "0"))
                                                             (builtin "One Step Simplification" (formula "44"))
                                                            (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "53"))
                                                            (rule "polySimp_mulComm0" (formula "52") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "52") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "52") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "52") (term "0"))
                                                            (rule "add_literals" (formula "52") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "52") (term "1,0"))
                                                            (rule "add_zero_right" (formula "52") (term "0"))
                                                            (rule "elimGcdGeq_antec" (formula "52") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                            (rule "leq_literals" (formula "52") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "52") (term "1,0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "52") (term "0,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "52") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "52") (term "0,0"))
                                                            (rule "add_literals" (formula "52") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "52") (term "1,0,0"))
                                                            (rule "add_literals" (formula "52") (term "0,0"))
                                                            (rule "leq_literals" (formula "52") (term "0"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                                            (rule "mul_literals" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "52") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "52") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "52") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "52") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "52") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "52") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "52") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "52") (term "0,0"))
                                                            (rule "add_literals" (formula "52") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "52") (term "1,0,0"))
                                                            (rule "add_literals" (formula "52") (term "0,0"))
                                                            (rule "qeq_literals" (formula "52") (term "0"))
                                                             (builtin "One Step Simplification" (formula "52"))
                                                            (rule "true_left" (formula "52"))
                                                            (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "54"))
                                                            (rule "mul_literals" (formula "32") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                                            (rule "polySimp_mulComm0" (formula "32") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "32") (term "1"))
                                                            (rule "mul_literals" (formula "32") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "32") (term "1,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "55"))
                                                            (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                            (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                            (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "9") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                            (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "60") (ifseqformula "56"))
                                                            (rule "mul_literals" (formula "60") (term "0,0"))
                                                            (rule "add_zero_left" (formula "60") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "60"))
                                                            (rule "polySimp_mulComm0" (formula "60") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "60") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "60") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "60") (term "1,1"))
                                                            (rule "polySimp_mulComm0" (formula "60") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "60") (term "0,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "85") (ifseqformula "31"))
                                                            (rule "polySimp_rightDist" (formula "85") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "85") (term "0"))
                                                            (rule "polySimp_rightDist" (formula "85") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "85") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "85") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "85") (term "0,0"))
                                                            (rule "add_literals" (formula "85") (term "0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "85"))
                                                            (rule "polySimp_mulLiterals" (formula "85") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "85") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "31"))
                                                            (rule "polySimp_rightDist" (formula "35") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "35") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "35") (term "0"))
                                                            (rule "add_literals" (formula "35") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                            (rule "mul_literals" (formula "35") (term "1"))
                                                            (rule "inEqSimp_subsumption6" (formula "35") (ifseqformula "54"))
                                                            (rule "mul_literals" (formula "35") (term "1,1,0"))
                                                            (rule "greater_literals" (formula "35") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "35"))
                                                            (rule "leq_literals" (formula "35") (term "0"))
                                                             (builtin "One Step Simplification" (formula "35"))
                                                            (rule "true_left" (formula "35"))
                                                            (rule "inEqSimp_exactShadow3" (formula "86") (ifseqformula "34"))
                                                            (rule "polySimp_rightDist" (formula "86") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "86") (term "0"))
                                                            (rule "polySimp_rightDist" (formula "86") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "86") (term "0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "86") (term "0,0"))
                                                            (rule "polySimp_addComm1" (formula "86") (term "0,0,0"))
                                                            (rule "add_literals" (formula "86") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "86") (term "0,0"))
                                                            (rule "add_literals" (formula "86") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "86") (term "1,0,0"))
                                                            (rule "add_literals" (formula "86") (term "0,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "86"))
                                                            (rule "polySimp_mulLiterals" (formula "86") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "86") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "76") (ifseqformula "86"))
                                                            (rule "leq_literals" (formula "76") (term "0"))
                                                             (builtin "One Step Simplification" (formula "76"))
                                                            (rule "true_left" (formula "76"))
                                                            (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "51"))
                                                            (rule "polySimp_mulComm0" (formula "48") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "48") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "48"))
                                                            (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "48") (term "0"))
                                                            (rule "inEqSimp_subsumption0" (formula "31") (ifseqformula "48"))
                                                            (rule "leq_literals" (formula "31") (term "0"))
                                                             (builtin "One Step Simplification" (formula "31"))
                                                            (rule "true_left" (formula "31"))
                                                            (rule "inEqSimp_exactShadow3" (formula "86") (ifseqformula "1"))
                                                            (rule "polySimp_rightDist" (formula "86") (term "0,0"))
                                                            (rule "polySimp_rightDist" (formula "86") (term "0,0,0"))
                                                            (rule "mul_literals" (formula "86") (term "0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "86") (term "1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "86") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "86") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor2b" (formula "86") (term "0"))
                                                            (rule "add_literals" (formula "86") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "86") (term "1,0"))
                                                            (rule "polySimp_addLiterals" (formula "86") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "86") (term "0"))
                                                            (rule "add_literals" (formula "86") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "86"))
                                                            (rule "mul_literals" (formula "86") (term "1"))
                                                            (rule "inEqSimp_contradInEq3" (formula "86") (ifseqformula "45"))
                                                            (rule "mul_literals" (formula "86") (term "0,1,0"))
                                                            (rule "greater_literals" (formula "86") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "86"))
                                                            (rule "qeq_literals" (formula "86") (term "0"))
                                                             (builtin "One Step Simplification" (formula "86"))
                                                            (rule "closeFalse" (formula "86"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "instAll" (formula "1") (term "0,2,0") (ifseqformula "15") (userinteraction))
                                                            (rule "impLeft" (formula "1") (userinteraction))
                                                            (branch "Case 1"
                                                               (rule "expand_inInt" (formula "90") (term "1"))
                                                               (rule "expand_inInt" (formula "19") (term "1,0,0"))
                                                               (rule "replace_int_MIN" (formula "117") (term "0"))
                                                               (rule "expand_inInt" (formula "15") (term "1,0,0"))
                                                               (rule "replace_int_MIN" (formula "90") (term "0,1,1"))
                                                               (rule "replace_int_MAX" (formula "90") (term "1,0,1"))
                                                               (rule "replace_int_MAX" (formula "19") (term "1,0,1,0,0"))
                                                               (rule "replace_int_MIN" (formula "19") (term "0,1,1,0,0"))
                                                               (rule "replace_int_MAX" (formula "15") (term "1,0,1,0,0"))
                                                               (rule "replace_int_MIN" (formula "15") (term "0,1,1,0,0"))
                                                               (rule "translateJavaSubInt" (formula "16") (term "1"))
                                                               (rule "translateJavaSubInt" (formula "20") (term "1"))
                                                               (rule "translateJavaSubInt" (formula "1") (term "1"))
                                                               (rule "replace_known_left" (formula "88") (term "0,0") (ifseqformula "2"))
                                                                (builtin "One Step Simplification" (formula "88"))
                                                               (rule "applyEqReverse" (formula "89") (term "1,0") (ifseqformula "88"))
                                                               (rule "hideAuxiliaryEq" (formula "88"))
                                                               (rule "replace_known_left" (formula "89") (term "0,1") (ifseqformula "78"))
                                                                (builtin "One Step Simplification" (formula "89"))
                                                               (rule "polySimp_elimSub" (formula "16") (term "1"))
                                                               (rule "polySimp_elimSub" (formula "20") (term "1"))
                                                               (rule "polySimp_elimSub" (formula "1") (term "1"))
                                                               (rule "polySimp_addComm0" (formula "116") (term "1"))
                                                               (rule "polySimp_addComm1" (formula "20") (term "1"))
                                                               (rule "polySimp_addComm0" (formula "20") (term "0,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "63") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "74"))
                                                               (rule "polySimp_mulComm0" (formula "74") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "7"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                               (rule "inEqSimp_leqRight" (formula "116"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "90") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "90") (term "1,0,0,1,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "20") (term "1,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "16") (term "1,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "90") (term "1"))
                                                               (rule "replace_known_left" (formula "90") (term "1") (ifseqformula "80"))
                                                                (builtin "One Step Simplification" (formula "90"))
                                                               (rule "inEqSimp_homoInEq1" (formula "47"))
                                                               (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "57"))
                                                               (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "57") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "90") (term "0"))
                                                               (rule "replace_known_left" (formula "90") (term "0") (ifseqformula "74"))
                                                                (builtin "One Step Simplification" (formula "90"))
                                                               (rule "inEqSimp_leqRight" (formula "90"))
                                                               (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "1") (term "0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "add_zero_left" (formula "1") (term "0,0"))
                                                               (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "49"))
                                                               (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,0") (ifseqformula "49"))
                                                               (rule "applyEq" (formula "17") (term "0,1,0,0,1,0,0,0") (ifseqformula "49"))
                                                               (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "49"))
                                                               (rule "jmod_axiom" (formula "60") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "60") (term "1,0"))
                                                               (rule "polySimp_sepNegMonomial" (formula "60"))
                                                               (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "76"))
                                                               (rule "polySimp_mulComm0" (formula "76") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "76") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "76") (term "1,1"))
                                                               (rule "mul_literals" (formula "76") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "76") (term "1,1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "48"))
                                                               (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                               (rule "mul_literals" (formula "48") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "58"))
                                                               (rule "polySimp_mulLiterals" (formula "58") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "58") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "8") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "8") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "17") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                               (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "1"))
                                                               (rule "andLeft" (formula "4"))
                                                               (rule "inEqSimp_homoInEq1" (formula "4"))
                                                               (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                               (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                               (rule "add_literals" (formula "4") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "4") (term "1,0"))
                                                               (rule "add_zero_right" (formula "4") (term "0"))
                                                               (rule "leq_literals" (formula "4"))
                                                               (rule "closeFalse" (formula "4"))
                                                            )
                                                            (branch "Case 2"
                                                               (rule "Definition_axiom_for_countClassOfSliceEq_in_de_wiesler_Classifier" (formula "1") (term "1") (inst "i=i_1") (userinteraction))
                                                               (rule "bsum_positive1" (formula "1") (term "1") (userinteraction))
                                                               (rule "replaceKnownSelect_taclet20001212010001_3" (formula "2") (term "0"))
                                                               (rule "expand_inInt" (formula "21") (term "1,0,0"))
                                                               (rule "replace_int_MIN" (formula "118") (term "0"))
                                                               (rule "expand_inInt" (formula "17") (term "1,0,0"))
                                                               (rule "replace_int_MIN" (formula "21") (term "0,1,1,0,0"))
                                                               (rule "replace_int_MAX" (formula "21") (term "1,0,1,0,0"))
                                                               (rule "replace_int_MIN" (formula "17") (term "0,1,1,0,0"))
                                                               (rule "replace_int_MAX" (formula "17") (term "1,0,1,0,0"))
                                                               (rule "translateJavaSubInt" (formula "18") (term "1"))
                                                               (rule "translateJavaSubInt" (formula "3") (term "1"))
                                                               (rule "translateJavaSubInt" (formula "22") (term "1"))
                                                               (rule "eqSymm" (formula "2"))
                                                               (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                                               (rule "replace_known_left" (formula "90") (term "0,0") (ifseqformula "4"))
                                                                (builtin "One Step Simplification" (formula "90"))
                                                               (rule "applyEqReverse" (formula "2") (term "1") (ifseqformula "90"))
                                                               (rule "applyEqReverse" (formula "91") (term "1,0") (ifseqformula "90"))
                                                               (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "90"))
                                                               (rule "hideAuxiliaryEq" (formula "90"))
                                                               (rule "polySimp_elimSub" (formula "18") (term "1"))
                                                               (rule "polySimp_elimSub" (formula "3") (term "1"))
                                                               (rule "polySimp_elimSub" (formula "22") (term "1"))
                                                               (rule "polySimp_addComm0" (formula "117") (term "1"))
                                                               (rule "polySimp_addComm1" (formula "22") (term "1"))
                                                               (rule "polySimp_addComm0" (formula "22") (term "0,1"))
                                                               (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "9"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "17") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "76"))
                                                               (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                                                               (rule "inEqSimp_leqRight" (formula "117"))
                                                               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                               (rule "add_literals" (formula "1") (term "0,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "22") (term "1,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "18") (term "1,1,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "59"))
                                                               (rule "polySimp_mulComm0" (formula "59") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "59") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "59") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "59") (term "0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "49"))
                                                               (rule "polySimp_addComm1" (formula "49") (term "0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "9") (term "1,1,0,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                                                               (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "50"))
                                                               (rule "applyEq" (formula "22") (term "0,1,0,0,1,0,0,0") (ifseqformula "50"))
                                                               (rule "applyEq" (formula "18") (term "0,1,0,0,1,0,0,0") (ifseqformula "50"))
                                                               (rule "jmod_axiom" (formula "61") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "61") (term "1,0"))
                                                               (rule "polySimp_sepNegMonomial" (formula "61"))
                                                               (rule "polySimp_mulLiterals" (formula "61") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "66") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "66") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "66") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "66") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "66") (term "1,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                               (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "77"))
                                                               (rule "polySimp_mulComm0" (formula "77") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "77") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "77") (term "1,1"))
                                                               (rule "mul_literals" (formula "77") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "77") (term "1,1"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "59"))
                                                               (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "59") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "49"))
                                                               (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "49") (term "1"))
                                                               (rule "mul_literals" (formula "49") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "49") (term "1,1"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "22") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "18") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "51"))
                                                               (rule "leq_literals" (formula "34") (term "0"))
                                                                (builtin "One Step Simplification" (formula "34"))
                                                               (rule "true_left" (formula "34"))
                                                               (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0,0") (ifseqformula "13"))
                                                               (rule "qeq_literals" (formula "9") (term "0,0,0,0"))
                                                                (builtin "One Step Simplification" (formula "9"))
                                                               (rule "applyEqReverse" (formula "71") (term "2,0") (ifseqformula "9"))
                                                               (rule "hideAuxiliaryEq" (formula "9"))
                                                               (rule "inEqSimp_subsumption1" (formula "79") (ifseqformula "74"))
                                                               (rule "leq_literals" (formula "79") (term "0"))
                                                                (builtin "One Step Simplification" (formula "79"))
                                                               (rule "true_left" (formula "79"))
                                                               (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                                                               (rule "qeq_literals" (formula "2") (term "0"))
                                                                (builtin "One Step Simplification" (formula "2"))
                                                               (rule "closeFalse" (formula "2"))
                                                            )
                                                         )
                                                      )
                                                      (branch "CUT: bucket_starts[indices[j_0]]@anon_heap_LOOP_0<<anonHeapFunction>> <= javaSubInt(_write_0, begin) FALSE"
                                                         (rule "applyEqReverse" (formula "89") (term "1") (ifseqformula "15") (userinteraction))
                                                         (rule "bsum_positive_element_upper_bound" (formula "89") (term "1") (inst "index=int::select(heap, indices, arr(j_0))") (userinteraction))
                                                         (branch "Precondition"
                                                            (rule "andRight" (formula "89"))
                                                            (branch "Case 1"
                                                               (rule "andRight" (formula "89"))
                                                               (branch "Case 1"
                                                                  (rule "allRight" (formula "89") (inst "sk=b_0") (userinteraction))
                                                                  (rule "allLeftHide" (formula "14") (inst "t=b_0") (userinteraction))
                                                                  (rule "impLeft" (formula "14") (userinteraction))
                                                                  (branch "Case 1"
                                                                     (rule "expand_inInt" (formula "117"))
                                                                     (rule "expand_inInt" (formula "88") (term "1"))
                                                                     (rule "expand_inInt" (formula "17") (term "1,0,0"))
                                                                     (rule "replace_int_MIN" (formula "117") (term "0,1"))
                                                                     (rule "replace_int_MAX" (formula "117") (term "1,0"))
                                                                     (rule "replace_int_MIN" (formula "88") (term "0,1,1"))
                                                                     (rule "replace_int_MAX" (formula "88") (term "1,0,1"))
                                                                     (rule "replace_int_MIN" (formula "17") (term "0,1,1,0,0"))
                                                                     (rule "replace_int_MAX" (formula "17") (term "1,0,1,0,0"))
                                                                     (rule "impRight" (formula "89"))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "notLeft" (formula "2"))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "translateJavaSubInt" (formula "16") (term "1"))
                                                                     (rule "translateJavaSubInt" (formula "20") (term "1"))
                                                                     (rule "eqSymm" (formula "90"))
                                                                     (rule "replace_known_left" (formula "88") (term "0,0") (ifseqformula "3"))
                                                                      (builtin "One Step Simplification" (formula "88"))
                                                                     (rule "applyEqReverse" (formula "89") (term "1,0") (ifseqformula "88"))
                                                                     (rule "hideAuxiliaryEq" (formula "88"))
                                                                     (rule "replace_known_left" (formula "90") (term "1,0") (ifseqformula "2"))
                                                                      (builtin "One Step Simplification" (formula "90"))
                                                                     (rule "polySimp_elimSub" (formula "16") (term "1"))
                                                                     (rule "polySimp_elimSub" (formula "20") (term "1"))
                                                                     (rule "polySimp_addComm0" (formula "119") (term "1,1"))
                                                                     (rule "polySimp_addComm0" (formula "119") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "20") (term "1"))
                                                                     (rule "polySimp_addComm0" (formula "20") (term "0,1"))
                                                                     (rule "inEqSimp_leqRight" (formula "92"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_geqRight" (formula "92"))
                                                                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "10"))
                                                                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "76"))
                                                                     (rule "polySimp_mulComm0" (formula "76") (term "1,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "4"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "21") (term "1,1,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "92") (term "0"))
                                                                     (rule "replace_known_left" (formula "92") (term "0") (ifseqformula "3"))
                                                                      (builtin "One Step Simplification" (formula "92"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "58"))
                                                                     (rule "polySimp_mulComm0" (formula "58") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "58") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "58") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "58") (term "0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "9") (term "1,1,0,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "9") (term "0,0,0,0,0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "48"))
                                                                     (rule "polySimp_addComm1" (formula "48") (term "0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "92") (term "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "119") (term "1"))
                                                                     (rule "mul_literals" (formula "119") (term "1,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "119") (term "0,1"))
                                                                     (rule "add_literals" (formula "119") (term "0,0,1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "119") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "119") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "119") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "119") (term "0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "119") (term "0,0"))
                                                                     (rule "add_literals" (formula "119") (term "0,0,0"))
                                                                     (rule "applyEq" (formula "2") (term "1,0,1,0") (ifseqformula "49"))
                                                                     (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "49"))
                                                                     (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "49"))
                                                                     (rule "apply_eq_monomials" (formula "2") (term "1,0") (ifseqformula "18"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "1,0,1,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "1,0"))
                                                                     (rule "add_literals" (formula "2") (term "1,1,1,0"))
                                                                     (rule "times_zero_1" (formula "2") (term "1,1,0"))
                                                                     (rule "add_zero_right" (formula "2") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                     (rule "applyEq" (formula "21") (term "0,1,0,0,1,0,0,0") (ifseqformula "49"))
                                                                     (rule "jmod_axiom" (formula "60") (term "0"))
                                                                     (rule "polySimp_mulLiterals" (formula "60") (term "1,0"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "60"))
                                                                     (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                     (rule "mul_literals" (formula "1") (term "1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "65") (term "1,0,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "65") (term "0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                                     (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "76"))
                                                                     (rule "polySimp_mulComm0" (formula "76") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "76") (term "1"))
                                                                     (rule "mul_literals" (formula "76") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "76") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "76") (term "1,1"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "58"))
                                                                     (rule "polySimp_mulLiterals" (formula "58") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "58") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "48"))
                                                                     (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                                     (rule "mul_literals" (formula "48") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "118") (term "1"))
                                                                     (rule "mul_literals" (formula "118") (term "1,1"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "118") (term "0"))
                                                                     (rule "polySimp_mulLiterals" (formula "118") (term "0,0"))
                                                                     (rule "polySimp_elimOne" (formula "118") (term "0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                                     (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "1,0,1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "21") (term "0,1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,0"))
                                                                     (rule "inEqSimp_subsumption1" (formula "54") (ifseqformula "52"))
                                                                     (rule "leq_literals" (formula "54") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "54"))
                                                                     (rule "true_left" (formula "54"))
                                                                     (rule "inEqSimp_subsumption1" (formula "79") (ifseqformula "74"))
                                                                     (rule "leq_literals" (formula "79") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "79"))
                                                                     (rule "true_left" (formula "79"))
                                                                     (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "50"))
                                                                     (rule "leq_literals" (formula "33") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "33"))
                                                                     (rule "true_left" (formula "33"))
                                                                     (rule "inEqSimp_subsumption1" (formula "46") (ifseqformula "44"))
                                                                     (rule "leq_literals" (formula "46") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "46"))
                                                                     (rule "true_left" (formula "46"))
                                                                     (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "83"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                                                     (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "16") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "16") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "16"))
                                                                     (rule "true_left" (formula "16"))
                                                                     (rule "inEqSimp_subsumption1" (formula "86") (term "1") (ifseqformula "3"))
                                                                     (rule "leq_literals" (formula "86") (term "0,1"))
                                                                      (builtin "One Step Simplification" (formula "86"))
                                                                     (rule "inEqSimp_leqRight" (formula "86"))
                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                     (rule "mul_literals" (formula "1") (term "1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "60") (ifseqformula "58"))
                                                                     (rule "leq_literals" (formula "60") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "true_left" (formula "60"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "10") (term "0,0,0") (ifseqformula "14"))
                                                                     (rule "qeq_literals" (formula "10") (term "0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "10"))
                                                                     (rule "applyEqReverse" (formula "67") (term "2,0") (ifseqformula "10"))
                                                                     (rule "hideAuxiliaryEq" (formula "10"))
                                                                     (rule "inEqSimp_subsumption0" (formula "58") (ifseqformula "59"))
                                                                     (rule "leq_literals" (formula "58") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "58"))
                                                                     (rule "true_left" (formula "58"))
                                                                     (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "10"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                                                     (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "14") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "14") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "14"))
                                                                     (rule "true_left" (formula "14"))
                                                                     (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                                                     (rule "leq_literals" (formula "4") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "true_left" (formula "4"))
                                                                     (rule "pullOutSelect" (formula "2") (term "0") (inst "selectSK=arr_3"))
                                                                     (rule "simplifySelectOfAnon" (formula "2"))
                                                                      (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "106")) (ifInst ""  (formula "37")))
                                                                     (rule "newSym_eq" (formula "55") (inst "l=l_0") (inst "newSymDef=add(mul(begin, Z(0(#))), mul(i, Z(0(#))))"))
                                                                     (rule "times_zero_1" (formula "55") (term "0,1,1"))
                                                                     (rule "times_zero_1" (formula "55") (term "1,1,1"))
                                                                     (rule "add_zero_left" (formula "55") (term "1,1"))
                                                                     (rule "add_zero_right" (formula "55") (term "1"))
                                                                     (rule "applyEq" (formula "56") (term "0,0") (ifseqformula "55"))
                                                                     (rule "polySimp_homoEq" (formula "56"))
                                                                     (rule "polySimp_mulLiterals" (formula "56") (term "1,0"))
                                                                     (rule "polySimp_addComm1" (formula "56") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "56") (term "0,0"))
                                                                     (rule "polySimp_sepPosMonomial" (formula "56"))
                                                                     (rule "polySimp_mulComm0" (formula "56") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "56") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "56") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "56") (term "1,1"))
                                                                     (rule "polySimp_mulComm0" (formula "56") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "56") (term "0,1"))
                                                                     (rule "applyEq" (formula "18") (term "1,2,1,0,0,1,0,0") (ifseqformula "56"))
                                                                     (rule "polySimp_addAssoc" (formula "18") (term "2,1,0,0,1,0,0"))
                                                                     (rule "applyEq" (formula "20") (term "1,2,1,0,0,1,0,0") (ifseqformula "56"))
                                                                     (rule "polySimp_addAssoc" (formula "20") (term "2,1,0,0,1,0,0"))
                                                                     (rule "applyEq" (formula "22") (term "1,2,1,0,0,1,0") (ifseqformula "56"))
                                                                     (rule "polySimp_addAssoc" (formula "22") (term "2,1,0,0,1,0"))
                                                                     (rule "applyEq" (formula "52") (term "1") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "33") (term "0") (ifseqformula "56"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "33"))
                                                                     (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "33") (term "1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "33") (term "0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "33") (term "0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "33") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "33") (term "0"))
                                                                     (rule "applyEq" (formula "19") (term "1,2,1,0,0,1,0,0,0,1,0") (ifseqformula "56"))
                                                                     (rule "polySimp_addAssoc" (formula "19") (term "2,1,0,0,1,0,0,0,1,0"))
                                                                     (rule "applyEq" (formula "53") (term "0,1,1") (ifseqformula "56"))
                                                                     (rule "polySimp_mulComm0" (formula "53") (term "1,1"))
                                                                     (rule "polySimp_rightDist" (formula "53") (term "1,1"))
                                                                     (rule "polySimp_mulAssoc" (formula "53") (term "0,1,1"))
                                                                     (rule "polySimp_mulComm0" (formula "53") (term "0,0,1,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "53") (term "0,1,1"))
                                                                     (rule "polySimp_addComm0" (formula "53") (term "1"))
                                                                     (rule "applyEq" (formula "75") (term "1,2,1,0,0,1,0") (ifseqformula "56"))
                                                                     (rule "polySimp_addAssoc" (formula "75") (term "2,1,0,0,1,0"))
                                                                     (rule "applyEq" (formula "17") (term "1,2,1,0,0,1,0,0") (ifseqformula "56"))
                                                                     (rule "polySimp_addAssoc" (formula "17") (term "2,1,0,0,1,0,0"))
                                                                     (rule "applyEq" (formula "74") (term "1,2,1,0,0,1,0,0") (ifseqformula "56"))
                                                                     (rule "polySimp_addAssoc" (formula "74") (term "2,1,0,0,1,0,0"))
                                                                     (rule "applyEq" (formula "70") (term "1,2,1,0,0,1,0") (ifseqformula "56"))
                                                                     (rule "polySimp_addAssoc" (formula "70") (term "2,1,0,0,1,0"))
                                                                     (rule "applyEq" (formula "55") (term "1,0,0") (ifseqformula "56"))
                                                                     (rule "polySimp_addAssoc" (formula "55") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "55") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "55") (term "0,0"))
                                                                     (rule "add_literals" (formula "55") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "55") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "55") (term "0,0"))
                                                                     (rule "applyEq" (formula "34") (term "0") (ifseqformula "56"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "34"))
                                                                     (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "34") (term "0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "34") (term "0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "34") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                                     (rule "applyEq" (formula "60") (term "5,0") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "21") (term "1,2,1,0,0,1,0,0,1,0") (ifseqformula "56"))
                                                                     (rule "polySimp_addAssoc" (formula "21") (term "2,1,0,0,1,0,0,1,0"))
                                                                     (rule "applyEq" (formula "80") (term "0") (ifseqformula "56"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "80"))
                                                                     (rule "polySimp_mulComm0" (formula "80") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "80") (term "1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "80") (term "0,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "80") (term "0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "80") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "80") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "80") (term "0,0"))
                                                                     (rule "applyEq" (formula "23") (term "1,2,1,0,0,1,0") (ifseqformula "56"))
                                                                     (rule "polySimp_addAssoc" (formula "23") (term "2,1,0,0,1,0"))
                                                                     (rule "applyEq" (formula "81") (term "1,2,1,0,0,1,0,0") (ifseqformula "56"))
                                                                     (rule "polySimp_addAssoc" (formula "81") (term "2,1,0,0,1,0,0"))
                                                                     (rule "applyEq" (formula "82") (term "1,2,1,0,0,1,0,0") (ifseqformula "56"))
                                                                     (rule "polySimp_addAssoc" (formula "82") (term "2,1,0,0,1,0,0"))
                                                                     (rule "applyEq" (formula "19") (term "1,2,1,0,0,1,0,1,0,1,0") (ifseqformula "56"))
                                                                     (rule "polySimp_addAssoc" (formula "19") (term "2,1,0,0,1,0,1,0,1,0"))
                                                                     (rule "applyEq" (formula "65") (term "1,2,1,0,0,1,0,0") (ifseqformula "56"))
                                                                     (rule "polySimp_addAssoc" (formula "65") (term "2,1,0,0,1,0,0"))
                                                                     (rule "applyEq" (formula "2") (term "1,2,1,0,0,2,0,0") (ifseqformula "56"))
                                                                     (rule "polySimp_addAssoc" (formula "2") (term "2,1,0,0,2,0,0"))
                                                                     (rule "applyEq" (formula "16") (term "1,2,1,0,0,1,0,2,0") (ifseqformula "56"))
                                                                     (rule "polySimp_addAssoc" (formula "16") (term "2,1,0,0,1,0,2,0"))
                                                                     (rule "applyEq" (formula "21") (term "4,1,1,0") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "21") (term "0,4,0,1,0") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "65") (term "0,0,2,2,0") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "59") (term "0,0,2,2,0,1,0") (ifseqformula "56"))
                                                                     (rule "applyEq" (formula "20") (term "1,0,1") (ifseqformula "56"))
                                                                     (rule "polySimp_addAssoc" (formula "20") (term "0,1"))
                                                                     (rule "polySimp_addComm0" (formula "20") (term "0,0,1"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                                                     (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "33") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "34"))
                                                                     (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "80"))
                                                                     (rule "polySimp_mulLiterals" (formula "80") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "80") (term "0"))
                                                                     (rule "elementOfUnion" (formula "2") (term "0,0"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "2") (term "1,0,0"))
                                                                     (rule "eqSymm" (formula "2") (term "0,0,1,0,0"))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "91"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "14"))
                                                                     (rule "polySimp_mulComm0" (formula "51") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "51") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "51"))
                                                                     (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "51") (term "0"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "49"))
                                                                     (rule "polySimp_mulComm0" (formula "50") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "50") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "50"))
                                                                     (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "50") (term "0"))
                                                                     (rule "inEqSimp_subsumption0" (formula "35") (ifseqformula "50"))
                                                                     (rule "leq_literals" (formula "35") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "35"))
                                                                     (rule "true_left" (formula "35"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "31"))
                                                                     (rule "polySimp_mulComm0" (formula "52") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "52") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "52"))
                                                                     (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "52") (term "0"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "70") (ifseqformula "6"))
                                                                     (rule "mul_literals" (formula "70") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "70") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "70"))
                                                                     (rule "mul_literals" (formula "70") (term "1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "14"))
                                                                     (rule "mul_literals" (formula "32") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                                                     (rule "mul_literals" (formula "32") (term "1"))
                                                                     (rule "elementOfUnion" (formula "2") (term "0,0"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "2") (term "1,0,0"))
                                                                     (rule "eqSymm" (formula "2") (term "0,0,1,0,0"))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "92"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "elementOfUnion" (formula "2") (term "0,0"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "2") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "elementOfArrayRangeConcrete" (formula "2") (term "1,0,0"))
                                                                     (rule "eqSymm" (formula "2") (term "0,0,1,0,0"))
                                                                     (rule "replace_known_right" (formula "2") (term "0,0,1,0,0") (ifseqformula "87"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "2") (term "0,0,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "2") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "2") (term "0,1,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "2") (term "1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1,1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1,1,0,0"))
                                                                     (rule "mul_literals" (formula "2") (term "0,1,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "1,1,1,0,0"))
                                                                     (rule "replace_known_left" (formula "2") (term "1,0,0") (ifseqformula "5"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "inEqSimp_subsumption1" (formula "2") (term "0,0") (ifseqformula "1"))
                                                                     (rule "leq_literals" (formula "2") (term "0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "applyEqReverse" (formula "3") (term "0") (ifseqformula "2"))
                                                                     (rule "hideAuxiliaryEq" (formula "2"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "58"))
                                                                     (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                                     (rule "mul_literals" (formula "9") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                                     (rule "add_literals" (formula "9") (term "0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                                     (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "54"))
                                                                     (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                                     (rule "mul_literals" (formula "10") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "10") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "10") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                                     (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "44"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                                     (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "0,0"))
                                                                     (rule "add_literals" (formula "4") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                                     (rule "mul_literals" (formula "4") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "54") (ifseqformula "55"))
                                                                     (rule "polySimp_mulComm0" (formula "54") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "54") (term "0"))
                                                                     (rule "polySimp_addComm0" (formula "54") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "54") (term "0"))
                                                                     (rule "add_literals" (formula "54") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "54") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "54") (term "0"))
                                                                     (rule "elimGcdGeq_antec" (formula "54") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(1(#)))"))
                                                                     (rule "polySimp_mulLiterals" (formula "54") (term "1,0,1,0"))
                                                                     (rule "add_zero_right" (formula "54") (term "0,0,0,1,0"))
                                                                     (rule "leq_literals" (formula "54") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "54"))
                                                                     (rule "polySimp_mulLiterals" (formula "54") (term "1,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "54") (term "1,0,0,0,0"))
                                                                     (rule "add_literals" (formula "54") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "54") (term "0,0"))
                                                                     (rule "add_literals" (formula "54") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "54") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "54") (term "0,0"))
                                                                     (rule "leq_literals" (formula "54") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "54"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "61") (ifseqformula "57"))
                                                                     (rule "mul_literals" (formula "61") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "61") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "61"))
                                                                     (rule "polySimp_mulComm0" (formula "61") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "61") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "61") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "61") (term "1,1"))
                                                                     (rule "polySimp_mulComm0" (formula "61") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "61") (term "0,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "35"))
                                                                     (rule "mul_literals" (formula "47") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "47") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                                                     (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                                     (rule "elimGcdLeq_antec" (formula "47") (inst "elimGcdRightDiv=Z(7(2(7(7(1(2(4(3(1(#))))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(1(#)))"))
                                                                     (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0,0,1,0"))
                                                                     (rule "leq_literals" (formula "47") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "47"))
                                                                     (rule "mul_literals" (formula "47") (term "1,0,0,0,0,0"))
                                                                     (rule "neg_literal" (formula "47") (term "0,0,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0"))
                                                                     (rule "polySimp_addLiterals" (formula "47") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "47") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0"))
                                                                     (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "47") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "47") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "47"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "57"))
                                                                     (rule "mul_literals" (formula "34") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                                     (rule "polySimp_mulComm0" (formula "34") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "34") (term "1"))
                                                                     (rule "mul_literals" (formula "34") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "34") (term "1,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "87") (ifseqformula "35"))
                                                                     (rule "polySimp_rightDist" (formula "87") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "87") (term "0"))
                                                                     (rule "polySimp_rightDist" (formula "87") (term "0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "87") (term "1,0,0,0"))
                                                                     (rule "mul_literals" (formula "87") (term "0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "87") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "87") (term "0,0,0"))
                                                                     (rule "add_literals" (formula "87") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "87") (term "0,0"))
                                                                     (rule "add_literals" (formula "87") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "87") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "87") (term "0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "87"))
                                                                     (rule "polySimp_mulLiterals" (formula "87") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "87") (term "0"))
                                                                     (rule "inEqSimp_subsumption0" (formula "78") (ifseqformula "87"))
                                                                     (rule "leq_literals" (formula "78") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "78"))
                                                                     (rule "true_left" (formula "78"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "87") (ifseqformula "54"))
                                                                     (rule "polySimp_rightDist" (formula "87") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "87") (term "0"))
                                                                     (rule "add_literals" (formula "87") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "87") (term "1,0"))
                                                                     (rule "add_zero_right" (formula "87") (term "0"))
                                                                     (rule "polySimp_rightDist" (formula "87") (term "0"))
                                                                     (rule "mul_literals" (formula "87") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "87") (term "1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "87"))
                                                                     (rule "mul_literals" (formula "87") (term "1"))
                                                                     (rule "elimGcdGeq_antec" (formula "87") (inst "elimGcdRightDiv=Z(6(1(#)))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(1(#)))"))
                                                                     (rule "polySimp_mulLiterals" (formula "87") (term "1,0,1,0"))
                                                                     (rule "leq_literals" (formula "87") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "87"))
                                                                     (rule "polySimp_mulLiterals" (formula "87") (term "1,0,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "87") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_addLiterals" (formula "87") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "87") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "87") (term "0,0"))
                                                                     (rule "add_literals" (formula "87") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "87") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "87") (term "0,0"))
                                                                     (rule "leq_literals" (formula "87") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "87"))
                                                                     (rule "inEqSimp_subsumption1" (formula "55") (ifseqformula "87"))
                                                                     (rule "leq_literals" (formula "55") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "55"))
                                                                     (rule "true_left" (formula "55"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "87") (ifseqformula "32"))
                                                                     (rule "polySimp_rightDist" (formula "87") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "87") (term "0"))
                                                                     (rule "polySimp_rightDist" (formula "87") (term "0,0,0"))
                                                                     (rule "mul_literals" (formula "87") (term "0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "87") (term "1,0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "87") (term "0,0"))
                                                                     (rule "add_literals" (formula "87") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "87"))
                                                                     (rule "polySimp_mulLiterals" (formula "87") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "87") (term "0"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "54"))
                                                                     (rule "polySimp_rightDist" (formula "36") (term "0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "36") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "36"))
                                                                     (rule "polySimp_mulComm0" (formula "36") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "36") (term "1"))
                                                                     (rule "mul_literals" (formula "36") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "32"))
                                                                     (rule "polySimp_rightDist" (formula "37") (term "0,0"))
                                                                     (rule "mul_literals" (formula "37") (term "0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "37") (term "0"))
                                                                     (rule "add_literals" (formula "37") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                                                     (rule "mul_literals" (formula "37") (term "1"))
                                                                     (rule "inEqSimp_subsumption6" (formula "37") (ifseqformula "88"))
                                                                     (rule "mul_literals" (formula "37") (term "1,1,0"))
                                                                     (rule "greater_literals" (formula "37") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "leq_literals" (formula "37") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "37"))
                                                                     (rule "true_left" (formula "37"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "53"))
                                                                     (rule "polySimp_mulComm0" (formula "50") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "50") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "50"))
                                                                     (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "50") (term "0"))
                                                                     (rule "inEqSimp_subsumption0" (formula "32") (ifseqformula "50"))
                                                                     (rule "leq_literals" (formula "32") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "32"))
                                                                     (rule "true_left" (formula "32"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "11"))
                                                                     (rule "mul_literals" (formula "15") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "15") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                                                     (rule "polySimp_mulComm0" (formula "15") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "15") (term "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "15") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "15") (term "1,1"))
                                                                     (rule "polySimp_rightDist" (formula "15") (term "0,1"))
                                                                     (rule "mul_literals" (formula "15") (term "0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "63") (ifseqformula "15"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "63") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "63") (term "1,0,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "63") (term "0,1,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "63") (term "0,0,1,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "63") (term "0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "63") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "63") (term "0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "63") (term "0,0"))
                                                                     (rule "add_literals" (formula "63") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "63") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "63") (term "0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "63") (term "0,0"))
                                                                     (rule "add_literals" (formula "63") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "63") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "63") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "63") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "63"))
                                                                     (rule "true_left" (formula "63"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "56"))
                                                                     (rule "mul_literals" (formula "49") (term "0,0"))
                                                                     (rule "add_zero_left" (formula "49") (term "0"))
                                                                     (rule "inEqSimp_subsumption1" (formula "79") (ifseqformula "49"))
                                                                     (rule "leq_literals" (formula "79") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "79"))
                                                                     (rule "true_left" (formula "79"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "76") (ifseqformula "46"))
                                                                     (rule "mul_literals" (formula "76") (term "0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "76") (term "0"))
                                                                     (rule "add_literals" (formula "76") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "76"))
                                                                     (rule "mul_literals" (formula "76") (term "1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "44") (ifseqformula "76"))
                                                                     (rule "leq_literals" (formula "44") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "44"))
                                                                     (rule "true_left" (formula "44"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "44"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                                                     (rule "mul_literals" (formula "4") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                     (rule "add_literals" (formula "4") (term "0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "1"))
                                                                     (rule "qeq_literals" (formula "4") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "closeFalse" (formula "4"))
                                                                  )
                                                                  (branch "Case 2"
                                                                     (rule "Definition_axiom_for_countClassOfSliceEq_in_de_wiesler_Classifier" (formula "14") (term "1") (inst "i=i_1") (userinteraction))
                                                                     (rule "bsum_positive1" (formula "14") (term "1") (userinteraction))
                                                                     (rule "expand_inInt" (formula "19") (term "1,0,0"))
                                                                     (rule "expand_inInt" (formula "118"))
                                                                     (rule "replace_int_MAX" (formula "19") (term "1,0,1,0,0"))
                                                                     (rule "replace_int_MIN" (formula "19") (term "0,1,1,0,0"))
                                                                     (rule "replace_int_MIN" (formula "118") (term "0,1"))
                                                                     (rule "replace_int_MAX" (formula "118") (term "1,0"))
                                                                     (rule "impRight" (formula "90"))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "andLeft" (formula "1"))
                                                                     (rule "notLeft" (formula "3"))
                                                                     (rule "translateJavaSubInt" (formula "22") (term "1"))
                                                                     (rule "translateJavaSubInt" (formula "18") (term "1"))
                                                                     (rule "eqSymm" (formula "17"))
                                                                     (rule "eqSymm" (formula "92"))
                                                                     (rule "replace_known_left" (formula "90") (term "0,0") (ifseqformula "3"))
                                                                      (builtin "One Step Simplification" (formula "90"))
                                                                     (rule "applyEqReverse" (formula "91") (term "1,0") (ifseqformula "90"))
                                                                     (rule "hideAuxiliaryEq" (formula "90"))
                                                                     (rule "polySimp_elimSub" (formula "22") (term "1"))
                                                                     (rule "polySimp_elimSub" (formula "18") (term "1"))
                                                                     (rule "polySimp_addComm0" (formula "120") (term "1,1"))
                                                                     (rule "polySimp_addComm0" (formula "120") (term "0,0"))
                                                                     (rule "polySimp_addComm1" (formula "22") (term "1"))
                                                                     (rule "polySimp_addComm0" (formula "22") (term "0,1"))
                                                                     (rule "inEqSimp_leqRight" (formula "93"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_geqRight" (formula "93"))
                                                                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "1") (term "0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "10"))
                                                                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "78"))
                                                                     (rule "polySimp_mulComm0" (formula "78") (term "1,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "4"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_commuteLeq" (formula "23") (term "1,1,0,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "60"))
                                                                     (rule "polySimp_mulComm0" (formula "60") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "60") (term "1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "60") (term "0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "60") (term "0"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "50"))
                                                                     (rule "polySimp_addComm1" (formula "50") (term "0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "9") (term "0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "9") (term "1,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "9") (term "0,1,0,0,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "9") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0,0,0,0"))
                                                                     (rule "add_literals" (formula "9") (term "1,1,0,0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
                                                                     (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "120") (term "1"))
                                                                     (rule "mul_literals" (formula "120") (term "1,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "120") (term "0,1"))
                                                                     (rule "add_literals" (formula "120") (term "0,0,1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "120") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "120") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "120") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "120") (term "0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "120") (term "0,0"))
                                                                     (rule "add_literals" (formula "120") (term "0,0,0"))
                                                                     (rule "applyEq" (formula "2") (term "1,0,1,0") (ifseqformula "51"))
                                                                     (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "51"))
                                                                     (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "51"))
                                                                     (rule "apply_eq_monomials" (formula "2") (term "1,0") (ifseqformula "20"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "2") (term "1,0"))
                                                                     (rule "add_literals" (formula "2") (term "1,1,1,0"))
                                                                     (rule "times_zero_1" (formula "2") (term "1,1,0"))
                                                                     (rule "add_zero_right" (formula "2") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                     (rule "applyEq" (formula "23") (term "0,1,0,0,1,0,0,0") (ifseqformula "51"))
                                                                     (rule "jmod_axiom" (formula "62") (term "0"))
                                                                     (rule "polySimp_mulLiterals" (formula "62") (term "1,0"))
                                                                     (rule "polySimp_sepNegMonomial" (formula "62"))
                                                                     (rule "polySimp_mulLiterals" (formula "62") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                                     (rule "mul_literals" (formula "1") (term "1"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "10"))
                                                                     (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "78"))
                                                                     (rule "polySimp_mulComm0" (formula "78") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "78") (term "1"))
                                                                     (rule "mul_literals" (formula "78") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "78") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "78") (term "1,1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "67") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "67") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "67") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "67") (term "0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "67") (term "1,1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "60"))
                                                                     (rule "polySimp_mulLiterals" (formula "60") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "60") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "50"))
                                                                     (rule "polySimp_mulComm0" (formula "50") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "50") (term "1"))
                                                                     (rule "mul_literals" (formula "50") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "50") (term "1,1"))
                                                                     (rule "polySimp_elimOne" (formula "50") (term "1,1"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "9") (term "0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "9") (term "0,0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "119") (term "1"))
                                                                     (rule "mul_literals" (formula "119") (term "1,1"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "119") (term "0"))
                                                                     (rule "polySimp_mulLiterals" (formula "119") (term "0,0"))
                                                                     (rule "polySimp_elimOne" (formula "119") (term "0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                                     (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "1,0,1"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0"))
                                                                     (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0"))
                                                                     (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "10"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                                                     (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "14") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "14") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "14"))
                                                                     (rule "true_left" (formula "14"))
                                                                     (rule "inEqSimp_subsumption1" (formula "64") (ifseqformula "62"))
                                                                     (rule "leq_literals" (formula "64") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "64"))
                                                                     (rule "true_left" (formula "64"))
                                                                     (rule "inEqSimp_subsumption1" (formula "55") (ifseqformula "53"))
                                                                     (rule "leq_literals" (formula "55") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "55"))
                                                                     (rule "true_left" (formula "55"))
                                                                     (rule "inEqSimp_subsumption1" (formula "48") (ifseqformula "46"))
                                                                     (rule "leq_literals" (formula "48") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "48"))
                                                                     (rule "true_left" (formula "48"))
                                                                     (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "85"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "15") (term "0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0"))
                                                                     (rule "add_literals" (formula "15") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "15") (term "1,0,0"))
                                                                     (rule "add_zero_right" (formula "15") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "15") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "15"))
                                                                     (rule "true_left" (formula "15"))
                                                                     (rule "inEqSimp_subsumption0" (formula "60") (ifseqformula "61"))
                                                                     (rule "leq_literals" (formula "60") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "60"))
                                                                     (rule "true_left" (formula "60"))
                                                                     (rule "inEqSimp_subsumption1" (formula "76") (ifseqformula "71"))
                                                                     (rule "leq_literals" (formula "76") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "76"))
                                                                     (rule "true_left" (formula "76"))
                                                                     (rule "inEqSimp_subsumption1" (formula "33") (ifseqformula "49"))
                                                                     (rule "leq_literals" (formula "33") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "33"))
                                                                     (rule "true_left" (formula "33"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "9") (term "0,0,0") (ifseqformula "13"))
                                                                     (rule "qeq_literals" (formula "9") (term "0,0,0,0"))
                                                                      (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "applyEqReverse" (formula "66") (term "2,0") (ifseqformula "9"))
                                                                     (rule "hideAuxiliaryEq" (formula "9"))
                                                                     (rule "pullOutSelect" (formula "16") (term "1") (inst "selectSK=arr_3"))
                                                                     (rule "applyEq" (formula "15") (term "0") (ifseqformula "17"))
                                                                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "16"))
                                                                     (rule "simplifySelectOfAnon" (formula "16"))
                                                                      (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "108")) (ifInst ""  (formula "39")))
                                                                     (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "15"))
                                                                     (rule "qeq_literals" (formula "1") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "closeFalse" (formula "1"))
                                                                  )
                                                               )
                                                               (branch "Case 2"
                                                                  (rule "expand_inInt" (formula "117"))
                                                                  (rule "expand_inInt" (formula "14") (term "1,0,0"))
                                                                  (rule "expand_inInt" (formula "18") (term "1,0,0"))
                                                                  (rule "replace_int_MIN" (formula "117") (term "0,1"))
                                                                  (rule "replace_int_MAX" (formula "117") (term "1,0"))
                                                                  (rule "replace_int_MIN" (formula "14") (term "0,1,1,0,0"))
                                                                  (rule "replace_int_MAX" (formula "14") (term "1,0,1,0,0"))
                                                                  (rule "replace_int_MIN" (formula "18") (term "0,1,1,0,0"))
                                                                  (rule "replace_int_MAX" (formula "18") (term "1,0,1,0,0"))
                                                                  (rule "translateJavaSubInt" (formula "15") (term "1"))
                                                                  (rule "translateJavaSubInt" (formula "19") (term "1"))
                                                                  (rule "replace_known_left" (formula "87") (term "0,0") (ifseqformula "1"))
                                                                   (builtin "One Step Simplification" (formula "87"))
                                                                  (rule "applyEqReverse" (formula "88") (term "1,0") (ifseqformula "87"))
                                                                  (rule "hideAuxiliaryEq" (formula "87"))
                                                                  (rule "polySimp_elimSub" (formula "15") (term "1"))
                                                                  (rule "polySimp_elimSub" (formula "19") (term "1"))
                                                                  (rule "polySimp_addComm0" (formula "116") (term "0,0"))
                                                                  (rule "polySimp_addComm0" (formula "116") (term "1,1"))
                                                                  (rule "polySimp_addComm1" (formula "19") (term "1"))
                                                                  (rule "polySimp_addComm0" (formula "19") (term "0,1"))
                                                                  (rule "inEqSimp_leqRight" (formula "89"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_leqRight" (formula "89"))
                                                                  (rule "add_zero_right" (formula "1") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "8"))
                                                                  (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "75"))
                                                                  (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "16") (term "1,1,0,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "20") (term "1,1,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
                                                                  (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "47"))
                                                                  (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "57"))
                                                                  (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "57") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "116") (term "0"))
                                                                  (rule "polySimp_mulComm0" (formula "116") (term "1,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "116") (term "1,0,0"))
                                                                  (rule "mul_literals" (formula "116") (term "0,1,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "116") (term "0,0"))
                                                                  (rule "add_literals" (formula "116") (term "0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "116") (term "1"))
                                                                  (rule "mul_literals" (formula "116") (term "1,0,1"))
                                                                  (rule "polySimp_addComm1" (formula "116") (term "0,1"))
                                                                  (rule "add_literals" (formula "116") (term "0,0,1"))
                                                                  (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "48"))
                                                                  (rule "applyEq" (formula "2") (term "1,0,1,0") (ifseqformula "48"))
                                                                  (rule "apply_eq_monomials" (formula "2") (term "1,0") (ifseqformula "17"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                                  (rule "polySimp_pullOutFactor0b" (formula "2") (term "1,0"))
                                                                  (rule "add_literals" (formula "2") (term "1,1,1,0"))
                                                                  (rule "times_zero_1" (formula "2") (term "1,1,0"))
                                                                  (rule "add_zero_right" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                                                                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                                  (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0,0") (ifseqformula "48"))
                                                                  (rule "applyEq" (formula "20") (term "0,1,0,0,1,0,0,0") (ifseqformula "48"))
                                                                  (rule "jmod_axiom" (formula "59") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "59") (term "1,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "59"))
                                                                  (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                                  (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "75"))
                                                                  (rule "polySimp_mulComm0" (formula "75") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "75") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "75") (term "1,1"))
                                                                  (rule "mul_literals" (formula "75") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "75") (term "1,1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "7") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "7") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "47"))
                                                                  (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "47") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                                                                  (rule "mul_literals" (formula "47") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "47") (term "1,1"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "57"))
                                                                  (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "57") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "115") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "115") (term "0,0"))
                                                                  (rule "polySimp_elimOne" (formula "115") (term "0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "1"))
                                                                  (rule "mul_literals" (formula "115") (term "1,1"))
                                                                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                                  (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                                  (rule "polySimp_elimOne" (formula "2") (term "1,0,1"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0"))
                                                                  (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0"))
                                                                  (rule "inEqSimp_subsumption1" (formula "46") (ifseqformula "44"))
                                                                  (rule "leq_literals" (formula "46") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "46"))
                                                                  (rule "true_left" (formula "46"))
                                                                  (rule "inEqSimp_subsumption0" (formula "60") (ifseqformula "62"))
                                                                  (rule "leq_literals" (formula "60") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "60"))
                                                                  (rule "true_left" (formula "60"))
                                                                  (rule "inEqSimp_subsumption1" (formula "60") (ifseqformula "59"))
                                                                  (rule "leq_literals" (formula "60") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "60"))
                                                                  (rule "true_left" (formula "60"))
                                                                  (rule "inEqSimp_subsumption1" (formula "52") (ifseqformula "50"))
                                                                  (rule "leq_literals" (formula "52") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "true_left" (formula "52"))
                                                                  (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "8"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                                                  (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                                  (rule "add_zero_right" (formula "12") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "12") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "true_left" (formula "12"))
                                                                  (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "47"))
                                                                  (rule "leq_literals" (formula "31") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "31"))
                                                                  (rule "true_left" (formula "31"))
                                                                  (rule "inEqSimp_subsumption0" (formula "72") (ifseqformula "1"))
                                                                  (rule "leq_literals" (formula "72") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "72"))
                                                                  (rule "true_left" (formula "72"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "68") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "68") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "68"))
                                                                  (rule "closeFalse" (formula "68"))
                                                               )
                                                            )
                                                            (branch "Case 2"
                                                               (rule "expand_inInt" (formula "117"))
                                                               (rule "expand_inInt" (formula "14") (term "1,0,0"))
                                                               (rule "expand_inInt" (formula "18") (term "1,0,0"))
                                                               (rule "replace_int_MAX" (formula "117") (term "1,0"))
                                                               (rule "replace_int_MIN" (formula "117") (term "0,1"))
                                                               (rule "replace_int_MAX" (formula "14") (term "1,0,1,0,0"))
                                                               (rule "replace_int_MIN" (formula "14") (term "0,1,1,0,0"))
                                                               (rule "replace_int_MAX" (formula "18") (term "1,0,1,0,0"))
                                                               (rule "replace_int_MIN" (formula "18") (term "0,1,1,0,0"))
                                                               (rule "translateJavaSubInt" (formula "15") (term "1"))
                                                               (rule "translateJavaSubInt" (formula "19") (term "1"))
                                                               (rule "replace_known_left" (formula "87") (term "0,0") (ifseqformula "1"))
                                                                (builtin "One Step Simplification" (formula "87"))
                                                               (rule "applyEqReverse" (formula "88") (term "1,0") (ifseqformula "87"))
                                                               (rule "hideAuxiliaryEq" (formula "87"))
                                                               (rule "polySimp_elimSub" (formula "15") (term "1"))
                                                               (rule "polySimp_elimSub" (formula "19") (term "1"))
                                                               (rule "polySimp_addComm0" (formula "116") (term "1,1"))
                                                               (rule "polySimp_addComm0" (formula "116") (term "0,0"))
                                                               (rule "polySimp_addComm1" (formula "19") (term "1"))
                                                               (rule "polySimp_addComm0" (formula "19") (term "0,1"))
                                                               (rule "inEqSimp_leqRight" (formula "89"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "inEqSimp_ltRight" (formula "89"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "75"))
                                                               (rule "polySimp_mulComm0" (formula "75") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "8"))
                                                               (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "20") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "16") (term "1,1,0,0"))
                                                               (rule "inEqSimp_commuteLeq" (formula "20") (term "1,1,0,0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "47"))
                                                               (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "7") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "7") (term "1,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "7") (term "0,1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "7") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "7") (term "1,1,0,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
                                                               (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "57"))
                                                               (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "57") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "57") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "116") (term "1"))
                                                               (rule "mul_literals" (formula "116") (term "1,0,1"))
                                                               (rule "polySimp_addComm1" (formula "116") (term "0,1"))
                                                               (rule "add_literals" (formula "116") (term "0,0,1"))
                                                               (rule "inEqSimp_homoInEq0" (formula "116") (term "0"))
                                                               (rule "polySimp_mulComm0" (formula "116") (term "1,0,0"))
                                                               (rule "polySimp_rightDist" (formula "116") (term "1,0,0"))
                                                               (rule "mul_literals" (formula "116") (term "0,1,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "116") (term "0,0"))
                                                               (rule "add_literals" (formula "116") (term "0,0,0"))
                                                               (rule "applyEq" (formula "17") (term "1,0") (ifseqformula "48"))
                                                               (rule "applyEq" (formula "2") (term "1,0,1,0") (ifseqformula "48"))
                                                               (rule "apply_eq_monomials" (formula "2") (term "1,0") (ifseqformula "17"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                               (rule "polySimp_pullOutFactor0b" (formula "2") (term "1,0"))
                                                               (rule "add_literals" (formula "2") (term "1,1,1,0"))
                                                               (rule "times_zero_1" (formula "2") (term "1,1,0"))
                                                               (rule "add_zero_right" (formula "2") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,1,0"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                                                               (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                               (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                               (rule "applyEq" (formula "1") (term "0,0,0") (ifseqformula "48"))
                                                               (rule "applyEq" (formula "20") (term "0,1,0,0,1,0,0,0") (ifseqformula "48"))
                                                               (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0,0") (ifseqformula "48"))
                                                               (rule "jmod_axiom" (formula "59") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "59") (term "1,0"))
                                                               (rule "polySimp_sepNegMonomial" (formula "59"))
                                                               (rule "polySimp_mulLiterals" (formula "59") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "64") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "64") (term "1,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "75"))
                                                               (rule "polySimp_mulComm0" (formula "75") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "75") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "75") (term "1,1"))
                                                               (rule "mul_literals" (formula "75") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "75") (term "1,1"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                               (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "47"))
                                                               (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "47") (term "1"))
                                                               (rule "mul_literals" (formula "47") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "47") (term "1,1"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "7") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "7") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "57"))
                                                               (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "57") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "115") (term "1"))
                                                               (rule "mul_literals" (formula "115") (term "1,1"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "115") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "115") (term "0,0"))
                                                               (rule "polySimp_elimOne" (formula "115") (term "0,0"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                               (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1"))
                                                               (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                               (rule "polySimp_elimOne" (formula "2") (term "1,0,1"))
                                                               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "20") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,0"))
                                                               (rule "mul_literals" (formula "16") (term "0,1,1,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,0"))
                                                               (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "86"))
                                                               (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                                               (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "14") (term "0,0"))
                                                               (rule "qeq_literals" (formula "14") (term "0"))
                                                                (builtin "One Step Simplification" (formula "14"))
                                                               (rule "true_left" (formula "14"))
                                                               (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "8"))
                                                               (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                                               (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                               (rule "add_zero_right" (formula "12") (term "0,0"))
                                                               (rule "qeq_literals" (formula "12") (term "0"))
                                                                (builtin "One Step Simplification" (formula "12"))
                                                               (rule "true_left" (formula "12"))
                                                               (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "1"))
                                                               (rule "andLeft" (formula "3"))
                                                               (rule "inEqSimp_homoInEq1" (formula "3"))
                                                               (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                               (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                               (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                               (rule "add_literals" (formula "3") (term "1,1,0"))
                                                               (rule "times_zero_1" (formula "3") (term "1,0"))
                                                               (rule "add_zero_right" (formula "3") (term "0"))
                                                               (rule "leq_literals" (formula "3"))
                                                               (rule "closeFalse" (formula "3"))
                                                            )
                                                         )
                                                         (branch "Usage"
                                                            (rule "replaceKnownSelect_taclet20001212010001_3" (formula "1") (term "0"))
                                                            (rule "expand_inInt" (formula "117"))
                                                            (rule "expand_inInt" (formula "15") (term "1,0,0"))
                                                            (rule "expand_inInt" (formula "19") (term "1,0,0"))
                                                            (rule "replace_int_MAX" (formula "117") (term "1,0"))
                                                            (rule "replace_int_MIN" (formula "117") (term "0,1"))
                                                            (rule "replace_int_MAX" (formula "15") (term "1,0,1,0,0"))
                                                            (rule "replace_int_MIN" (formula "15") (term "0,1,1,0,0"))
                                                            (rule "replace_int_MAX" (formula "19") (term "1,0,1,0,0"))
                                                            (rule "replace_int_MIN" (formula "19") (term "0,1,1,0,0"))
                                                            (rule "translateJavaSubInt" (formula "16") (term "1"))
                                                            (rule "translateJavaSubInt" (formula "20") (term "1"))
                                                            (rule "replace_known_left" (formula "88") (term "0,0") (ifseqformula "2"))
                                                             (builtin "One Step Simplification" (formula "88"))
                                                            (rule "applyEqReverse" (formula "89") (term "1,0") (ifseqformula "88"))
                                                            (rule "applyEqReverse" (formula "1") (term "0") (ifseqformula "88"))
                                                            (rule "close" (formula "90") (ifseqformula "1"))
                                                         )
                                                      )
                                                   )
                                                   (branch "indices[j_0] <= -1 + buffers.num_buckets FALSE"
                                                      (rule "expand_inInt" (formula "110"))
                                                      (rule "replace_int_MIN" (formula "110") (term "0,1"))
                                                      (rule "replace_int_MAX" (formula "110") (term "1,0"))
                                                      (rule "replace_known_right" (formula "81") (term "0,0") (ifseqformula "109"))
                                                       (builtin "One Step Simplification" (formula "81"))
                                                      (rule "applyEqReverse" (formula "82") (term "1,0") (ifseqformula "81"))
                                                      (rule "hideAuxiliaryEq" (formula "81"))
                                                      (rule "polySimp_addComm0" (formula "109") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "109") (term "1,1"))
                                                      (rule "inEqSimp_leqRight" (formula "108"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "68"))
                                                      (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "50"))
                                                      (rule "polySimp_mulComm0" (formula "50") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "50") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "50") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "5") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "40"))
                                                      (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "109") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "109") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "109") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "109") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "109") (term "0,0"))
                                                      (rule "add_literals" (formula "109") (term "0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "109") (term "1"))
                                                      (rule "mul_literals" (formula "109") (term "1,0,1"))
                                                      (rule "polySimp_addComm1" (formula "109") (term "0,1"))
                                                      (rule "add_literals" (formula "109") (term "0,0,1"))
                                                      (rule "jmod_axiom" (formula "52") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "52") (term "1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "52"))
                                                      (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "68"))
                                                      (rule "polySimp_mulComm0" (formula "68") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "68") (term "1"))
                                                      (rule "mul_literals" (formula "68") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "68") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "68") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "50"))
                                                      (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "50") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "5") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "40"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "40") (term "1"))
                                                      (rule "mul_literals" (formula "40") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "109") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "109") (term "0,0"))
                                                      (rule "polySimp_elimOne" (formula "109") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "109") (term "1"))
                                                      (rule "mul_literals" (formula "109") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "73") (ifseqformula "67"))
                                                      (rule "leq_literals" (formula "73") (term "0"))
                                                       (builtin "One Step Simplification" (formula "73"))
                                                      (rule "true_left" (formula "73"))
                                                      (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "79"))
                                                      (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                                      (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "12") (term "0,0"))
                                                      (rule "qeq_literals" (formula "12") (term "0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "36"))
                                                      (rule "leq_literals" (formula "38") (term "0"))
                                                       (builtin "One Step Simplification" (formula "38"))
                                                      (rule "true_left" (formula "38"))
                                                      (rule "inEqSimp_subsumption1" (formula "53") (ifseqformula "51"))
                                                      (rule "leq_literals" (formula "53") (term "0"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "true_left" (formula "53"))
                                                      (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "40"))
                                                      (rule "leq_literals" (formula "24") (term "0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "true_left" (formula "24"))
                                                      (rule "inEqSimp_subsumption0" (formula "51") (ifseqformula "52"))
                                                      (rule "leq_literals" (formula "51") (term "0"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "true_left" (formula "51"))
                                                      (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "63"))
                                                      (rule "andLeft" (formula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                )
                                                (branch "Usage"
                                                    (builtin "One Step Simplification" (formula "109"))
                                                   (rule "translateJavaAddInt" (formula "109") (term "0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "109") (term "0,1,0"))
                                                   (rule "widening_identity_cast_5" (formula "109") (term "1"))
                                                   (rule "assignment" (formula "109") (term "1"))
                                                    (builtin "One Step Simplification" (formula "109"))
                                                   (rule "assignment_to_primitive_array_component" (formula "109"))
                                                   (branch "Normal Execution (x_arr_2 != null)"
                                                       (builtin "One Step Simplification" (formula "109"))
                                                       (builtin "Use Operation Contract" (formula "109") (newnames "heapBefore_flush,exc_30,heapAfter_flush,anon_heap_flush") (contract "de.wiesler.Buffers[de.wiesler.Buffers::flush(int,[I,int,int)].JML normal_behavior operation contract.0"))
                                                      (branch "Post (flush)"
                                                          (builtin "One Step Simplification" (formula "84"))
                                                          (builtin "One Step Simplification" (formula "111"))
                                                          (builtin "Block Contract (Internal)" (formula "111") (newnames "result_26,exc_31,heap_Before_BLOCK_3,savedHeap_Before_BLOCK_3,o,f"))
                                                         (branch "Validity"
                                                             (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "33")) (ifInst ""  (formula "20")) (ifInst ""  (formula "107")))
                                                             (builtin "One Step Simplification" (formula "112"))
                                                            (rule "expand_inInt" (formula "84") (term "0,0,0,1,1,1,0,1"))
                                                            (rule "expand_inInt" (formula "84") (term "1,0,0,0,1,1,0,1"))
                                                            (rule "replace_int_MIN" (formula "84") (term "0,1,0,0,0,1,1,1,0,1"))
                                                            (rule "replace_int_MAX" (formula "84") (term "1,0,0,0,0,1,1,1,0,1"))
                                                            (rule "replace_int_MAX" (formula "84") (term "1,0,1,0,0,0,1,1,0,1"))
                                                            (rule "replace_int_MIN" (formula "84") (term "0,1,1,0,0,0,1,1,0,1"))
                                                            (rule "andLeft" (formula "85"))
                                                            (rule "andLeft" (formula "84"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "87") (ifseqformula "84"))
                                                            (rule "andLeft" (formula "85"))
                                                            (rule "andLeft" (formula "86"))
                                                            (rule "andLeft" (formula "85"))
                                                            (rule "andLeft" (formula "85"))
                                                            (rule "andLeft" (formula "86"))
                                                            (rule "andLeft" (formula "87"))
                                                            (rule "andLeft" (formula "88"))
                                                            (rule "eqSymm" (formula "120") (term "0,0,1,0,1"))
                                                            (rule "translateJavaSubInt" (formula "84") (term "2,1,1,0"))
                                                            (rule "translateJavaAddInt" (formula "86") (term "0,2,1,1,0"))
                                                            (rule "translateJavaAddInt" (formula "86") (term "0,2,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "87") (term "3,0,1,1,0"))
                                                            (rule "eqSymm" (formula "88"))
                                                            (rule "translateJavaAddInt" (formula "84") (term "0,2,1,1,0"))
                                                            (rule "translateJavaMulInt" (formula "86") (term "0,0,2,1,1,0"))
                                                            (rule "eqSymm" (formula "87") (term "1,0"))
                                                            (rule "translateJavaSubInt" (formula "88") (term "0"))
                                                            (rule "eqSymm" (formula "86") (term "1,0"))
                                                            (rule "translateJavaAddInt" (formula "87") (term "0,1,0"))
                                                            (rule "polySimp_elimSub" (formula "84") (term "2,1,1,0"))
                                                            (rule "mul_literals" (formula "84") (term "1,2,1,1,0"))
                                                            (rule "polySimp_addLiterals" (formula "84") (term "2,1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "88") (term "0"))
                                                            (rule "mul_literals" (formula "88") (term "1,0"))
                                                            (rule "polySimp_addComm0" (formula "87") (term "3,0,0,1,0"))
                                                            (rule "polySimp_addComm0" (formula "84") (term "2,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "88") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "87") (term "0,1,0"))
                                                            (rule "dismissNonSelectedField" (formula "93") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "19")))
                                                            (rule "true_left" (formula "93"))
                                                            (rule "inEqSimp_commuteLeq" (formula "86") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "86") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "87") (term "1,0,0"))
                                                            (rule "variableDeclarationAssign" (formula "119") (term "1"))
                                                            (rule "variableDeclaration" (formula "119") (term "1") (newnames "exc_31_1"))
                                                            (rule "assignment" (formula "119") (term "1"))
                                                             (builtin "One Step Simplification" (formula "119"))
                                                            (rule "emptyStatement" (formula "119") (term "1"))
                                                             (builtin "One Step Simplification" (formula "119"))
                                                            (rule "emptyStatement" (formula "119") (term "1"))
                                                            (rule "commute_and" (formula "87") (term "0,0"))
                                                            (rule "commute_and" (formula "86") (term "1,0,0"))
                                                            (rule "commute_and" (formula "86") (term "0,0,0"))
                                                            (rule "shift_paren_and" (formula "86") (term "0,0"))
                                                            (rule "commute_and_2" (formula "86") (term "0,0,0"))
                                                            (rule "tryEmpty" (formula "119") (term "1"))
                                                            (rule "blockEmptyLabel" (formula "119") (term "1"))
                                                            (rule "blockEmpty" (formula "119") (term "1"))
                                                            (rule "methodCallEmpty" (formula "119") (term "1"))
                                                            (rule "emptyModality" (formula "119") (term "1"))
                                                            (rule "andRight" (formula "119"))
                                                            (branch "Case 1"
                                                                (builtin "One Step Simplification" (formula "119"))
                                                               (rule "closeTrue" (formula "119"))
                                                            )
                                                            (branch "Case 2"
                                                                (builtin "One Step Simplification" (formula "119"))
                                                               (rule "closeTrue" (formula "119"))
                                                            )
                                                         )
                                                         (branch "Precondition"
                                                            (rule "andRight" (formula "111"))
                                                            (branch "Case 1"
                                                               (rule "andRight" (formula "111"))
                                                               (branch "Case 1"
                                                                   (builtin "One Step Simplification" (formula "111") (ifInst ""  (formula "33")))
                                                                  (rule "closeTrue" (formula "111"))
                                                               )
                                                               (branch "Case 2"
                                                                   (builtin "One Step Simplification" (formula "111"))
                                                                  (rule "expand_inInt" (formula "84") (term "1,0,0,0,1,1,0,1"))
                                                                  (rule "expand_inInt" (formula "84") (term "0,0,0,1,1,1,0,1"))
                                                                  (rule "replace_int_MAX" (formula "84") (term "1,0,1,0,0,0,1,1,0,1"))
                                                                  (rule "replace_int_MIN" (formula "84") (term "0,1,1,0,0,0,1,1,0,1"))
                                                                  (rule "replace_int_MAX" (formula "84") (term "1,0,0,0,0,1,1,1,0,1"))
                                                                  (rule "replace_int_MIN" (formula "84") (term "0,1,0,0,0,1,1,1,0,1"))
                                                                  (rule "andLeft" (formula "84"))
                                                                  (rule "wellFormedAnonEQ" (formula "112") (ifseqformula "84"))
                                                                  (rule "wellFormedStorePrimitiveArray" (formula "112") (term "0"))
                                                                  (rule "wellFormedAnon" (formula "112") (term "0"))
                                                                  (rule "andLeft" (formula "85"))
                                                                  (rule "andLeft" (formula "86"))
                                                                  (rule "andLeft" (formula "85"))
                                                                  (rule "andLeft" (formula "85"))
                                                                  (rule "andLeft" (formula "86"))
                                                                  (rule "andLeft" (formula "87"))
                                                                  (rule "andLeft" (formula "88"))
                                                                  (rule "translateJavaSubInt" (formula "84") (term "2,1,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "86") (term "0,2,0,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "86") (term "0,2,1,1,0"))
                                                                  (rule "translateJavaAddInt" (formula "87") (term "1,1,0"))
                                                                  (rule "translateJavaSubInt" (formula "88") (term "1"))
                                                                  (rule "translateJavaAddInt" (formula "84") (term "0,2,1,1,0"))
                                                                  (rule "eqSymm" (formula "86") (term "1,0"))
                                                                  (rule "translateJavaAddInt" (formula "87") (term "3,0,1,1,0"))
                                                                  (rule "eqSymm" (formula "88"))
                                                                  (rule "translateJavaMulInt" (formula "86") (term "0,0,2,0,1,0"))
                                                                  (rule "replace_known_left" (formula "118") (term "1") (ifseqformula "83"))
                                                                   (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "18")) (ifInst ""  (formula "17")))
                                                                  (rule "closeTrue" (formula "118"))
                                                               )
                                                            )
                                                            (branch "Case 2"
                                                               (rule "andRight" (formula "111"))
                                                               (branch "Case 1"
                                                                  (rule "andRight" (formula "111"))
                                                                  (branch "Case 1"
                                                                      (builtin "One Step Simplification" (formula "111") (ifInst ""  (formula "106")))
                                                                     (rule "closeTrue" (formula "111"))
                                                                  )
                                                                  (branch "Case 2"
                                                                      (builtin "One Step Simplification" (formula "111"))
                                                                     (rule "expand_inInt" (formula "84") (term "1,0,0,0,1,1,0,1"))
                                                                     (rule "expand_inInt" (formula "84") (term "0,0,0,1,1,1,0,1"))
                                                                     (rule "replace_int_MAX" (formula "84") (term "1,0,1,0,0,0,1,1,0,1"))
                                                                     (rule "replace_int_MIN" (formula "84") (term "0,1,1,0,0,0,1,1,0,1"))
                                                                     (rule "replace_int_MAX" (formula "84") (term "1,0,0,0,0,1,1,1,0,1"))
                                                                     (rule "replace_int_MIN" (formula "84") (term "0,1,0,0,0,1,1,1,0,1"))
                                                                     (rule "andLeft" (formula "84"))
                                                                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (ifseqformula "84"))
                                                                     (rule "andLeft" (formula "85"))
                                                                     (rule "orRight" (formula "113"))
                                                                     (rule "andLeft" (formula "85"))
                                                                     (rule "andLeft" (formula "87"))
                                                                     (rule "andLeft" (formula "86"))
                                                                     (rule "andLeft" (formula "87"))
                                                                     (rule "andLeft" (formula "88"))
                                                                     (rule "andLeft" (formula "89"))
                                                                     (rule "translateJavaSubInt" (formula "84") (term "2,1,1,0"))
                                                                     (rule "translateJavaAddInt" (formula "87") (term "0,2,0,1,0"))
                                                                     (rule "translateJavaAddInt" (formula "87") (term "0,2,1,1,0"))
                                                                     (rule "translateJavaAddInt" (formula "88") (term "3,0,1,1,0"))
                                                                     (rule "eqSymm" (formula "89"))
                                                                     (rule "translateJavaAddInt" (formula "84") (term "0,2,1,1,0"))
                                                                     (rule "translateJavaMulInt" (formula "87") (term "0,0,2,1,1,0"))
                                                                     (rule "translateJavaAddInt" (formula "88") (term "1,1,0"))
                                                                     (rule "translateJavaSubInt" (formula "89") (term "0"))
                                                                     (rule "eqSymm" (formula "87") (term "1,0"))
                                                                     (rule "polySimp_elimSub" (formula "84") (term "2,1,1,0"))
                                                                     (rule "mul_literals" (formula "84") (term "1,2,1,1,0"))
                                                                     (rule "polySimp_addLiterals" (formula "84") (term "2,1,1,0"))
                                                                     (rule "polySimp_homoEq" (formula "88") (term "1,0"))
                                                                     (rule "polySimp_elimSub" (formula "89") (term "0"))
                                                                     (rule "mul_literals" (formula "89") (term "1,0"))
                                                                     (rule "polySimp_homoEq" (formula "89"))
                                                                     (rule "polySimp_mulComm0" (formula "89") (term "1,0"))
                                                                     (rule "polySimp_addComm0" (formula "84") (term "2,1,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "88") (term "0,0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "89") (term "1,1,0"))
                                                                     (rule "polySimp_addComm1" (formula "88") (term "0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "88") (term "3,1,0,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "89") (term "1,0"))
                                                                     (rule "mul_literals" (formula "89") (term "0,1,0"))
                                                                     (rule "dismissNonSelectedField" (formula "118") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "118") (ifInst ""  (formula "19")))
                                                                     (rule "closeTrue" (formula "118"))
                                                                  )
                                                               )
                                                               (branch "Case 2"
                                                                   (builtin "One Step Simplification" (formula "111") (ifInst ""  (formula "20")))
                                                                  (rule "closeTrue" (formula "111"))
                                                               )
                                                            )
                                                         )
                                                         (branch "Usage"
                                                             (builtin "One Step Simplification" (formula "85"))
                                                             (builtin "One Step Simplification" (formula "112"))
                                                            (rule "expand_inInt" (formula "84") (term "0,0,0,1,1,1,0,1"))
                                                            (rule "expand_inInt" (formula "84") (term "1,0,0,0,1,1,0,1"))
                                                            (rule "expand_inInt" (formula "85") (term "0,1,0"))
                                                            (rule "replace_int_MIN" (formula "84") (term "0,1,0,0,0,1,1,1,0,1"))
                                                            (rule "replace_int_MAX" (formula "84") (term "1,0,0,0,0,1,1,1,0,1"))
                                                            (rule "replace_int_MIN" (formula "84") (term "0,1,1,0,0,0,1,1,0,1"))
                                                            (rule "replace_int_MAX" (formula "84") (term "1,0,1,0,0,0,1,1,0,1"))
                                                            (rule "replace_int_MIN" (formula "85") (term "0,1,0,1,0"))
                                                            (rule "replace_int_MAX" (formula "85") (term "1,0,0,1,0"))
                                                            (rule "andLeft" (formula "84"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "86") (term "1,1,1,0") (ifseqformula "84"))
                                                            (rule "andLeft" (formula "85"))
                                                            (rule "andLeft" (formula "87"))
                                                            (rule "andLeft" (formula "85"))
                                                            (rule "andLeft" (formula "87"))
                                                            (rule "andLeft" (formula "88"))
                                                            (rule "andLeft" (formula "90"))
                                                            (rule "andLeft" (formula "86"))
                                                            (rule "andLeft" (formula "90"))
                                                            (rule "andLeft" (formula "92"))
                                                            (rule "andLeft" (formula "87"))
                                                            (rule "andLeft" (formula "91"))
                                                            (rule "andLeft" (formula "88"))
                                                            (rule "andLeft" (formula "89"))
                                                            (rule "translateJavaSubInt" (formula "84") (term "2,1,1,0"))
                                                            (rule "translateJavaSubInt" (formula "97") (term "0,0"))
                                                            (rule "translateJavaAddInt" (formula "87") (term "0,2,1,1,0"))
                                                            (rule "translateJavaAddInt" (formula "87") (term "0,2,0,1,0"))
                                                            (rule "translateJavaAddInt" (formula "88") (term "3,0,1,1,0"))
                                                            (rule "eqSymm" (formula "89"))
                                                            (rule "translateJavaAddInt" (formula "84") (term "0,2,1,1,0"))
                                                            (rule "translateJavaAddInt" (formula "97") (term "0,0,0"))
                                                            (rule "translateJavaMulInt" (formula "87") (term "0,0,2,1,1,0"))
                                                            (rule "translateJavaAddInt" (formula "88") (term "1,1,0"))
                                                            (rule "translateJavaSubInt" (formula "89") (term "0"))
                                                            (rule "eqSymm" (formula "87") (term "1,0"))
                                                            (rule "replace_known_left" (formula "95") (term "0") (ifseqformula "92"))
                                                             (builtin "One Step Simplification" (formula "95"))
                                                            (rule "true_left" (formula "95"))
                                                            (rule "polySimp_elimSub" (formula "84") (term "2,1,1,0"))
                                                            (rule "mul_literals" (formula "84") (term "1,2,1,1,0"))
                                                            (rule "polySimp_addLiterals" (formula "84") (term "2,1,1,0"))
                                                            (rule "polySimp_elimSub" (formula "96") (term "0,0"))
                                                            (rule "polySimp_elimSub" (formula "89") (term "0"))
                                                            (rule "mul_literals" (formula "89") (term "1,0"))
                                                            (rule "polySimp_addComm0" (formula "88") (term "3,0,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "84") (term "2,1,1,0"))
                                                            (rule "polySimp_addComm0" (formula "96") (term "0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "89") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "88") (term "1,1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "87") (term "1,1,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "87") (term "0,0,0,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "94"))
                                                            (rule "inEqSimp_commuteLeq" (formula "88") (term "1,0,0"))
                                                            (rule "pullOutSelect" (formula "97") (term "0,0") (inst "selectSK=arr_3"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "97") (ifseqformula "84"))
                                                             (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "122")))
                                                            (rule "dismissNonSelectedField" (formula "97") (term "0,0,1,0,0"))
                                                             (builtin "One Step Simplification" (formula "97") (ifInst ""  (formula "31")))
                                                            (rule "elementOfUnion" (formula "97") (term "0,0"))
                                                            (rule "elementOfSingleton" (formula "97") (term "0,0,0"))
                                                             (builtin "One Step Simplification" (formula "97"))
                                                            (rule "eqSymm" (formula "97") (term "0,0,0"))
                                                            (rule "replace_known_right" (formula "97") (term "0,0,0") (ifseqformula "106"))
                                                             (builtin "One Step Simplification" (formula "97"))
                                                            (rule "elementOfArrayRangeConcrete" (formula "97") (term "0,0"))
                                                            (rule "eqSymm" (formula "97") (term "0,0,0,0"))
                                                            (rule "replace_known_right" (formula "97") (term "0,0,0,0") (ifseqformula "100"))
                                                             (builtin "One Step Simplification" (formula "97"))
                                                            (rule "simplifySelectOfStore" (formula "97"))
                                                             (builtin "One Step Simplification" (formula "97"))
                                                            (rule "castDel" (formula "97") (term "0"))
                                                            (rule "applyEqReverse" (formula "98") (term "0,0") (ifseqformula "97"))
                                                            (rule "hideAuxiliaryEq" (formula "97"))
                                                            (rule "commute_and" (formula "88") (term "0,0"))
                                                            (rule "elim_double_block_2" (formula "124") (term "1"))
                                                            (rule "commute_and" (formula "87") (term "1,0,0"))
                                                            (rule "commute_and" (formula "87") (term "0,0,0"))
                                                            (rule "shift_paren_and" (formula "87") (term "0,0"))
                                                            (rule "commute_and_2" (formula "87") (term "0,0,0"))
                                                            (rule "ifUnfold" (formula "124") (term "1") (inst "#boolv=x"))
                                                            (rule "variableDeclaration" (formula "124") (term "1") (newnames "x_15"))
                                                            (rule "inequality_comparison_simple" (formula "124") (term "1"))
                                                             (builtin "One Step Simplification" (formula "124"))
                                                            (rule "replace_known_left" (formula "124") (term "0,0,1,0") (ifseqformula "92"))
                                                             (builtin "One Step Simplification" (formula "124"))
                                                            (rule "ifSplit" (formula "124"))
                                                            (branch "if x_15 true"
                                                                (builtin "One Step Simplification" (formula "125"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                            (branch "if x_15 false"
                                                                (builtin "One Step Simplification" (formula "125"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "true_left" (formula "1"))
                                                               (rule "blockEmpty" (formula "124") (term "1"))
                                                                (builtin "Block Contract (Internal)" (formula "124") (newnames "result_27,exc_32,heap_Before_BLOCK_4,savedHeap_Before_BLOCK_4,o,f"))
                                                               (branch "Validity"
                                                                   (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "33")) (ifInst ""  (formula "20")) (ifInst ""  (formula "120")))
                                                                   (builtin "One Step Simplification" (formula "125"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "98") (term "1") (ifseqformula "84"))
                                                                  (rule "andLeft" (formula "98"))
                                                                  (rule "eqSymm" (formula "126") (term "0,0,1,0,1"))
                                                                  (rule "dismissNonSelectedField" (formula "99") (term "0,0"))
                                                                   (builtin "One Step Simplification" (formula "99") (ifInst ""  (formula "19")))
                                                                  (rule "true_left" (formula "99"))
                                                                  (rule "variableDeclarationAssign" (formula "125") (term "1"))
                                                                  (rule "variableDeclaration" (formula "125") (term "1") (newnames "exc_32_1"))
                                                                  (rule "assignment" (formula "125") (term "1"))
                                                                   (builtin "One Step Simplification" (formula "125"))
                                                                  (rule "emptyStatement" (formula "125") (term "1"))
                                                                   (builtin "One Step Simplification" (formula "125"))
                                                                  (rule "emptyStatement" (formula "125") (term "1"))
                                                                  (rule "tryEmpty" (formula "125") (term "1"))
                                                                  (rule "blockEmptyLabel" (formula "125") (term "1"))
                                                                  (rule "blockEmpty" (formula "125") (term "1"))
                                                                  (rule "methodCallEmpty" (formula "125") (term "1"))
                                                                  (rule "emptyModality" (formula "125") (term "1"))
                                                                  (rule "andRight" (formula "125"))
                                                                  (branch "Case 1"
                                                                      (builtin "One Step Simplification" (formula "125"))
                                                                     (rule "closeTrue" (formula "125"))
                                                                  )
                                                                  (branch "Case 2"
                                                                      (builtin "One Step Simplification" (formula "125"))
                                                                     (rule "closeTrue" (formula "125"))
                                                                  )
                                                               )
                                                               (branch "Precondition"
                                                                  (rule "andRight" (formula "124"))
                                                                  (branch "Case 1"
                                                                     (rule "andRight" (formula "124"))
                                                                     (branch "Case 1"
                                                                         (builtin "One Step Simplification" (formula "124") (ifInst ""  (formula "33")))
                                                                        (rule "closeTrue" (formula "124"))
                                                                     )
                                                                     (branch "Case 2"
                                                                         (builtin "One Step Simplification" (formula "124"))
                                                                        (rule "wellFormedAnonEQ" (formula "124") (ifseqformula "84"))
                                                                        (rule "wellFormedStorePrimitiveArray" (formula "124") (term "0"))
                                                                        (rule "wellFormedAnon" (formula "124") (term "0"))
                                                                        (rule "replace_known_left" (formula "124") (term "1") (ifseqformula "83"))
                                                                         (builtin "One Step Simplification" (formula "124") (ifInst ""  (formula "18")) (ifInst ""  (formula "17")))
                                                                        (rule "closeTrue" (formula "124"))
                                                                     )
                                                                  )
                                                                  (branch "Case 2"
                                                                     (rule "andRight" (formula "124"))
                                                                     (branch "Case 1"
                                                                        (rule "andRight" (formula "124"))
                                                                        (branch "Case 1"
                                                                            (builtin "One Step Simplification" (formula "124") (ifInst ""  (formula "119")))
                                                                           (rule "closeTrue" (formula "124"))
                                                                        )
                                                                        (branch "Case 2"
                                                                            (builtin "One Step Simplification" (formula "124"))
                                                                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "124") (ifseqformula "84"))
                                                                           (rule "orRight" (formula "124"))
                                                                           (rule "polySimp_homoEq" (formula "88") (term "1,0"))
                                                                           (rule "polySimp_homoEq" (formula "89"))
                                                                           (rule "polySimp_mulComm0" (formula "89") (term "1,0"))
                                                                           (rule "polySimp_addComm1" (formula "88") (term "0,1,0"))
                                                                           (rule "polySimp_rightDist" (formula "89") (term "1,0"))
                                                                           (rule "mul_literals" (formula "89") (term "0,1,0"))
                                                                           (rule "polySimp_addAssoc" (formula "89") (term "0"))
                                                                           (rule "polySimp_addComm0" (formula "89") (term "0,0"))
                                                                           (rule "dismissNonSelectedField" (formula "124") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "124") (ifInst ""  (formula "19")))
                                                                           (rule "closeTrue" (formula "124"))
                                                                        )
                                                                     )
                                                                     (branch "Case 2"
                                                                         (builtin "One Step Simplification" (formula "124") (ifInst ""  (formula "20")))
                                                                        (rule "closeTrue" (formula "124"))
                                                                     )
                                                                  )
                                                               )
                                                               (branch "Usage"
                                                                   (builtin "One Step Simplification" (formula "98"))
                                                                   (builtin "One Step Simplification" (formula "125"))
                                                                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "98") (term "1,1,1,0") (ifseqformula "84"))
                                                                  (rule "expand_inInt" (formula "98") (term "0,1,0"))
                                                                  (rule "replace_int_MIN" (formula "98") (term "0,1,0,1,0"))
                                                                  (rule "replace_int_MAX" (formula "98") (term "1,0,0,1,0"))
                                                                  (rule "andLeft" (formula "98"))
                                                                  (rule "andLeft" (formula "99"))
                                                                  (rule "andLeft" (formula "98"))
                                                                  (rule "andLeft" (formula "100"))
                                                                  (rule "andLeft" (formula "99"))
                                                                  (rule "andLeft" (formula "99"))
                                                                  (rule "translateJavaAddInt" (formula "104") (term "4,0"))
                                                                  (rule "translateJavaAddInt" (formula "102") (term "5,0"))
                                                                  (rule "translateJavaMulInt" (formula "103") (term "3,0"))
                                                                  (rule "replace_known_left" (formula "101") (term "0") (ifseqformula "98"))
                                                                   (builtin "One Step Simplification" (formula "101"))
                                                                  (rule "true_left" (formula "101"))
                                                                  (rule "polySimp_addComm0" (formula "103") (term "4,0"))
                                                                  (rule "polySimp_addComm0" (formula "101") (term "5,0"))
                                                                  (rule "inEqSimp_commuteLeq" (formula "100"))
                                                                  (rule "elim_double_block_2" (formula "130") (term "1"))
                                                                  (rule "ifUnfold" (formula "130") (term "1") (inst "#boolv=x"))
                                                                  (rule "variableDeclaration" (formula "130") (term "1") (newnames "x_16"))
                                                                  (rule "inequality_comparison_simple" (formula "130") (term "1"))
                                                                   (builtin "One Step Simplification" (formula "130"))
                                                                  (rule "replace_known_left" (formula "130") (term "0,0,1,0") (ifseqformula "98"))
                                                                   (builtin "One Step Simplification" (formula "130"))
                                                                  (rule "ifSplit" (formula "130"))
                                                                  (branch "if x_16 true"
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                     (rule "closeFalse" (formula "1"))
                                                                  )
                                                                  (branch "if x_16 false"
                                                                      (builtin "One Step Simplification" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "131"))
                                                                     (rule "true_left" (formula "1"))
                                                                     (rule "blockEmpty" (formula "130") (term "1"))
                                                                      (builtin "Block Contract (Internal)" (formula "130") (newnames "result_28,exc_33,heap_Before_BLOCK_5,savedHeap_Before_BLOCK_5,o,f"))
                                                                     (branch "Validity"
                                                                         (builtin "One Step Simplification" (formula "131"))
                                                                         (builtin "One Step Simplification" (formula "104") (ifInst ""  (formula "33")) (ifInst ""  (formula "20")) (ifInst ""  (formula "126")))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "104") (term "1") (ifseqformula "84"))
                                                                        (rule "andLeft" (formula "104"))
                                                                        (rule "eqSymm" (formula "132") (term "0,0,1,0,1"))
                                                                        (rule "dismissNonSelectedField" (formula "105") (term "0,0"))
                                                                         (builtin "One Step Simplification" (formula "105") (ifInst ""  (formula "19")))
                                                                        (rule "true_left" (formula "105"))
                                                                        (rule "variableDeclarationAssign" (formula "131") (term "1"))
                                                                        (rule "variableDeclaration" (formula "131") (term "1") (newnames "exc_33_1"))
                                                                        (rule "assignment" (formula "131") (term "1"))
                                                                         (builtin "One Step Simplification" (formula "131"))
                                                                        (rule "emptyStatement" (formula "131") (term "1"))
                                                                         (builtin "One Step Simplification" (formula "131"))
                                                                        (rule "emptyStatement" (formula "131") (term "1"))
                                                                        (rule "tryEmpty" (formula "131") (term "1"))
                                                                        (rule "blockEmptyLabel" (formula "131") (term "1"))
                                                                        (rule "blockEmpty" (formula "131") (term "1"))
                                                                        (rule "methodCallEmpty" (formula "131") (term "1"))
                                                                        (rule "emptyModality" (formula "131") (term "1"))
                                                                        (rule "andRight" (formula "131"))
                                                                        (branch "Case 1"
                                                                            (builtin "One Step Simplification" (formula "131"))
                                                                           (rule "closeTrue" (formula "131"))
                                                                        )
                                                                        (branch "Case 2"
                                                                            (builtin "One Step Simplification" (formula "131"))
                                                                           (rule "closeTrue" (formula "131"))
                                                                        )
                                                                     )
                                                                     (branch "Precondition"
                                                                        (rule "andRight" (formula "130"))
                                                                        (branch "Case 1"
                                                                           (rule "andRight" (formula "130"))
                                                                           (branch "Case 1"
                                                                               (builtin "One Step Simplification" (formula "130") (ifInst ""  (formula "33")))
                                                                              (rule "closeTrue" (formula "130"))
                                                                           )
                                                                           (branch "Case 2"
                                                                               (builtin "One Step Simplification" (formula "130"))
                                                                              (rule "wellFormedAnonEQ" (formula "130") (ifseqformula "84"))
                                                                              (rule "wellFormedStorePrimitiveArray" (formula "130") (term "0"))
                                                                              (rule "wellFormedAnon" (formula "130") (term "0"))
                                                                              (rule "replace_known_left" (formula "130") (term "1") (ifseqformula "83"))
                                                                               (builtin "One Step Simplification" (formula "130") (ifInst ""  (formula "18")) (ifInst ""  (formula "17")))
                                                                              (rule "closeTrue" (formula "130"))
                                                                           )
                                                                        )
                                                                        (branch "Case 2"
                                                                           (rule "andRight" (formula "130"))
                                                                           (branch "Case 1"
                                                                              (rule "andRight" (formula "130"))
                                                                              (branch "Case 1"
                                                                                  (builtin "One Step Simplification" (formula "130") (ifInst ""  (formula "125")))
                                                                                 (rule "closeTrue" (formula "130"))
                                                                              )
                                                                              (branch "Case 2"
                                                                                  (builtin "One Step Simplification" (formula "130"))
                                                                                 (rule "selectCreatedOfAnonAsFormulaEQ" (formula "130") (ifseqformula "84"))
                                                                                 (rule "orRight" (formula "130"))
                                                                                 (rule "polySimp_homoEq" (formula "88") (term "1,0"))
                                                                                 (rule "polySimp_homoEq" (formula "89"))
                                                                                 (rule "polySimp_mulComm0" (formula "89") (term "1,0"))
                                                                                 (rule "polySimp_addComm1" (formula "88") (term "0,1,0"))
                                                                                 (rule "polySimp_rightDist" (formula "89") (term "1,0"))
                                                                                 (rule "mul_literals" (formula "89") (term "0,1,0"))
                                                                                 (rule "polySimp_addAssoc" (formula "89") (term "0"))
                                                                                 (rule "polySimp_addComm0" (formula "89") (term "0,0"))
                                                                                 (rule "dismissNonSelectedField" (formula "130") (term "0"))
                                                                                  (builtin "One Step Simplification" (formula "130") (ifInst ""  (formula "19")))
                                                                                 (rule "closeTrue" (formula "130"))
                                                                              )
                                                                           )
                                                                           (branch "Case 2"
                                                                               (builtin "One Step Simplification" (formula "130") (ifInst ""  (formula "20")))
                                                                              (rule "closeTrue" (formula "130"))
                                                                           )
                                                                        )
                                                                     )
                                                                     (branch "Usage"
                                                                         (builtin "One Step Simplification" (formula "131"))
                                                                         (builtin "One Step Simplification" (formula "104"))
                                                                        (rule "selectCreatedOfAnonAsFormulaEQ" (formula "104") (term "1,1,1,0") (ifseqformula "84"))
                                                                        (rule "expand_inInt" (formula "104") (term "0,1,0"))
                                                                        (rule "replace_int_MAX" (formula "104") (term "1,0,0,1,0"))
                                                                        (rule "replace_int_MIN" (formula "104") (term "0,1,0,1,0"))
                                                                        (rule "andLeft" (formula "104"))
                                                                        (rule "andLeft" (formula "104"))
                                                                        (rule "andLeft" (formula "105"))
                                                                        (rule "andLeft" (formula "105"))
                                                                        (rule "translateJavaAddInt" (formula "108") (term "4,0"))
                                                                        (rule "replace_known_left" (formula "107") (term "0") (ifseqformula "104"))
                                                                         (builtin "One Step Simplification" (formula "107"))
                                                                        (rule "true_left" (formula "107"))
                                                                        (rule "polySimp_addComm0" (formula "107") (term "4,0"))
                                                                        (rule "inEqSimp_commuteLeq" (formula "106"))
                                                                        (rule "elim_double_block_2" (formula "134") (term "1"))
                                                                        (rule "ifUnfold" (formula "134") (term "1") (inst "#boolv=x"))
                                                                        (rule "variableDeclaration" (formula "134") (term "1") (newnames "x_17"))
                                                                        (rule "inequality_comparison_simple" (formula "134") (term "1"))
                                                                         (builtin "One Step Simplification" (formula "134"))
                                                                        (rule "replace_known_left" (formula "134") (term "0,0,1,0") (ifseqformula "104"))
                                                                         (builtin "One Step Simplification" (formula "134"))
                                                                         (builtin "Use Dependency Contract" (formula "16") (ifInst ""  (formula "134") (term "1,1,0,1")) (contract "de.wiesler.Classifier[java.lang.Object::<inv>()].JML accessible clause.0"))
                                                                        (rule "wellFormedAnon" (formula "108") (term "1,1,0,0,0"))
                                                                        (rule "replace_known_left" (formula "108") (term "0,1,0,0,0") (ifseqformula "18"))
                                                                         (builtin "One Step Simplification" (formula "108") (ifInst ""  (formula "130")) (ifInst ""  (formula "19")) (ifInst ""  (formula "18")) (ifInst ""  (formula "17")) (ifInst ""  (formula "34")) (ifInst ""  (formula "16")) (ifInst ""  (formula "34")))
                                                                        (rule "true_left" (formula "108"))
                                                                        (rule "ifSplit" (formula "134"))
                                                                        (branch "if x_17 true"
                                                                            (builtin "One Step Simplification" (formula "135"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "closeFalse" (formula "1"))
                                                                        )
                                                                        (branch "if x_17 false"
                                                                            (builtin "One Step Simplification" (formula "135"))
                                                                            (builtin "One Step Simplification" (formula "1"))
                                                                           (rule "true_left" (formula "1"))
                                                                           (rule "blockEmpty" (formula "134") (term "1"))
                                                                            (builtin "Block Contract (Internal)" (formula "134") (newnames "result_29,exc_34,heap_Before_BLOCK_6,savedHeap_Before_BLOCK_6,o,f"))
                                                                           (branch "Validity"
                                                                               (builtin "One Step Simplification" (formula "135"))
                                                                               (builtin "One Step Simplification" (formula "108") (ifInst ""  (formula "33")) (ifInst ""  (formula "20")) (ifInst ""  (formula "130")))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "108") (term "1") (ifseqformula "84"))
                                                                              (rule "andLeft" (formula "108"))
                                                                              (rule "eqSymm" (formula "136") (term "0,0,1,0,1"))
                                                                              (rule "dismissNonSelectedField" (formula "109") (term "0,0"))
                                                                               (builtin "One Step Simplification" (formula "109") (ifInst ""  (formula "19")))
                                                                              (rule "true_left" (formula "109"))
                                                                              (rule "variableDeclarationAssign" (formula "135") (term "1"))
                                                                              (rule "variableDeclaration" (formula "135") (term "1") (newnames "exc_34_1"))
                                                                              (rule "assignment" (formula "135") (term "1"))
                                                                               (builtin "One Step Simplification" (formula "135"))
                                                                              (rule "emptyStatement" (formula "135") (term "1"))
                                                                               (builtin "One Step Simplification" (formula "135"))
                                                                              (rule "emptyStatement" (formula "135") (term "1"))
                                                                              (rule "tryEmpty" (formula "135") (term "1"))
                                                                              (rule "blockEmptyLabel" (formula "135") (term "1"))
                                                                              (rule "blockEmpty" (formula "135") (term "1"))
                                                                              (rule "methodCallEmpty" (formula "135") (term "1"))
                                                                              (rule "emptyModality" (formula "135") (term "1"))
                                                                              (rule "andRight" (formula "135"))
                                                                              (branch "Case 1"
                                                                                  (builtin "One Step Simplification" (formula "135"))
                                                                                 (rule "closeTrue" (formula "135"))
                                                                              )
                                                                              (branch "Case 2"
                                                                                  (builtin "One Step Simplification" (formula "135"))
                                                                                 (rule "closeTrue" (formula "135"))
                                                                              )
                                                                           )
                                                                           (branch "Precondition"
                                                                              (rule "andRight" (formula "134"))
                                                                              (branch "Case 1"
                                                                                 (rule "andRight" (formula "134"))
                                                                                 (branch "Case 1"
                                                                                     (builtin "One Step Simplification" (formula "134") (ifInst ""  (formula "33")))
                                                                                    (rule "closeTrue" (formula "134"))
                                                                                 )
                                                                                 (branch "Case 2"
                                                                                     (builtin "One Step Simplification" (formula "134"))
                                                                                    (rule "wellFormedAnonEQ" (formula "134") (ifseqformula "84"))
                                                                                    (rule "wellFormedStorePrimitiveArray" (formula "134") (term "0"))
                                                                                    (rule "wellFormedAnon" (formula "134") (term "0"))
                                                                                    (rule "replace_known_left" (formula "134") (term "1") (ifseqformula "83"))
                                                                                     (builtin "One Step Simplification" (formula "134") (ifInst ""  (formula "18")) (ifInst ""  (formula "17")))
                                                                                    (rule "closeTrue" (formula "134"))
                                                                                 )
                                                                              )
                                                                              (branch "Case 2"
                                                                                 (rule "andRight" (formula "134"))
                                                                                 (branch "Case 1"
                                                                                    (rule "andRight" (formula "134"))
                                                                                    (branch "Case 1"
                                                                                        (builtin "One Step Simplification" (formula "134") (ifInst ""  (formula "129")))
                                                                                       (rule "closeTrue" (formula "134"))
                                                                                    )
                                                                                    (branch "Case 2"
                                                                                        (builtin "One Step Simplification" (formula "134"))
                                                                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "134") (ifseqformula "84"))
                                                                                       (rule "orRight" (formula "134"))
                                                                                       (rule "polySimp_homoEq" (formula "88") (term "1,0"))
                                                                                       (rule "polySimp_homoEq" (formula "89"))
                                                                                       (rule "polySimp_mulComm0" (formula "89") (term "1,0"))
                                                                                       (rule "polySimp_addComm1" (formula "88") (term "0,1,0"))
                                                                                       (rule "polySimp_rightDist" (formula "89") (term "1,0"))
                                                                                       (rule "mul_literals" (formula "89") (term "0,1,0"))
                                                                                       (rule "polySimp_addAssoc" (formula "89") (term "0"))
                                                                                       (rule "polySimp_addComm0" (formula "89") (term "0,0"))
                                                                                       (rule "dismissNonSelectedField" (formula "134") (term "0"))
                                                                                        (builtin "One Step Simplification" (formula "134") (ifInst ""  (formula "19")))
                                                                                       (rule "closeTrue" (formula "134"))
                                                                                    )
                                                                                 )
                                                                                 (branch "Case 2"
                                                                                     (builtin "One Step Simplification" (formula "134") (ifInst ""  (formula "20")))
                                                                                    (rule "closeTrue" (formula "134"))
                                                                                 )
                                                                              )
                                                                           )
                                                                           (branch "Usage"
                                                                               (builtin "One Step Simplification" (formula "135"))
                                                                               (builtin "One Step Simplification" (formula "108"))
                                                                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "108") (term "1,1,1,0") (ifseqformula "84"))
                                                                              (rule "expand_inInt" (formula "108") (term "0,1,0"))
                                                                              (rule "replace_int_MIN" (formula "108") (term "0,1,0,1,0"))
                                                                              (rule "replace_int_MAX" (formula "108") (term "1,0,0,1,0"))
                                                                              (rule "andLeft" (formula "108"))
                                                                              (rule "andLeft" (formula "108"))
                                                                              (rule "andLeft" (formula "109"))
                                                                              (rule "andLeft" (formula "109"))
                                                                              (rule "translateJavaAddInt" (formula "112") (term "4,0"))
                                                                              (rule "replace_known_left" (formula "111") (term "0") (ifseqformula "108"))
                                                                               (builtin "One Step Simplification" (formula "111"))
                                                                              (rule "true_left" (formula "111"))
                                                                              (rule "polySimp_addComm0" (formula "111") (term "4,0"))
                                                                              (rule "inEqSimp_commuteLeq" (formula "110"))
                                                                              (rule "elim_double_block_2" (formula "138") (term "1"))
                                                                              (rule "ifUnfold" (formula "138") (term "1") (inst "#boolv=x"))
                                                                              (rule "variableDeclaration" (formula "138") (term "1") (newnames "x_18"))
                                                                              (rule "inequality_comparison_simple" (formula "138") (term "1"))
                                                                               (builtin "One Step Simplification" (formula "138"))
                                                                              (rule "replace_known_left" (formula "138") (term "0,0,1,0") (ifseqformula "108"))
                                                                               (builtin "One Step Simplification" (formula "138"))
                                                                              (rule "ifSplit" (formula "138"))
                                                                              (branch "if x_18 true"
                                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                                 (rule "closeFalse" (formula "1"))
                                                                              )
                                                                              (branch "if x_18 false"
                                                                                  (builtin "One Step Simplification" (formula "1"))
                                                                                  (builtin "One Step Simplification" (formula "139"))
                                                                                 (rule "true_left" (formula "1"))
                                                                                 (rule "blockEmpty" (formula "138") (term "1"))
                                                                                  (builtin "Block Contract (Internal)" (formula "138") (newnames "result_30,exc_35,heap_Before_BLOCK_7,savedHeap_Before_BLOCK_7,o,f"))
                                                                                 (branch "Validity"
                                                                                     (builtin "One Step Simplification" (formula "139"))
                                                                                     (builtin "One Step Simplification" (formula "112") (ifInst ""  (formula "33")) (ifInst ""  (formula "20")) (ifInst ""  (formula "134")))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (term "1") (ifseqformula "84"))
                                                                                    (rule "andLeft" (formula "112"))
                                                                                    (rule "eqSymm" (formula "140") (term "0,0,1,0,1"))
                                                                                    (rule "dismissNonSelectedField" (formula "113") (term "0,0"))
                                                                                     (builtin "One Step Simplification" (formula "113") (ifInst ""  (formula "19")))
                                                                                    (rule "true_left" (formula "113"))
                                                                                    (rule "variableDeclarationAssign" (formula "139") (term "1"))
                                                                                    (rule "variableDeclaration" (formula "139") (term "1") (newnames "exc_35_1"))
                                                                                    (rule "assignment" (formula "139") (term "1"))
                                                                                     (builtin "One Step Simplification" (formula "139"))
                                                                                    (rule "emptyStatement" (formula "139") (term "1"))
                                                                                     (builtin "One Step Simplification" (formula "139"))
                                                                                    (rule "emptyStatement" (formula "139") (term "1"))
                                                                                    (rule "tryEmpty" (formula "139") (term "1"))
                                                                                    (rule "blockEmptyLabel" (formula "139") (term "1"))
                                                                                    (rule "blockEmpty" (formula "139") (term "1"))
                                                                                    (rule "methodCallEmpty" (formula "139") (term "1"))
                                                                                    (rule "emptyModality" (formula "139") (term "1"))
                                                                                    (rule "andRight" (formula "139"))
                                                                                    (branch "Case 1"
                                                                                        (builtin "One Step Simplification" (formula "139"))
                                                                                       (rule "closeTrue" (formula "139"))
                                                                                    )
                                                                                    (branch "Case 2"
                                                                                        (builtin "One Step Simplification" (formula "139"))
                                                                                       (rule "closeTrue" (formula "139"))
                                                                                    )
                                                                                 )
                                                                                 (branch "Precondition"
                                                                                    (rule "andRight" (formula "138"))
                                                                                    (branch "Case 1"
                                                                                       (rule "andRight" (formula "138"))
                                                                                       (branch "Case 1"
                                                                                           (builtin "One Step Simplification" (formula "138") (ifInst ""  (formula "33")))
                                                                                          (rule "closeTrue" (formula "138"))
                                                                                       )
                                                                                       (branch "Case 2"
                                                                                           (builtin "One Step Simplification" (formula "138"))
                                                                                          (rule "wellFormedAnonEQ" (formula "138") (ifseqformula "84"))
                                                                                          (rule "wellFormedStorePrimitiveArray" (formula "138") (term "0"))
                                                                                          (rule "wellFormedAnon" (formula "138") (term "0"))
                                                                                          (rule "replace_known_left" (formula "138") (term "1") (ifseqformula "83"))
                                                                                           (builtin "One Step Simplification" (formula "138") (ifInst ""  (formula "18")) (ifInst ""  (formula "17")))
                                                                                          (rule "closeTrue" (formula "138"))
                                                                                       )
                                                                                    )
                                                                                    (branch "Case 2"
                                                                                       (rule "andRight" (formula "138"))
                                                                                       (branch "Case 1"
                                                                                          (rule "andRight" (formula "138"))
                                                                                          (branch "Case 1"
                                                                                              (builtin "One Step Simplification" (formula "138") (ifInst ""  (formula "133")))
                                                                                             (rule "closeTrue" (formula "138"))
                                                                                          )
                                                                                          (branch "Case 2"
                                                                                              (builtin "One Step Simplification" (formula "138"))
                                                                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "138") (ifseqformula "84"))
                                                                                             (rule "orRight" (formula "138"))
                                                                                             (rule "polySimp_homoEq" (formula "88") (term "1,0"))
                                                                                             (rule "polySimp_homoEq" (formula "89"))
                                                                                             (rule "polySimp_mulComm0" (formula "89") (term "1,0"))
                                                                                             (rule "polySimp_addComm1" (formula "88") (term "0,1,0"))
                                                                                             (rule "polySimp_rightDist" (formula "89") (term "1,0"))
                                                                                             (rule "mul_literals" (formula "89") (term "0,1,0"))
                                                                                             (rule "polySimp_addAssoc" (formula "89") (term "0"))
                                                                                             (rule "polySimp_addComm0" (formula "89") (term "0,0"))
                                                                                             (rule "dismissNonSelectedField" (formula "138") (term "0"))
                                                                                              (builtin "One Step Simplification" (formula "138") (ifInst ""  (formula "19")))
                                                                                             (rule "closeTrue" (formula "138"))
                                                                                          )
                                                                                       )
                                                                                       (branch "Case 2"
                                                                                           (builtin "One Step Simplification" (formula "138") (ifInst ""  (formula "20")))
                                                                                          (rule "closeTrue" (formula "138"))
                                                                                       )
                                                                                    )
                                                                                 )
                                                                                 (branch "Usage"
                                                                                     (builtin "One Step Simplification" (formula "139"))
                                                                                     (builtin "One Step Simplification" (formula "112"))
                                                                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "112") (term "1,1,1,0") (ifseqformula "84"))
                                                                                    (rule "expand_inInt" (formula "112") (term "1,0,0,1"))
                                                                                    (rule "expand_inInt" (formula "112") (term "0,1,0"))
                                                                                    (rule "replace_int_MAX" (formula "112") (term "1,0,1,0,0,1"))
                                                                                    (rule "replace_int_MIN" (formula "112") (term "0,1,1,0,0,1"))
                                                                                    (rule "replace_int_MIN" (formula "112") (term "0,1,0,1,0"))
                                                                                    (rule "replace_int_MAX" (formula "112") (term "1,0,0,1,0"))
                                                                                    (rule "andLeft" (formula "112"))
                                                                                    (rule "andLeft" (formula "112"))
                                                                                    (rule "andLeft" (formula "113"))
                                                                                    (rule "andLeft" (formula "113"))
                                                                                    (rule "translateJavaAddInt" (formula "116") (term "0,1,0"))
                                                                                    (rule "translateJavaAddInt" (formula "116") (term "4,1,1,0"))
                                                                                    (rule "replace_known_left" (formula "115") (term "0") (ifseqformula "112"))
                                                                                     (builtin "One Step Simplification" (formula "115"))
                                                                                    (rule "true_left" (formula "115"))
                                                                                    (rule "polySimp_addComm0" (formula "115") (term "4,1,1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "115") (term "1,1,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "115") (term "0,0,0,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "114"))
                                                                                    (rule "applyEq" (formula "115") (term "1,1,0,0,0") (ifseqformula "40"))
                                                                                    (rule "commute_and" (formula "115") (term "1,0,0"))
                                                                                    (rule "commute_and" (formula "115") (term "0,0,0"))
                                                                                    (rule "elim_double_block_2" (formula "142") (term "1"))
                                                                                    (rule "shift_paren_and" (formula "115") (term "0,0"))
                                                                                    (rule "commute_and_2" (formula "115") (term "0,0,0"))
                                                                                    (rule "ifUnfold" (formula "142") (term "1") (inst "#boolv=x"))
                                                                                    (rule "variableDeclaration" (formula "142") (term "1") (newnames "x_19"))
                                                                                    (rule "inequality_comparison_simple" (formula "142") (term "1"))
                                                                                     (builtin "One Step Simplification" (formula "142"))
                                                                                    (rule "replace_known_left" (formula "142") (term "0,0,1,0") (ifseqformula "112"))
                                                                                     (builtin "One Step Simplification" (formula "142"))
                                                                                     (builtin "Use Dependency Contract" (formula "86") (term "0") (ifInst ""  (formula "73") (term "0")) (ifInst ""  (formula "84")) (contract "de.wiesler.Buffers[de.wiesler.Buffers::bufferLen(int)].JML accessible clause.0"))
                                                                                     (builtin "One Step Simplification" (formula "116") (ifInst ""  (formula "139")) (ifInst ""  (formula "68")) (ifInst ""  (formula "67")) (ifInst ""  (formula "15")) (ifInst ""  (formula "32")))
                                                                                    (rule "wellFormedAnonEQ" (formula "116") (term "0,0,0,0") (ifseqformula "84"))
                                                                                    (rule "wellFormedStorePrimitiveArray" (formula "116") (term "0,0,0,0,0"))
                                                                                    (rule "wellFormedAnon" (formula "116") (term "0,0,0,0,0"))
                                                                                    (rule "expand_inInt" (formula "116") (term "1,0,0,0"))
                                                                                    (rule "replace_int_MIN" (formula "116") (term "0,1,1,0,0,0"))
                                                                                    (rule "replace_int_MAX" (formula "116") (term "1,0,1,0,0,0"))
                                                                                    (rule "eqSymm" (formula "116") (term "1"))
                                                                                    (rule "replace_known_left" (formula "116") (term "1,0,0,0,0") (ifseqformula "83"))
                                                                                     (builtin "One Step Simplification" (formula "116") (ifInst ""  (formula "18")) (ifInst ""  (formula "17")) (ifInst ""  (formula "71")))
                                                                                    (rule "disjointDefinition" (formula "116") (term "1,0"))
                                                                                    (rule "disjointWithSingleton1" (formula "116") (term "1,0"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "116") (term "1,0,0"))
                                                                                    (rule "replace_known_left" (formula "116") (term "1,0,0") (ifseqformula "66"))
                                                                                     (builtin "One Step Simplification" (formula "116"))
                                                                                    (rule "inEqSimp_commuteLeq" (formula "116") (term "0,0"))
                                                                                    (rule "replace_known_left" (formula "116") (term "0,0") (ifseqformula "72"))
                                                                                     (builtin "One Step Simplification" (formula "116"))
                                                                                    (rule "applyEq" (formula "116") (term "0,1") (ifseqformula "73"))
                                                                                    (rule "eqSymm" (formula "116") (term "1"))
                                                                                    (rule "applyEq" (formula "116") (term "0,1") (ifseqformula "86"))
                                                                                    (rule "equal_literals" (formula "116") (term "1"))
                                                                                     (builtin "One Step Simplification" (formula "116"))
                                                                                    (rule "elementOfUnion" (formula "116"))
                                                                                    (rule "elementOfSingleton" (formula "116") (term "1"))
                                                                                     (builtin "One Step Simplification" (formula "116") (ifInst ""  (formula "124")))
                                                                                    (rule "elementOfUnion" (formula "116"))
                                                                                    (rule "elementOfArrayRangeConcrete" (formula "116") (term "1"))
                                                                                    (rule "replace_known_right" (formula "116") (term "0,0,1") (ifseqformula "119"))
                                                                                     (builtin "One Step Simplification" (formula "116"))
                                                                                    (rule "elementOfSingleton" (formula "116"))
                                                                                     (builtin "One Step Simplification" (formula "116"))
                                                                                    (rule "true_left" (formula "116"))
                                                                                    (rule "ifSplit" (formula "142"))
                                                                                    (branch "if x_19 true"
                                                                                        (builtin "One Step Simplification" (formula "143"))
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "closeFalse" (formula "1"))
                                                                                    )
                                                                                    (branch "if x_19 false"
                                                                                        (builtin "One Step Simplification" (formula "143"))
                                                                                        (builtin "One Step Simplification" (formula "1"))
                                                                                       (rule "true_left" (formula "1"))
                                                                                       (rule "blockEmpty" (formula "142") (term "1"))
                                                                                        (builtin "Block Contract (Internal)" (formula "142") (newnames "result_31,exc_36,heap_Before_BLOCK_8,savedHeap_Before_BLOCK_8,o,f"))
                                                                                       (branch "Validity"
                                                                                           (builtin "One Step Simplification" (formula "116") (ifInst ""  (formula "33")) (ifInst ""  (formula "20")) (ifInst ""  (formula "138")))
                                                                                           (builtin "One Step Simplification" (formula "143"))
                                                                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "116") (term "1") (ifseqformula "84"))
                                                                                          (rule "andLeft" (formula "116"))
                                                                                          (rule "eqSymm" (formula "144") (term "0,0,1,0,1"))
                                                                                          (rule "dismissNonSelectedField" (formula "117") (term "0,0"))
                                                                                           (builtin "One Step Simplification" (formula "117") (ifInst ""  (formula "19")))
                                                                                          (rule "true_left" (formula "117"))
                                                                                          (rule "variableDeclarationAssign" (formula "143") (term "1"))
                                                                                          (rule "variableDeclaration" (formula "143") (term "1") (newnames "exc_36_1"))
                                                                                          (rule "assignment" (formula "143") (term "1"))
                                                                                           (builtin "One Step Simplification" (formula "143"))
                                                                                          (rule "emptyStatement" (formula "143") (term "1"))
                                                                                           (builtin "One Step Simplification" (formula "143"))
                                                                                          (rule "emptyStatement" (formula "143") (term "1"))
                                                                                          (rule "tryEmpty" (formula "143") (term "1"))
                                                                                          (rule "blockEmptyLabel" (formula "143") (term "1"))
                                                                                          (rule "blockEmpty" (formula "143") (term "1"))
                                                                                          (rule "methodCallEmpty" (formula "143") (term "1"))
                                                                                          (rule "emptyModality" (formula "143") (term "1"))
                                                                                          (rule "andRight" (formula "143"))
                                                                                          (branch "Case 1"
                                                                                              (builtin "One Step Simplification" (formula "143"))
                                                                                             (rule "closeTrue" (formula "143"))
                                                                                          )
                                                                                          (branch "Case 2"
                                                                                              (builtin "One Step Simplification" (formula "143"))
                                                                                             (rule "closeTrue" (formula "143"))
                                                                                          )
                                                                                       )
                                                                                       (branch "Precondition"
                                                                                          (rule "andRight" (formula "142"))
                                                                                          (branch "Case 1"
                                                                                             (rule "andRight" (formula "142"))
                                                                                             (branch "Case 1"
                                                                                                 (builtin "One Step Simplification" (formula "142") (ifInst ""  (formula "33")))
                                                                                                (rule "closeTrue" (formula "142"))
                                                                                             )
                                                                                             (branch "Case 2"
                                                                                                 (builtin "One Step Simplification" (formula "142"))
                                                                                                (rule "wellFormedAnonEQ" (formula "142") (ifseqformula "84"))
                                                                                                (rule "wellFormedStorePrimitiveArray" (formula "142") (term "0"))
                                                                                                (rule "wellFormedAnon" (formula "142") (term "0"))
                                                                                                (rule "replace_known_left" (formula "142") (term "1") (ifseqformula "83"))
                                                                                                 (builtin "One Step Simplification" (formula "142") (ifInst ""  (formula "18")) (ifInst ""  (formula "17")))
                                                                                                (rule "closeTrue" (formula "142"))
                                                                                             )
                                                                                          )
                                                                                          (branch "Case 2"
                                                                                             (rule "andRight" (formula "142"))
                                                                                             (branch "Case 1"
                                                                                                (rule "andRight" (formula "142"))
                                                                                                (branch "Case 1"
                                                                                                    (builtin "One Step Simplification" (formula "142") (ifInst ""  (formula "137")))
                                                                                                   (rule "closeTrue" (formula "142"))
                                                                                                )
                                                                                                (branch "Case 2"
                                                                                                    (builtin "One Step Simplification" (formula "142"))
                                                                                                   (rule "selectCreatedOfAnonAsFormulaEQ" (formula "142") (ifseqformula "84"))
                                                                                                   (rule "orRight" (formula "142"))
                                                                                                   (rule "polySimp_homoEq" (formula "115") (term "1,0"))
                                                                                                   (rule "polySimp_homoEq" (formula "88") (term "1,0"))
                                                                                                   (rule "polySimp_homoEq" (formula "89"))
                                                                                                   (rule "polySimp_mulComm0" (formula "115") (term "1,0,1,0"))
                                                                                                   (rule "polySimp_mulComm0" (formula "89") (term "1,0"))
                                                                                                   (rule "polySimp_addComm1" (formula "88") (term "0,1,0"))
                                                                                                   (rule "polySimp_rightDist" (formula "115") (term "1,0,1,0"))
                                                                                                   (rule "polySimp_mulComm0" (formula "115") (term "0,1,0,1,0"))
                                                                                                   (rule "polySimp_rightDist" (formula "89") (term "1,0"))
                                                                                                   (rule "mul_literals" (formula "89") (term "0,1,0"))
                                                                                                   (rule "polySimp_addAssoc" (formula "115") (term "0,1,0"))
                                                                                                   (rule "dismissNonSelectedField" (formula "142") (term "0"))
                                                                                                    (builtin "One Step Simplification" (formula "142") (ifInst ""  (formula "19")))
                                                                                                   (rule "closeTrue" (formula "142"))
                                                                                                )
                                                                                             )
                                                                                             (branch "Case 2"
                                                                                                 (builtin "One Step Simplification" (formula "142") (ifInst ""  (formula "20")))
                                                                                                (rule "closeTrue" (formula "142"))
                                                                                             )
                                                                                          )
                                                                                       )
                                                                                       (branch "Usage"
                                                                                           (builtin "One Step Simplification" (formula "116"))
                                                                                           (builtin "One Step Simplification" (formula "143"))
                                                                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "116") (term "1,1,1,0") (ifseqformula "84"))
                                                                                          (rule "expand_inInt" (formula "116") (term "0,1,0"))
                                                                                          (rule "replace_int_MIN" (formula "116") (term "0,1,0,1,0"))
                                                                                          (rule "replace_int_MAX" (formula "116") (term "1,0,0,1,0"))
                                                                                          (rule "andLeft" (formula "116"))
                                                                                          (rule "andLeft" (formula "116"))
                                                                                          (rule "andLeft" (formula "117"))
                                                                                          (rule "andLeft" (formula "117"))
                                                                                          (rule "translateJavaCastInt" (formula "120") (term "0,1"))
                                                                                          (rule "translateJavaCastInt" (formula "120") (term "0"))
                                                                                          (rule "translateJavaAddInt" (formula "120") (term "1"))
                                                                                          (rule "replace_known_left" (formula "119") (term "0") (ifseqformula "116"))
                                                                                           (builtin "One Step Simplification" (formula "119"))
                                                                                          (rule "true_left" (formula "119"))
                                                                                          (rule "polySimp_addComm0" (formula "119") (term "1"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "118"))
                                                                                          (rule "applyEq" (formula "119") (term "1,0") (ifseqformula "40"))
                                                                                          (rule "applyEq" (formula "119") (term "1,1,1") (ifseqformula "40"))
                                                                                          (rule "elim_double_block_2" (formula "146") (term "1"))
                                                                                          (rule "ifUnfold" (formula "146") (term "1") (inst "#boolv=x"))
                                                                                          (rule "variableDeclaration" (formula "146") (term "1") (newnames "x_20"))
                                                                                          (rule "inequality_comparison_simple" (formula "146") (term "1"))
                                                                                           (builtin "One Step Simplification" (formula "146"))
                                                                                          (rule "replace_known_left" (formula "146") (term "0,0,1,0") (ifseqformula "116"))
                                                                                           (builtin "One Step Simplification" (formula "146"))
                                                                                           (builtin "Use Dependency Contract" (formula "89") (term "1") (ifInst ""  (formula "89") (term "1,0")) (ifInst ""  (formula "84")) (contract "de.wiesler.Buffers[de.wiesler.Buffers::count()].JML accessible clause.0"))
                                                                                          (rule "wellFormedStorePrimitiveArray" (formula "120") (term "0,1,0,0,0"))
                                                                                          (rule "wellFormedAnonEQ" (formula "120") (term "1,1,0,0,0") (ifseqformula "84"))
                                                                                          (rule "wellFormedAnon" (formula "120") (term "0,1,0,0,0"))
                                                                                          (rule "wellFormedStorePrimitiveArray" (formula "120") (term "0,1,1,0,0,0"))
                                                                                          (rule "wellFormedAnon" (formula "120") (term "0,1,1,0,0,0"))
                                                                                          (rule "eqSymm" (formula "120") (term "1"))
                                                                                          (rule "translateJavaSubInt" (formula "120") (term "2,1,1,0"))
                                                                                          (rule "replace_known_right" (formula "120") (term "0,0,0,0,0,0") (ifseqformula "143"))
                                                                                           (builtin "One Step Simplification" (formula "120") (ifInst ""  (formula "18")) (ifInst ""  (formula "17")) (ifInst ""  (formula "18")) (ifInst ""  (formula "17")) (ifInst ""  (formula "83")))
                                                                                          (rule "polySimp_elimSub" (formula "120") (term "2,1,1,0"))
                                                                                          (rule "mul_literals" (formula "120") (term "1,2,1,1,0"))
                                                                                          (rule "polySimp_addComm0" (formula "120") (term "2,1,1,0"))
                                                                                          (rule "dismissNonSelectedField" (formula "120") (term "0,0,0,0"))
                                                                                           (builtin "One Step Simplification" (formula "120") (ifInst ""  (formula "32")))
                                                                                          (rule "disjointDefinition" (formula "120") (term "1,0"))
                                                                                          (rule "distributeIntersection_2" (formula "120") (term "0,1,0"))
                                                                                          (rule "intersectWithSingleton" (formula "120") (term "0,0,1,0"))
                                                                                          (rule "elementOfArrayRangeConcrete" (formula "120") (term "0,0,0,1,0"))
                                                                                           (builtin "One Step Simplification" (formula "120"))
                                                                                          (rule "inEqSimp_commuteLeq" (formula "120") (term "0,0,0,0,1,0"))
                                                                                          (rule "replace_known_left" (formula "120") (term "0,0,0,0,1,0") (ifseqformula "66"))
                                                                                           (builtin "One Step Simplification" (formula "120"))
                                                                                          (rule "unionEqualsEmpty" (formula "120") (term "1,0"))
                                                                                           (builtin "One Step Simplification" (formula "120"))
                                                                                          (rule "disjointArrayRanges" (formula "120") (term "1,1,0"))
                                                                                          (rule "eqSymm" (formula "120") (term "0,0,0,0,1,1,0"))
                                                                                          (rule "replace_known_right" (formula "120") (term "0,0,0,0,1,1,0") (ifseqformula "123"))
                                                                                           (builtin "One Step Simplification" (formula "120"))
                                                                                          (rule "ifSplit" (formula "147"))
                                                                                          (branch "if x_20 true"
                                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                                             (rule "closeFalse" (formula "1"))
                                                                                          )
                                                                                          (branch "if x_20 false"
                                                                                              (builtin "One Step Simplification" (formula "1"))
                                                                                              (builtin "One Step Simplification" (formula "148"))
                                                                                             (rule "true_left" (formula "1"))
                                                                                             (rule "blockEmpty" (formula "147") (term "1"))
                                                                                             (rule "compound_assignment_op_plus" (formula "147") (term "1"))
                                                                                             (rule "compound_int_cast_expression" (formula "147") (term "1") (inst "#v=x"))
                                                                                             (rule "variableDeclarationAssign" (formula "147") (term "1"))
                                                                                             (rule "variableDeclaration" (formula "147") (term "1") (newnames "x_21"))
                                                                                             (rule "remove_parentheses_right" (formula "147") (term "1"))
                                                                                             (rule "compound_addition_2" (formula "147") (term "1") (inst "#v0=x_22") (inst "#v1=x_23"))
                                                                                             (rule "variableDeclarationAssign" (formula "147") (term "1"))
                                                                                             (rule "variableDeclaration" (formula "147") (term "1") (newnames "x_22"))
                                                                                             (rule "assignment" (formula "147") (term "1"))
                                                                                              (builtin "One Step Simplification" (formula "147"))
                                                                                             (rule "variableDeclarationAssign" (formula "147") (term "1"))
                                                                                             (rule "variableDeclaration" (formula "147") (term "1") (newnames "x_23"))
                                                                                             (rule "remove_parentheses_right" (formula "147") (term "1"))
                                                                                             (rule "assignment" (formula "147") (term "1"))
                                                                                              (builtin "One Step Simplification" (formula "147"))
                                                                                             (rule "assignmentAdditionInt" (formula "147") (term "1"))
                                                                                             (branch "Overflow check"
                                                                                                 (builtin "One Step Simplification" (formula "147"))
                                                                                                (rule "expand_inInt" (formula "147"))
                                                                                                (rule "replace_int_MAX" (formula "147") (term "1,0"))
                                                                                                (rule "replace_int_MIN" (formula "147") (term "0,1"))
                                                                                                (rule "polySimp_homoEq" (formula "115") (term "1,0"))
                                                                                                (rule "polySimp_homoEq" (formula "119"))
                                                                                                (rule "polySimp_homoEq" (formula "88") (term "1,0"))
                                                                                                (rule "polySimp_homoEq" (formula "89"))
                                                                                                (rule "polySimp_mulComm0" (formula "115") (term "1,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "89") (term "1,0"))
                                                                                                (rule "polySimp_addComm0" (formula "147") (term "1,1"))
                                                                                                (rule "polySimp_addComm0" (formula "147") (term "0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "119") (term "0"))
                                                                                                (rule "polySimp_addComm1" (formula "88") (term "0,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "115") (term "1,0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "115") (term "0,1,0,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "89") (term "1,0"))
                                                                                                (rule "mul_literals" (formula "89") (term "0,1,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "115") (term "0,1,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "89") (term "0"))
                                                                                                (rule "polySimp_addComm0" (formula "89") (term "0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "67"))
                                                                                                (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "5"))
                                                                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "115") (term "0,0,0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "115") (term "1,0,0,0,0,0,0,0"))
                                                                                                (rule "inEqSimp_ltToLeq" (formula "87") (term "0,0,0,0,0"))
                                                                                                (rule "mul_literals" (formula "87") (term "1,0,0,0,0,0,0,0"))
                                                                                                (rule "add_literals" (formula "87") (term "0,0,0,0,0,0,0"))
                                                                                                (rule "inEqSimp_homoInEq0" (formula "49"))
                                                                                                (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "49") (term "0,1,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                                                                (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,0,0,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                                                                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0,0"))
                                                                                                (rule "add_literals" (formula "4") (term "1,1,0,0,0,0,0"))
                                                                                                (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0"))
                                                                                                (rule "add_zero_right" (formula "4") (term "0,0,0,0,0"))
                                                                                                (rule "inEqSimp_homoInEq1" (formula "39"))
                                                                                                (rule "polySimp_addComm1" (formula "39") (term "0"))
                                                                                                (rule "inEqSimp_homoInEq0" (formula "147") (term "1"))
                                                                                                (rule "mul_literals" (formula "147") (term "1,0,1"))
                                                                                                (rule "polySimp_addComm1" (formula "147") (term "0,1"))
                                                                                                (rule "add_literals" (formula "147") (term "0,0,1"))
                                                                                                (rule "inEqSimp_homoInEq0" (formula "147") (term "0"))
                                                                                                (rule "polySimp_mulComm0" (formula "147") (term "1,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "147") (term "1,0,0"))
                                                                                                (rule "mul_literals" (formula "147") (term "0,1,0,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "147") (term "0,0"))
                                                                                                (rule "add_literals" (formula "147") (term "0,0,0"))
                                                                                                (rule "jmod_axiom" (formula "51") (term "0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "51") (term "1,0"))
                                                                                                (rule "polySimp_sepPosMonomial" (formula "119"))
                                                                                                (rule "polySimp_mulComm0" (formula "119") (term "1"))
                                                                                                (rule "polySimp_rightDist" (formula "119") (term "1"))
                                                                                                (rule "mul_literals" (formula "119") (term "0,1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "119") (term "1,1"))
                                                                                                (rule "polySimp_elimOne" (formula "119") (term "1,1"))
                                                                                                (rule "polySimp_sepPosMonomial" (formula "88") (term "1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "88") (term "1,1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "88") (term "1,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "88") (term "1,1,1,0"))
                                                                                                (rule "polySimp_elimOne" (formula "88") (term "1,1,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "88") (term "0,1,1,0"))
                                                                                                (rule "polySimp_sepNegMonomial" (formula "115") (term "1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "115") (term "0,1,0"))
                                                                                                (rule "polySimp_elimOne" (formula "115") (term "0,1,0"))
                                                                                                (rule "polySimp_sepNegMonomial" (formula "89"))
                                                                                                (rule "polySimp_mulLiterals" (formula "89") (term "0"))
                                                                                                (rule "polySimp_elimOne" (formula "89") (term "0"))
                                                                                                (rule "applyEq" (formula "120") (term "0,1") (ifseqformula "89"))
                                                                                                (rule "polySimp_homoEq" (formula "120") (term "1"))
                                                                                                (rule "polySimp_mulComm0" (formula "120") (term "1,0,1"))
                                                                                                (rule "polySimp_rightDist" (formula "120") (term "1,0,1"))
                                                                                                (rule "mul_literals" (formula "120") (term "0,1,0,1"))
                                                                                                (rule "polySimp_addAssoc" (formula "120") (term "0,1"))
                                                                                                (rule "polySimp_addComm0" (formula "120") (term "0,0,1"))
                                                                                                (rule "polySimp_pullOutFactor1b" (formula "120") (term "0,1"))
                                                                                                (rule "add_literals" (formula "120") (term "1,1,0,1"))
                                                                                                (rule "times_zero_1" (formula "120") (term "1,0,1"))
                                                                                                (rule "add_zero_right" (formula "120") (term "0,1"))
                                                                                                (rule "equal_literals" (formula "120") (term "1"))
                                                                                                 (builtin "One Step Simplification" (formula "120"))
                                                                                                (rule "notLeft" (formula "120"))
                                                                                                (rule "polySimp_sepNegMonomial" (formula "51"))
                                                                                                (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "67"))
                                                                                                (rule "polySimp_mulComm0" (formula "67") (term "1"))
                                                                                                (rule "polySimp_rightDist" (formula "67") (term "1"))
                                                                                                (rule "mul_literals" (formula "67") (term "0,1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "67") (term "1,1"))
                                                                                                (rule "polySimp_elimOne" (formula "67") (term "1,1"))
                                                                                                (rule "replace_known_left" (formula "81") (term "0,0") (ifseqformula "67"))
                                                                                                 (builtin "One Step Simplification" (formula "81"))
                                                                                                (rule "applyEqReverse" (formula "88") (term "1,3,0,1,1,1,0") (ifseqformula "81"))
                                                                                                (rule "applyEqReverse" (formula "82") (term "1,0") (ifseqformula "81"))
                                                                                                (rule "applyEqReverse" (formula "97") (term "1,0,0") (ifseqformula "81"))
                                                                                                (rule "applyEqReverse" (formula "84") (term "1,3,0,0") (ifseqformula "81"))
                                                                                                (rule "applyEqReverse" (formula "89") (term "1,3,0,0") (ifseqformula "81"))
                                                                                                (rule "applyEqReverse" (formula "120") (term "1,3,0,0") (ifseqformula "81"))
                                                                                                (rule "applyEqReverse" (formula "87") (term "1,3,0,0,1,0") (ifseqformula "81"))
                                                                                                (rule "hideAuxiliaryEq" (formula "81"))
                                                                                                (rule "replace_known_left" (formula "119") (term "0,1") (ifseqformula "67"))
                                                                                                 (builtin "One Step Simplification" (formula "119"))
                                                                                                (rule "false_right" (formula "119"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0"))
                                                                                                (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,0,0"))
                                                                                                (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                                                                (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                                                                (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "114") (term "0,0,0,0,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "114") (term "1,0,0,0,0,0"))
                                                                                                (rule "polySimp_rightDist" (formula "114") (term "1,0,0,0,0,0"))
                                                                                                (rule "mul_literals" (formula "114") (term "0,1,0,0,0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "114") (term "1,1,0,0,0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "114") (term "1,1,0,0,0,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "0,0,0,0,0"))
                                                                                                (rule "mul_literals" (formula "86") (term "1,0,0,0,0,0"))
                                                                                                (rule "inEqSimp_sepNegMonomial1" (formula "49"))
                                                                                                (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                                                                                (rule "polySimp_elimOne" (formula "49") (term "0"))
                                                                                                (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "4") (term "0,0,0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial0" (formula "39"))
                                                                                                (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                                                                                (rule "polySimp_rightDist" (formula "39") (term "1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                                                                                (rule "mul_literals" (formula "39") (term "0,1"))
                                                                                                (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "145") (term "1"))
                                                                                                (rule "mul_literals" (formula "145") (term "1,1"))
                                                                                                (rule "inEqSimp_sepNegMonomial1" (formula "145") (term "0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "145") (term "0,0"))
                                                                                                (rule "polySimp_elimOne" (formula "145") (term "0,0"))
                                                                                                (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "36"))
                                                                                                (rule "leq_literals" (formula "38") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "38"))
                                                                                                (rule "true_left" (formula "38"))
                                                                                                (rule "inEqSimp_subsumption0" (formula "52") (ifseqformula "54"))
                                                                                                (rule "leq_literals" (formula "52") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "52"))
                                                                                                (rule "true_left" (formula "52"))
                                                                                                (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "40"))
                                                                                                (rule "leq_literals" (formula "24") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "24"))
                                                                                                (rule "true_left" (formula "24"))
                                                                                                (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "41"))
                                                                                                (rule "leq_literals" (formula "43") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "43"))
                                                                                                (rule "true_left" (formula "43"))
                                                                                                (rule "inEqSimp_subsumption1" (formula "141") (term "1") (ifseqformula "66"))
                                                                                                (rule "leq_literals" (formula "141") (term "0,1"))
                                                                                                 (builtin "One Step Simplification" (formula "141"))
                                                                                                (rule "inEqSimp_leqRight" (formula "141"))
                                                                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                                                (rule "mul_literals" (formula "1") (term "1"))
                                                                                                (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "6"))
                                                                                                (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                                                                (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                                                                (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                                                                (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                                                                (rule "add_literals" (formula "10") (term "0,0"))
                                                                                                (rule "qeq_literals" (formula "10") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "10"))
                                                                                                (rule "true_left" (formula "10"))
                                                                                                (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0,0") (ifseqformula "9"))
                                                                                                (rule "qeq_literals" (formula "5") (term "0,0,0,0"))
                                                                                                 (builtin "One Step Simplification" (formula "5"))
                                                                                                (rule "applyEqReverse" (formula "58") (term "2,0") (ifseqformula "5"))
                                                                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                                                                (rule "inEqSimp_subsumption1" (formula "67") (ifseqformula "61"))
                                                                                                (rule "leq_literals" (formula "67") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "67"))
                                                                                                (rule "true_left" (formula "67"))
                                                                                                (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "73"))
                                                                                                (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                                                                (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                                                                (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                                                                (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                                                                (rule "add_literals" (formula "10") (term "0,0"))
                                                                                                (rule "qeq_literals" (formula "10") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "10"))
                                                                                                (rule "true_left" (formula "10"))
                                                                                                (rule "inEqSimp_subsumption1" (formula "48") (ifseqformula "47"))
                                                                                                (rule "leq_literals" (formula "48") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "48"))
                                                                                                (rule "true_left" (formula "48"))
                                                                                                (rule "inEqSimp_subsumption1" (formula "63") (ifseqformula "1"))
                                                                                                (rule "leq_literals" (formula "63") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "63"))
                                                                                                (rule "true_left" (formula "63"))
                                                                                                (rule "newSym_eq" (formula "46") (inst "newSymDef=add(mul(begin, Z(0(#))), mul(i, Z(0(#))))") (inst "l=l_0"))
                                                                                                (rule "times_zero_1" (formula "46") (term "0,1,1"))
                                                                                                (rule "times_zero_1" (formula "46") (term "1,1,1"))
                                                                                                (rule "add_zero_left" (formula "46") (term "1,1"))
                                                                                                (rule "add_zero_right" (formula "46") (term "1"))
                                                                                                (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "46"))
                                                                                                (rule "polySimp_homoEq" (formula "47"))
                                                                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,0"))
                                                                                                (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                                                                (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                                                                (rule "polySimp_sepPosMonomial" (formula "47"))
                                                                                                (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                                                                                (rule "polySimp_rightDist" (formula "47") (term "1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                                                                                                (rule "polySimp_elimOne" (formula "47") (term "1,1"))
                                                                                                (rule "polySimp_mulComm0" (formula "47") (term "0,1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "47") (term "0,1"))
                                                                                                (rule "applyEq" (formula "14") (term "1,2,1,0,0,1,0") (ifseqformula "47"))
                                                                                                (rule "polySimp_addAssoc" (formula "14") (term "2,1,0,0,1,0"))
                                                                                                (rule "applyEq" (formula "46") (term "1,0,0") (ifseqformula "47"))
                                                                                                (rule "polySimp_addAssoc" (formula "46") (term "0,0"))
                                                                                                (rule "polySimp_addComm0" (formula "46") (term "0,0,0"))
                                                                                                (rule "polySimp_pullOutFactor2b" (formula "46") (term "0,0"))
                                                                                                (rule "add_literals" (formula "46") (term "1,1,0,0"))
                                                                                                (rule "times_zero_1" (formula "46") (term "1,0,0"))
                                                                                                (rule "add_zero_right" (formula "46") (term "0,0"))
                                                                                                (rule "applyEq" (formula "12") (term "1,2,1,0,0,1,0,0,1,0") (ifseqformula "47"))
                                                                                                (rule "polySimp_addAssoc" (formula "12") (term "2,1,0,0,1,0,0,1,0"))
                                                                                                (rule "applyEq" (formula "13") (term "1,2,1,0,0,1,0") (ifseqformula "47"))
                                                                                                (rule "polySimp_addAssoc" (formula "13") (term "2,1,0,0,1,0"))
                                                                                                (rule "applyEq" (formula "43") (term "1") (ifseqformula "47"))
                                                                                                (rule "applyEq" (formula "75") (term "1,2,1,0,0,1,0,0,0") (ifseqformula "47"))
                                                                                                (rule "polySimp_addAssoc" (formula "75") (term "2,1,0,0,1,0,0,0"))
                                                                                                (rule "applyEq" (formula "11") (term "1,2,1,0,0,1,0,0") (ifseqformula "47"))
                                                                                                (rule "polySimp_addAssoc" (formula "11") (term "2,1,0,0,1,0,0"))
                                                                                                (rule "applyEq" (formula "78") (term "1,2,1,0,0,1,0,0,0,1,0") (ifseqformula "47"))
                                                                                                (rule "polySimp_addAssoc" (formula "78") (term "2,1,0,0,1,0,0,0,1,0"))
                                                                                                (rule "applyEq" (formula "110") (term "1,2,1,0,0,1,0,2,0") (ifseqformula "47"))
                                                                                                (rule "polySimp_addAssoc" (formula "110") (term "2,1,0,0,1,0,2,0"))
                                                                                                (rule "applyEq" (formula "51") (term "5,0") (ifseqformula "47"))
                                                                                                (rule "applyEq" (formula "44") (term "0,1,1") (ifseqformula "47"))
                                                                                                (rule "polySimp_mulComm0" (formula "44") (term "1,1"))
                                                                                                (rule "polySimp_rightDist" (formula "44") (term "1,1"))
                                                                                                (rule "polySimp_mulAssoc" (formula "44") (term "0,1,1"))
                                                                                                (rule "polySimp_mulComm0" (formula "44") (term "0,0,1,1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "44") (term "0,1,1"))
                                                                                                (rule "polySimp_addComm0" (formula "44") (term "1"))
                                                                                                (rule "applyEq" (formula "25") (term "0") (ifseqformula "47"))
                                                                                                (rule "inEqSimp_homoInEq1" (formula "25"))
                                                                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                                                                (rule "polySimp_mulAssoc" (formula "25") (term "0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "25") (term "0,0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                                                                (rule "applyEq" (formula "72") (term "1,2,1,0,0,1,0,0") (ifseqformula "47"))
                                                                                                (rule "polySimp_addAssoc" (formula "72") (term "2,1,0,0,1,0,0"))
                                                                                                (rule "applyEq" (formula "73") (term "1,2,1,0,0,1,0,0") (ifseqformula "47"))
                                                                                                (rule "polySimp_addAssoc" (formula "73") (term "2,1,0,0,1,0,0"))
                                                                                                (rule "applyEq" (formula "62") (term "1,2,1,0,0,1,0") (ifseqformula "47"))
                                                                                                (rule "polySimp_addAssoc" (formula "62") (term "2,1,0,0,1,0"))
                                                                                                (rule "applyEq" (formula "80") (term "1,2,1,0,0,1,0,0,0") (ifseqformula "47"))
                                                                                                (rule "polySimp_addAssoc" (formula "80") (term "2,1,0,0,1,0,0,0"))
                                                                                                (rule "applyEq" (formula "65") (term "1,2,1,0,0,1,0,0") (ifseqformula "47"))
                                                                                                (rule "polySimp_addAssoc" (formula "65") (term "2,1,0,0,1,0,0"))
                                                                                                (rule "applyEq" (formula "66") (term "1,2,1,0,0,1,0") (ifseqformula "47"))
                                                                                                (rule "polySimp_addAssoc" (formula "66") (term "2,1,0,0,1,0"))
                                                                                                (rule "applyEq" (formula "24") (term "0") (ifseqformula "47"))
                                                                                                (rule "inEqSimp_homoInEq0" (formula "24"))
                                                                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                                                                (rule "polySimp_mulAssoc" (formula "24") (term "0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                                                                (rule "applyEq" (formula "71") (term "0") (ifseqformula "47"))
                                                                                                (rule "inEqSimp_homoInEq1" (formula "71"))
                                                                                                (rule "polySimp_mulComm0" (formula "71") (term "1,0"))
                                                                                                (rule "polySimp_rightDist" (formula "71") (term "1,0"))
                                                                                                (rule "polySimp_mulAssoc" (formula "71") (term "0,1,0"))
                                                                                                (rule "polySimp_mulComm0" (formula "71") (term "0,0,1,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "71") (term "0,1,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "71") (term "0"))
                                                                                                (rule "polySimp_addComm1" (formula "71") (term "0,0"))
                                                                                                (rule "applyEq" (formula "56") (term "1,2,1,0,0,1,0,0") (ifseqformula "47"))
                                                                                                (rule "polySimp_addAssoc" (formula "56") (term "2,1,0,0,1,0,0"))
                                                                                                (rule "applyEq" (formula "106") (term "1,2,1,0,0,1,0,0,1,1,1,0") (ifseqformula "47"))
                                                                                                (rule "polySimp_addAssoc" (formula "106") (term "2,1,0,0,1,0,0,1,1,1,0"))
                                                                                                (rule "applyEq" (formula "12") (term "4,1,1,0") (ifseqformula "47"))
                                                                                                (rule "applyEq" (formula "11") (term "0,5,0") (ifseqformula "47"))
                                                                                                (rule "applyEq" (formula "50") (term "0,0,2,2,0,1,0") (ifseqformula "47"))
                                                                                                (rule "applyEq" (formula "12") (term "0,4,0,1,0") (ifseqformula "47"))
                                                                                                (rule "applyEq" (formula "79") (term "1,2,1,0,0,1,0,0,1,1,1,0") (ifseqformula "47"))
                                                                                                (rule "polySimp_addAssoc" (formula "79") (term "2,1,0,0,1,0,0,1,1,1,0"))
                                                                                                (rule "applyEq" (formula "56") (term "0,0,2,2,0") (ifseqformula "47"))
                                                                                                (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                                                                                (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                                                                (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                                                                (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                                                                (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                                                                (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                                                                (rule "inEqSimp_sepNegMonomial0" (formula "71"))
                                                                                                (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                                                                                                (rule "polySimp_elimOne" (formula "71") (term "0"))
                                                                                                (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "40"))
                                                                                                (rule "polySimp_mulComm0" (formula "41") (term "0,0"))
                                                                                                (rule "polySimp_addComm0" (formula "41") (term "0"))
                                                                                                (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                                                                                                (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                                                                                (rule "polySimp_elimOne" (formula "41") (term "0"))
                                                                                                (rule "inEqSimp_subsumption0" (formula "26") (ifseqformula "41"))
                                                                                                (rule "leq_literals" (formula "26") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "26"))
                                                                                                (rule "true_left" (formula "26"))
                                                                                                (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "22"))
                                                                                                (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                                                                (rule "polySimp_addComm0" (formula "42") (term "0"))
                                                                                                (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                                                                                (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                                                                (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                                                                (rule "inEqSimp_exactShadow3" (formula "60") (ifseqformula "61"))
                                                                                                (rule "mul_literals" (formula "60") (term "0,0"))
                                                                                                (rule "add_zero_left" (formula "60") (term "0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "60"))
                                                                                                (rule "mul_literals" (formula "60") (term "1"))
                                                                                                (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "9"))
                                                                                                (rule "mul_literals" (formula "23") (term "0,0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                                                                (rule "mul_literals" (formula "23") (term "1"))
                                                                                                (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "1"))
                                                                                                (rule "leq_literals" (formula "23") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "23"))
                                                                                                (rule "true_left" (formula "23"))
                                                                                                (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "9"))
                                                                                                (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                                                                (rule "polySimp_addComm0" (formula "42") (term "0"))
                                                                                                (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                                                                                (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                                                                (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                                                                (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "44"))
                                                                                                (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                                                                (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                                                                (rule "polySimp_pullOutFactor2b" (formula "43") (term "0"))
                                                                                                (rule "add_literals" (formula "43") (term "1,1,0"))
                                                                                                (rule "times_zero_1" (formula "43") (term "1,0"))
                                                                                                (rule "add_zero_right" (formula "43") (term "0"))
                                                                                                (rule "elimGcdGeq_antec" (formula "43") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                                                (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,1,0"))
                                                                                                (rule "leq_literals" (formula "43") (term "0,0"))
                                                                                                 (builtin "One Step Simplification" (formula "43"))
                                                                                                (rule "add_zero_right" (formula "43") (term "0,0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0,0"))
                                                                                                (rule "add_zero_right" (formula "43") (term "0,0,0,0"))
                                                                                                (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
                                                                                                (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                                                                                (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                                                                                (rule "add_literals" (formula "43") (term "0,0"))
                                                                                                (rule "leq_literals" (formula "43") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "43"))
                                                                                                (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "46"))
                                                                                                (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                                                                (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                                                                                (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                                                                (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                                                                (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                                                                (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "47"))
                                                                                                (rule "times_zero_1" (formula "51") (term "0,0"))
                                                                                                (rule "add_zero_left" (formula "51") (term "0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "51"))
                                                                                                (rule "polySimp_mulComm0" (formula "51") (term "1"))
                                                                                                (rule "polySimp_rightDist" (formula "51") (term "1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "51") (term "1,1"))
                                                                                                (rule "polySimp_elimOne" (formula "51") (term "1,1"))
                                                                                                (rule "polySimp_mulComm0" (formula "51") (term "0,1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "51") (term "0,1"))
                                                                                                (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "46"))
                                                                                                (rule "mul_literals" (formula "24") (term "0,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                                                                (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                                                                                (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                                                                                (rule "polySimp_rightDist" (formula "24") (term "1"))
                                                                                                (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                                                                                (rule "mul_literals" (formula "24") (term "0,1"))
                                                                                                (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "53"))
                                                                                                (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                                                                (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                                                (rule "add_literals" (formula "6") (term "0,0"))
                                                                                                (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                                                                (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                                                (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                                                                (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "26"))
                                                                                                (rule "times_zero_1" (formula "38") (term "0,0"))
                                                                                                (rule "add_zero_left" (formula "38") (term "0"))
                                                                                                (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                                                                                (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                                                                (rule "elimGcdLeq_antec" (formula "38") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(7(2(7(7(1(2(4(3(1(#))))))))))"))
                                                                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0"))
                                                                                                (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,1,0"))
                                                                                                (rule "neg_literal" (formula "38") (term "0,0,0,0,0,1,0"))
                                                                                                (rule "leq_literals" (formula "38") (term "0,0"))
                                                                                                 (builtin "One Step Simplification" (formula "38"))
                                                                                                (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0"))
                                                                                                (rule "polySimp_addLiterals" (formula "38") (term "0,0,0,0"))
                                                                                                (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                                                                                (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0"))
                                                                                                (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                                                                                (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                                                                                (rule "add_literals" (formula "38") (term "0,0"))
                                                                                                (rule "qeq_literals" (formula "38") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "38"))
                                                                                                (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "43"))
                                                                                                (rule "polySimp_mulComm0" (formula "40") (term "0,0"))
                                                                                                (rule "polySimp_addComm0" (formula "40") (term "0"))
                                                                                                (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                                                                                (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                                                                                (rule "polySimp_elimOne" (formula "40") (term "0"))
                                                                                                (rule "inEqSimp_subsumption0" (formula "23") (ifseqformula "40"))
                                                                                                (rule "leq_literals" (formula "23") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "23"))
                                                                                                (rule "true_left" (formula "23"))
                                                                                                (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "45"))
                                                                                                (rule "times_zero_1" (formula "38") (term "0,0"))
                                                                                                (rule "add_zero_left" (formula "38") (term "0"))
                                                                                                (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "1"))
                                                                                                (rule "leq_literals" (formula "38") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "38"))
                                                                                                (rule "true_left" (formula "38"))
                                                                                                (rule "inEqSimp_exactShadow3" (formula "78") (ifseqformula "25"))
                                                                                                (rule "polySimp_rightDist" (formula "78") (term "0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "78") (term "0"))
                                                                                                (rule "polySimp_rightDist" (formula "78") (term "0,0,0"))
                                                                                                (rule "mul_literals" (formula "78") (term "0,0,0,0"))
                                                                                                (rule "polySimp_mulLiterals" (formula "78") (term "1,0,0,0"))
                                                                                                (rule "polySimp_addAssoc" (formula "78") (term "0,0"))
                                                                                                (rule "polySimp_addComm1" (formula "78") (term "0,0,0"))
                                                                                                (rule "add_literals" (formula "78") (term "0,0,0,0"))
                                                                                                (rule "polySimp_pullOutFactor0b" (formula "78") (term "0,0"))
                                                                                                (rule "add_literals" (formula "78") (term "1,1,0,0"))
                                                                                                (rule "times_zero_1" (formula "78") (term "1,0,0"))
                                                                                                (rule "add_literals" (formula "78") (term "0,0"))
                                                                                                (rule "inEqSimp_sepNegMonomial1" (formula "78"))
                                                                                                (rule "polySimp_mulLiterals" (formula "78") (term "0"))
                                                                                                (rule "polySimp_elimOne" (formula "78") (term "0"))
                                                                                                (rule "inEqSimp_subsumption0" (formula "70") (ifseqformula "78"))
                                                                                                (rule "leq_literals" (formula "70") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "70"))
                                                                                                (rule "true_left" (formula "70"))
                                                                                                (rule "inEqSimp_contradInEq1" (formula "77") (ifseqformula "1"))
                                                                                                (rule "qeq_literals" (formula "77") (term "0"))
                                                                                                 (builtin "One Step Simplification" (formula "77"))
                                                                                                (rule "closeFalse" (formula "77"))
                                                                                             )
                                                                                             (branch "Usage"
                                                                                                 (builtin "One Step Simplification" (formula "147"))
                                                                                                (rule "translateJavaAddInt" (formula "147") (term "0,1,0"))
                                                                                                (rule "polySimp_addComm0" (formula "147") (term "0,1,0"))
                                                                                                (rule "widening_identity_cast_5" (formula "147") (term "1"))
                                                                                                (rule "assignment" (formula "147") (term "1"))
                                                                                                 (builtin "One Step Simplification" (formula "147"))
                                                                                                (rule "tryEmpty" (formula "147") (term "1"))
                                                                                                (rule "blockEmptyLabel" (formula "147") (term "1"))
                                                                                                (rule "blockEmpty" (formula "147") (term "1"))
                                                                                                (rule "methodCallEmpty" (formula "147") (term "1"))
                                                                                                (rule "emptyModality" (formula "147") (term "1"))
                                                                                                (rule "andRight" (formula "147"))
                                                                                                (branch "Case 1"
                                                                                                    (builtin "One Step Simplification" (formula "147"))
                                                                                                   (rule "closeTrue" (formula "147"))
                                                                                                )
                                                                                                (branch "Case 2"
                                                                                                   (rule "andRight" (formula "147"))
                                                                                                   (branch "Case 1"
                                                                                                       (builtin "One Step Simplification" (formula "147") (ifInst ""  (formula "91")))
                                                                                                      (rule "closeTrue" (formula "147"))
                                                                                                   )
                                                                                                   (branch "Case 2"
                                                                                                       (builtin "One Step Simplification" (formula "147") (ifInst ""  (formula "95")))
                                                                                                      (rule "closeTrue" (formula "147"))
                                                                                                   )
                                                                                                )
                                                                                             )
                                                                                          )
                                                                                       )
                                                                                    )
                                                                                 )
                                                                              )
                                                                           )
                                                                        )
                                                                     )
                                                                  )
                                                               )
                                                            )
                                                         )
                                                      )
                                                      (branch "Exceptional Post (flush)"
                                                          (builtin "One Step Simplification" (formula "111"))
                                                          (builtin "One Step Simplification" (formula "84"))
                                                         (rule "andLeft" (formula "84"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "85") (term "1,0") (ifseqformula "84"))
                                                         (rule "andLeft" (formula "85"))
                                                         (rule "andLeft" (formula "85"))
                                                         (rule "andLeft" (formula "87"))
                                                         (rule "notLeft" (formula "85"))
                                                         (rule "close" (formula "88") (ifseqformula "87"))
                                                      )
                                                      (branch "Pre (flush)"
                                                          (builtin "One Step Simplification" (formula "109") (ifInst ""  (formula "107")) (ifInst ""  (formula "107")))
                                                         (rule "andRight" (formula "109"))
                                                         (branch "Case 1"
                                                            (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "109") (userinteraction))
                                                            (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "15") (userinteraction))
                                                            (rule "close" (formula "109") (ifseqformula "15"))
                                                         )
                                                         (branch "Case 2"
                                                            (rule "andRight" (formula "109"))
                                                            (branch "Case 1"
                                                               (rule "andRight" (formula "109"))
                                                               (branch "Case 1"
                                                                  (rule "andRight" (formula "109"))
                                                                  (branch "Case 1"
                                                                     (rule "andRight" (formula "109"))
                                                                     (branch "Case 1"
                                                                        (rule "andRight" (formula "109"))
                                                                        (branch "Case 1"
                                                                           (rule "wellFormedStorePrimitiveArray" (formula "109"))
                                                                           (rule "close" (formula "109") (ifseqformula "68"))
                                                                        )
                                                                        (branch "Case 2"
                                                                           (rule "dismissNonSelectedField" (formula "109") (term "0"))
                                                                            (builtin "One Step Simplification" (formula "109") (ifInst ""  (formula "32")))
                                                                           (rule "closeTrue" (formula "109"))
                                                                        )
                                                                     )
                                                                     (branch "Case 2"
                                                                        (rule "expand_inInt" (formula "109"))
                                                                        (rule "replace_int_MIN" (formula "109") (term "0,1"))
                                                                        (rule "replace_int_MAX" (formula "109") (term "1,0"))
                                                                        (rule "replace_known_left" (formula "109") (term "0") (ifseqformula "71"))
                                                                         (builtin "One Step Simplification" (formula "109"))
                                                                        (rule "inEqSimp_leqRight" (formula "109"))
                                                                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                        (rule "add_literals" (formula "1") (term "0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "68"))
                                                                        (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                                                        (rule "inEqSimp_ltToLeq" (formula "6"))
                                                                        (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                        (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                        (rule "inEqSimp_homoInEq1" (formula "40"))
                                                                        (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0,0,0"))
                                                                        (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0,0"))
                                                                        (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,0"))
                                                                        (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0"))
                                                                        (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "50"))
                                                                        (rule "polySimp_mulComm0" (formula "50") (term "1,0"))
                                                                        (rule "polySimp_rightDist" (formula "50") (term "1,0"))
                                                                        (rule "polySimp_mulComm0" (formula "50") (term "0,1,0"))
                                                                        (rule "polySimp_addAssoc" (formula "50") (term "0"))
                                                                        (rule "jmod_axiom" (formula "52") (term "0"))
                                                                        (rule "polySimp_mulLiterals" (formula "52") (term "1,0"))
                                                                        (rule "polySimp_sepNegMonomial" (formula "52"))
                                                                        (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,0,0"))
                                                                        (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,0,0"))
                                                                        (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,0,0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "68"))
                                                                        (rule "polySimp_mulComm0" (formula "68") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "68") (term "1"))
                                                                        (rule "polySimp_mulLiterals" (formula "68") (term "1,1"))
                                                                        (rule "mul_literals" (formula "68") (term "0,1"))
                                                                        (rule "polySimp_elimOne" (formula "68") (term "1,1"))
                                                                        (rule "replace_known_left" (formula "82") (term "0,0") (ifseqformula "68"))
                                                                         (builtin "One Step Simplification" (formula "82"))
                                                                        (rule "applyEqReverse" (formula "83") (term "1,0") (ifseqformula "82"))
                                                                        (rule "hideAuxiliaryEq" (formula "82"))
                                                                        (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                                        (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                                        (rule "inEqSimp_sepPosMonomial0" (formula "40"))
                                                                        (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                                                        (rule "polySimp_rightDist" (formula "40") (term "1"))
                                                                        (rule "mul_literals" (formula "40") (term "0,1"))
                                                                        (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                                                        (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "5") (term "0,0,0"))
                                                                        (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,0"))
                                                                        (rule "polySimp_elimOne" (formula "5") (term "0,0,0,0"))
                                                                        (rule "inEqSimp_sepNegMonomial1" (formula "50"))
                                                                        (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                                                        (rule "polySimp_elimOne" (formula "50") (term "0"))
                                                                        (rule "inEqSimp_subsumption0" (formula "72") (ifseqformula "1"))
                                                                        (rule "leq_literals" (formula "72") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "72"))
                                                                        (rule "true_left" (formula "72"))
                                                                        (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "42"))
                                                                        (rule "leq_literals" (formula "25") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "25"))
                                                                        (rule "true_left" (formula "25"))
                                                                        (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "6"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                                        (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                                        (rule "add_literals" (formula "10") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "10") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "10"))
                                                                        (rule "true_left" (formula "10"))
                                                                        (rule "inEqSimp_subsumption1" (formula "44") (ifseqformula "42"))
                                                                        (rule "leq_literals" (formula "44") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "44"))
                                                                        (rule "true_left" (formula "44"))
                                                                        (rule "inEqSimp_subsumption1" (formula "52") (ifseqformula "50"))
                                                                        (rule "leq_literals" (formula "52") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "52"))
                                                                        (rule "true_left" (formula "52"))
                                                                        (rule "inEqSimp_subsumption1" (formula "37") (ifseqformula "35"))
                                                                        (rule "leq_literals" (formula "37") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "37"))
                                                                        (rule "true_left" (formula "37"))
                                                                        (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "74"))
                                                                        (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                                                        (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                                                                        (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                                        (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                                        (rule "add_literals" (formula "11") (term "0,0"))
                                                                        (rule "qeq_literals" (formula "11") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "11"))
                                                                        (rule "true_left" (formula "11"))
                                                                        (rule "inEqSimp_contradInEq0" (formula "66") (ifseqformula "1"))
                                                                        (rule "qeq_literals" (formula "66") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "66"))
                                                                        (rule "closeFalse" (formula "66"))
                                                                     )
                                                                  )
                                                                  (branch "Case 2"
                                                                     (rule "dismissNonSelectedField" (formula "109") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "109") (ifInst ""  (formula "22")))
                                                                     (rule "closeTrue" (formula "109"))
                                                                  )
                                                               )
                                                               (branch "Case 2"
                                                                  (rule "expand_inInt" (formula "109"))
                                                                  (rule "replace_int_MIN" (formula "109") (term "0,1"))
                                                                  (rule "replace_int_MAX" (formula "109") (term "1,0"))
                                                                  (rule "replace_known_left" (formula "109") (term "0") (ifseqformula "69"))
                                                                   (builtin "One Step Simplification" (formula "109"))
                                                                  (rule "inEqSimp_leqRight" (formula "109"))
                                                                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                  (rule "add_literals" (formula "1") (term "0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "6"))
                                                                  (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "68"))
                                                                  (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                                                  (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "50"))
                                                                  (rule "polySimp_mulComm0" (formula "50") (term "1,0"))
                                                                  (rule "polySimp_rightDist" (formula "50") (term "1,0"))
                                                                  (rule "polySimp_mulComm0" (formula "50") (term "0,1,0"))
                                                                  (rule "polySimp_addAssoc" (formula "50") (term "0"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0,0,0"))
                                                                  (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,0"))
                                                                  (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0"))
                                                                  (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                                                                  (rule "inEqSimp_homoInEq1" (formula "40"))
                                                                  (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                                  (rule "jmod_axiom" (formula "52") (term "0"))
                                                                  (rule "polySimp_mulLiterals" (formula "52") (term "1,0"))
                                                                  (rule "polySimp_sepNegMonomial" (formula "52"))
                                                                  (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "68"))
                                                                  (rule "polySimp_mulComm0" (formula "68") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "68") (term "1"))
                                                                  (rule "polySimp_mulLiterals" (formula "68") (term "1,1"))
                                                                  (rule "mul_literals" (formula "68") (term "0,1"))
                                                                  (rule "polySimp_elimOne" (formula "68") (term "1,1"))
                                                                  (rule "replace_known_left" (formula "82") (term "0,0") (ifseqformula "68"))
                                                                   (builtin "One Step Simplification" (formula "82"))
                                                                  (rule "applyEqReverse" (formula "83") (term "1,0") (ifseqformula "82"))
                                                                  (rule "hideAuxiliaryEq" (formula "82"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,0,0"))
                                                                  (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                                                  (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,0,0"))
                                                                  (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,0,0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "50"))
                                                                  (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                                                  (rule "polySimp_elimOne" (formula "50") (term "0"))
                                                                  (rule "inEqSimp_sepNegMonomial1" (formula "5") (term "0,0,0"))
                                                                  (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,0"))
                                                                  (rule "polySimp_elimOne" (formula "5") (term "0,0,0,0"))
                                                                  (rule "inEqSimp_sepPosMonomial0" (formula "40"))
                                                                  (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                                                  (rule "polySimp_rightDist" (formula "40") (term "1"))
                                                                  (rule "mul_literals" (formula "40") (term "0,1"))
                                                                  (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                                                  (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                                                                  (rule "inEqSimp_subsumption1" (formula "55") (ifseqformula "53"))
                                                                  (rule "leq_literals" (formula "55") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "55"))
                                                                  (rule "true_left" (formula "55"))
                                                                  (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "79"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                                                  (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "12") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "12") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "12"))
                                                                  (rule "true_left" (formula "12"))
                                                                  (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "6"))
                                                                  (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                                  (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                                  (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                                  (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                                  (rule "add_literals" (formula "10") (term "0,0"))
                                                                  (rule "qeq_literals" (formula "10") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "10"))
                                                                  (rule "true_left" (formula "10"))
                                                                  (rule "inEqSimp_subsumption1" (formula "70") (ifseqformula "64"))
                                                                  (rule "leq_literals" (formula "70") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "70"))
                                                                  (rule "true_left" (formula "70"))
                                                                  (rule "inEqSimp_subsumption0" (formula "52") (ifseqformula "53"))
                                                                  (rule "leq_literals" (formula "52") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "52"))
                                                                  (rule "true_left" (formula "52"))
                                                                  (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "40"))
                                                                  (rule "leq_literals" (formula "23") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "23"))
                                                                  (rule "true_left" (formula "23"))
                                                                  (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "41"))
                                                                  (rule "leq_literals" (formula "43") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "43"))
                                                                  (rule "true_left" (formula "43"))
                                                                  (rule "inEqSimp_contradInEq0" (formula "65") (ifseqformula "1"))
                                                                  (rule "qeq_literals" (formula "65") (term "0"))
                                                                   (builtin "One Step Simplification" (formula "65"))
                                                                  (rule "closeFalse" (formula "65"))
                                                               )
                                                            )
                                                            (branch "Case 2"
                                                               (rule "expand_inInt" (formula "109"))
                                                               (rule "replace_int_MIN" (formula "109") (term "0,1"))
                                                               (rule "replace_int_MAX" (formula "109") (term "1,0"))
                                                               (rule "replace_known_left" (formula "109") (term "0") (ifseqformula "27"))
                                                                (builtin "One Step Simplification" (formula "109"))
                                                               (rule "inEqSimp_leqRight" (formula "109"))
                                                               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                               (rule "add_literals" (formula "1") (term "0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "68"))
                                                               (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,0,0"))
                                                               (rule "inEqSimp_ltToLeq" (formula "6"))
                                                               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                               (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                               (rule "inEqSimp_homoInEq1" (formula "40"))
                                                               (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0,0,0"))
                                                               (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0,0"))
                                                               (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,0"))
                                                               (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0"))
                                                               (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                                                               (rule "inEqSimp_homoInEq0" (formula "50"))
                                                               (rule "polySimp_mulComm0" (formula "50") (term "1,0"))
                                                               (rule "polySimp_rightDist" (formula "50") (term "1,0"))
                                                               (rule "polySimp_mulComm0" (formula "50") (term "0,1,0"))
                                                               (rule "polySimp_addAssoc" (formula "50") (term "0"))
                                                               (rule "jmod_axiom" (formula "52") (term "0"))
                                                               (rule "polySimp_mulLiterals" (formula "52") (term "1,0"))
                                                               (rule "polySimp_sepNegMonomial" (formula "52"))
                                                               (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "68"))
                                                               (rule "polySimp_mulComm0" (formula "68") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "68") (term "1"))
                                                               (rule "polySimp_mulLiterals" (formula "68") (term "1,1"))
                                                               (rule "mul_literals" (formula "68") (term "0,1"))
                                                               (rule "polySimp_elimOne" (formula "68") (term "1,1"))
                                                               (rule "replace_known_left" (formula "82") (term "0,0") (ifseqformula "68"))
                                                                (builtin "One Step Simplification" (formula "82"))
                                                               (rule "applyEqReverse" (formula "83") (term "1,0") (ifseqformula "82"))
                                                               (rule "hideAuxiliaryEq" (formula "82"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,0,0"))
                                                               (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,0,0"))
                                                               (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                               (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                               (rule "inEqSimp_sepPosMonomial0" (formula "40"))
                                                               (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                                               (rule "polySimp_rightDist" (formula "40") (term "1"))
                                                               (rule "mul_literals" (formula "40") (term "0,1"))
                                                               (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                                               (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "5") (term "0,0,0"))
                                                               (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,0"))
                                                               (rule "polySimp_elimOne" (formula "5") (term "0,0,0,0"))
                                                               (rule "inEqSimp_sepNegMonomial1" (formula "50"))
                                                               (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                                               (rule "polySimp_elimOne" (formula "50") (term "0"))
                                                               (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "6"))
                                                               (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                               (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                               (rule "add_literals" (formula "10") (term "0,0"))
                                                               (rule "qeq_literals" (formula "10") (term "0"))
                                                                (builtin "One Step Simplification" (formula "10"))
                                                               (rule "true_left" (formula "10"))
                                                               (rule "inEqSimp_subsumption1" (formula "54") (ifseqformula "52"))
                                                               (rule "leq_literals" (formula "54") (term "0"))
                                                                (builtin "One Step Simplification" (formula "54"))
                                                               (rule "true_left" (formula "54"))
                                                               (rule "inEqSimp_subsumption1" (formula "45") (ifseqformula "43"))
                                                               (rule "leq_literals" (formula "45") (term "0"))
                                                                (builtin "One Step Simplification" (formula "45"))
                                                               (rule "true_left" (formula "45"))
                                                               (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "36"))
                                                               (rule "leq_literals" (formula "38") (term "0"))
                                                                (builtin "One Step Simplification" (formula "38"))
                                                               (rule "true_left" (formula "38"))
                                                               (rule "inEqSimp_subsumption0" (formula "51") (ifseqformula "52"))
                                                               (rule "leq_literals" (formula "51") (term "0"))
                                                                (builtin "One Step Simplification" (formula "51"))
                                                               (rule "true_left" (formula "51"))
                                                               (rule "inEqSimp_subsumption1" (formula "68") (ifseqformula "62"))
                                                               (rule "leq_literals" (formula "68") (term "0"))
                                                                (builtin "One Step Simplification" (formula "68"))
                                                               (rule "true_left" (formula "68"))
                                                               (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "40"))
                                                               (rule "leq_literals" (formula "24") (term "0"))
                                                                (builtin "One Step Simplification" (formula "24"))
                                                               (rule "true_left" (formula "24"))
                                                               (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "73"))
                                                               (rule "inEqSimp_homoInEq0" (formula "11") (term "0"))
                                                               (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0"))
                                                               (rule "add_literals" (formula "11") (term "1,1,0,0"))
                                                               (rule "times_zero_1" (formula "11") (term "1,0,0"))
                                                               (rule "add_literals" (formula "11") (term "0,0"))
                                                               (rule "qeq_literals" (formula "11") (term "0"))
                                                                (builtin "One Step Simplification" (formula "11"))
                                                               (rule "true_left" (formula "11"))
                                                               (rule "inEqSimp_subsumption0" (formula "25") (ifseqformula "1"))
                                                               (rule "leq_literals" (formula "25") (term "0"))
                                                                (builtin "One Step Simplification" (formula "25"))
                                                               (rule "true_left" (formula "25"))
                                                               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "25"))
                                                               (rule "qeq_literals" (formula "1") (term "0"))
                                                                (builtin "One Step Simplification" (formula "1"))
                                                               (rule "closeFalse" (formula "1"))
                                                            )
                                                         )
                                                      )
                                                      (branch "Null reference (_buffers = null)"
                                                          (builtin "One Step Simplification" (formula "109") (ifInst ""  (formula "105")))
                                                         (rule "closeTrue" (formula "109"))
                                                      )
                                                   )
                                                   (branch "Null Reference (x_arr_2 = null)"
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "107")))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch "Index Out of Bounds (x_arr_2 != null, but x_11 Out of Bounds!)"
                                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "107")))
                                                       (builtin "One Step Simplification" (formula "110"))
                                                      (rule "false_right" (formula "110"))
                                                      (rule "inEqSimp_ltToLeq" (formula "6"))
                                                      (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "68"))
                                                      (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "50"))
                                                      (rule "polySimp_mulComm0" (formula "50") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "50") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "50") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "40"))
                                                      (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                      (rule "jmod_axiom" (formula "52") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "52") (term "1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "52"))
                                                      (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "68"))
                                                      (rule "polySimp_mulComm0" (formula "68") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "68") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "68") (term "1,1"))
                                                      (rule "mul_literals" (formula "68") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "68") (term "1,1"))
                                                      (rule "replace_known_left" (formula "82") (term "0,0") (ifseqformula "68"))
                                                       (builtin "One Step Simplification" (formula "82"))
                                                      (rule "applyEqReverse" (formula "83") (term "1,0") (ifseqformula "82"))
                                                      (rule "hideAuxiliaryEq" (formula "82"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "50"))
                                                      (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "50") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "5") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "40"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "40") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                                      (rule "mul_literals" (formula "40") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                                                      (rule "inEqSimp_subsumption0" (formula "54") (ifseqformula "56"))
                                                      (rule "leq_literals" (formula "54") (term "0"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "true_left" (formula "54"))
                                                      (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "37"))
                                                      (rule "leq_literals" (formula "39") (term "0"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "true_left" (formula "39"))
                                                      (rule "inEqSimp_subsumption1" (formula "71") (ifseqformula "65"))
                                                      (rule "leq_literals" (formula "71") (term "0"))
                                                       (builtin "One Step Simplification" (formula "71"))
                                                      (rule "true_left" (formula "71"))
                                                      (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "77"))
                                                      (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                                      (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                      (rule "add_literals" (formula "12") (term "0,0"))
                                                      (rule "qeq_literals" (formula "12") (term "0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "40"))
                                                      (rule "leq_literals" (formula "24") (term "0"))
                                                       (builtin "One Step Simplification" (formula "24"))
                                                      (rule "true_left" (formula "24"))
                                                      (rule "inEqSimp_subsumption1" (formula "51") (ifseqformula "50"))
                                                      (rule "leq_literals" (formula "51") (term "0"))
                                                       (builtin "One Step Simplification" (formula "51"))
                                                      (rule "true_left" (formula "51"))
                                                      (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "62"))
                                                      (rule "qeq_literals" (formula "1") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                      (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                      (rule "add_literals" (formula "10") (term "0,0"))
                                                      (rule "qeq_literals" (formula "10") (term "0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "40"))
                                                      (rule "leq_literals" (formula "42") (term "0"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0,0") (ifseqformula "9"))
                                                      (rule "qeq_literals" (formula "5") (term "0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "5"))
                                                      (rule "applyEqReverse" (formula "56") (term "2,0") (ifseqformula "5"))
                                                      (rule "hideAuxiliaryEq" (formula "5"))
                                                      (rule "newSym_eq" (formula "46") (inst "newSymDef=add(mul(begin, Z(0(#))), mul(i, Z(0(#))))") (inst "l=l_0"))
                                                      (rule "times_zero_1" (formula "46") (term "1,1,1"))
                                                      (rule "times_zero_1" (formula "46") (term "0,1,1"))
                                                      (rule "add_zero_left" (formula "46") (term "1,1"))
                                                      (rule "add_zero_right" (formula "46") (term "1"))
                                                      (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "46"))
                                                      (rule "polySimp_homoEq" (formula "47"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "47"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "47") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "47") (term "1,1"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "0,1"))
                                                      (rule "applyEq" (formula "13") (term "1,2,1,0,0,1,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "2,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "44") (term "0,1,1") (ifseqformula "47"))
                                                      (rule "polySimp_mulComm0" (formula "44") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "44") (term "1,1"))
                                                      (rule "polySimp_mulAssoc" (formula "44") (term "0,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "44") (term "0,0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "44") (term "0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "44") (term "1"))
                                                      (rule "applyEq" (formula "11") (term "1,2,1,0,0,1,0,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "2,1,0,0,1,0,0"))
                                                      (rule "applyEq" (formula "62") (term "1,2,1,0,0,1,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "62") (term "2,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "66") (term "1,2,1,0,0,1,0,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "66") (term "2,1,0,0,1,0,0"))
                                                      (rule "applyEq" (formula "43") (term "1") (ifseqformula "47"))
                                                      (rule "applyEq" (formula "25") (term "0") (ifseqformula "47"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "25") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                      (rule "applyEq" (formula "72") (term "0") (ifseqformula "47"))
                                                      (rule "inEqSimp_homoInEq1" (formula "72"))
                                                      (rule "polySimp_mulComm0" (formula "72") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "72") (term "1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "72") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "72") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "72") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "72") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "72") (term "0,0"))
                                                      (rule "applyEq" (formula "67") (term "1,2,1,0,0,1,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "67") (term "2,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "46") (term "1,0,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "46") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "46") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "46") (term "0,0"))
                                                      (rule "add_literals" (formula "46") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "46") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "46") (term "0,0"))
                                                      (rule "applyEq" (formula "14") (term "1,2,1,0,0,1,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "2,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "56") (term "1,2,1,0,0,1,0,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "56") (term "2,1,0,0,1,0,0"))
                                                      (rule "applyEq" (formula "12") (term "1,2,1,0,0,1,0,0,1,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "2,1,0,0,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "73") (term "1,2,1,0,0,1,0,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "73") (term "2,1,0,0,1,0,0"))
                                                      (rule "applyEq" (formula "51") (term "5,0") (ifseqformula "47"))
                                                      (rule "applyEq" (formula "74") (term "1,2,1,0,0,1,0,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "74") (term "2,1,0,0,1,0,0"))
                                                      (rule "applyEq" (formula "24") (term "0") (ifseqformula "47"))
                                                      (rule "inEqSimp_homoInEq0" (formula "24"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "24") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                      (rule "applyEq" (formula "11") (term "0,5,0") (ifseqformula "47"))
                                                      (rule "applyEq" (formula "50") (term "0,0,2,2,0,1,0") (ifseqformula "47"))
                                                      (rule "applyEq" (formula "56") (term "0,0,2,2,0") (ifseqformula "47"))
                                                      (rule "applyEq" (formula "12") (term "0,4,0,1,0") (ifseqformula "47"))
                                                      (rule "applyEq" (formula "12") (term "4,1,1,0") (ifseqformula "47"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                                                      (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "72") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "9"))
                                                      (rule "mul_literals" (formula "23") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                      (rule "mul_literals" (formula "23") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "40"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "41") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "26") (ifseqformula "41"))
                                                      (rule "leq_literals" (formula "26") (term "0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "inEqSimp_exactShadow3" (formula "60") (ifseqformula "61"))
                                                      (rule "mul_literals" (formula "60") (term "0,0"))
                                                      (rule "add_zero_left" (formula "60") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "60"))
                                                      (rule "mul_literals" (formula "60") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "22"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "42") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "9"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "42") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "44"))
                                                      (rule "mul_literals" (formula "23") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                                      (rule "mul_literals" (formula "23") (term "0,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "63"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "35") (ifseqformula "1"))
                                                      (rule "andLeft" (formula "35"))
                                                      (rule "inEqSimp_homoInEq1" (formula "35"))
                                                      (rule "polySimp_mulComm0" (formula "35") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "35") (term "1,0"))
                                                      (rule "mul_literals" (formula "35") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "35") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                                                      (rule "add_literals" (formula "35") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "35") (term "0"))
                                                      (rule "add_literals" (formula "35") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "35") (term "1,0"))
                                                      (rule "add_zero_right" (formula "35") (term "0"))
                                                      (rule "leq_literals" (formula "35"))
                                                      (rule "closeFalse" (formula "35"))
                                                   )
                                                )
                                             )
                                             (branch "Null Reference (x_arr_1 = null)"
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "107")))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                             (branch "Index Out of Bounds (x_arr_1 != null, but x_10 Out of Bounds!)"
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "107")))
                                                 (builtin "One Step Simplification" (formula "110"))
                                                (rule "false_right" (formula "110"))
                                                (rule "inEqSimp_ltToLeq" (formula "6"))
                                                (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "68"))
                                                (rule "polySimp_mulComm0" (formula "68") (term "1,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "57") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                (rule "inEqSimp_commuteLeq" (formula "1") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "50"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "50") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0,0,0,0,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "5") (term "0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "40"))
                                                (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                (rule "jmod_axiom" (formula "52") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "52") (term "1,0"))
                                                (rule "polySimp_sepNegMonomial" (formula "52"))
                                                (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "68"))
                                                (rule "polySimp_mulComm0" (formula "68") (term "1"))
                                                (rule "polySimp_rightDist" (formula "68") (term "1"))
                                                (rule "mul_literals" (formula "68") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "68") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "68") (term "1,1"))
                                                (rule "replace_known_left" (formula "82") (term "0,0") (ifseqformula "68"))
                                                 (builtin "One Step Simplification" (formula "82"))
                                                (rule "applyEqReverse" (formula "83") (term "1,0") (ifseqformula "82"))
                                                (rule "hideAuxiliaryEq" (formula "82"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "57") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "57") (term "1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "50"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                                (rule "polySimp_elimOne" (formula "50") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "40"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                                (rule "polySimp_rightDist" (formula "40") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "40") (term "1,1"))
                                                (rule "mul_literals" (formula "40") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "40") (term "1,1"))
                                                (rule "inEqSimp_subsumption0" (formula "54") (ifseqformula "56"))
                                                (rule "leq_literals" (formula "54") (term "0"))
                                                 (builtin "One Step Simplification" (formula "54"))
                                                (rule "true_left" (formula "54"))
                                                (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "79"))
                                                (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                                (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                                (rule "add_literals" (formula "12") (term "0,0"))
                                                (rule "qeq_literals" (formula "12") (term "0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "inEqSimp_subsumption1" (formula "45") (ifseqformula "43"))
                                                (rule "leq_literals" (formula "45") (term "0"))
                                                 (builtin "One Step Simplification" (formula "45"))
                                                (rule "true_left" (formula "45"))
                                                (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "6"))
                                                (rule "inEqSimp_homoInEq0" (formula "10") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "10") (term "0,0"))
                                                (rule "add_literals" (formula "10") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "10") (term "1,0,0"))
                                                (rule "add_literals" (formula "10") (term "0,0"))
                                                (rule "qeq_literals" (formula "10") (term "0"))
                                                 (builtin "One Step Simplification" (formula "10"))
                                                (rule "true_left" (formula "10"))
                                                (rule "inEqSimp_subsumption1" (formula "51") (ifseqformula "50"))
                                                (rule "leq_literals" (formula "51") (term "0"))
                                                 (builtin "One Step Simplification" (formula "51"))
                                                (rule "true_left" (formula "51"))
                                                (rule "inEqSimp_subsumption1" (formula "68") (ifseqformula "62"))
                                                (rule "leq_literals" (formula "68") (term "0"))
                                                 (builtin "One Step Simplification" (formula "68"))
                                                (rule "true_left" (formula "68"))
                                                (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "40"))
                                                (rule "leq_literals" (formula "23") (term "0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "inEqSimp_contradInEq1" (formula "5") (term "0,0,0") (ifseqformula "9"))
                                                (rule "qeq_literals" (formula "5") (term "0,0,0,0"))
                                                 (builtin "One Step Simplification" (formula "5"))
                                                (rule "applyEqReverse" (formula "57") (term "2,0") (ifseqformula "5"))
                                                (rule "hideAuxiliaryEq" (formula "5"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "60"))
                                                (rule "qeq_literals" (formula "1") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "33"))
                                                (rule "leq_literals" (formula "35") (term "0"))
                                                 (builtin "One Step Simplification" (formula "35"))
                                                (rule "true_left" (formula "35"))
                                                (rule "newSym_eq" (formula "46") (inst "newSymDef=add(mul(begin, Z(0(#))), mul(i, Z(0(#))))") (inst "l=l_0"))
                                                (rule "times_zero_1" (formula "46") (term "1,1,1"))
                                                (rule "times_zero_1" (formula "46") (term "0,1,1"))
                                                (rule "add_zero_left" (formula "46") (term "1,1"))
                                                (rule "add_zero_right" (formula "46") (term "1"))
                                                (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "46"))
                                                (rule "polySimp_homoEq" (formula "47"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,0"))
                                                (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                (rule "polySimp_sepPosMonomial" (formula "47"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "47") (term "1,1"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "0,1"))
                                                (rule "applyEq" (formula "74") (term "1,2,1,0,0,1,0,0") (ifseqformula "47"))
                                                (rule "polySimp_addAssoc" (formula "74") (term "2,1,0,0,1,0,0"))
                                                (rule "applyEq" (formula "14") (term "1,2,1,0,0,1,0") (ifseqformula "47"))
                                                (rule "polySimp_addAssoc" (formula "14") (term "2,1,0,0,1,0"))
                                                (rule "applyEq" (formula "43") (term "1") (ifseqformula "47"))
                                                (rule "applyEq" (formula "11") (term "1,2,1,0,0,1,0,0") (ifseqformula "47"))
                                                (rule "polySimp_addAssoc" (formula "11") (term "2,1,0,0,1,0,0"))
                                                (rule "applyEq" (formula "66") (term "1,2,1,0,0,1,0,0") (ifseqformula "47"))
                                                (rule "polySimp_addAssoc" (formula "66") (term "2,1,0,0,1,0,0"))
                                                (rule "applyEq" (formula "46") (term "1,0,0") (ifseqformula "47"))
                                                (rule "polySimp_addAssoc" (formula "46") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "46") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "46") (term "0,0"))
                                                (rule "add_literals" (formula "46") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "46") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "46") (term "0,0"))
                                                (rule "applyEq" (formula "73") (term "1,2,1,0,0,1,0,0") (ifseqformula "47"))
                                                (rule "polySimp_addAssoc" (formula "73") (term "2,1,0,0,1,0,0"))
                                                (rule "applyEq" (formula "56") (term "1,2,1,0,0,1,0,0") (ifseqformula "47"))
                                                (rule "polySimp_addAssoc" (formula "56") (term "2,1,0,0,1,0,0"))
                                                (rule "applyEq" (formula "24") (term "0") (ifseqformula "47"))
                                                (rule "inEqSimp_homoInEq0" (formula "24"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                (rule "polySimp_mulAssoc" (formula "24") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                (rule "applyEq" (formula "25") (term "0") (ifseqformula "47"))
                                                (rule "inEqSimp_homoInEq1" (formula "25"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                (rule "polySimp_mulAssoc" (formula "25") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                (rule "applyEq" (formula "72") (term "0") (ifseqformula "47"))
                                                (rule "inEqSimp_homoInEq1" (formula "72"))
                                                (rule "polySimp_mulComm0" (formula "72") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "72") (term "1,0"))
                                                (rule "polySimp_mulAssoc" (formula "72") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "72") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "72") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "72") (term "0"))
                                                (rule "polySimp_addComm1" (formula "72") (term "0,0"))
                                                (rule "applyEq" (formula "62") (term "1,2,1,0,0,1,0") (ifseqformula "47"))
                                                (rule "polySimp_addAssoc" (formula "62") (term "2,1,0,0,1,0"))
                                                (rule "applyEq" (formula "51") (term "5,0") (ifseqformula "47"))
                                                (rule "applyEq" (formula "13") (term "1,2,1,0,0,1,0") (ifseqformula "47"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "2,1,0,0,1,0"))
                                                (rule "applyEq" (formula "12") (term "1,2,1,0,0,1,0,0,1,0") (ifseqformula "47"))
                                                (rule "polySimp_addAssoc" (formula "12") (term "2,1,0,0,1,0,0,1,0"))
                                                (rule "applyEq" (formula "44") (term "0,1,1") (ifseqformula "47"))
                                                (rule "polySimp_mulComm0" (formula "44") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "44") (term "1,1"))
                                                (rule "polySimp_mulAssoc" (formula "44") (term "0,1,1"))
                                                (rule "polySimp_mulComm0" (formula "44") (term "0,0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "44") (term "0,1,1"))
                                                (rule "polySimp_addComm0" (formula "44") (term "1"))
                                                (rule "applyEq" (formula "67") (term "1,2,1,0,0,1,0") (ifseqformula "47"))
                                                (rule "polySimp_addAssoc" (formula "67") (term "2,1,0,0,1,0"))
                                                (rule "applyEq" (formula "56") (term "0,0,2,2,0") (ifseqformula "47"))
                                                (rule "applyEq" (formula "12") (term "4,1,1,0") (ifseqformula "47"))
                                                (rule "applyEq" (formula "12") (term "0,4,0,1,0") (ifseqformula "47"))
                                                (rule "applyEq" (formula "11") (term "0,5,0") (ifseqformula "47"))
                                                (rule "applyEq" (formula "50") (term "0,0,2,2,0,1,0") (ifseqformula "47"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "72"))
                                                (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                                (rule "polySimp_elimOne" (formula "72") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "9"))
                                                (rule "mul_literals" (formula "23") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                (rule "mul_literals" (formula "23") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "9"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "42") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "26"))
                                                (rule "polySimp_mulComm0" (formula "38") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "38") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                (rule "polySimp_elimOne" (formula "38") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "61") (ifseqformula "62"))
                                                (rule "times_zero_1" (formula "61") (term "0,0"))
                                                (rule "add_zero_left" (formula "61") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "61"))
                                                (rule "mul_literals" (formula "61") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "22"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "43") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                (rule "polySimp_elimOne" (formula "43") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "40"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "41") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                                                (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                                (rule "polySimp_elimOne" (formula "41") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "26") (ifseqformula "41"))
                                                (rule "leq_literals" (formula "26") (term "0"))
                                                 (builtin "One Step Simplification" (formula "26"))
                                                (rule "true_left" (formula "26"))
                                                (rule "inEqSimp_exactShadow3" (formula "49") (ifseqformula "45"))
                                                (rule "times_zero_1" (formula "49") (term "0,0"))
                                                (rule "add_zero_left" (formula "49") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "49"))
                                                (rule "polySimp_mulComm0" (formula "49") (term "1"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "49") (term "1,1"))
                                                (rule "polySimp_mulComm0" (formula "49") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "0,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "44"))
                                                (rule "mul_literals" (formula "23") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                                (rule "polySimp_rightDist" (formula "23") (term "1"))
                                                (rule "mul_literals" (formula "23") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "44"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                (rule "polySimp_addComm0" (formula "43") (term "0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "43") (term "0"))
                                                (rule "add_literals" (formula "43") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "43") (term "1,0"))
                                                (rule "add_zero_right" (formula "43") (term "0"))
                                                (rule "elimGcdGeq_antec" (formula "43") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0"))
                                                (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "43") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "add_zero_right" (formula "43") (term "0,0,0,0"))
                                                (rule "add_zero_right" (formula "43") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
                                                (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                                (rule "add_literals" (formula "43") (term "0,0"))
                                                (rule "leq_literals" (formula "43") (term "0"))
                                                 (builtin "One Step Simplification" (formula "43"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "69"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "34"))
                                                (rule "leq_literals" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "52"))
                                                (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "add_literals" (formula "5") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "47"))
                                                (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "6") (term "0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "26"))
                                                (rule "mul_literals" (formula "38") (term "0,0"))
                                                (rule "add_zero_left" (formula "38") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "38") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(7(2(7(7(1(2(4(3(1(#))))))))))"))
                                                (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0"))
                                                (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,1,0"))
                                                (rule "neg_literal" (formula "38") (term "0,0,0,0,0,1,0"))
                                                (rule "leq_literals" (formula "38") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "38") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0"))
                                                (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                                (rule "add_literals" (formula "38") (term "0,0"))
                                                (rule "qeq_literals" (formula "38") (term "0"))
                                                 (builtin "One Step Simplification" (formula "38"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "68"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "37"))
                                                (rule "andLeft" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0"))
                                                (rule "add_zero_right" (formula "1") (term "0"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "closeFalse" (formula "1"))
                                             )
                                          )
                                       )
                                    )
                                    (branch "if x false"
                                        (builtin "One Step Simplification" (formula "104"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "notLeft" (formula "1"))
                                       (rule "tryEmpty" (formula "104") (term "1"))
                                       (rule "blockEmptyLabel" (formula "104") (term "1"))
                                       (rule "blockEmpty" (formula "104") (term "1"))
                                       (rule "methodCallEmpty" (formula "104") (term "1"))
                                       (rule "emptyModality" (formula "104") (term "1"))
                                       (rule "andRight" (formula "104"))
                                       (branch "Case 1"
                                           (builtin "One Step Simplification" (formula "104"))
                                          (rule "closeTrue" (formula "104"))
                                       )
                                       (branch "Case 2"
                                          (rule "andRight" (formula "104"))
                                          (branch "Case 1"
                                              (builtin "One Step Simplification" (formula "104") (ifInst ""  (formula "14")))
                                             (rule "closeTrue" (formula "104"))
                                          )
                                          (branch "Case 2"
                                              (builtin "One Step Simplification" (formula "104") (ifInst ""  (formula "15")))
                                             (rule "closeTrue" (formula "104"))
                                          )
                                       )
                                    )
                                 )
                                 (branch "Exceptional Post (len)"
                                     (builtin "One Step Simplification" (formula "72") (ifInst ""  (formula "14")))
                                    (rule "andLeft" (formula "72"))
                                    (rule "andLeft" (formula "72"))
                                    (rule "notLeft" (formula "72"))
                                    (rule "close" (formula "74") (ifseqformula "73"))
                                 )
                                 (branch "Pre (len)"
                                     (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "14")) (ifInst ""  (formula "67")) (ifInst ""  (formula "31")))
                                    (rule "expand_inInt" (formula "98"))
                                    (rule "replace_int_MIN" (formula "98") (term "0,1"))
                                    (rule "replace_int_MAX" (formula "98") (term "1,0"))
                                    (rule "replace_known_left" (formula "98") (term "0") (ifseqformula "70"))
                                     (builtin "One Step Simplification" (formula "98"))
                                    (rule "inEqSimp_leqRight" (formula "98"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "67"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "5"))
                                    (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "5") (term "0"))
                                    (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "4") (term "1,1,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0"))
                                    (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "49"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                    (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "49") (term "0,1,0"))
                                    (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                    (rule "inEqSimp_homoInEq1" (formula "39"))
                                    (rule "polySimp_addComm1" (formula "39") (term "0"))
                                    (rule "jmod_axiom" (formula "51") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "1,0"))
                                    (rule "polySimp_sepNegMonomial" (formula "51"))
                                    (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "67"))
                                    (rule "polySimp_mulComm0" (formula "67") (term "1"))
                                    (rule "polySimp_rightDist" (formula "67") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "67") (term "1,1"))
                                    (rule "mul_literals" (formula "67") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "67") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                    (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                    (rule "polySimp_elimOne" (formula "5") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "49"))
                                    (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                    (rule "polySimp_elimOne" (formula "49") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "39"))
                                    (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                    (rule "polySimp_rightDist" (formula "39") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                    (rule "mul_literals" (formula "39") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "36"))
                                    (rule "leq_literals" (formula "38") (term "0"))
                                     (builtin "One Step Simplification" (formula "38"))
                                    (rule "true_left" (formula "38"))
                                    (rule "inEqSimp_subsumption1" (formula "53") (ifseqformula "51"))
                                    (rule "leq_literals" (formula "53") (term "0"))
                                     (builtin "One Step Simplification" (formula "53"))
                                    (rule "true_left" (formula "53"))
                                    (rule "inEqSimp_subsumption1" (formula "70") (ifseqformula "64"))
                                    (rule "leq_literals" (formula "70") (term "0"))
                                     (builtin "One Step Simplification" (formula "70"))
                                    (rule "true_left" (formula "70"))
                                    (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "40"))
                                    (rule "leq_literals" (formula "24") (term "0"))
                                     (builtin "One Step Simplification" (formula "24"))
                                    (rule "true_left" (formula "24"))
                                    (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "5"))
                                    (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                    (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                    (rule "add_literals" (formula "9") (term "0,0"))
                                    (rule "qeq_literals" (formula "9") (term "0"))
                                     (builtin "One Step Simplification" (formula "9"))
                                    (rule "true_left" (formula "9"))
                                    (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "40"))
                                    (rule "leq_literals" (formula "42") (term "0"))
                                     (builtin "One Step Simplification" (formula "42"))
                                    (rule "true_left" (formula "42"))
                                    (rule "inEqSimp_contradInEq0" (formula "61") (ifseqformula "1"))
                                    (rule "qeq_literals" (formula "61") (term "0"))
                                     (builtin "One Step Simplification" (formula "61"))
                                    (rule "closeFalse" (formula "61"))
                                 )
                                 (branch "Null reference (_buffers = null)"
                                     (builtin "One Step Simplification" (formula "98") (ifInst ""  (formula "94")))
                                    (rule "closeTrue" (formula "98"))
                                 )
                              )
                              (branch "Precondition"
                                 (rule "andRight" (formula "93"))
                                 (branch "Case 1"
                                    (rule "andRight" (formula "93"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "93"))
                                       (branch "Case 1"
                                           (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "32")))
                                          (rule "closeTrue" (formula "93"))
                                       )
                                       (branch "Case 2"
                                           (builtin "One Step Simplification" (formula "93"))
                                          (rule "wellFormedAnon" (formula "93"))
                                          (rule "replace_known_left" (formula "93") (term "0") (ifseqformula "17"))
                                           (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "16")))
                                          (rule "closeTrue" (formula "93"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "andRight" (formula "93"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "93"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "93"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "93"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "93"))
                                                   (branch "Case 1"
                                                       (builtin "One Step Simplification" (formula "93"))
                                                      (rule "expand_inInt" (formula "93"))
                                                      (rule "replace_int_MIN" (formula "93") (term "0,1"))
                                                      (rule "replace_int_MAX" (formula "93") (term "1,0"))
                                                      (rule "replace_known_left" (formula "93") (term "0") (ifseqformula "26"))
                                                       (builtin "One Step Simplification" (formula "93"))
                                                      (rule "inEqSimp_leqRight" (formula "93"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "56") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "67"))
                                                      (rule "polySimp_mulComm0" (formula "67") (term "1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "5"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "39"))
                                                      (rule "polySimp_addComm1" (formula "39") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "49"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                      (rule "jmod_axiom" (formula "51") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "51") (term "1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "51"))
                                                      (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "67"))
                                                      (rule "polySimp_mulComm0" (formula "67") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "67") (term "1"))
                                                      (rule "mul_literals" (formula "67") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "67") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "67") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "39"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "1"))
                                                      (rule "mul_literals" (formula "39") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "49"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "49") (term "0"))
                                                      (rule "inEqSimp_subsumption1" (formula "54") (ifseqformula "52"))
                                                      (rule "leq_literals" (formula "54") (term "0"))
                                                       (builtin "One Step Simplification" (formula "54"))
                                                      (rule "true_left" (formula "54"))
                                                      (rule "inEqSimp_contradInEq0" (formula "28") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "28") (term "0"))
                                                       (builtin "One Step Simplification" (formula "28"))
                                                      (rule "closeFalse" (formula "28"))
                                                   )
                                                   (branch "Case 2"
                                                       (builtin "One Step Simplification" (formula "93"))
                                                      (rule "expand_inInt" (formula "93"))
                                                      (rule "replace_int_MIN" (formula "93") (term "0,1"))
                                                      (rule "replace_int_MAX" (formula "93") (term "1,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "66"))
                                                      (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "4"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "93") (term "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "38"))
                                                      (rule "polySimp_addComm1" (formula "38") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "48"))
                                                      (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "48") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                      (rule "jmod_axiom" (formula "50") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "50") (term "1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "50"))
                                                      (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "66"))
                                                      (rule "polySimp_mulComm0" (formula "66") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "66") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "66") (term "1,1"))
                                                      (rule "mul_literals" (formula "66") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "66") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "38"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                                      (rule "mul_literals" (formula "38") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "48"))
                                                      (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "48") (term "0"))
                                                      (rule "inEqSimp_subsumption1" (formula "53") (ifseqformula "51"))
                                                      (rule "leq_literals" (formula "53") (term "0"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "true_left" (formula "53"))
                                                      (rule "inEqSimp_contradInEq1" (formula "3") (term "0,0,0") (ifseqformula "7"))
                                                      (rule "qeq_literals" (formula "3") (term "0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "60") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "34"))
                                                      (rule "leq_literals" (formula "36") (term "0"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "true_left" (formula "36"))
                                                      (rule "inEqSimp_subsumption0" (formula "50") (ifseqformula "51"))
                                                      (rule "leq_literals" (formula "50") (term "0"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "true_left" (formula "50"))
                                                      (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "38"))
                                                      (rule "leq_literals" (formula "22") (term "0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "39"))
                                                      (rule "leq_literals" (formula "41") (term "0"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "true_left" (formula "41"))
                                                      (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq0" (formula "7") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "7") (term "0,0"))
                                                      (rule "add_literals" (formula "7") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "7") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "7") (term "0,0"))
                                                      (rule "qeq_literals" (formula "7") (term "0"))
                                                       (builtin "One Step Simplification" (formula "7"))
                                                      (rule "true_left" (formula "7"))
                                                      (rule "newSym_eq" (formula "45") (inst "newSymDef=add(mul(begin, Z(0(#))), mul(i, Z(0(#))))") (inst "l=l_0"))
                                                      (rule "times_zero_1" (formula "45") (term "1,1,1"))
                                                      (rule "times_zero_1" (formula "45") (term "0,1,1"))
                                                      (rule "add_zero_left" (formula "45") (term "1,1"))
                                                      (rule "add_zero_right" (formula "45") (term "1"))
                                                      (rule "applyEq" (formula "46") (term "0,0") (ifseqformula "45"))
                                                      (rule "polySimp_homoEq" (formula "46"))
                                                      (rule "polySimp_mulLiterals" (formula "46") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "46") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "46") (term "0,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "46"))
                                                      (rule "polySimp_mulComm0" (formula "46") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "46") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "46") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "46") (term "1,1"))
                                                      (rule "polySimp_mulComm0" (formula "46") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "46") (term "0,1"))
                                                      (rule "applyEq" (formula "42") (term "1") (ifseqformula "46"))
                                                      (rule "applyEq" (formula "55") (term "1,2,1,0,0,1,0,0") (ifseqformula "46"))
                                                      (rule "polySimp_addAssoc" (formula "55") (term "2,1,0,0,1,0,0"))
                                                      (rule "applyEq" (formula "11") (term "1,2,1,0,0,1,0,0,1,0") (ifseqformula "46"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "2,1,0,0,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "50") (term "5,0") (ifseqformula "46"))
                                                      (rule "applyEq" (formula "10") (term "1,2,1,0,0,1,0,0") (ifseqformula "46"))
                                                      (rule "polySimp_addAssoc" (formula "10") (term "2,1,0,0,1,0,0"))
                                                      (rule "applyEq" (formula "45") (term "1,0,0") (ifseqformula "46"))
                                                      (rule "polySimp_addAssoc" (formula "45") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "45") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "45") (term "0,0"))
                                                      (rule "add_literals" (formula "45") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "45") (term "0,0"))
                                                      (rule "applyEq" (formula "24") (term "0") (ifseqformula "46"))
                                                      (rule "inEqSimp_homoInEq1" (formula "24"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "24") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                      (rule "applyEq" (formula "23") (term "0") (ifseqformula "46"))
                                                      (rule "inEqSimp_homoInEq0" (formula "23"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "23") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                      (rule "applyEq" (formula "13") (term "1,2,1,0,0,1,0") (ifseqformula "46"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "2,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "12") (term "1,2,1,0,0,1,0") (ifseqformula "46"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "2,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "8") (term "0") (ifseqformula "46"))
                                                      (rule "inEqSimp_homoInEq1" (formula "8"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "8") (term "1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "8") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "8") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "8") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                                                      (rule "applyEq" (formula "43") (term "0,1,1") (ifseqformula "46"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "43") (term "1,1"))
                                                      (rule "polySimp_mulAssoc" (formula "43") (term "0,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "0,0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "43") (term "0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "43") (term "1"))
                                                      (rule "applyEq" (formula "10") (term "0,5,0") (ifseqformula "46"))
                                                      (rule "applyEq" (formula "49") (term "0,0,2,2,0,1,0") (ifseqformula "46"))
                                                      (rule "applyEq" (formula "55") (term "0,0,2,2,0") (ifseqformula "46"))
                                                      (rule "applyEq" (formula "11") (term "0,4,0,1,0") (ifseqformula "46"))
                                                      (rule "applyEq" (formula "11") (term "4,1,1,0") (ifseqformula "46"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "24"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                      (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "8"))
                                                      (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "8") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "7"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "41") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "60") (ifseqformula "61"))
                                                      (rule "times_zero_1" (formula "60") (term "0,0"))
                                                      (rule "add_zero_left" (formula "60") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "60"))
                                                      (rule "mul_literals" (formula "60") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "44"))
                                                      (rule "times_zero_1" (formula "48") (term "0,0"))
                                                      (rule "add_zero_left" (formula "48") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                                      (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                                      (rule "polySimp_mulComm0" (formula "48") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "48") (term "0,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "21"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "42") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "50"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "add_literals" (formula "3") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "24"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "9") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                      (rule "replace_known_left" (formula "92") (term "0") (ifseqformula "9"))
                                                       (builtin "One Step Simplification" (formula "92"))
                                                      (rule "inEqSimp_geqRight" (formula "92"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "10") (term "0"))
                                                       (builtin "One Step Simplification" (formula "10"))
                                                      (rule "true_left" (formula "10"))
                                                      (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "22"))
                                                      (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "10") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "10") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                                      (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "10") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "28"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "40") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                                      (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "40") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "42"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "43") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                                      (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "43") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "28") (ifseqformula "43"))
                                                      (rule "leq_literals" (formula "28") (term "0"))
                                                       (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "46"))
                                                      (rule "mul_literals" (formula "25") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                      (rule "mul_literals" (formula "25") (term "0,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "46"))
                                                      (rule "polySimp_mulComm0" (formula "45") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "45") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "45") (term "0"))
                                                      (rule "add_literals" (formula "45") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "45") (term "1,0"))
                                                      (rule "add_zero_right" (formula "45") (term "0"))
                                                      (rule "elimGcdGeq_antec" (formula "45") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                                      (rule "add_zero_right" (formula "45") (term "0,0,0,1,0"))
                                                      (rule "leq_literals" (formula "45") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "polySimp_mulLiterals" (formula "45") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "45") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "45") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0"))
                                                      (rule "add_literals" (formula "45") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                                      (rule "add_literals" (formula "45") (term "0,0"))
                                                      (rule "leq_literals" (formula "45") (term "0"))
                                                       (builtin "One Step Simplification" (formula "45"))
                                                      (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "26"))
                                                      (rule "times_zero_1" (formula "38") (term "0,0"))
                                                      (rule "add_zero_left" (formula "38") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                                      (rule "elimGcdLeq_antec" (formula "38") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(7(2(7(7(1(2(4(3(1(#))))))))))"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0"))
                                                      (rule "leq_literals" (formula "38") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "38"))
                                                      (rule "neg_literal" (formula "38") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addLiterals" (formula "38") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0"))
                                                      (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                                      (rule "add_literals" (formula "38") (term "0,0"))
                                                      (rule "qeq_literals" (formula "38") (term "0"))
                                                       (builtin "One Step Simplification" (formula "38"))
                                                      (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "23"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                      (rule "add_literals" (formula "27") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                                      (rule "mul_literals" (formula "27") (term "1"))
                                                      (rule "inEqSimp_subsumption6" (formula "27") (ifseqformula "47"))
                                                      (rule "greater_literals" (formula "27") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "mul_literals" (formula "27") (term "1,0"))
                                                      (rule "leq_literals" (formula "27") (term "0"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "49"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "10"))
                                                      (rule "mul_literals" (formula "26") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                                      (rule "mul_literals" (formula "26") (term "1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "26") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "26") (term "0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "closeFalse" (formula "26"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "orRight" (formula "93"))
                                                    (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "21")))
                                                   (rule "closeTrue" (formula "94"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "orRight" (formula "93"))
                                                 (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "30")))
                                                (rule "closeTrue" (formula "94"))
                                             )
                                          )
                                          (branch "Case 2"
                                              (builtin "One Step Simplification" (formula "93"))
                                             (rule "expand_inInt" (formula "93"))
                                             (rule "replace_int_MIN" (formula "93") (term "0,1"))
                                             (rule "replace_int_MAX" (formula "93") (term "1,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "66"))
                                             (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "93") (term "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "48"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "38"))
                                             (rule "polySimp_addComm1" (formula "38") (term "0"))
                                             (rule "jmod_axiom" (formula "50") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "50") (term "1,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "50"))
                                             (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "66"))
                                             (rule "polySimp_mulComm0" (formula "66") (term "1"))
                                             (rule "polySimp_rightDist" (formula "66") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "66") (term "1,1"))
                                             (rule "mul_literals" (formula "66") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "66") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "48"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                             (rule "polySimp_elimOne" (formula "48") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "38"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                             (rule "mul_literals" (formula "38") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "44") (ifseqformula "42"))
                                             (rule "leq_literals" (formula "44") (term "0"))
                                              (builtin "One Step Simplification" (formula "44"))
                                             (rule "true_left" (formula "44"))
                                             (rule "inEqSimp_subsumption1" (formula "52") (ifseqformula "50"))
                                             (rule "leq_literals" (formula "52") (term "0"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "true_left" (formula "52"))
                                             (rule "inEqSimp_subsumption1" (formula "37") (ifseqformula "35"))
                                             (rule "leq_literals" (formula "37") (term "0"))
                                              (builtin "One Step Simplification" (formula "37"))
                                             (rule "true_left" (formula "37"))
                                             (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "39"))
                                             (rule "leq_literals" (formula "23") (term "0"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "inEqSimp_subsumption0" (formula "49") (ifseqformula "50"))
                                             (rule "leq_literals" (formula "49") (term "0"))
                                              (builtin "One Step Simplification" (formula "49"))
                                             (rule "true_left" (formula "49"))
                                             (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "8") (term "0,0"))
                                             (rule "qeq_literals" (formula "8") (term "0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "inEqSimp_subsumption1" (formula "87") (term "1") (ifseqformula "59"))
                                             (rule "leq_literals" (formula "87") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "87"))
                                             (rule "inEqSimp_leqRight" (formula "87"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0,0") (ifseqformula "8"))
                                             (rule "qeq_literals" (formula "4") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "applyEqReverse" (formula "56") (term "2,0") (ifseqformula "4"))
                                             (rule "hideAuxiliaryEq" (formula "4"))
                                             (rule "inEqSimp_subsumption1" (formula "59") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "59") (term "0"))
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "true_left" (formula "59"))
                                             (rule "newSym_eq" (formula "46") (inst "newSymDef=add(mul(begin, Z(0(#))), mul(i, Z(0(#))))") (inst "l=l_0"))
                                             (rule "times_zero_1" (formula "46") (term "1,1,1"))
                                             (rule "times_zero_1" (formula "46") (term "0,1,1"))
                                             (rule "add_zero_left" (formula "46") (term "1,1"))
                                             (rule "add_zero_right" (formula "46") (term "1"))
                                             (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "46"))
                                             (rule "polySimp_homoEq" (formula "47"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "47") (term "0"))
                                             (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                             (rule "polySimp_sepPosMonomial" (formula "47"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "47") (term "1,1"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "0,1"))
                                             (rule "applyEq" (formula "13") (term "1,2,1,0,0,1,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "2,1,0,0,1,0"))
                                             (rule "applyEq" (formula "11") (term "1,2,1,0,0,1,0,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "2,1,0,0,1,0,0"))
                                             (rule "applyEq" (formula "43") (term "1") (ifseqformula "47"))
                                             (rule "applyEq" (formula "46") (term "1,0,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "46") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "46") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "46") (term "0,0"))
                                             (rule "add_literals" (formula "46") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "46") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "46") (term "0,0"))
                                             (rule "applyEq" (formula "56") (term "1,2,1,0,0,1,0,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "56") (term "2,1,0,0,1,0,0"))
                                             (rule "applyEq" (formula "44") (term "0,1,1") (ifseqformula "47"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "44") (term "1,1"))
                                             (rule "polySimp_mulAssoc" (formula "44") (term "0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "0,1,1"))
                                             (rule "polySimp_addComm0" (formula "44") (term "1"))
                                             (rule "applyEq" (formula "51") (term "5,0") (ifseqformula "47"))
                                             (rule "applyEq" (formula "25") (term "0") (ifseqformula "47"))
                                             (rule "inEqSimp_homoInEq1" (formula "25"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "25") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                             (rule "applyEq" (formula "9") (term "0") (ifseqformula "47"))
                                             (rule "inEqSimp_homoInEq1" (formula "9"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                             (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                             (rule "applyEq" (formula "24") (term "0") (ifseqformula "47"))
                                             (rule "inEqSimp_homoInEq0" (formula "24"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "24") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                             (rule "applyEq" (formula "12") (term "1,2,1,0,0,1,0,0,1,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "2,1,0,0,1,0,0,1,0"))
                                             (rule "applyEq" (formula "14") (term "1,2,1,0,0,1,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "2,1,0,0,1,0"))
                                             (rule "applyEq" (formula "12") (term "4,1,1,0") (ifseqformula "47"))
                                             (rule "applyEq" (formula "11") (term "0,5,0") (ifseqformula "47"))
                                             (rule "applyEq" (formula "12") (term "0,4,0,1,0") (ifseqformula "47"))
                                             (rule "applyEq" (formula "50") (term "0,0,2,2,0,1,0") (ifseqformula "47"))
                                             (rule "applyEq" (formula "56") (term "0,0,2,2,0") (ifseqformula "47"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                             (rule "polySimp_elimOne" (formula "9") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "8"))
                                             (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "42") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                             (rule "polySimp_elimOne" (formula "42") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "22"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "43") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "8"))
                                             (rule "mul_literals" (formula "23") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                             (rule "mul_literals" (formula "23") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "41"))
                                             (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "42") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                             (rule "polySimp_elimOne" (formula "42") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "27") (ifseqformula "42"))
                                             (rule "leq_literals" (formula "27") (term "0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "true_left" (formula "27"))
                                             (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "46"))
                                             (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                             (rule "mul_literals" (formula "4") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "46"))
                                             (rule "mul_literals" (formula "25") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                             (rule "mul_literals" (formula "25") (term "0,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "47"))
                                             (rule "times_zero_1" (formula "51") (term "0,0"))
                                             (rule "add_zero_left" (formula "51") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "51"))
                                             (rule "polySimp_mulComm0" (formula "51") (term "1"))
                                             (rule "polySimp_rightDist" (formula "51") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "51") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "51") (term "1,1"))
                                             (rule "polySimp_mulComm0" (formula "51") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "51") (term "0,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "46"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                             (rule "polySimp_addComm0" (formula "45") (term "0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "45") (term "0"))
                                             (rule "add_literals" (formula "45") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "45") (term "1,0"))
                                             (rule "add_zero_right" (formula "45") (term "0"))
                                             (rule "elimGcdGeq_antec" (formula "45") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                             (rule "times_zero_1" (formula "45") (term "1,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,0"))
                                             (rule "leq_literals" (formula "45") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "45"))
                                             (rule "add_zero_right" (formula "45") (term "0,0,0,0"))
                                             (rule "add_zero_right" (formula "45") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0"))
                                             (rule "add_literals" (formula "45") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "45") (term "1,0,0"))
                                             (rule "add_literals" (formula "45") (term "0,0"))
                                             (rule "leq_literals" (formula "45") (term "0"))
                                              (builtin "One Step Simplification" (formula "45"))
                                             (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "54"))
                                             (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                             (rule "mul_literals" (formula "5") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "add_literals" (formula "5") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                             (rule "polySimp_elimOne" (formula "5") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "27"))
                                             (rule "mul_literals" (formula "39") (term "0,0"))
                                             (rule "add_zero_left" (formula "39") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "39") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(7(2(7(7(1(2(4(3(1(#))))))))))"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0"))
                                             (rule "leq_literals" (formula "39") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "neg_literal" (formula "39") (term "0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "39") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "39") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "39") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "39") (term "0,0"))
                                             (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "39") (term "1,0,0"))
                                             (rule "add_literals" (formula "39") (term "0,0"))
                                             (rule "qeq_literals" (formula "39") (term "0"))
                                              (builtin "One Step Simplification" (formula "39"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "67"))
                                             (rule "mul_literals" (formula "1") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "24"))
                                             (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0"))
                                             (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "48"))
                                             (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1"))
                                             (rule "mul_literals" (formula "30") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "47"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "44") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "44"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                             (rule "polySimp_elimOne" (formula "44") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "25") (ifseqformula "44"))
                                             (rule "leq_literals" (formula "25") (term "0"))
                                              (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "28"))
                                             (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "13") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "50"))
                                             (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "14") (term "0"))
                                             (rule "add_literals" (formula "14") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "14") (term "1,0"))
                                             (rule "add_zero_right" (formula "14") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                             (rule "inEqSimp_subsumption6" (formula "14") (ifseqformula "52"))
                                             (rule "greater_literals" (formula "14") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "times_zero_1" (formula "14") (term "1,0"))
                                             (rule "leq_literals" (formula "14") (term "0"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "50"))
                                             (rule "times_zero_1" (formula "43") (term "0,0"))
                                             (rule "add_zero_left" (formula "43") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "43"))
                                             (rule "leq_literals" (formula "27") (term "0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "true_left" (formula "27"))
                                             (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "5"))
                                             (rule "times_zero_1" (formula "10") (term "0,0"))
                                             (rule "add_zero_left" (formula "10") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "10") (term "0,1"))
                                             (rule "mul_literals" (formula "10") (term "0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1"))
                                             (rule "inEqSimp_subsumption1" (formula "59") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq0" (formula "59") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "59") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "59") (term "1,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "59") (term "0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "59") (term "0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "59") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "59") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "59") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "59") (term "0,0"))
                                             (rule "add_literals" (formula "59") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "59") (term "0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "59") (term "0,0"))
                                             (rule "add_literals" (formula "59") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "59") (term "1,0,0"))
                                             (rule "add_literals" (formula "59") (term "0,0"))
                                             (rule "qeq_literals" (formula "59") (term "0"))
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "true_left" (formula "59"))
                                             (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "45"))
                                             (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                                             (rule "mul_literals" (formula "31") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "31") (term "0"))
                                             (rule "add_literals" (formula "31") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                             (rule "mul_literals" (formula "31") (term "1"))
                                             (rule "inEqSimp_subsumption6" (formula "31") (ifseqformula "53"))
                                             (rule "times_zero_1" (formula "31") (term "1,1,0"))
                                             (rule "greater_literals" (formula "31") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "leq_literals" (formula "31") (term "0"))
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "true_left" (formula "31"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "40"))
                                             (rule "mul_literals" (formula "1") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq1" (formula "40") (ifseqformula "1"))
                                             (rule "qeq_literals" (formula "40") (term "0"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "closeFalse" (formula "40"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "orRight" (formula "93"))
                                           (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "31")))
                                          (rule "closeTrue" (formula "94"))
                                       )
                                    )
                                 )
                                 (branch "Case 2"
                                    (rule "andRight" (formula "93"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "93"))
                                       (branch "Case 1"
                                           (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "88")))
                                          (rule "closeTrue" (formula "93"))
                                       )
                                       (branch "Case 2"
                                           (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "18")))
                                          (rule "closeTrue" (formula "93"))
                                       )
                                    )
                                    (branch "Case 2"
                                        (builtin "One Step Simplification" (formula "93") (ifInst ""  (formula "19")))
                                       (rule "closeTrue" (formula "93"))
                                    )
                                 )
                              )
                              (branch "Usage"
                                  (builtin "One Step Simplification" (formula "94"))
                                  (builtin "One Step Simplification" (formula "67"))
                                 (rule "expand_inInt" (formula "67") (term "1,0,0,0,1,1,1,1,1"))
                                 (rule "expand_inInt" (formula "67") (term "1,0,1,0"))
                                 (rule "expand_inInt" (formula "67") (term "0,0,1,0"))
                                 (rule "expand_inInt" (formula "67") (term "0,0,0,1,1,1,1,1,1"))
                                 (rule "replace_int_MIN" (formula "67") (term "0,1,1,0,0,0,1,1,1,1,1"))
                                 (rule "replace_int_MAX" (formula "67") (term "1,0,1,0,0,0,1,1,1,1,1"))
                                 (rule "replace_int_MAX" (formula "67") (term "1,0,1,0,1,0"))
                                 (rule "replace_int_MIN" (formula "67") (term "0,1,1,0,1,0"))
                                 (rule "replace_int_MIN" (formula "67") (term "0,1,0,0,1,0"))
                                 (rule "replace_int_MAX" (formula "67") (term "1,0,0,0,1,0"))
                                 (rule "replace_int_MAX" (formula "67") (term "1,0,0,0,0,1,1,1,1,1,1"))
                                 (rule "replace_int_MIN" (formula "67") (term "0,1,0,0,0,1,1,1,1,1,1"))
                                 (rule "andLeft" (formula "67"))
                                 (rule "andLeft" (formula "68"))
                                 (rule "andLeft" (formula "67"))
                                 (rule "andLeft" (formula "70"))
                                 (rule "notLeft" (formula "69"))
                                 (rule "andLeft" (formula "68"))
                                 (rule "andLeft" (formula "67"))
                                 (rule "andLeft" (formula "71"))
                                 (rule "andLeft" (formula "73"))
                                 (rule "andLeft" (formula "69"))
                                 (rule "andLeft" (formula "67"))
                                 (rule "andLeft" (formula "76"))
                                 (rule "andLeft" (formula "70"))
                                 (rule "andLeft" (formula "72"))
                                 (rule "andLeft" (formula "68"))
                                 (rule "andLeft" (formula "80"))
                                 (rule "andLeft" (formula "79"))
                                 (rule "andLeft" (formula "82"))
                                 (rule "andLeft" (formula "79"))
                                 (rule "andLeft" (formula "84"))
                                 (rule "andLeft" (formula "79"))
                                 (rule "translateJavaSubInt" (formula "114") (term "2,1,0,1,0,1,1,0"))
                                 (rule "translateJavaSubInt" (formula "87") (term "2,1,0,1,0,0"))
                                 (rule "translateJavaSubInt" (formula "78") (term "0,0"))
                                 (rule "translateJavaSubInt" (formula "68") (term "2,1,0,1,0"))
                                 (rule "translateJavaSubInt" (formula "69") (term "2,1,0,1,0"))
                                 (rule "translateJavaAddInt" (formula "83") (term "0,0,1,0"))
                                 (rule "translateJavaSubInt" (formula "83") (term "2,1,0,1,0,1,0,1,0"))
                                 (rule "translateJavaSubInt" (formula "82") (term "1"))
                                 (rule "translateJavaSubInt" (formula "82") (term "2,1,0,1,0,0"))
                                 (rule "eqSymm" (formula "84") (term "1,0"))
                                 (rule "translateJavaSubInt" (formula "81") (term "2,1,0,1,0,0"))
                                 (rule "translateJavaSubInt" (formula "85") (term "2,1,0,1,0"))
                                 (rule "translateJavaSubInt" (formula "86") (term "2,1,0,1,0"))
                                 (rule "translateJavaSubInt" (formula "79") (term "2,1,0,1,0,0"))
                                 (rule "translateJavaSubInt" (formula "80") (term "2,1,0,1,0,0"))
                                 (rule "translateJavaSubInt" (formula "83") (term "2,1,0,1,0,0,0,0,1,0"))
                                 (rule "translateJavaAddInt" (formula "82") (term "0,1"))
                                 (rule "translateJavaSubInt" (formula "84") (term "2,1,0,1,0,0,1,0"))
                                 (rule "translateJavaAddInt" (formula "84") (term "4,0,1,0"))
                                 (rule "replace_known_left" (formula "75") (term "0") (ifseqformula "67"))
                                  (builtin "One Step Simplification" (formula "75"))
                                 (rule "true_left" (formula "75"))
                                 (rule "polySimp_elimSub" (formula "113") (term "2,1,0,1,0,1,1,0"))
                                 (rule "mul_literals" (formula "113") (term "1,2,1,0,1,0,1,1,0"))
                                 (rule "polySimp_elimSub" (formula "86") (term "2,1,0,1,0,0"))
                                 (rule "mul_literals" (formula "86") (term "1,2,1,0,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "77") (term "0,0"))
                                 (rule "polySimp_elimSub" (formula "68") (term "2,1,0,1,0"))
                                 (rule "mul_literals" (formula "68") (term "1,2,1,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "69") (term "2,1,0,1,0"))
                                 (rule "mul_literals" (formula "69") (term "1,2,1,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "82") (term "2,1,0,1,0,1,0,1,0"))
                                 (rule "mul_literals" (formula "82") (term "1,2,1,0,1,0,1,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "81") (term "2,1,0,1,0,0"))
                                 (rule "mul_literals" (formula "81") (term "1,2,1,0,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "80") (term "2,1,0,1,0,0"))
                                 (rule "mul_literals" (formula "80") (term "1,2,1,0,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "84") (term "2,1,0,1,0"))
                                 (rule "mul_literals" (formula "84") (term "1,2,1,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "85") (term "2,1,0,1,0"))
                                 (rule "mul_literals" (formula "85") (term "1,2,1,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "78") (term "2,1,0,1,0,0"))
                                 (rule "mul_literals" (formula "78") (term "1,2,1,0,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "79") (term "2,1,0,1,0,0"))
                                 (rule "mul_literals" (formula "79") (term "1,2,1,0,1,0,0"))
                                 (rule "polySimp_elimSub" (formula "82") (term "2,1,0,1,0,0,0,0,1,0"))
                                 (rule "mul_literals" (formula "82") (term "1,2,1,0,1,0,0,0,0,1,0"))
                                 (rule "polySimp_elimSub" (formula "81") (term "1"))
                                 (rule "polySimp_elimSub" (formula "83") (term "2,1,0,1,0,0,1,0"))
                                 (rule "mul_literals" (formula "83") (term "1,2,1,0,1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "113") (term "2,1,0,1,0,1,1,0"))
                                 (rule "polySimp_addComm0" (formula "86") (term "2,1,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "68") (term "2,1,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "69") (term "2,1,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "82") (term "2,1,0,1,0,1,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "81") (term "2,1,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "80") (term "2,1,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "84") (term "2,1,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "85") (term "2,1,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "78") (term "2,1,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "79") (term "2,1,0,1,0,0"))
                                 (rule "polySimp_addComm0" (formula "82") (term "2,1,0,1,0,0,0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "81") (term "1"))
                                 (rule "polySimp_addComm0" (formula "83") (term "2,1,0,1,0,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "81") (term "0,1"))
                                 (rule "inEqSimp_commuteLeq" (formula "76"))
                                 (rule "inEqSimp_commuteLeq" (formula "72"))
                                 (rule "inEqSimp_commuteLeq" (formula "74"))
                                 (rule "inEqSimp_commuteLeq" (formula "82") (term "0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "82") (term "1,1,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "83") (term "1,0,0"))
                                 (rule "applyEq" (formula "82") (term "1,1,0,0,0") (ifseqformula "39"))
                                 (rule "commuteUnion_2" (formula "113") (term "1,0,1,1,0"))
                                 (rule "commuteUnion" (formula "86") (term "1,0,0"))
                                 (rule "commuteUnion_2" (formula "68") (term "1,0"))
                                 (rule "commuteUnion" (formula "69") (term "1,0"))
                                 (rule "commuteUnion_2" (formula "82") (term "1,0,1,0,1,0"))
                                 (rule "commuteUnion" (formula "81") (term "1,0,0"))
                                 (rule "commuteUnion" (formula "80") (term "1,0,0"))
                                 (rule "commuteUnion_2" (formula "84") (term "1,0"))
                                 (rule "commuteUnion_2" (formula "85") (term "1,0"))
                                 (rule "commuteUnion_2" (formula "78") (term "1,0,0"))
                                 (rule "commuteUnion" (formula "79") (term "1,0,0"))
                                 (rule "commuteUnion" (formula "82") (term "1,0,0,0,0,1,0"))
                                 (rule "commuteUnion" (formula "83") (term "1,0,0,1,0"))
                                 (rule "commuteUnion" (formula "113") (term "0,1,0,1,1,0"))
                                 (rule "commuteUnion" (formula "68") (term "0,1,0"))
                                 (rule "commuteUnion" (formula "82") (term "0,1,0,1,0,1,0"))
                                 (rule "commuteUnion" (formula "84") (term "0,1,0"))
                                 (rule "commuteUnion" (formula "85") (term "0,1,0"))
                                 (rule "commuteUnion" (formula "78") (term "0,1,0,0"))
                                 (rule "commute_and" (formula "83") (term "0,0"))
                                 (rule "commute_and" (formula "82") (term "1,0,0"))
                                 (rule "commute_and" (formula "82") (term "0,0,0"))
                                 (rule "associativeLawUnion" (formula "69") (term "1,0"))
                                 (rule "ifUnfold" (formula "113") (term "1") (inst "#boolv=x_2"))
                                 (rule "variableDeclaration" (formula "113") (term "1") (newnames "x_8"))
                                 (rule "shift_paren_and" (formula "82") (term "0,0"))
                                 (rule "commute_and_2" (formula "82") (term "0,0,0"))
                                 (rule "associativeLawUnion" (formula "86") (term "1,0,0"))
                                 (rule "associativeLawUnion" (formula "81") (term "1,0,0"))
                                 (rule "associativeLawUnion" (formula "80") (term "1,0,0"))
                                 (rule "associativeLawUnion" (formula "79") (term "1,0,0"))
                                 (rule "inequality_comparison_simple" (formula "113") (term "1"))
                                  (builtin "One Step Simplification" (formula "113"))
                                 (rule "replace_known_left" (formula "113") (term "0,0,1,0") (ifseqformula "67"))
                                  (builtin "One Step Simplification" (formula "113"))
                                 (rule "associativeLawUnion" (formula "83") (term "1,0,0,1,0"))
                                  (builtin "Use Dependency Contract" (formula "14") (ifInst ""  (formula "113") (term "0,0,1,0,0,1")) (contract "de.wiesler.Buffers[java.lang.Object::<inv>()].JML accessible clause.0"))
                                 (rule "wellFormedAnon" (formula "86") (term "1,1,0,0,0"))
                                 (rule "replace_known_left" (formula "86") (term "0,1,0,0,0") (ifseqformula "17"))
                                  (builtin "One Step Simplification" (formula "86") (ifInst ""  (formula "110")) (ifInst ""  (formula "31")) (ifInst ""  (formula "17")) (ifInst ""  (formula "16")) (ifInst ""  (formula "14")))
                                 (rule "disjointDefinition" (formula "86") (term "1,0"))
                                 (rule "distributeIntersection_2" (formula "86") (term "0,1,0"))
                                 (rule "unionEqualsEmpty" (formula "86") (term "1,0"))
                                 (rule "disjointArrayRangeAllFields2" (formula "86") (term "1,1,0"))
                                  (builtin "One Step Simplification" (formula "86"))
                                 (rule "distributeIntersection_2" (formula "86") (term "0,0,1,0"))
                                 (rule "unionEqualsEmpty" (formula "86") (term "0,1,0"))
                                 (rule "disjointArrayRangeAllFields2" (formula "86") (term "1,0,1,0"))
                                 (rule "eqSymm" (formula "86") (term "0,0,1,0,1,0"))
                                 (rule "replace_known_right" (formula "86") (term "0,0,1,0,1,0") (ifseqformula "99"))
                                  (builtin "One Step Simplification" (formula "86"))
                                 (rule "distributeIntersection_2" (formula "86") (term "0,0,1,0"))
                                 (rule "unionEqualsEmpty" (formula "86") (term "0,1,0"))
                                 (rule "disjointArrayRangeAllFields2" (formula "86") (term "0,0,1,0"))
                                 (rule "eqSymm" (formula "86") (term "0,0,0,0,1,0"))
                                 (rule "replace_known_right" (formula "86") (term "0,0,0,0,1,0") (ifseqformula "95"))
                                  (builtin "One Step Simplification" (formula "86"))
                                 (rule "disjointArrayRangeAllFields2" (formula "86") (term "0,1,0"))
                                 (rule "eqSymm" (formula "86") (term "0,0,0,1,0"))
                                 (rule "replace_known_right" (formula "86") (term "0,0,0,1,0") (ifseqformula "90"))
                                  (builtin "One Step Simplification" (formula "86"))
                                  (builtin "Use Dependency Contract" (formula "15") (ifInst ""  (formula "114") (term "1,0,1,0,0,1")) (contract "de.wiesler.Classifier[java.lang.Object::<inv>()].JML accessible clause.0"))
                                 (rule "wellFormedAnon" (formula "87") (term "1,1,0,0,0"))
                                 (rule "replace_known_right" (formula "87") (term "0,0,0,0,0,0") (ifseqformula "110"))
                                  (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "18")) (ifInst ""  (formula "17")) (ifInst ""  (formula "17")) (ifInst ""  (formula "16")) (ifInst ""  (formula "33")) (ifInst ""  (formula "15")) (ifInst ""  (formula "33")))
                                 (rule "true_left" (formula "87"))
                                 (rule "associativeLawUnion" (formula "82") (term "1,0,0,0,0,1,0"))
                                 (rule "ifSplit" (formula "114"))
                                 (branch "if x_8 true"
                                     (builtin "One Step Simplification" (formula "115"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "if x_8 false"
                                     (builtin "One Step Simplification" (formula "115"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "blockEmpty" (formula "114") (term "1"))
                                     (builtin "Block Contract (Internal)" (formula "114") (newnames "result_24,exc_28,heap_Before_BLOCK_2,savedHeap_Before_BLOCK_2,o,f"))
                                    (branch "Validity"
                                        (builtin "One Step Simplification" (formula "115"))
                                        (builtin "One Step Simplification" (formula "87") (ifInst ""  (formula "32")) (ifInst ""  (formula "19")) (ifInst ""  (formula "110")) (ifInst ""  (formula "18")))
                                       (rule "eqSymm" (formula "115") (term "0,0,1,0,1"))
                                       (rule "variableDeclarationAssign" (formula "115") (term "1"))
                                       (rule "variableDeclaration" (formula "115") (term "1") (newnames "exc_28_1"))
                                       (rule "assignment" (formula "115") (term "1"))
                                        (builtin "One Step Simplification" (formula "115"))
                                       (rule "emptyStatement" (formula "115") (term "1"))
                                        (builtin "One Step Simplification" (formula "115"))
                                       (rule "emptyStatement" (formula "115") (term "1"))
                                       (rule "tryEmpty" (formula "115") (term "1"))
                                       (rule "blockEmptyLabel" (formula "115") (term "1"))
                                       (rule "blockEmpty" (formula "115") (term "1"))
                                       (rule "methodCallEmpty" (formula "115") (term "1"))
                                       (rule "emptyModality" (formula "115") (term "1"))
                                       (rule "andRight" (formula "115"))
                                       (branch "Case 1"
                                           (builtin "One Step Simplification" (formula "115"))
                                          (rule "closeTrue" (formula "115"))
                                       )
                                       (branch "Case 2"
                                           (builtin "One Step Simplification" (formula "115"))
                                          (rule "closeTrue" (formula "115"))
                                       )
                                    )
                                    (branch "Precondition"
                                       (rule "andRight" (formula "114"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "114"))
                                          (branch "Case 1"
                                              (builtin "One Step Simplification" (formula "114") (ifInst ""  (formula "32")))
                                             (rule "closeTrue" (formula "114"))
                                          )
                                          (branch "Case 2"
                                              (builtin "One Step Simplification" (formula "114"))
                                             (rule "wellFormedAnon" (formula "114"))
                                             (rule "wellFormedAnon" (formula "114") (term "0"))
                                             (rule "replace_known_left" (formula "114") (term "1") (ifseqformula "70"))
                                              (builtin "One Step Simplification" (formula "114") (ifInst ""  (formula "17")) (ifInst ""  (formula "16")))
                                             (rule "closeTrue" (formula "114"))
                                          )
                                       )
                                       (branch "Case 2"
                                          (rule "andRight" (formula "114"))
                                          (branch "Case 1"
                                             (rule "andRight" (formula "114"))
                                             (branch "Case 1"
                                                 (builtin "One Step Simplification" (formula "114") (ifInst ""  (formula "109")))
                                                (rule "closeTrue" (formula "114"))
                                             )
                                             (branch "Case 2"
                                                 (builtin "One Step Simplification" (formula "114") (ifInst ""  (formula "18")))
                                                (rule "closeTrue" (formula "114"))
                                             )
                                          )
                                          (branch "Case 2"
                                              (builtin "One Step Simplification" (formula "114") (ifInst ""  (formula "19")))
                                             (rule "closeTrue" (formula "114"))
                                          )
                                       )
                                    )
                                    (branch "Usage"
                                        (builtin "One Step Simplification" (formula "115"))
                                        (builtin "One Step Simplification" (formula "87"))
                                       (rule "expand_inInt" (formula "87") (term "1"))
                                       (rule "expand_inInt" (formula "87") (term "0,1,0"))
                                       (rule "replace_int_MAX" (formula "87") (term "1,0,1"))
                                       (rule "replace_int_MIN" (formula "87") (term "0,1,1"))
                                       (rule "replace_int_MAX" (formula "87") (term "1,0,0,1,0"))
                                       (rule "replace_int_MIN" (formula "87") (term "0,1,0,1,0"))
                                       (rule "andLeft" (formula "87"))
                                       (rule "andLeft" (formula "87"))
                                       (rule "andLeft" (formula "89"))
                                       (rule "andLeft" (formula "88"))
                                       (rule "andLeft" (formula "88"))
                                       (rule "replace_known_left" (formula "90") (term "0") (ifseqformula "87"))
                                        (builtin "One Step Simplification" (formula "90"))
                                       (rule "true_left" (formula "90"))
                                       (rule "inEqSimp_commuteLeq" (formula "91"))
                                       (rule "inEqSimp_commuteLeq" (formula "89"))
                                       (rule "elim_double_block_2" (formula "119") (term "1"))
                                       (rule "ifUnfold" (formula "119") (term "1") (inst "#boolv=x_2"))
                                       (rule "variableDeclaration" (formula "119") (term "1") (newnames "x_9"))
                                       (rule "inequality_comparison_simple" (formula "119") (term "1"))
                                        (builtin "One Step Simplification" (formula "119"))
                                       (rule "replace_known_left" (formula "119") (term "0,0,1,0") (ifseqformula "87"))
                                        (builtin "One Step Simplification" (formula "119"))
                                       (rule "ifSplit" (formula "119"))
                                       (branch "if x_9 true"
                                           (builtin "One Step Simplification" (formula "120"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "closeFalse" (formula "1"))
                                       )
                                       (branch "if x_9 false"
                                           (builtin "One Step Simplification" (formula "120"))
                                           (builtin "One Step Simplification" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "blockEmpty" (formula "119") (term "1"))
                                           (builtin "Use Operation Contract" (formula "119") (newnames "heapBefore_push,exc_29,heapAfter_push,anon_heap_push") (contract "de.wiesler.Buffers[de.wiesler.Buffers::push(int,int)].JML normal_behavior operation contract.0"))
                                          (branch "Post (push)"
                                              (builtin "One Step Simplification" (formula "93"))
                                              (builtin "One Step Simplification" (formula "121"))
                                              (builtin "Block Contract (Internal)" (formula "121") (newnames "result_25,exc_30,heap_Before_BLOCK_3,savedHeap_Before_BLOCK_3,o,f"))
                                             (branch "Validity"
                                                 (builtin "One Step Simplification" (formula "122"))
                                                 (builtin "One Step Simplification" (formula "94") (ifInst ""  (formula "32")) (ifInst ""  (formula "19")) (ifInst ""  (formula "117")))
                                                (rule "expand_inInt" (formula "93") (term "0,0,0,1,1,1,1,0,1"))
                                                (rule "replace_int_MAX" (formula "93") (term "1,0,0,0,0,1,1,1,1,0,1"))
                                                (rule "replace_int_MIN" (formula "93") (term "0,1,0,0,0,1,1,1,1,0,1"))
                                                (rule "andLeft" (formula "94"))
                                                (rule "andLeft" (formula "93"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (ifseqformula "93"))
                                                 (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "18")))
                                                (rule "true_left" (formula "96"))
                                                (rule "andLeft" (formula "94"))
                                                (rule "andLeft" (formula "95"))
                                                (rule "andLeft" (formula "94"))
                                                (rule "andLeft" (formula "94"))
                                                (rule "andLeft" (formula "95"))
                                                (rule "andLeft" (formula "96"))
                                                (rule "andLeft" (formula "97"))
                                                (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "95"))
                                                (rule "applyEqReverse" (formula "61") (term "2,0") (ifseqformula "95"))
                                                (rule "applyEqReverse" (formula "97") (term "1,0,1,1,1,0") (ifseqformula "95"))
                                                (rule "applyEqReverse" (formula "90") (term "0") (ifseqformula "95"))
                                                (rule "applyEqReverse" (formula "91") (term "0") (ifseqformula "95"))
                                                (rule "hideAuxiliaryEq" (formula "95"))
                                                (rule "eqSymm" (formula "128") (term "0,0,1,0,1"))
                                                (rule "translateJavaAddInt" (formula "93") (term "0,1,1,1,0"))
                                                (rule "eqSymm" (formula "94"))
                                                (rule "eqSymm" (formula "95"))
                                                (rule "eqSymm" (formula "96") (term "1,0"))
                                                (rule "translateJavaMulInt" (formula "93") (term "0,0,1,1,1,0"))
                                                (rule "translateJavaAddInt" (formula "94") (term "0"))
                                                (rule "translateJavaAddInt" (formula "95") (term "0"))
                                                (rule "translateJavaAddInt" (formula "96") (term "0,1,0"))
                                                (rule "polySimp_addComm0" (formula "94") (term "0"))
                                                (rule "polySimp_addComm0" (formula "95") (term "0"))
                                                (rule "inEqSimp_commuteLeq" (formula "96") (term "1,0,0"))
                                                (rule "variableDeclarationAssign" (formula "128") (term "1"))
                                                (rule "variableDeclaration" (formula "128") (term "1") (newnames "exc_30_1"))
                                                (rule "assignment" (formula "128") (term "1"))
                                                 (builtin "One Step Simplification" (formula "128"))
                                                (rule "emptyStatement" (formula "128") (term "1"))
                                                 (builtin "One Step Simplification" (formula "128"))
                                                (rule "emptyStatement" (formula "128") (term "1"))
                                                (rule "applyEq" (formula "95") (term "1,0") (ifseqformula "81"))
                                                (rule "polySimp_addAssoc" (formula "95") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "95") (term "0,0"))
                                                (rule "eqSymm" (formula "95"))
                                                (rule "commute_and" (formula "96") (term "0,0"))
                                                (rule "tryEmpty" (formula "128") (term "1"))
                                                (rule "blockEmptyLabel" (formula "128") (term "1"))
                                                (rule "blockEmpty" (formula "128") (term "1"))
                                                (rule "methodCallEmpty" (formula "128") (term "1"))
                                                (rule "emptyModality" (formula "128") (term "1"))
                                                (rule "andRight" (formula "128"))
                                                (branch "Case 1"
                                                    (builtin "One Step Simplification" (formula "128"))
                                                   (rule "closeTrue" (formula "128"))
                                                )
                                                (branch "Case 2"
                                                    (builtin "One Step Simplification" (formula "128"))
                                                   (rule "closeTrue" (formula "128"))
                                                )
                                             )
                                             (branch "Precondition"
                                                (rule "andRight" (formula "121"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "121"))
                                                   (branch "Case 1"
                                                       (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "32")))
                                                      (rule "closeTrue" (formula "121"))
                                                   )
                                                   (branch "Case 2"
                                                       (builtin "One Step Simplification" (formula "121"))
                                                      (rule "expand_inInt" (formula "93") (term "0,0,0,1,1,1,1,0,1"))
                                                      (rule "replace_int_MIN" (formula "93") (term "0,1,0,0,0,1,1,1,1,0,1"))
                                                      (rule "replace_int_MAX" (formula "93") (term "1,0,0,0,0,1,1,1,1,0,1"))
                                                      (rule "andLeft" (formula "93"))
                                                      (rule "wellFormedAnonEQ" (formula "122") (ifseqformula "93"))
                                                      (rule "wellFormedAnon" (formula "122") (term "0"))
                                                      (rule "wellFormedAnon" (formula "122") (term "0,0"))
                                                      (rule "andLeft" (formula "94"))
                                                      (rule "andLeft" (formula "95"))
                                                      (rule "andLeft" (formula "94"))
                                                      (rule "andLeft" (formula "94"))
                                                      (rule "andLeft" (formula "95"))
                                                      (rule "andLeft" (formula "96"))
                                                      (rule "andLeft" (formula "97"))
                                                      (rule "applyEqReverse" (formula "61") (term "2,0") (ifseqformula "95"))
                                                      (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "95"))
                                                      (rule "applyEqReverse" (formula "91") (term "0") (ifseqformula "95"))
                                                      (rule "applyEqReverse" (formula "97") (term "1,0,1,1,1,0") (ifseqformula "95"))
                                                      (rule "applyEqReverse" (formula "90") (term "0") (ifseqformula "95"))
                                                      (rule "hideAuxiliaryEq" (formula "95"))
                                                      (rule "translateJavaAddInt" (formula "93") (term "0,1,1,1,0"))
                                                      (rule "eqSymm" (formula "94"))
                                                      (rule "eqSymm" (formula "95"))
                                                      (rule "eqSymm" (formula "96") (term "1,0"))
                                                      (rule "translateJavaMulInt" (formula "93") (term "0,0,1,1,1,0"))
                                                      (rule "translateJavaAddInt" (formula "94") (term "0"))
                                                      (rule "translateJavaAddInt" (formula "95") (term "0"))
                                                      (rule "translateJavaAddInt" (formula "96") (term "0,1,0"))
                                                      (rule "replace_known_left" (formula "127") (term "1,0,0") (ifseqformula "16"))
                                                       (builtin "One Step Simplification" (formula "127") (ifInst ""  (formula "17")) (ifInst ""  (formula "70")) (ifInst ""  (formula "92")))
                                                      (rule "closeTrue" (formula "127"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "andRight" (formula "121"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "121"))
                                                      (branch "Case 1"
                                                          (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "116")))
                                                         (rule "closeTrue" (formula "121"))
                                                      )
                                                      (branch "Case 2"
                                                          (builtin "One Step Simplification" (formula "121"))
                                                         (rule "expand_inInt" (formula "93") (term "0,0,0,1,1,1,1,0,1"))
                                                         (rule "replace_int_MAX" (formula "93") (term "1,0,0,0,0,1,1,1,1,0,1"))
                                                         (rule "replace_int_MIN" (formula "93") (term "0,1,0,0,0,1,1,1,1,0,1"))
                                                         (rule "andLeft" (formula "93"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "122") (ifseqformula "93"))
                                                          (builtin "One Step Simplification" (formula "122") (ifInst ""  (formula "18")))
                                                         (rule "closeTrue" (formula "122"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                       (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "19")))
                                                      (rule "closeTrue" (formula "121"))
                                                   )
                                                )
                                             )
                                             (branch "Usage"
                                                 (builtin "One Step Simplification" (formula "94"))
                                                 (builtin "One Step Simplification" (formula "122"))
                                                (rule "expand_inInt" (formula "93") (term "0,0,0,1,1,1,1,0,1"))
                                                (rule "expand_inInt" (formula "94") (term "0,1,0"))
                                                (rule "replace_int_MIN" (formula "93") (term "0,1,0,0,0,1,1,1,1,0,1"))
                                                (rule "replace_int_MAX" (formula "93") (term "1,0,0,0,0,1,1,1,1,0,1"))
                                                (rule "replace_int_MIN" (formula "94") (term "0,1,0,1,0"))
                                                (rule "replace_int_MAX" (formula "94") (term "1,0,0,1,0"))
                                                (rule "andLeft" (formula "93"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "95") (term "1,1,1,0") (ifseqformula "93"))
                                                 (builtin "One Step Simplification" (formula "95"))
                                                (rule "andLeft" (formula "94"))
                                                (rule "andLeft" (formula "96"))
                                                (rule "andLeft" (formula "94"))
                                                (rule "andLeft" (formula "96"))
                                                (rule "andLeft" (formula "98"))
                                                (rule "andLeft" (formula "97"))
                                                (rule "andLeft" (formula "95"))
                                                (rule "andLeft" (formula "99"))
                                                (rule "andLeft" (formula "96"))
                                                (rule "andLeft" (formula "100"))
                                                (rule "andLeft" (formula "97"))
                                                (rule "andLeft" (formula "98"))
                                                (rule "applyEqReverse" (formula "61") (term "2,0") (ifseqformula "96"))
                                                (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "96"))
                                                (rule "applyEqReverse" (formula "91") (term "0") (ifseqformula "96"))
                                                (rule "applyEqReverse" (formula "98") (term "1,0,1,1,1,0") (ifseqformula "96"))
                                                (rule "applyEqReverse" (formula "90") (term "0") (ifseqformula "96"))
                                                (rule "hideAuxiliaryEq" (formula "96"))
                                                (rule "translateJavaAddInt" (formula "93") (term "0,1,1,1,0"))
                                                (rule "translateJavaAddInt" (formula "105") (term "0,3,0"))
                                                (rule "translateJavaAddInt" (formula "105") (term "2,0"))
                                                (rule "eqSymm" (formula "95"))
                                                (rule "eqSymm" (formula "96"))
                                                (rule "eqSymm" (formula "97") (term "1,0"))
                                                (rule "translateJavaMulInt" (formula "93") (term "0,0,1,1,1,0"))
                                                (rule "translateJavaAddInt" (formula "105") (term "3,0"))
                                                (rule "translateJavaAddInt" (formula "95") (term "0"))
                                                (rule "translateJavaAddInt" (formula "96") (term "0"))
                                                (rule "translateJavaAddInt" (formula "97") (term "0,1,0"))
                                                (rule "replace_known_left" (formula "103") (term "0") (ifseqformula "100"))
                                                 (builtin "One Step Simplification" (formula "103"))
                                                (rule "true_left" (formula "103"))
                                                (rule "polySimp_addComm1" (formula "104") (term "3,0"))
                                                (rule "polySimp_addComm0" (formula "95") (term "0"))
                                                (rule "polySimp_addComm0" (formula "96") (term "0"))
                                                (rule "polySimp_addComm0" (formula "104") (term "0,3,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "102"))
                                                (rule "inEqSimp_commuteLeq" (formula "97") (term "1,0,0"))
                                                (rule "applyEq" (formula "96") (term "1,0") (ifseqformula "81"))
                                                (rule "polySimp_addAssoc" (formula "96") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "96") (term "0,0"))
                                                (rule "eqSymm" (formula "96"))
                                                (rule "commute_and" (formula "97") (term "0,0"))
                                                (rule "elim_double_block_2" (formula "132") (term "1"))
                                                (rule "ifUnfold" (formula "132") (term "1") (inst "#boolv=x_2"))
                                                (rule "variableDeclaration" (formula "132") (term "1") (newnames "x_10"))
                                                (rule "inequality_comparison_simple" (formula "132") (term "1"))
                                                 (builtin "One Step Simplification" (formula "132"))
                                                (rule "replace_known_left" (formula "132") (term "0,0,1,0") (ifseqformula "100"))
                                                 (builtin "One Step Simplification" (formula "132"))
                                                (rule "ifSplit" (formula "132"))
                                                (branch "if x_10 true"
                                                    (builtin "One Step Simplification" (formula "133"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "if x_10 false"
                                                    (builtin "One Step Simplification" (formula "133"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "blockEmpty" (formula "132") (term "1"))
                                                   (rule "emptyStatement" (formula "132") (term "1"))
                                                   (rule "blockEmpty" (formula "132") (term "1"))
                                                   (rule "preincrement" (formula "132") (term "1"))
                                                   (rule "compound_int_cast_expression" (formula "132") (term "1") (inst "#v=x_2"))
                                                   (rule "variableDeclarationAssign" (formula "132") (term "1"))
                                                   (rule "variableDeclaration" (formula "132") (term "1") (newnames "x_11"))
                                                   (rule "remove_parentheses_right" (formula "132") (term "1"))
                                                   (rule "assignmentAdditionInt" (formula "132") (term "1"))
                                                   (branch "Overflow check"
                                                       (builtin "One Step Simplification" (formula "132"))
                                                      (rule "expand_inInt" (formula "132"))
                                                      (rule "replace_int_MIN" (formula "132") (term "0,1"))
                                                      (rule "replace_int_MAX" (formula "132") (term "1,0"))
                                                      (rule "polySimp_homoEq" (formula "97") (term "1,0"))
                                                      (rule "polySimp_homoEq" (formula "95"))
                                                      (rule "polySimp_mulComm0" (formula "97") (term "1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "95") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "132") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "132") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "97") (term "1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "97") (term "0,1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "95") (term "1,0"))
                                                      (rule "mul_literals" (formula "95") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "97") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "95") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "95") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "66"))
                                                      (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "4"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "82") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "86") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "86") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "86") (term "0,0,1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "38"))
                                                      (rule "polySimp_addComm1" (formula "38") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "48"))
                                                      (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "48") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "132") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "132") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "132") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "132") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "132") (term "0,0"))
                                                      (rule "add_literals" (formula "132") (term "0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "132") (term "1"))
                                                      (rule "mul_literals" (formula "132") (term "1,0,1"))
                                                      (rule "polySimp_addComm1" (formula "132") (term "0,1"))
                                                      (rule "add_literals" (formula "132") (term "0,0,1"))
                                                      (rule "jmod_axiom" (formula "50") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "50") (term "1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "97") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "97") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "97") (term "0,1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "95"))
                                                      (rule "polySimp_mulLiterals" (formula "95") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "95") (term "0"))
                                                      (rule "applyEq" (formula "93") (term "1,0,1,1,1,0") (ifseqformula "95"))
                                                      (rule "polySimp_addAssoc" (formula "93") (term "0,1,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "93") (term "0,0,1,1,1,0"))
                                                      (rule "applyEq" (formula "61") (term "3,2,0") (ifseqformula "95"))
                                                      (rule "applyEq" (formula "91") (term "3,0") (ifseqformula "95"))
                                                      (rule "applyEq" (formula "105") (term "0") (ifseqformula "95"))
                                                      (rule "polySimp_homoEq" (formula "105"))
                                                      (rule "polySimp_mulComm0" (formula "105") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "105") (term "1,0"))
                                                      (rule "mul_literals" (formula "105") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "105") (term "0"))
                                                      (rule "add_literals" (formula "105") (term "0,0"))
                                                      (rule "applyEq" (formula "90") (term "3,0") (ifseqformula "95"))
                                                      (rule "applyEq" (formula "97") (term "3,1,0,0,1,0") (ifseqformula "95"))
                                                      (rule "applyEq" (formula "3") (term "3,1") (ifseqformula "95"))
                                                      (rule "polySimp_sepNegMonomial" (formula "50"))
                                                      (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "105"))
                                                      (rule "polySimp_mulLiterals" (formula "105") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "105") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "66"))
                                                      (rule "polySimp_mulComm0" (formula "66") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "66") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "66") (term "1,1"))
                                                      (rule "mul_literals" (formula "66") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "66") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "82") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "82") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "86") (term "1,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "38"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                                      (rule "mul_literals" (formula "38") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "48"))
                                                      (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "48") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "132") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "132") (term "0,0"))
                                                      (rule "polySimp_elimOne" (formula "132") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "132") (term "1"))
                                                      (rule "mul_literals" (formula "132") (term "1,1"))
                                                      (rule "inEqSimp_subsumption0" (formula "52") (ifseqformula "54"))
                                                      (rule "leq_literals" (formula "52") (term "0"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "true_left" (formula "52"))
                                                      (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                                      (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "8") (term "0,0"))
                                                      (rule "qeq_literals" (formula "8") (term "0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "34"))
                                                      (rule "leq_literals" (formula "36") (term "0"))
                                                       (builtin "One Step Simplification" (formula "36"))
                                                      (rule "true_left" (formula "36"))
                                                      (rule "inEqSimp_subsumption1" (formula "50") (ifseqformula "49"))
                                                      (rule "leq_literals" (formula "50") (term "0"))
                                                       (builtin "One Step Simplification" (formula "50"))
                                                      (rule "true_left" (formula "50"))
                                                      (rule "inEqSimp_contradInEq1" (formula "3") (term "0,0,0") (ifseqformula "7"))
                                                      (rule "qeq_literals" (formula "3") (term "0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "eqSymm" (formula "3"))
                                                      (rule "applyEq" (formula "57") (term "2,0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "87") (term "0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "86") (term "0") (ifseqformula "3"))
                                                      (rule "applyEq" (formula "93") (term "1,0,0,1,0") (ifseqformula "3"))
                                                      (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "40"))
                                                      (rule "leq_literals" (formula "42") (term "0"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "true_left" (formula "42"))
                                                      (rule "inEqSimp_subsumption1" (formula "127") (term "1") (ifseqformula "7"))
                                                      (rule "leq_literals" (formula "127") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "127"))
                                                      (rule "inEqSimp_leqRight" (formula "127"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "39"))
                                                      (rule "leq_literals" (formula "23") (term "0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "8") (term "0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "newSym_eq" (formula "46") (inst "newSymDef=add(mul(begin, Z(0(#))), mul(i, Z(0(#))))") (inst "l=l_0"))
                                                      (rule "times_zero_1" (formula "46") (term "1,1,1"))
                                                      (rule "times_zero_1" (formula "46") (term "0,1,1"))
                                                      (rule "add_zero_left" (formula "46") (term "1,1"))
                                                      (rule "add_zero_right" (formula "46") (term "1"))
                                                      (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "46"))
                                                      (rule "polySimp_homoEq" (formula "47"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "47"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "47") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "47") (term "1,1"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "0,1"))
                                                      (rule "applyEq" (formula "71") (term "0") (ifseqformula "47"))
                                                      (rule "inEqSimp_homoInEq1" (formula "71"))
                                                      (rule "polySimp_mulComm0" (formula "71") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "71") (term "1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "71") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "71") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "71") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "71") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "71") (term "0,0"))
                                                      (rule "applyEq" (formula "63") (term "1,2,1,0,0,1,0,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "63") (term "2,1,0,0,1,0,0"))
                                                      (rule "applyEq" (formula "12") (term "1,2,1,0,0,1,0,0,1,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "2,1,0,0,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "75") (term "1,2,1,0,0,1,0,0,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "75") (term "2,1,0,0,1,0,0,0"))
                                                      (rule "applyEq" (formula "25") (term "0") (ifseqformula "47"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "25") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                      (rule "applyEq" (formula "14") (term "1,2,1,0,0,1,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "2,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "46") (term "1,0,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "46") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "46") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "46") (term "0,0"))
                                                      (rule "add_literals" (formula "46") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "46") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "46") (term "0,0"))
                                                      (rule "applyEq" (formula "56") (term "1,2,1,0,0,1,0,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "56") (term "2,1,0,0,1,0,0"))
                                                      (rule "applyEq" (formula "77") (term "1,2,1,1,0,1,0,1,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "77") (term "2,1,1,0,1,0,1,0"))
                                                      (rule "applyEq" (formula "80") (term "1,2,1,0,0,1,0,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "80") (term "2,1,0,0,1,0,0"))
                                                      (rule "applyEq" (formula "77") (term "1,2,1,0,0,1,0,0,1,0,1,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "77") (term "2,1,0,0,1,0,0,1,0,1,0"))
                                                      (rule "applyEq" (formula "79") (term "1,2,1,1,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "79") (term "2,1,1,0"))
                                                      (rule "applyEq" (formula "73") (term "1,2,1,1,0,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "73") (term "2,1,1,0,0"))
                                                      (rule "applyEq" (formula "64") (term "1,2,1,0,0,1,0,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "64") (term "2,1,0,0,1,0,0"))
                                                      (rule "applyEq" (formula "76") (term "1,2,1,0,0,1,0,0,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "76") (term "2,1,0,0,1,0,0,0"))
                                                      (rule "applyEq" (formula "44") (term "0,1,1") (ifseqformula "47"))
                                                      (rule "polySimp_mulComm0" (formula "44") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "44") (term "1,1"))
                                                      (rule "polySimp_mulAssoc" (formula "44") (term "0,1,1"))
                                                      (rule "polySimp_mulComm0" (formula "44") (term "0,0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "44") (term "0,1,1"))
                                                      (rule "polySimp_addComm0" (formula "44") (term "1"))
                                                      (rule "applyEq" (formula "74") (term "1,2,1,1,0,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "74") (term "2,1,1,0,0"))
                                                      (rule "applyEq" (formula "90") (term "1,2,1,1,0,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "90") (term "2,1,1,0,0"))
                                                      (rule "applyEq" (formula "73") (term "1,2,1,0,0,1,0,0,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "73") (term "2,1,0,0,1,0,0,0"))
                                                      (rule "applyEq" (formula "78") (term "1,2,1,0,0,1,0,0,0,1,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "78") (term "2,1,0,0,1,0,0,0,1,0"))
                                                      (rule "applyEq" (formula "80") (term "1,2,1,1,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "80") (term "2,1,1,0"))
                                                      (rule "applyEq" (formula "78") (term "1,2,1,1,0,0,1,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "78") (term "2,1,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "51") (term "5,0") (ifseqformula "47"))
                                                      (rule "applyEq" (formula "79") (term "1,2,1,0,0,1,0,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "79") (term "2,1,0,0,1,0,0"))
                                                      (rule "applyEq" (formula "74") (term "1,2,1,0,0,1,0,0,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "74") (term "2,1,0,0,1,0,0,0"))
                                                      (rule "applyEq" (formula "13") (term "1,2,1,0,0,1,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "2,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "24") (term "0") (ifseqformula "47"))
                                                      (rule "inEqSimp_homoInEq0" (formula "24"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "24") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                                      (rule "applyEq" (formula "88") (term "1,2,1,1,0,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "88") (term "2,1,1,0,0"))
                                                      (rule "applyEq" (formula "9") (term "0") (ifseqformula "47"))
                                                      (rule "inEqSimp_homoInEq1" (formula "9"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                                      (rule "applyEq" (formula "88") (term "1,2,1,0,0,1,0,0,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "88") (term "2,1,0,0,1,0,0,0"))
                                                      (rule "applyEq" (formula "43") (term "1") (ifseqformula "47"))
                                                      (rule "applyEq" (formula "76") (term "1,2,1,1,0,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "76") (term "2,1,1,0,0"))
                                                      (rule "applyEq" (formula "90") (term "1,2,1,0,0,1,0,0,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "90") (term "2,1,0,0,1,0,0,0"))
                                                      (rule "applyEq" (formula "75") (term "1,2,1,1,0,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "75") (term "2,1,1,0,0"))
                                                      (rule "applyEq" (formula "63") (term "1,2,1,1,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "63") (term "2,1,1,0"))
                                                      (rule "applyEq" (formula "64") (term "1,2,1,1,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "64") (term "2,1,1,0"))
                                                      (rule "applyEq" (formula "11") (term "1,2,1,0,0,1,0,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "11") (term "2,1,0,0,1,0,0"))
                                                      (rule "applyEq" (formula "77") (term "1,2,1,0,0,1,0,0,0,0,0,1,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "77") (term "2,1,0,0,1,0,0,0,0,0,1,0"))
                                                      (rule "applyEq" (formula "78") (term "4,1,1,0") (ifseqformula "47"))
                                                      (rule "applyEq" (formula "11") (term "0,5,0") (ifseqformula "47"))
                                                      (rule "applyEq" (formula "78") (term "0,4,0,1,0") (ifseqformula "47"))
                                                      (rule "applyEq" (formula "92") (term "1,2,1,1,0,0,1,1,1,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "92") (term "2,1,1,0,0,1,1,1,0"))
                                                      (rule "applyEq" (formula "56") (term "0,0,2,2,0") (ifseqformula "47"))
                                                      (rule "applyEq" (formula "92") (term "1,2,1,0,0,1,0,0,0,1,1,1,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "92") (term "2,1,0,0,1,0,0,0,1,1,1,0"))
                                                      (rule "applyEq" (formula "12") (term "0,4,0,1,0") (ifseqformula "47"))
                                                      (rule "applyEq" (formula "99") (term "1,0,3,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "99") (term "0,3,0"))
                                                      (rule "applyEq" (formula "85") (term "0,0,2,0") (ifseqformula "47"))
                                                      (rule "applyEq" (formula "86") (term "0,0,2,0") (ifseqformula "47"))
                                                      (rule "applyEq" (formula "12") (term "4,1,1,0") (ifseqformula "47"))
                                                      (rule "applyEq" (formula "50") (term "0,0,2,2,0,1,0") (ifseqformula "47"))
                                                      (rule "applyEq" (formula "99") (term "0,2,0") (ifseqformula "47"))
                                                      (rule "applyEq" (formula "77") (term "1,2,1,1,0,0,0,0,1,0") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "77") (term "2,1,1,0,0,0,0,1,0"))
                                                      (rule "applyEq" (formula "76") (term "1,0,1") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "76") (term "0,1"))
                                                      (rule "polySimp_addComm0" (formula "76") (term "0,0,1"))
                                                      (rule "applyEq" (formula "4") (term "0,0,2,1") (ifseqformula "47"))
                                                      (rule "applyEq" (formula "91") (term "1,0,1") (ifseqformula "47"))
                                                      (rule "polySimp_addAssoc" (formula "91") (term "0,1"))
                                                      (rule "polySimp_addComm1" (formula "91") (term "0,0,1"))
                                                      (rule "applyEq" (formula "92") (term "0,0,2,1,0,0,1,0") (ifseqformula "47"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "71"))
                                                      (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "71") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                                      (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "9") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "8"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "42") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "22"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "43") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                                      (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "43") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "71"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "43") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                                      (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "43") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "62") (ifseqformula "63"))
                                                      (rule "times_zero_1" (formula "62") (term "0,0"))
                                                      (rule "add_zero_left" (formula "62") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "62"))
                                                      (rule "mul_literals" (formula "62") (term "1"))
                                                      (rule "replace_known_left" (formula "84") (term "0,1,0") (ifseqformula "62"))
                                                       (builtin "One Step Simplification" (formula "84"))
                                                      (rule "true_left" (formula "84"))
                                                      (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "73"))
                                                      (rule "mul_literals" (formula "23") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                      (rule "mul_literals" (formula "23") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "40"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "41") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "26") (ifseqformula "41"))
                                                      (rule "leq_literals" (formula "26") (term "0"))
                                                       (builtin "One Step Simplification" (formula "26"))
                                                      (rule "true_left" (formula "26"))
                                                      (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "8"))
                                                      (rule "mul_literals" (formula "23") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                      (rule "mul_literals" (formula "23") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "47"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "53"))
                                                      (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                                      (rule "mul_literals" (formula "6") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                      (rule "add_literals" (formula "6") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                                      (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "6") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "6"))
                                                      (rule "qeq_literals" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch "Usage"
                                                       (builtin "One Step Simplification" (formula "132"))
                                                      (rule "translateJavaAddInt" (formula "132") (term "0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "132") (term "0,1,0"))
                                                      (rule "widening_identity_cast_5" (formula "132") (term "1"))
                                                      (rule "assignment" (formula "132") (term "1"))
                                                       (builtin "One Step Simplification" (formula "132"))
                                                      (rule "blockEmpty" (formula "132") (term "1"))
                                                      (rule "lsContinue" (formula "132") (term "1"))
                                                       (builtin "One Step Simplification" (formula "132"))
                                                      (rule "polySimp_homoEq" (formula "97") (term "1,0"))
                                                      (rule "polySimp_homoEq" (formula "95"))
                                                      (rule "polySimp_mulComm0" (formula "132") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "97") (term "1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "95") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "132") (term "0,0"))
                                                      (rule "mul_literals" (formula "132") (term "0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "97") (term "1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "97") (term "0,1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "95") (term "1,0"))
                                                      (rule "mul_literals" (formula "95") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "97") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "95") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "95") (term "0,0"))
                                                      (rule "precOfInt" (formula "132"))
                                                      (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "4"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "66"))
                                                      (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "82") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "132") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "132") (term "1,0,0,1"))
                                                      (rule "polySimp_mulAssoc" (formula "132") (term "0,1,0,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "132") (term "0,0,1,0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "132") (term "0,1,0,0,1"))
                                                      (rule "polySimp_elimOne" (formula "132") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "132") (term "0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "132") (term "0,1"))
                                                      (rule "polySimp_addComm1" (formula "132") (term "0,0,1"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "132") (term "0,1"))
                                                      (rule "add_literals" (formula "132") (term "1,1,0,1"))
                                                      (rule "times_zero_1" (formula "132") (term "1,0,1"))
                                                      (rule "add_zero_right" (formula "132") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "132") (term "0,1"))
                                                      (rule "polySimp_addComm1" (formula "132") (term "0,0,1"))
                                                      (rule "add_literals" (formula "132") (term "0,0,0,1"))
                                                      (rule "add_zero_left" (formula "132") (term "0,0,1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "132") (term "0,1"))
                                                      (rule "add_literals" (formula "132") (term "1,0,1"))
                                                      (rule "times_zero_1" (formula "132") (term "0,1"))
                                                      (rule "leq_literals" (formula "132") (term "1"))
                                                       (builtin "One Step Simplification" (formula "132"))
                                                      (rule "inEqSimp_leqRight" (formula "132"))
                                                      (rule "add_zero_right" (formula "1") (term "0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "39"))
                                                      (rule "polySimp_addComm1" (formula "39") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "87") (term "0,1,0"))
                                                      (rule "times_zero_2" (formula "87") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "87") (term "0,0,1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "4") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "4") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "49"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0"))
                                                      (rule "jmod_axiom" (formula "51") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "51") (term "1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "98") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "98") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "98") (term "0,1,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "96"))
                                                      (rule "polySimp_mulLiterals" (formula "96") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "96") (term "0"))
                                                      (rule "applyEq" (formula "92") (term "3,0") (ifseqformula "96"))
                                                      (rule "applyEq" (formula "106") (term "0") (ifseqformula "96"))
                                                      (rule "polySimp_homoEq" (formula "106"))
                                                      (rule "polySimp_mulComm0" (formula "106") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "106") (term "1,0"))
                                                      (rule "mul_literals" (formula "106") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "106") (term "0"))
                                                      (rule "add_literals" (formula "106") (term "0,0"))
                                                      (rule "applyEq" (formula "91") (term "3,0") (ifseqformula "96"))
                                                      (rule "applyEq" (formula "62") (term "3,2,0") (ifseqformula "96"))
                                                      (rule "applyEq" (formula "94") (term "1,0,1,1,1,0") (ifseqformula "96"))
                                                      (rule "polySimp_addAssoc" (formula "94") (term "0,1,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "94") (term "0,0,1,1,1,0"))
                                                      (rule "applyEq" (formula "98") (term "3,1,0,0,1,0") (ifseqformula "96"))
                                                      (rule "applyEq" (formula "4") (term "3,1") (ifseqformula "96"))
                                                      (rule "polySimp_sepNegMonomial" (formula "51"))
                                                      (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "106"))
                                                      (rule "polySimp_mulLiterals" (formula "106") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "106") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "56") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "56") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "56") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "56") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "56") (term "1,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "56") (term "1,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "67"))
                                                      (rule "polySimp_mulComm0" (formula "67") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "67") (term "1"))
                                                      (rule "mul_literals" (formula "67") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "67") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "67") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "83") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "83") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "83") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "83") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "83") (term "1,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "83") (term "1,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "39"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "1"))
                                                      (rule "mul_literals" (formula "39") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "87") (term "0,1,0"))
                                                      (rule "mul_literals" (formula "87") (term "1,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "4") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "49"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "49") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "53") (ifseqformula "55"))
                                                      (rule "leq_literals" (formula "53") (term "0"))
                                                       (builtin "One Step Simplification" (formula "53"))
                                                      (rule "true_left" (formula "53"))
                                                      (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "36"))
                                                      (rule "leq_literals" (formula "38") (term "0"))
                                                       (builtin "One Step Simplification" (formula "38"))
                                                      (rule "true_left" (formula "38"))
                                                      (rule "inEqSimp_subsumption1" (formula "52") (ifseqformula "51"))
                                                      (rule "leq_literals" (formula "52") (term "0"))
                                                       (builtin "One Step Simplification" (formula "52"))
                                                      (rule "true_left" (formula "52"))
                                                      (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                                                      (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "9") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "9") (term "0,0"))
                                                      (rule "qeq_literals" (formula "9") (term "0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "true_left" (formula "9"))
                                                      (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "41"))
                                                      (rule "leq_literals" (formula "43") (term "0"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "5"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                      (rule "add_literals" (formula "5") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "5") (term "1,0"))
                                                      (rule "add_zero_right" (formula "5") (term "0"))
                                                      (rule "leq_literals" (formula "5"))
                                                      (rule "closeFalse" (formula "5"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "Exceptional Post (push)"
                                              (builtin "One Step Simplification" (formula "93"))
                                              (builtin "One Step Simplification" (formula "121"))
                                             (rule "andLeft" (formula "93"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "94") (term "1,0") (ifseqformula "93"))
                                              (builtin "One Step Simplification" (formula "94"))
                                             (rule "andLeft" (formula "94"))
                                             (rule "andLeft" (formula "95"))
                                             (rule "andLeft" (formula "94"))
                                             (rule "notLeft" (formula "94"))
                                             (rule "close" (formula "97") (ifseqformula "96"))
                                          )
                                          (branch "Pre (push)"
                                              (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "68")) (ifInst ""  (formula "31")))
                                             (rule "wellFormedAnon" (formula "119") (term "0,0"))
                                             (rule "wellFormedAnon" (formula "119") (term "0,0,0"))
                                             (rule "expand_inInt" (formula "119") (term "1"))
                                             (rule "expand_inInt" (formula "119") (term "1,0"))
                                             (rule "replace_int_MIN" (formula "119") (term "0,1,1"))
                                             (rule "replace_int_MAX" (formula "119") (term "1,0,1"))
                                             (rule "replace_int_MAX" (formula "119") (term "1,0,1,0"))
                                             (rule "replace_int_MIN" (formula "119") (term "0,1,1,0"))
                                             (rule "replace_known_left" (formula "119") (term "1,0,0") (ifseqformula "70"))
                                              (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "17")) (ifInst ""  (formula "16")) (ifInst ""  (formula "90")))
                                             (rule "inEqSimp_ltToLeq" (formula "82") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "55") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "66"))
                                             (rule "polySimp_mulComm0" (formula "66") (term "1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "4"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "4") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "119") (term "1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "119") (term "1"))
                                             (rule "replace_known_left" (formula "119") (term "1") (ifseqformula "91"))
                                              (builtin "One Step Simplification" (formula "119"))
                                             (rule "inEqSimp_homoInEq1" (formula "38"))
                                             (rule "polySimp_addComm1" (formula "38") (term "0"))
                                             (rule "inEqSimp_homoInEq0" (formula "86") (term "0,1,0"))
                                             (rule "times_zero_2" (formula "86") (term "1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "86") (term "0,0,1,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "48"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                             (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
                                             (rule "jmod_axiom" (formula "50") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "50") (term "1,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "50"))
                                             (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "82") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "82") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "82") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "82") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "82") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "82") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "55") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "55") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "55") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "55") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "55") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "55") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "66"))
                                             (rule "polySimp_mulComm0" (formula "66") (term "1"))
                                             (rule "polySimp_rightDist" (formula "66") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "66") (term "1,1"))
                                             (rule "mul_literals" (formula "66") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "66") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "38"))
                                             (rule "polySimp_mulComm0" (formula "38") (term "1"))
                                             (rule "polySimp_rightDist" (formula "38") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,1"))
                                             (rule "mul_literals" (formula "38") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "38") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "86") (term "0,1,0"))
                                             (rule "mul_literals" (formula "86") (term "1,0,1,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "48"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                             (rule "polySimp_elimOne" (formula "48") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0"))
                                             (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "40"))
                                             (rule "leq_literals" (formula "23") (term "0"))
                                              (builtin "One Step Simplification" (formula "23"))
                                             (rule "true_left" (formula "23"))
                                             (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "41"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "true_left" (formula "43"))
                                             (rule "inEqSimp_subsumption0" (formula "50") (ifseqformula "52"))
                                             (rule "leq_literals" (formula "50") (term "0"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "true_left" (formula "50"))
                                             (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "4"))
                                             (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                                             (rule "add_literals" (formula "8") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "8") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "8") (term "0,0"))
                                             (rule "qeq_literals" (formula "8") (term "0"))
                                              (builtin "One Step Simplification" (formula "8"))
                                             (rule "true_left" (formula "8"))
                                             (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "33"))
                                             (rule "leq_literals" (formula "35") (term "0"))
                                              (builtin "One Step Simplification" (formula "35"))
                                             (rule "true_left" (formula "35"))
                                             (rule "inEqSimp_contradInEq1" (formula "3") (term "0,0,0") (ifseqformula "7"))
                                             (rule "qeq_literals" (formula "3") (term "0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "applyEqReverse" (formula "85") (term "0") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "86") (term "0") (ifseqformula "3"))
                                             (rule "applyEqReverse" (formula "56") (term "2,0") (ifseqformula "3"))
                                             (rule "hideAuxiliaryEq" (formula "3"))
                                             (rule "inEqSimp_subsumption1" (formula "113") (term "1") (ifseqformula "59"))
                                             (rule "leq_literals" (formula "113") (term "0,1"))
                                              (builtin "One Step Simplification" (formula "113"))
                                             (rule "inEqSimp_leqRight" (formula "113"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "48") (ifseqformula "47"))
                                             (rule "leq_literals" (formula "48") (term "0"))
                                              (builtin "One Step Simplification" (formula "48"))
                                             (rule "true_left" (formula "48"))
                                             (rule "inEqSimp_subsumption1" (formula "59") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "59") (term "0"))
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "true_left" (formula "59"))
                                             (rule "newSym_eq" (formula "46") (inst "newSymDef=add(mul(begin, Z(0(#))), mul(i, Z(0(#))))") (inst "l=l_0"))
                                             (rule "times_zero_1" (formula "46") (term "1,1,1"))
                                             (rule "times_zero_1" (formula "46") (term "0,1,1"))
                                             (rule "add_zero_left" (formula "46") (term "1,1"))
                                             (rule "add_zero_right" (formula "46") (term "1"))
                                             (rule "applyEq" (formula "47") (term "0,0") (ifseqformula "46"))
                                             (rule "polySimp_homoEq" (formula "47"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "47") (term "0"))
                                             (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                             (rule "polySimp_sepPosMonomial" (formula "47"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "47") (term "1,1"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "0,1"))
                                             (rule "applyEq" (formula "74") (term "1,2,1,1,0,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "74") (term "2,1,1,0,0"))
                                             (rule "applyEq" (formula "72") (term "1,2,1,0,0,1,0,0,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "72") (term "2,1,0,0,1,0,0,0"))
                                             (rule "applyEq" (formula "56") (term "1,2,1,0,0,1,0,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "56") (term "2,1,0,0,1,0,0"))
                                             (rule "applyEq" (formula "76") (term "1,2,1,1,0,1,0,1,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "76") (term "2,1,1,0,1,0,1,0"))
                                             (rule "applyEq" (formula "70") (term "0") (ifseqformula "47"))
                                             (rule "inEqSimp_homoInEq1" (formula "70"))
                                             (rule "polySimp_mulComm0" (formula "70") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "70") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "70") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "70") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "70") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "70") (term "0"))
                                             (rule "polySimp_addComm0" (formula "70") (term "0,0"))
                                             (rule "applyEq" (formula "72") (term "1,2,1,1,0,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "72") (term "2,1,1,0,0"))
                                             (rule "applyEq" (formula "12") (term "1,2,1,0,0,1,0,0,1,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "2,1,0,0,1,0,0,1,0"))
                                             (rule "applyEq" (formula "43") (term "1") (ifseqformula "47"))
                                             (rule "applyEq" (formula "73") (term "1,2,1,0,0,1,0,0,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "73") (term "2,1,0,0,1,0,0,0"))
                                             (rule "applyEq" (formula "79") (term "1,2,1,0,0,1,0,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "79") (term "2,1,0,0,1,0,0"))
                                             (rule "applyEq" (formula "46") (term "1,0,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "46") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "46") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "46") (term "0,0"))
                                             (rule "add_literals" (formula "46") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "46") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "46") (term "0,0"))
                                             (rule "applyEq" (formula "63") (term "1,2,1,0,0,1,0,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "63") (term "2,1,0,0,1,0,0"))
                                             (rule "applyEq" (formula "79") (term "1,2,1,1,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "79") (term "2,1,1,0"))
                                             (rule "applyEq" (formula "25") (term "0") (ifseqformula "47"))
                                             (rule "inEqSimp_homoInEq1" (formula "25"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "25") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                             (rule "applyEq" (formula "86") (term "1,2,1,0,0,1,0,0,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "86") (term "2,1,0,0,1,0,0,0"))
                                             (rule "applyEq" (formula "62") (term "1,2,1,0,0,1,0,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "62") (term "2,1,0,0,1,0,0"))
                                             (rule "applyEq" (formula "86") (term "1,2,1,1,0,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "86") (term "2,1,1,0,0"))
                                             (rule "applyEq" (formula "78") (term "1,2,1,1,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "78") (term "2,1,1,0"))
                                             (rule "applyEq" (formula "75") (term "1,2,1,0,0,1,0,0,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "75") (term "2,1,0,0,1,0,0,0"))
                                             (rule "applyEq" (formula "73") (term "1,2,1,1,0,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "73") (term "2,1,1,0,0"))
                                             (rule "applyEq" (formula "62") (term "1,2,1,1,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "62") (term "2,1,1,0"))
                                             (rule "applyEq" (formula "77") (term "1,2,1,0,0,1,0,0,0,1,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "77") (term "2,1,0,0,1,0,0,0,1,0"))
                                             (rule "applyEq" (formula "77") (term "1,2,1,1,0,0,1,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "77") (term "2,1,1,0,0,1,0"))
                                             (rule "applyEq" (formula "63") (term "1,2,1,1,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "63") (term "2,1,1,0"))
                                             (rule "applyEq" (formula "13") (term "1,2,1,0,0,1,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "2,1,0,0,1,0"))
                                             (rule "applyEq" (formula "78") (term "1,2,1,0,0,1,0,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "78") (term "2,1,0,0,1,0,0"))
                                             (rule "applyEq" (formula "9") (term "0") (ifseqformula "47"))
                                             (rule "inEqSimp_homoInEq1" (formula "9"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "9") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "9") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "9") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "9") (term "0"))
                                             (rule "polySimp_addComm0" (formula "9") (term "0,0"))
                                             (rule "applyEq" (formula "44") (term "0,1,1") (ifseqformula "47"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "44") (term "1,1"))
                                             (rule "polySimp_mulAssoc" (formula "44") (term "0,1,1"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "0,0,1,1"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "0,1,1"))
                                             (rule "polySimp_addComm0" (formula "44") (term "1"))
                                             (rule "applyEq" (formula "51") (term "5,0") (ifseqformula "47"))
                                             (rule "applyEq" (formula "24") (term "0") (ifseqformula "47"))
                                             (rule "inEqSimp_homoInEq0" (formula "24"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "24") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "24") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "24") (term "0"))
                                             (rule "applyEq" (formula "76") (term "1,2,1,0,0,1,0,0,1,0,1,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "76") (term "2,1,0,0,1,0,0,1,0,1,0"))
                                             (rule "applyEq" (formula "14") (term "1,2,1,0,0,1,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "2,1,0,0,1,0"))
                                             (rule "applyEq" (formula "75") (term "1,2,1,1,0,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "75") (term "2,1,1,0,0"))
                                             (rule "applyEq" (formula "74") (term "1,2,1,0,0,1,0,0,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "74") (term "2,1,0,0,1,0,0,0"))
                                             (rule "applyEq" (formula "11") (term "1,2,1,0,0,1,0,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "11") (term "2,1,0,0,1,0,0"))
                                             (rule "applyEq" (formula "84") (term "0,0,2,0") (ifseqformula "47"))
                                             (rule "applyEq" (formula "85") (term "0,0,2,0") (ifseqformula "47"))
                                             (rule "applyEq" (formula "77") (term "0,4,0,1,0") (ifseqformula "47"))
                                             (rule "applyEq" (formula "50") (term "0,0,2,2,0,1,0") (ifseqformula "47"))
                                             (rule "applyEq" (formula "12") (term "0,4,0,1,0") (ifseqformula "47"))
                                             (rule "applyEq" (formula "76") (term "1,2,1,1,0,0,0,0,1,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "76") (term "2,1,1,0,0,0,0,1,0"))
                                             (rule "applyEq" (formula "76") (term "1,2,1,0,0,1,0,0,0,0,0,1,0") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "76") (term "2,1,0,0,1,0,0,0,0,0,1,0"))
                                             (rule "applyEq" (formula "11") (term "0,5,0") (ifseqformula "47"))
                                             (rule "applyEq" (formula "77") (term "4,1,1,0") (ifseqformula "47"))
                                             (rule "applyEq" (formula "56") (term "0,0,2,2,0") (ifseqformula "47"))
                                             (rule "applyEq" (formula "12") (term "4,1,1,0") (ifseqformula "47"))
                                             (rule "applyEq" (formula "75") (term "1,0,1") (ifseqformula "47"))
                                             (rule "polySimp_addAssoc" (formula "75") (term "0,1"))
                                             (rule "polySimp_addComm0" (formula "75") (term "0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "70"))
                                             (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                                             (rule "polySimp_elimOne" (formula "70") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "25"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                             (rule "polySimp_elimOne" (formula "25") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                             (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                             (rule "polySimp_elimOne" (formula "9") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "22"))
                                             (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "42") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                             (rule "polySimp_elimOne" (formula "42") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "8"))
                                             (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "42") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                             (rule "polySimp_elimOne" (formula "42") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "70"))
                                             (rule "mul_literals" (formula "23") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                             (rule "mul_literals" (formula "23") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "8"))
                                             (rule "mul_literals" (formula "23") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                             (rule "mul_literals" (formula "23") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "41"))
                                             (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "42") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                             (rule "polySimp_elimOne" (formula "42") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "27") (ifseqformula "42"))
                                             (rule "leq_literals" (formula "27") (term "0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "true_left" (formula "27"))
                                             (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "71"))
                                             (rule "polySimp_mulComm0" (formula "44") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "44") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "44"))
                                             (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                             (rule "polySimp_elimOne" (formula "44") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "63"))
                                             (rule "mul_literals" (formula "1") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "84") (term "0,1,0") (ifseqformula "1"))
                                             (rule "leq_literals" (formula "84") (term "0,0,1,0"))
                                              (builtin "One Step Simplification" (formula "84"))
                                             (rule "true_left" (formula "84"))
                                             (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "26"))
                                             (rule "mul_literals" (formula "38") (term "0,0"))
                                             (rule "add_zero_left" (formula "38") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "38") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(7(2(7(7(1(2(4(3(1(#))))))))))"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0,1,0"))
                                             (rule "neg_literal" (formula "38") (term "0,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0"))
                                             (rule "leq_literals" (formula "38") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "38") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "38") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0"))
                                             (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "38") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "38") (term "0,0"))
                                             (rule "qeq_literals" (formula "38") (term "0"))
                                              (builtin "One Step Simplification" (formula "38"))
                                             (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "48"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                             (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "47") (term "0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0"))
                                             (rule "add_zero_right" (formula "47") (term "0"))
                                             (rule "elimGcdGeq_antec" (formula "47") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(0(#))"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "47") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "47"))
                                             (rule "add_zero_right" (formula "47") (term "0,0,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0"))
                                             (rule "leq_literals" (formula "47") (term "0"))
                                              (builtin "One Step Simplification" (formula "47"))
                                             (rule "inEqSimp_exactShadow3" (formula "5") (ifseqformula "50"))
                                             (rule "polySimp_rightDist" (formula "5") (term "0,0"))
                                             (rule "mul_literals" (formula "5") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "5") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "5") (term "0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "5"))
                                             (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                             (rule "polySimp_elimOne" (formula "5") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "56"))
                                             (rule "polySimp_rightDist" (formula "6") (term "0,0"))
                                             (rule "mul_literals" (formula "6") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "6") (term "0"))
                                             (rule "add_literals" (formula "6") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                                             (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                                             (rule "polySimp_elimOne" (formula "6") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "51"))
                                             (rule "mul_literals" (formula "27") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1"))
                                             (rule "mul_literals" (formula "27") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "56") (ifseqformula "52"))
                                             (rule "times_zero_1" (formula "56") (term "0,0"))
                                             (rule "add_zero_left" (formula "56") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "56"))
                                             (rule "polySimp_mulComm0" (formula "56") (term "1"))
                                             (rule "polySimp_rightDist" (formula "56") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "56") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "56") (term "1,1"))
                                             (rule "polySimp_mulComm0" (formula "56") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "56") (term "0,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "48"))
                                             (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                                             (rule "mul_literals" (formula "29") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1"))
                                             (rule "mul_literals" (formula "29") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "48"))
                                             (rule "times_zero_1" (formula "42") (term "0,0"))
                                             (rule "add_zero_left" (formula "42") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "42"))
                                             (rule "leq_literals" (formula "26") (term "0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "inEqSimp_exactShadow3" (formula "80") (ifseqformula "48"))
                                             (rule "polySimp_rightDist" (formula "80") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "80") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "80") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "80") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "80"))
                                             (rule "polySimp_mulLiterals" (formula "80") (term "0"))
                                             (rule "polySimp_elimOne" (formula "80") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "24"))
                                             (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                             (rule "mul_literals" (formula "29") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "29") (term "0"))
                                             (rule "add_literals" (formula "29") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                             (rule "mul_literals" (formula "29") (term "1"))
                                             (rule "inEqSimp_subsumption6" (formula "29") (ifseqformula "51"))
                                             (rule "greater_literals" (formula "29") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "29"))
                                             (rule "times_zero_1" (formula "29") (term "1,0"))
                                             (rule "leq_literals" (formula "29") (term "0"))
                                              (builtin "One Step Simplification" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "24"))
                                             (rule "polySimp_rightDist" (formula "12") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0"))
                                             (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "12"))
                                             (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                             (rule "polySimp_elimOne" (formula "12") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "28"))
                                             (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "13") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "13") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                             (rule "polySimp_elimOne" (formula "13") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "51"))
                                             (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                             (rule "polySimp_mulAssoc" (formula "14") (term "0,1"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "14") (term "0,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "49"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "46") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "46"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                                             (rule "polySimp_elimOne" (formula "46") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "27") (ifseqformula "46"))
                                             (rule "leq_literals" (formula "27") (term "0"))
                                              (builtin "One Step Simplification" (formula "27"))
                                             (rule "true_left" (formula "27"))
                                             (rule "inEqSimp_exactShadow3" (formula "84") (ifseqformula "29"))
                                             (rule "polySimp_rightDist" (formula "84") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "84") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "84") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "84") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "84") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "84") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "84") (term "0,0"))
                                             (rule "add_literals" (formula "84") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "84") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "84") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "84"))
                                             (rule "polySimp_mulLiterals" (formula "84") (term "0"))
                                             (rule "polySimp_elimOne" (formula "84") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "84") (ifseqformula "52"))
                                             (rule "polySimp_rightDist" (formula "84") (term "0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "84") (term "0"))
                                             (rule "add_literals" (formula "84") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "84") (term "1,0"))
                                             (rule "add_zero_right" (formula "84") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "84") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "84") (term "0"))
                                             (rule "inEqSimp_subsumption6" (formula "84") (ifseqformula "53"))
                                             (rule "greater_literals" (formula "84") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "84"))
                                             (rule "times_zero_1" (formula "84") (term "1,0"))
                                             (rule "leq_literals" (formula "84") (term "0"))
                                              (builtin "One Step Simplification" (formula "84"))
                                             (rule "true_left" (formula "84"))
                                             (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "51"))
                                             (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "15") (term "0"))
                                             (rule "add_literals" (formula "15") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "15") (term "1,0"))
                                             (rule "add_zero_right" (formula "15") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "15") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                             (rule "inEqSimp_subsumption6" (formula "15") (ifseqformula "54"))
                                             (rule "greater_literals" (formula "15") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "times_zero_1" (formula "15") (term "1,0"))
                                             (rule "leq_literals" (formula "15") (term "0"))
                                              (builtin "One Step Simplification" (formula "15"))
                                             (rule "true_left" (formula "15"))
                                             (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "52"))
                                             (rule "times_zero_1" (formula "44") (term "0,0"))
                                             (rule "add_zero_left" (formula "44") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "80") (ifseqformula "44"))
                                             (rule "leq_literals" (formula "80") (term "0"))
                                              (builtin "One Step Simplification" (formula "80"))
                                             (rule "true_left" (formula "80"))
                                             (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "52"))
                                             (rule "polySimp_rightDist" (formula "31") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0"))
                                             (rule "mul_literals" (formula "31") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                             (rule "polySimp_mulComm0" (formula "31") (term "1"))
                                             (rule "polySimp_rightDist" (formula "31") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                                             (rule "mul_literals" (formula "31") (term "0,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "5"))
                                             (rule "times_zero_1" (formula "10") (term "0,0"))
                                             (rule "add_zero_left" (formula "10") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "10"))
                                             (rule "polySimp_mulComm0" (formula "10") (term "1"))
                                             (rule "polySimp_rightDist" (formula "10") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "10") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "10") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "10") (term "1,0,1"))
                                             (rule "mul_literals" (formula "10") (term "0,0,1"))
                                             (rule "inEqSimp_subsumption1" (formula "63") (ifseqformula "10"))
                                             (rule "inEqSimp_homoInEq0" (formula "63") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "63") (term "1,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "63") (term "0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "63") (term "0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "63") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "63") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "63") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "63") (term "0,0"))
                                             (rule "add_literals" (formula "63") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "63") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "63") (term "0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "63") (term "0,0"))
                                             (rule "add_literals" (formula "63") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "63") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "63") (term "0,0"))
                                             (rule "qeq_literals" (formula "63") (term "0"))
                                              (builtin "One Step Simplification" (formula "63"))
                                             (rule "true_left" (formula "63"))
                                             (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "48"))
                                             (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "16") (term "0"))
                                             (rule "polySimp_addComm0" (formula "16") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                             (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                             (rule "polySimp_elimOne" (formula "16") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "16"))
                                             (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "13") (term "0,0"))
                                             (rule "qeq_literals" (formula "13") (term "0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "inEqSimp_exactShadow3" (formula "85") (ifseqformula "48"))
                                             (rule "polySimp_rightDist" (formula "85") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "85") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "85") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "85") (term "0"))
                                             (rule "polySimp_addComm0" (formula "85") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "85"))
                                             (rule "polySimp_mulLiterals" (formula "85") (term "0"))
                                             (rule "polySimp_elimOne" (formula "85") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "42"))
                                             (rule "mul_literals" (formula "1") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "42"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "Null reference (_buffers = null)"
                                              (builtin "One Step Simplification" (formula "119") (ifInst ""  (formula "115")))
                                             (rule "closeTrue" (formula "119"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                        )
                     )
                  )
               )
               (branch "Null Reference (x_arr = null)"
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "Index Out of Bounds (x_arr != null, but x_5 Out of Bounds!)"
                   (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")))
                   (builtin "One Step Simplification" (formula "82"))
                  (rule "orLeft" (formula "1") (userinteraction))
                  (branch "values.length <= i + j_0"
                     (rule "false_right" (formula "82"))
                     (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "inEqSimp_homoInEq0" (formula "46"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "46") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "46") (term "0"))
                     (rule "inEqSimp_homoInEq1" (formula "36"))
                     (rule "polySimp_addComm1" (formula "36") (term "0"))
                     (rule "jmod_axiom" (formula "48") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "48") (term "1,0"))
                     (rule "polySimp_sepNegMonomial" (formula "48"))
                     (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "46"))
                     (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                     (rule "polySimp_elimOne" (formula "46") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "36"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1"))
                     (rule "polySimp_rightDist" (formula "36") (term "1"))
                     (rule "mul_literals" (formula "36") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                     (rule "inEqSimp_subsumption1" (formula "51") (ifseqformula "49"))
                     (rule "leq_literals" (formula "51") (term "0"))
                      (builtin "One Step Simplification" (formula "51"))
                     (rule "true_left" (formula "51"))
                     (rule "inEqSimp_subsumption1" (formula "42") (ifseqformula "40"))
                     (rule "leq_literals" (formula "42") (term "0"))
                      (builtin "One Step Simplification" (formula "42"))
                     (rule "true_left" (formula "42"))
                     (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "33"))
                     (rule "leq_literals" (formula "35") (term "0"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "true_left" (formula "35"))
                     (rule "inEqSimp_subsumption0" (formula "48") (ifseqformula "49"))
                     (rule "leq_literals" (formula "48") (term "0"))
                      (builtin "One Step Simplification" (formula "48"))
                     (rule "true_left" (formula "48"))
                     (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                     (rule "add_literals" (formula "6") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0"))
                     (rule "add_literals" (formula "6") (term "0,0"))
                     (rule "qeq_literals" (formula "6") (term "0"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "36"))
                     (rule "leq_literals" (formula "20") (term "0"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "true_left" (formula "20"))
                     (rule "newSym_eq" (formula "44") (inst "newSymDef=add(mul(begin, Z(0(#))), mul(i, Z(0(#))))") (inst "l=l_0"))
                     (rule "times_zero_1" (formula "44") (term "1,1,1"))
                     (rule "times_zero_1" (formula "44") (term "0,1,1"))
                     (rule "add_zero_left" (formula "44") (term "1,1"))
                     (rule "add_zero_right" (formula "44") (term "1"))
                     (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "44"))
                     (rule "polySimp_homoEq" (formula "45"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "45") (term "0"))
                     (rule "polySimp_addComm0" (formula "45") (term "0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "45"))
                     (rule "polySimp_mulComm0" (formula "45") (term "1"))
                     (rule "polySimp_rightDist" (formula "45") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "45") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "45") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "0,1"))
                     (rule "applyEq" (formula "49") (term "5,0") (ifseqformula "45"))
                     (rule "applyEq" (formula "9") (term "1,2,1,0,0,1,0,0") (ifseqformula "45"))
                     (rule "polySimp_addAssoc" (formula "9") (term "2,1,0,0,1,0,0"))
                     (rule "applyEq" (formula "11") (term "1,2,1,0,0,1,0") (ifseqformula "45"))
                     (rule "polySimp_addAssoc" (formula "11") (term "2,1,0,0,1,0"))
                     (rule "applyEq" (formula "22") (term "0") (ifseqformula "45"))
                     (rule "inEqSimp_homoInEq0" (formula "22"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                     (rule "polySimp_mulAssoc" (formula "22") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0"))
                     (rule "applyEq" (formula "42") (term "0,1,1") (ifseqformula "45"))
                     (rule "polySimp_mulComm0" (formula "42") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "42") (term "1,1"))
                     (rule "polySimp_mulAssoc" (formula "42") (term "0,1,1"))
                     (rule "polySimp_mulComm0" (formula "42") (term "0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "0,1,1"))
                     (rule "polySimp_addComm0" (formula "42") (term "1"))
                     (rule "applyEq" (formula "12") (term "1,2,1,0,0,1,0") (ifseqformula "45"))
                     (rule "polySimp_addAssoc" (formula "12") (term "2,1,0,0,1,0"))
                     (rule "applyEq" (formula "7") (term "0") (ifseqformula "45"))
                     (rule "inEqSimp_homoInEq1" (formula "7"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                     (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0"))
                     (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                     (rule "applyEq" (formula "10") (term "1,2,1,0,0,1,0,0,1,0") (ifseqformula "45"))
                     (rule "polySimp_addAssoc" (formula "10") (term "2,1,0,0,1,0,0,1,0"))
                     (rule "applyEq" (formula "41") (term "1") (ifseqformula "45"))
                     (rule "applyEq" (formula "44") (term "1,0,0") (ifseqformula "45"))
                     (rule "polySimp_addAssoc" (formula "44") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "44") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "44") (term "0,0"))
                     (rule "add_literals" (formula "44") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "44") (term "1,0,0"))
                     (rule "add_zero_right" (formula "44") (term "0,0"))
                     (rule "applyEq" (formula "23") (term "0") (ifseqformula "45"))
                     (rule "inEqSimp_homoInEq1" (formula "23"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                     (rule "polySimp_mulAssoc" (formula "23") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0"))
                     (rule "applyEq" (formula "10") (term "4,1,1,0") (ifseqformula "45"))
                     (rule "applyEq" (formula "1") (term "0,1") (ifseqformula "45"))
                     (rule "applyEq" (formula "9") (term "0,5,0") (ifseqformula "45"))
                     (rule "applyEq" (formula "10") (term "0,4,0,1,0") (ifseqformula "45"))
                     (rule "applyEq" (formula "48") (term "0,0,2,2,0,1,0") (ifseqformula "45"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                     (rule "polySimp_elimOne" (formula "22") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                     (rule "polySimp_elimOne" (formula "7") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                     (rule "polySimp_elimOne" (formula "23") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "1"))
                     (rule "polySimp_mulComm0" (formula "39") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "39") (term "0"))
                     (rule "polySimp_addComm0" (formula "39") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                     (rule "polySimp_mulComm0" (formula "39") (term "1"))
                     (rule "polySimp_rightDist" (formula "39") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "39") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "39") (term "0,1"))
                     (rule "polySimp_mulAssoc" (formula "39") (term "0,0,1"))
                     (rule "polySimp_mulComm0" (formula "39") (term "0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "0,0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "38"))
                     (rule "polySimp_mulComm0" (formula "40") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "40") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                     (rule "polySimp_elimOne" (formula "40") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "24") (ifseqformula "40"))
                     (rule "leq_literals" (formula "24") (term "0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "48"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                     (rule "mul_literals" (formula "2") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "add_literals" (formula "2") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "20"))
                     (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "8") (term "0"))
                     (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                     (rule "polySimp_elimOne" (formula "8") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "24"))
                     (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "9") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0"))
                     (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "9") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "9") (term "0,0"))
                     (rule "add_literals" (formula "9") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "9") (term "1,0,0"))
                     (rule "add_zero_right" (formula "9") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "9"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                     (rule "polySimp_elimOne" (formula "9") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "7"))
                     (rule "mul_literals" (formula "24") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                     (rule "mul_literals" (formula "24") (term "1"))
                     (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "47"))
                     (rule "mul_literals" (formula "51") (term "0,0"))
                     (rule "add_zero_left" (formula "51") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "51"))
                     (rule "polySimp_mulComm0" (formula "51") (term "1"))
                     (rule "polySimp_rightDist" (formula "51") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "51") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "51") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "51") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "51") (term "0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "1"))
                     (rule "times_zero_1" (formula "40") (term "0,0"))
                     (rule "add_zero_left" (formula "40") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                     (rule "polySimp_mulComm0" (formula "40") (term "1"))
                     (rule "polySimp_rightDist" (formula "40") (term "1"))
                     (rule "polySimp_mulAssoc" (formula "40") (term "0,1"))
                     (rule "polySimp_mulComm0" (formula "40") (term "0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "26"))
                     (rule "times_zero_1" (formula "38") (term "0,0"))
                     (rule "add_zero_left" (formula "38") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "38"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "38") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(7(2(7(7(1(2(4(3(1(#))))))))))"))
                     (rule "leq_literals" (formula "38") (term "0,0"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0,0,0"))
                     (rule "neg_literal" (formula "38") (term "0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0"))
                     (rule "mul_literals" (formula "38") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "38") (term "0,0,0,0"))
                     (rule "add_literals" (formula "38") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0"))
                     (rule "add_literals" (formula "38") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "38") (term "1,0,0"))
                     (rule "add_literals" (formula "38") (term "0,0"))
                     (rule "qeq_literals" (formula "38") (term "0"))
                      (builtin "One Step Simplification" (formula "38"))
                     (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "7"))
                     (rule "polySimp_mulComm0" (formula "47") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "47") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                     (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                     (rule "polySimp_elimOne" (formula "47") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "23"))
                     (rule "polySimp_mulComm0" (formula "48") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "48") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "48"))
                     (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                     (rule "polySimp_elimOne" (formula "48") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "49"))
                     (rule "mul_literals" (formula "25") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "25") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1"))
                     (rule "polySimp_rightDist" (formula "25") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                     (rule "mul_literals" (formula "25") (term "0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "49"))
                     (rule "polySimp_mulComm0" (formula "48") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "48") (term "0"))
                     (rule "polySimp_addComm0" (formula "48") (term "0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "48") (term "0"))
                     (rule "add_literals" (formula "48") (term "1,1,0"))
                     (rule "times_zero_1" (formula "48") (term "1,0"))
                     (rule "add_zero_right" (formula "48") (term "0"))
                     (rule "elimGcdGeq_antec" (formula "48") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(0(#))"))
                     (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "48") (term "0,0"))
                      (builtin "One Step Simplification" (formula "48"))
                     (rule "times_zero_1" (formula "48") (term "1,0,0,0,0,0"))
                     (rule "add_literals" (formula "48") (term "0,0,0,0,0"))
                     (rule "add_zero_right" (formula "48") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "48") (term "0,0"))
                     (rule "add_literals" (formula "48") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "48") (term "1,0,0"))
                     (rule "add_literals" (formula "48") (term "0,0"))
                     (rule "leq_literals" (formula "48") (term "0"))
                      (builtin "One Step Simplification" (formula "48"))
                     (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "51"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "45"))
                     (rule "andLeft" (formula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,1,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "1,1,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0"))
                     (rule "add_zero_right" (formula "3") (term "0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "1,1,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0"))
                     (rule "add_zero_right" (formula "3") (term "0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0"))
                     (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "1,1,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0"))
                     (rule "add_literals" (formula "3") (term "0"))
                     (rule "leq_literals" (formula "3"))
                     (rule "closeFalse" (formula "3"))
                  )
                  (branch "i + j_0 < 0"
                     (rule "false_right" (formula "82"))
                     (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "inEqSimp_homoInEq0" (formula "46"))
                     (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "46") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "46") (term "0"))
                     (rule "inEqSimp_homoInEq1" (formula "36"))
                     (rule "polySimp_addComm1" (formula "36") (term "0"))
                     (rule "jmod_axiom" (formula "48") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "48") (term "1,0"))
                     (rule "polySimp_sepNegMonomial" (formula "48"))
                     (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "46"))
                     (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                     (rule "polySimp_elimOne" (formula "46") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "36"))
                     (rule "polySimp_mulComm0" (formula "36") (term "1"))
                     (rule "polySimp_rightDist" (formula "36") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                     (rule "mul_literals" (formula "36") (term "0,1"))
                     (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                     (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "33"))
                     (rule "leq_literals" (formula "35") (term "0"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "true_left" (formula "35"))
                     (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "37"))
                     (rule "leq_literals" (formula "21") (term "0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "true_left" (formula "21"))
                     (rule "inEqSimp_subsumption0" (formula "48") (ifseqformula "50"))
                     (rule "leq_literals" (formula "48") (term "0"))
                      (builtin "One Step Simplification" (formula "48"))
                     (rule "true_left" (formula "48"))
                     (rule "inEqSimp_subsumption1" (formula "48") (ifseqformula "47"))
                     (rule "leq_literals" (formula "48") (term "0"))
                      (builtin "One Step Simplification" (formula "48"))
                     (rule "true_left" (formula "48"))
                     (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
                     (rule "add_literals" (formula "6") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "6") (term "1,0,0"))
                     (rule "add_literals" (formula "6") (term "0,0"))
                     (rule "qeq_literals" (formula "6") (term "0"))
                      (builtin "One Step Simplification" (formula "6"))
                     (rule "true_left" (formula "6"))
                     (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "37"))
                     (rule "leq_literals" (formula "39") (term "0"))
                      (builtin "One Step Simplification" (formula "39"))
                     (rule "true_left" (formula "39"))
                     (rule "newSym_eq" (formula "44") (inst "newSymDef=add(mul(begin, Z(0(#))), mul(i, Z(0(#))))") (inst "l=l_0"))
                     (rule "times_zero_1" (formula "44") (term "1,1,1"))
                     (rule "times_zero_1" (formula "44") (term "0,1,1"))
                     (rule "add_zero_left" (formula "44") (term "1,1"))
                     (rule "add_zero_right" (formula "44") (term "1"))
                     (rule "applyEq" (formula "45") (term "0,0") (ifseqformula "44"))
                     (rule "polySimp_homoEq" (formula "45"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "1,0"))
                     (rule "polySimp_addComm1" (formula "45") (term "0"))
                     (rule "polySimp_addComm0" (formula "45") (term "0,0"))
                     (rule "polySimp_sepPosMonomial" (formula "45"))
                     (rule "polySimp_mulComm0" (formula "45") (term "1"))
                     (rule "polySimp_rightDist" (formula "45") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "45") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "45") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "45") (term "0,1"))
                     (rule "applyEq" (formula "23") (term "0") (ifseqformula "45"))
                     (rule "inEqSimp_homoInEq1" (formula "23"))
                     (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                     (rule "polySimp_mulAssoc" (formula "23") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "23") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0"))
                     (rule "applyEq" (formula "1") (term "0,1,1") (ifseqformula "45"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                     (rule "polySimp_mulAssoc" (formula "1") (term "0,1,1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,1,1"))
                     (rule "polySimp_addAssoc" (formula "1") (term "1"))
                     (rule "applyEq" (formula "49") (term "5,0") (ifseqformula "45"))
                     (rule "applyEq" (formula "42") (term "0,1,1") (ifseqformula "45"))
                     (rule "polySimp_mulComm0" (formula "42") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "42") (term "1,1"))
                     (rule "polySimp_mulAssoc" (formula "42") (term "0,1,1"))
                     (rule "polySimp_mulComm0" (formula "42") (term "0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "42") (term "0,1,1"))
                     (rule "polySimp_addComm0" (formula "42") (term "1"))
                     (rule "applyEq" (formula "7") (term "0") (ifseqformula "45"))
                     (rule "inEqSimp_homoInEq1" (formula "7"))
                     (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                     (rule "polySimp_mulAssoc" (formula "7") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0"))
                     (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                     (rule "applyEq" (formula "11") (term "1,2,1,0,0,1,0") (ifseqformula "45"))
                     (rule "polySimp_addAssoc" (formula "11") (term "2,1,0,0,1,0"))
                     (rule "applyEq" (formula "12") (term "1,2,1,0,0,1,0") (ifseqformula "45"))
                     (rule "polySimp_addAssoc" (formula "12") (term "2,1,0,0,1,0"))
                     (rule "applyEq" (formula "41") (term "1") (ifseqformula "45"))
                     (rule "applyEq" (formula "9") (term "1,2,1,0,0,1,0,0") (ifseqformula "45"))
                     (rule "polySimp_addAssoc" (formula "9") (term "2,1,0,0,1,0,0"))
                     (rule "applyEq" (formula "22") (term "0") (ifseqformula "45"))
                     (rule "inEqSimp_homoInEq0" (formula "22"))
                     (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                     (rule "polySimp_mulAssoc" (formula "22") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "22") (term "0"))
                     (rule "applyEq" (formula "44") (term "1,0,0") (ifseqformula "45"))
                     (rule "polySimp_addAssoc" (formula "44") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "44") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "44") (term "0,0"))
                     (rule "add_literals" (formula "44") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "44") (term "1,0,0"))
                     (rule "add_zero_right" (formula "44") (term "0,0"))
                     (rule "applyEq" (formula "10") (term "1,2,1,0,0,1,0,0,1,0") (ifseqformula "45"))
                     (rule "polySimp_addAssoc" (formula "10") (term "2,1,0,0,1,0,0,1,0"))
                     (rule "applyEq" (formula "48") (term "0,0,2,2,0,1,0") (ifseqformula "45"))
                     (rule "applyEq" (formula "10") (term "4,1,1,0") (ifseqformula "45"))
                     (rule "applyEq" (formula "9") (term "0,5,0") (ifseqformula "45"))
                     (rule "applyEq" (formula "10") (term "0,4,0,1,0") (ifseqformula "45"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "23"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                     (rule "polySimp_elimOne" (formula "23") (term "0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                     (rule "polySimp_elimOne" (formula "7") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                     (rule "polySimp_elimOne" (formula "22") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "24"))
                     (rule "polySimp_mulComm0" (formula "36") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "36") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "36"))
                     (rule "polySimp_mulLiterals" (formula "36") (term "0"))
                     (rule "polySimp_elimOne" (formula "36") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "22"))
                     (rule "times_zero_1" (formula "35") (term "0,0"))
                     (rule "add_zero_left" (formula "35") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "35"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "35") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(7(2(7(7(1(2(4(3(1(#))))))))))"))
                     (rule "neg_literal" (formula "35") (term "0,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "35") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "35") (term "0,0"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "mul_literals" (formula "35") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "35") (term "0,0,0,0"))
                     (rule "add_literals" (formula "35") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "35") (term "0,0"))
                     (rule "add_literals" (formula "35") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "35") (term "1,0,0"))
                     (rule "add_literals" (formula "35") (term "0,0"))
                     (rule "qeq_literals" (formula "35") (term "0"))
                      (builtin "One Step Simplification" (formula "35"))
                     (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "39"))
                     (rule "polySimp_mulComm0" (formula "40") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "40") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                     (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                     (rule "polySimp_elimOne" (formula "40") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "24") (ifseqformula "40"))
                     (rule "leq_literals" (formula "24") (term "0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "19"))
                     (rule "polySimp_rightDist" (formula "23") (term "0,0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,0,0"))
                     (rule "mul_literals" (formula "23") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "23") (term "0"))
                     (rule "add_literals" (formula "23") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                     (rule "mul_literals" (formula "23") (term "1"))
                     (rule "elimGcdGeq_antec" (formula "23") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(neglit(5(5(4(5(3(4(8(6(2(#)))))))))))"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "23") (term "0,0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "23") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "23") (term "0,0,0,0"))
                     (rule "add_literals" (formula "23") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "23") (term "0,0"))
                     (rule "add_literals" (formula "23") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "23") (term "1,0,0"))
                     (rule "add_literals" (formula "23") (term "0,0"))
                     (rule "leq_literals" (formula "23") (term "0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "6"))
                     (rule "mul_literals" (formula "21") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                     (rule "mul_literals" (formula "21") (term "1"))
                     (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "20"))
                     (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "43") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                     (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                     (rule "polySimp_elimOne" (formula "43") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "23"))
                     (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "7") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "7") (term "0"))
                     (rule "polySimp_addAssoc" (formula "7") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "7") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "7") (term "0,0"))
                     (rule "add_literals" (formula "7") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "7") (term "1,0,0"))
                     (rule "add_zero_right" (formula "7") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                     (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                     (rule "polySimp_elimOne" (formula "7") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "20"))
                     (rule "polySimp_rightDist" (formula "8") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "8") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "8") (term "0"))
                     (rule "polySimp_addComm0" (formula "8") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "8"))
                     (rule "polySimp_mulLiterals" (formula "8") (term "0"))
                     (rule "polySimp_elimOne" (formula "8") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "47"))
                     (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                     (rule "mul_literals" (formula "2") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "46") (ifseqformula "7"))
                     (rule "polySimp_mulComm0" (formula "46") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "46") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "46"))
                     (rule "polySimp_mulLiterals" (formula "46") (term "0"))
                     (rule "polySimp_elimOne" (formula "46") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "47") (ifseqformula "48"))
                     (rule "polySimp_mulComm0" (formula "47") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "47") (term "0"))
                     (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                     (rule "polySimp_pullOutFactor2b" (formula "47") (term "0"))
                     (rule "add_literals" (formula "47") (term "1,1,0"))
                     (rule "times_zero_1" (formula "47") (term "1,0"))
                     (rule "add_zero_right" (formula "47") (term "0"))
                     (rule "elimGcdGeq_antec" (formula "47") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcdRightDiv=Z(0(#))"))
                     (rule "add_zero_right" (formula "47") (term "0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "47") (term "0,0"))
                      (builtin "One Step Simplification" (formula "47"))
                     (rule "times_zero_1" (formula "47") (term "1,0,0,0,0"))
                     (rule "add_literals" (formula "47") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0"))
                     (rule "add_literals" (formula "47") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "47") (term "1,0,0"))
                     (rule "add_literals" (formula "47") (term "0,0"))
                     (rule "leq_literals" (formula "47") (term "0"))
                      (builtin "One Step Simplification" (formula "47"))
                     (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "47"))
                     (rule "leq_literals" (formula "27") (term "0"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "true_left" (formula "27"))
                     (rule "inEqSimp_exactShadow3" (formula "53") (ifseqformula "49"))
                     (rule "times_zero_1" (formula "53") (term "0,0"))
                     (rule "add_zero_left" (formula "53") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "53"))
                     (rule "polySimp_mulComm0" (formula "53") (term "1"))
                     (rule "polySimp_rightDist" (formula "53") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "53") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "53") (term "1,1"))
                     (rule "polySimp_mulComm0" (formula "53") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "53") (term "0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "6") (ifseqformula "1"))
                     (rule "mul_literals" (formula "6") (term "0,0"))
                     (rule "add_zero_left" (formula "6") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "6"))
                     (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                     (rule "polySimp_elimOne" (formula "6") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "27") (ifseqformula "6"))
                     (rule "inEqSimp_homoInEq0" (formula "27") (term "0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                     (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                     (rule "add_literals" (formula "27") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "27") (term "0,0"))
                     (rule "add_literals" (formula "27") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "27") (term "1,0,0"))
                     (rule "add_literals" (formula "27") (term "0,0"))
                     (rule "qeq_literals" (formula "27") (term "0"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "true_left" (formula "27"))
                     (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "55"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                     (rule "mul_literals" (formula "3") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "49"))
                     (rule "mul_literals" (formula "27") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1"))
                     (rule "polySimp_rightDist" (formula "27") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                     (rule "mul_literals" (formula "27") (term "0,1"))
                     (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "44"))
                     (rule "polySimp_mulComm0" (formula "41") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "41") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "41"))
                     (rule "polySimp_mulLiterals" (formula "41") (term "0"))
                     (rule "polySimp_elimOne" (formula "41") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "24") (ifseqformula "41"))
                     (rule "leq_literals" (formula "24") (term "0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "7"))
                     (rule "times_zero_1" (formula "39") (term "0,0"))
                     (rule "add_zero_left" (formula "39") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                     (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                     (rule "inEqSimp_contradInEq5" (formula "39") (ifseqformula "48"))
                     (rule "greater_literals" (formula "39") (term "0,0"))
                      (builtin "One Step Simplification" (formula "39"))
                     (rule "times_zero_1" (formula "39") (term "1,0"))
                     (rule "qeq_literals" (formula "39") (term "0"))
                      (builtin "One Step Simplification" (formula "39"))
                     (rule "closeFalse" (formula "39"))
                  )
               )
            )
         )
         (branch "Null Reference (_indices = null)"
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "81")))
            (rule "closeFalse" (formula "1"))
         )
         (branch "Index Out of Bounds (_indices != null, but j Out of Bounds!)"
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "81")))
            (rule "false_right" (formula "82"))
            (rule "inEqSimp_ltToLeq" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "53") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
            (rule "add_literals" (formula "1") (term "0,0,1"))
            (rule "inEqSimp_homoInEq0" (formula "46"))
            (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
            (rule "polySimp_rightDist" (formula "46") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "46") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "46") (term "0"))
            (rule "inEqSimp_homoInEq1" (formula "36"))
            (rule "polySimp_addComm1" (formula "36") (term "0"))
            (rule "jmod_axiom" (formula "48") (term "0"))
            (rule "polySimp_mulLiterals" (formula "48") (term "1,0"))
            (rule "polySimp_sepNegMonomial" (formula "48"))
            (rule "polySimp_mulLiterals" (formula "48") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "53") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "53") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "53") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "53") (term "1,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "53") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "53") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "1,1"))
            (rule "inEqSimp_sepNegMonomial1" (formula "46"))
            (rule "polySimp_mulLiterals" (formula "46") (term "0"))
            (rule "polySimp_elimOne" (formula "46") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "36"))
            (rule "polySimp_mulComm0" (formula "36") (term "1"))
            (rule "polySimp_rightDist" (formula "36") (term "1"))
            (rule "mul_literals" (formula "36") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
            (rule "polySimp_elimOne" (formula "36") (term "1,1"))
            (rule "inEqSimp_subsumption1" (formula "51") (ifseqformula "49"))
            (rule "leq_literals" (formula "51") (term "0"))
             (builtin "One Step Simplification" (formula "51"))
            (rule "true_left" (formula "51"))
            (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "33"))
            (rule "leq_literals" (formula "35") (term "0"))
             (builtin "One Step Simplification" (formula "35"))
            (rule "true_left" (formula "35"))
            (rule "inEqSimp_subsumption0" (formula "49") (ifseqformula "50"))
            (rule "leq_literals" (formula "49") (term "0"))
             (builtin "One Step Simplification" (formula "49"))
            (rule "true_left" (formula "49"))
            (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "39"))
            (rule "leq_literals" (formula "41") (term "0"))
             (builtin "One Step Simplification" (formula "41"))
            (rule "true_left" (formula "41"))
            (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
            (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "leq_literals" (formula "1") (term "0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "2"))
            (rule "inEqSimp_homoInEq0" (formula "6") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0"))
            (rule "add_literals" (formula "6") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "6") (term "1,0,0"))
            (rule "add_zero_right" (formula "6") (term "0,0"))
            (rule "qeq_literals" (formula "6") (term "0"))
             (builtin "One Step Simplification" (formula "6"))
            (rule "true_left" (formula "6"))
            (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "36"))
            (rule "leq_literals" (formula "20") (term "0"))
             (builtin "One Step Simplification" (formula "20"))
            (rule "true_left" (formula "20"))
            (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
            (rule "qeq_literals" (formula "5") (term "0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "closeFalse" (formula "5"))
         )
      )
      (branch "if x_2 false"
          (builtin "One Step Simplification" (formula "81"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "notLeft" (formula "1"))
         (rule "elim_double_block_2" (formula "81") (term "1"))
         (rule "blockBreak" (formula "81") (term "1"))
         (rule "lsBreak" (formula "81") (term "1"))
         (rule "assignment" (formula "81") (term "1"))
          (builtin "One Step Simplification" (formula "81"))
         (rule "methodCallReturn" (formula "81") (term "1"))
         (rule "assignment" (formula "81") (term "1"))
          (builtin "One Step Simplification" (formula "81"))
         (rule "methodCallEmpty" (formula "81") (term "1"))
         (rule "tryEmpty" (formula "81") (term "1"))
         (rule "emptyModality" (formula "81") (term "1"))
         (rule "andRight" (formula "81"))
         (branch "Case 1"
            (rule "impRight" (formula "81"))
            (rule "andRight" (formula "82"))
            (branch "Case 1"
               (rule "andRight" (formula "82"))
               (branch "Case 1"
                   (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "11")))
                  (rule "closeTrue" (formula "82"))
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "82") (ifInst ""  (formula "12")))
                  (rule "closeTrue" (formula "82"))
               )
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "1"))
                (builtin "One Step Simplification" (formula "82"))
               (rule "closeTrue" (formula "82"))
            )
         )
         (branch "Case 2"
            (rule "impRight" (formula "81"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Null Reference (_indices = null)"
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")))
      (rule "closeFalse" (formula "1"))
   )
)
)
}
