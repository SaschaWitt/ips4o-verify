\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Sep 05 21:23:00 CEST 2022
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , finalFields-finalFields\\:immutable , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsCheckingOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../src";

\proofObligation "#Proof Obligation Settings
#Mon Sep 05 21:23:00 CEST 2022
contract=de.wiesler.Classifier[de.wiesler.Classifier\\:\\:classify_locally([I,int,int,[I,de.wiesler.Buffers)].JML normal_behavior operation contract.0
name=de.wiesler.Classifier[de.wiesler.Classifier\\:\\:classify_locally([I,int,int,[I,de.wiesler.Buffers)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "1" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "2" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))

(autoModeTime "32088")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "expand_inInt" (formula "1") (term "1,0,0,1,0,0,0"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0,1,1,1,1,1,0"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0,1,1,1,1,1,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0,1,1,1,1,1,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0,1,0,0,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "10"))
(rule "notLeft" (formula "9"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "5"))
(rule "notLeft" (formula "12"))
(rule "notLeft" (formula "11"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "15"))
(rule "notLeft" (formula "2"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "14"))
(rule "andLeft" (formula "18"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "22"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "20"))
(rule "andLeft" (formula "20"))
(rule "translateJavaAddInt" (formula "14") (term "1"))
(rule "eqSymm" (formula "35"))
(rule "replace_known_right" (formula "10") (term "0") (ifseqformula "39"))
 (builtin "One Step Simplification" (formula "10"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "40"))
 (builtin "One Step Simplification" (formula "4"))
(rule "replace_known_right" (formula "9") (term "0") (ifseqformula "38"))
 (builtin "One Step Simplification" (formula "9"))
(rule "polySimp_addComm0" (formula "14") (term "1"))
(rule "disjointDefinition" (formula "34"))
 (builtin "One Step Simplification" (formula "34"))
(rule "notLeft" (formula "34"))
(rule "eqSymm" (formula "36"))
(rule "disjointDefinition" (formula "33"))
 (builtin "One Step Simplification" (formula "33"))
(rule "notLeft" (formula "33"))
(rule "eqSymm" (formula "35"))
(rule "disjointDefinition" (formula "32"))
 (builtin "One Step Simplification" (formula "32"))
(rule "notLeft" (formula "32"))
(rule "eqSymm" (formula "34"))
(rule "disjointDefinition" (formula "31"))
 (builtin "One Step Simplification" (formula "31"))
(rule "notLeft" (formula "31"))
(rule "eqSymm" (formula "33"))
(rule "disjointDefinition" (formula "30"))
 (builtin "One Step Simplification" (formula "30"))
(rule "notLeft" (formula "30"))
(rule "eqSymm" (formula "32"))
(rule "disjointDefinition" (formula "29"))
 (builtin "One Step Simplification" (formula "29"))
(rule "notLeft" (formula "29"))
(rule "eqSymm" (formula "31"))
(rule "disjointDefinition" (formula "28"))
 (builtin "One Step Simplification" (formula "28"))
(rule "notLeft" (formula "28"))
(rule "eqSymm" (formula "30"))
(rule "disjointDefinition" (formula "27"))
 (builtin "One Step Simplification" (formula "27"))
(rule "notLeft" (formula "27"))
(rule "eqSymm" (formula "29"))
(rule "disjointDefinition" (formula "26"))
 (builtin "One Step Simplification" (formula "26"))
(rule "notLeft" (formula "26"))
(rule "eqSymm" (formula "28"))
(rule "disjointDefinition" (formula "25"))
 (builtin "One Step Simplification" (formula "25"))
(rule "notLeft" (formula "25"))
(rule "eqSymm" (formula "27"))
(rule "disjointDefinition" (formula "24"))
 (builtin "One Step Simplification" (formula "24"))
(rule "notLeft" (formula "24"))
(rule "eqSymm" (formula "26"))
(rule "disjointDefinition" (formula "23"))
 (builtin "One Step Simplification" (formula "23"))
(rule "notLeft" (formula "23"))
(rule "eqSymm" (formula "25"))
(rule "disjointDefinition" (formula "22"))
 (builtin "One Step Simplification" (formula "22"))
(rule "notLeft" (formula "22"))
(rule "eqSymm" (formula "24"))
(rule "disjointDefinition" (formula "20"))
 (builtin "One Step Simplification" (formula "20"))
(rule "notLeft" (formula "20"))
(rule "disjointDefinition" (formula "20"))
 (builtin "One Step Simplification" (formula "20"))
(rule "notLeft" (formula "20"))
(rule "eqSymm" (formula "22"))
(rule "inEqSimp_commuteLeq" (formula "17"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,0"))
(rule "inEqSimp_commuteLeq" (formula "18") (term "1,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "8"))
(rule "inEqSimp_commuteLeq" (formula "15"))
(rule "inEqSimp_commuteLeq" (formula "16"))
(rule "inEqSimp_commuteLeq" (formula "6"))
(rule "assignment" (formula "41") (term "1"))
 (builtin "One Step Simplification" (formula "41"))
(rule "applyEq" (formula "18") (term "1,1,0,0,0") (ifseqformula "20"))
(rule "applyEq" (formula "14") (term "1,1") (ifseqformula "20"))
(rule "commute_and" (formula "18") (term "1,0,0"))
(rule "commute_and" (formula "18") (term "0,0,0"))
(rule "shift_paren_and" (formula "18") (term "0,0"))
(rule "commute_and_2" (formula "18") (term "0,0,0"))
(rule "methodBodyExpand" (formula "41") (term "1") (newnames "heapBefore_classify_locally,savedHeapBefore_classify_locally"))
 (builtin "One Step Simplification" (formula "41"))
 (builtin "Block Contract (Internal)" (formula "41") (newnames "result_21,exc_25,heap_Before_BLOCK,savedHeap_Before_BLOCK,o,f"))
(branch "Validity"
    (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "11")) (ifInst ""  (formula "1")) (ifInst ""  (formula "38")) (ifInst ""  (formula "2")) (ifInst ""  (formula "3")))
    (builtin "One Step Simplification" (formula "42"))
   (rule "true_left" (formula "22"))
   (rule "eqSymm" (formula "41") (term "0,0,1,0,1"))
   (rule "variableDeclarationAssign" (formula "41") (term "1"))
   (rule "variableDeclaration" (formula "41") (term "1") (newnames "exc_25_1"))
   (rule "assignment" (formula "41") (term "1"))
    (builtin "One Step Simplification" (formula "41"))
   (rule "emptyStatement" (formula "41") (term "1"))
    (builtin "One Step Simplification" (formula "41"))
   (rule "emptyStatement" (formula "41") (term "1"))
   (rule "tryEmpty" (formula "41") (term "1"))
   (rule "blockEmptyLabel" (formula "41") (term "1"))
   (rule "blockEmpty" (formula "41") (term "1"))
   (rule "methodCallEmpty" (formula "41") (term "1"))
   (rule "emptyModality" (formula "41") (term "1"))
   (rule "andRight" (formula "41"))
   (branch "Case 1"
       (builtin "One Step Simplification" (formula "41"))
      (rule "closeTrue" (formula "41"))
   )
   (branch "Case 2"
       (builtin "One Step Simplification" (formula "41"))
      (rule "closeTrue" (formula "41"))
   )
)
(branch "Precondition"
   (rule "andRight" (formula "41"))
   (branch "Case 1"
      (rule "andRight" (formula "41"))
      (branch "Case 1"
          (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "11")))
         (rule "closeTrue" (formula "41"))
      )
      (branch "Case 2"
          (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "1")))
         (rule "closeTrue" (formula "41"))
      )
   )
   (branch "Case 2"
      (rule "andRight" (formula "41"))
      (branch "Case 1"
         (rule "andRight" (formula "41"))
         (branch "Case 1"
             (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "37")))
            (rule "closeTrue" (formula "41"))
         )
         (branch "Case 2"
             (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "2")))
            (rule "closeTrue" (formula "41"))
         )
      )
      (branch "Case 2"
          (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "3")))
         (rule "closeTrue" (formula "41"))
      )
   )
)
(branch "Usage"
    (builtin "One Step Simplification" (formula "42"))
    (builtin "One Step Simplification" (formula "22"))
   (rule "expand_inInt" (formula "22") (term "0,1,0"))
   (rule "expand_inInt" (formula "22") (term "0,0,1"))
   (rule "replace_int_MIN" (formula "22") (term "0,1,0,1,0"))
   (rule "replace_int_MAX" (formula "22") (term "1,0,0,1,0"))
   (rule "replace_int_MIN" (formula "22") (term "0,1,0,0,1"))
   (rule "replace_int_MAX" (formula "22") (term "1,0,0,0,1"))
   (rule "andLeft" (formula "22"))
   (rule "andLeft" (formula "22"))
   (rule "andLeft" (formula "23"))
   (rule "andLeft" (formula "23"))
   (rule "eqSymm" (formula "26") (term "1,0"))
   (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "22"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "true_left" (formula "25"))
   (rule "inEqSimp_commuteLeq" (formula "25") (term "1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "24"))
   (rule "commute_and" (formula "25") (term "0,0"))
   (rule "elim_double_block_2" (formula "45") (term "1"))
   (rule "arrayLengthIsAShort" (formula "14") (term "0"))
   (rule "expand_inShort" (formula "14"))
   (rule "replace_short_MAX" (formula "14") (term "1,0"))
   (rule "replace_short_MIN" (formula "14") (term "0,1"))
   (rule "andLeft" (formula "14"))
   (rule "inEqSimp_commuteLeq" (formula "15"))
   (rule "arrayLengthNotNegative" (formula "16") (term "0"))
   (rule "ifUnfold" (formula "48") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "48") (term "1") (newnames "x"))
   (rule "inequality_comparison_simple" (formula "48") (term "1"))
    (builtin "One Step Simplification" (formula "48"))
   (rule "replace_known_left" (formula "48") (term "0,0,1,0") (ifseqformula "25"))
    (builtin "One Step Simplification" (formula "48"))
   (rule "arrayLengthNotNegative" (formula "20") (term "0"))
   (rule "arrayLengthIsAShort" (formula "21") (term "0"))
   (rule "expand_inShort" (formula "21"))
   (rule "replace_short_MIN" (formula "21") (term "0,1"))
   (rule "replace_short_MAX" (formula "21") (term "1,0"))
   (rule "andLeft" (formula "21"))
   (rule "inEqSimp_commuteLeq" (formula "22"))
   (rule "ifSplit" (formula "51"))
   (branch "if x true"
       (builtin "One Step Simplification" (formula "52"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x false"
       (builtin "One Step Simplification" (formula "52"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "blockEmpty" (formula "51") (term "1"))
      (rule "variableDeclarationAssign" (formula "51") (term "1"))
      (rule "variableDeclaration" (formula "51") (term "1") (newnames "write"))
       (builtin "Use Operation Contract" (formula "51") (newnames "heapBefore_classify_locally_batched,result_22,exc_26,heapAfter_classify_locally_batched,anon_heap_classify_locally_batched") (contract "de.wiesler.Classifier[de.wiesler.Classifier::classify_locally_batched([I,int,int,[I,de.wiesler.Buffers)].JML normal_behavior operation contract.0"))
      (branch "Post (classify_locally_batched)"
          (builtin "One Step Simplification" (formula "33"))
          (builtin "One Step Simplification" (formula "53"))
         (rule "expand_inInt" (formula "33") (term "0,1,0,1"))
         (rule "expand_inInt" (formula "33") (term "0,0,0,1,1,1,1,1,0,1"))
         (rule "replace_int_MIN" (formula "33") (term "0,1,0,1,0,1"))
         (rule "replace_int_MAX" (formula "33") (term "1,0,0,1,0,1"))
         (rule "replace_int_MIN" (formula "33") (term "0,1,0,0,0,1,1,1,1,1,0,1"))
         (rule "replace_int_MAX" (formula "33") (term "1,0,0,0,0,1,1,1,1,1,0,1"))
         (rule "andLeft" (formula "33"))
         (rule "andLeft" (formula "34"))
         (rule "andLeft" (formula "34"))
         (rule "andLeft" (formula "36"))
         (rule "andLeft" (formula "35"))
         (rule "andLeft" (formula "37"))
         (rule "andLeft" (formula "35"))
         (rule "andLeft" (formula "37"))
         (rule "andLeft" (formula "38"))
         (rule "andLeft" (formula "39"))
         (rule "andLeft" (formula "38"))
         (rule "andLeft" (formula "41"))
         (rule "andLeft" (formula "38"))
         (rule "translateJavaMulInt" (formula "33") (term "0,2,1,1,1,0"))
         (rule "translateJavaSubInt" (formula "33") (term "2,0,0,1,0"))
         (rule "translateJavaSubInt" (formula "33") (term "2,1,0,1,0"))
         (rule "translateJavaSubInt" (formula "33") (term "2,0,1,1,0"))
         (rule "translateJavaSubInt" (formula "41") (term "5,0"))
         (rule "translateJavaSubInt" (formula "40") (term "0,0"))
         (rule "eqSymm" (formula "42") (term "1,0"))
         (rule "translateJavaMod" (formula "39") (term "1,1"))
         (rule "translateJavaSubInt" (formula "33") (term "2,1,1,1,0"))
         (rule "translateJavaMod" (formula "33") (term "1,0,2,0,0,1,0"))
         (rule "translateJavaSubInt" (formula "41") (term "0,1,5,0"))
         (rule "translateJavaSubInt" (formula "42") (term "4,0,1,0"))
         (rule "translateJavaSubInt" (formula "39") (term "1"))
         (rule "translateJavaSubInt" (formula "33") (term "0,1,0,2,0,0,1,0"))
         (rule "translateJavaMod" (formula "41") (term "1,5,0"))
         (rule "translateJavaMod" (formula "42") (term "1,4,0,1,0"))
         (rule "translateJavaSubInt" (formula "39") (term "0,1,1"))
         (rule "translateJavaSubInt" (formula "33") (term "0,2,0,0,1,0"))
         (rule "translateJavaSubInt" (formula "42") (term "0,1,4,0,1,0"))
         (rule "polySimp_elimSub" (formula "33") (term "2,1,0,1,0"))
         (rule "mul_literals" (formula "33") (term "1,2,1,0,1,0"))
         (rule "polySimp_elimSub" (formula "33") (term "2,0,1,1,0"))
         (rule "mul_literals" (formula "33") (term "1,2,0,1,1,0"))
         (rule "polySimp_elimSub" (formula "40") (term "0,0"))
         (rule "polySimp_elimSub" (formula "33") (term "2,1,1,1,0"))
         (rule "mul_literals" (formula "33") (term "1,2,1,1,1,0"))
         (rule "polySimp_elimSub" (formula "41") (term "0,1,5,0"))
         (rule "polySimp_elimSub" (formula "39") (term "0,1,1"))
         (rule "polySimp_elimSub" (formula "33") (term "0,1,0,2,0,0,1,0"))
         (rule "polySimp_elimSub" (formula "42") (term "0,1,4,0,1,0"))
         (rule "polySimp_elimSub" (formula "41") (term "5,0"))
         (rule "polySimp_elimSub" (formula "39") (term "1"))
         (rule "polySimp_elimSub" (formula "33") (term "0,2,0,0,1,0"))
         (rule "polySimp_elimSub" (formula "42") (term "4,0,1,0"))
         (rule "polySimp_elimSub" (formula "33") (term "2,0,0,1,0"))
         (rule "mul_literals" (formula "33") (term "1,2,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "33") (term "0,2,1,1,1,0"))
         (rule "polySimp_addComm0" (formula "33") (term "2,1,0,1,0"))
         (rule "polySimp_addComm0" (formula "33") (term "2,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "40") (term "0,0"))
         (rule "polySimp_addComm0" (formula "41") (term "0,0,1,5,0"))
         (rule "polySimp_addComm0" (formula "39") (term "0,0,1,1"))
         (rule "polySimp_addComm0" (formula "42") (term "0,0,1,4,0,1,0"))
         (rule "polySimp_addComm0" (formula "33") (term "0,0,1,0,2,0,0,1,0"))
         (rule "polySimp_addComm0" (formula "33") (term "2,1,1,1,0"))
         (rule "polySimp_addComm1" (formula "33") (term "2,0,0,1,0"))
         (rule "polySimp_addComm0" (formula "33") (term "0,2,0,0,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "36"))
         (rule "inEqSimp_commuteLeq" (formula "42") (term "1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "38"))
         (rule "assignment" (formula "65") (term "1"))
          (builtin "One Step Simplification" (formula "65"))
         (rule "variableDeclarationAssign" (formula "65") (term "1"))
         (rule "variableDeclaration" (formula "65") (term "1") (newnames "i"))
         (rule "applyEq" (formula "33") (term "0,1,2,1,1,1,0") (ifseqformula "26"))
         (rule "applyEq" (formula "33") (term "1,2,0,1,1,0") (ifseqformula "26"))
         (rule "applyEq" (formula "33") (term "1,2,1,0,1,0") (ifseqformula "26"))
         (rule "commuteUnion" (formula "33") (term "1,1,0"))
         (rule "commuteUnion" (formula "33") (term "0,1,0"))
         (rule "commute_and" (formula "42") (term "0,0"))
         (rule "associativeLawUnion" (formula "33") (term "1,0"))
         (rule "compound_subtraction_2" (formula "65") (term "1") (inst "#v1=x_1") (inst "#v0=x"))
         (rule "variableDeclarationAssign" (formula "65") (term "1"))
         (rule "variableDeclaration" (formula "65") (term "1") (newnames "x_2"))
         (rule "assignment" (formula "65") (term "1"))
          (builtin "One Step Simplification" (formula "65"))
         (rule "variableDeclarationAssign" (formula "65") (term "1"))
         (rule "variableDeclaration" (formula "65") (term "1") (newnames "x_1"))
         (rule "compound_modulo_1" (formula "65") (term "1") (inst "#v=x_3"))
         (rule "variableDeclarationAssign" (formula "65") (term "1"))
         (rule "variableDeclaration" (formula "65") (term "1") (newnames "x_3"))
         (rule "remove_parentheses_right" (formula "65") (term "1"))
         (rule "assignmentSubtractionInt" (formula "65") (term "1"))
         (branch "Overflow check"
             (builtin "One Step Simplification" (formula "65"))
            (rule "expand_inInt" (formula "65"))
            (rule "replace_int_MIN" (formula "65") (term "0,1"))
            (rule "replace_int_MAX" (formula "65") (term "1,0"))
            (rule "polySimp_elimSub" (formula "65") (term "1,1"))
            (rule "polySimp_elimSub" (formula "65") (term "0,0"))
            (rule "polySimp_addComm0" (formula "65") (term "1,1"))
            (rule "polySimp_addComm0" (formula "65") (term "0,0"))
            (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0,0"))
            (rule "inEqSimp_homoInEq0" (formula "39"))
            (rule "polySimp_addComm1" (formula "39") (term "0"))
            (rule "inEqSimp_homoInEq1" (formula "17"))
            (rule "polySimp_addComm1" (formula "17") (term "0"))
            (rule "inEqSimp_homoInEq0" (formula "65") (term "1"))
            (rule "mul_literals" (formula "65") (term "1,0,1"))
            (rule "polySimp_addComm1" (formula "65") (term "0,1"))
            (rule "polySimp_addComm0" (formula "65") (term "0,0,1"))
            (rule "inEqSimp_homoInEq0" (formula "65") (term "0"))
            (rule "polySimp_mulComm0" (formula "65") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "65") (term "1,0,0"))
            (rule "polySimp_mulAssoc" (formula "65") (term "0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "65") (term "0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "65") (term "0,1,0,0"))
            (rule "polySimp_elimOne" (formula "65") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "65") (term "0,0"))
            (rule "jmod_axiom" (formula "42") (term "0,1,4,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,4,0,1,0"))
            (rule "polySimp_mulComm0" (formula "42") (term "1,4,0,1,0"))
            (rule "polySimp_rightDist" (formula "42") (term "1,4,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "42") (term "1,1,4,0,1,0"))
            (rule "polySimp_rightDist" (formula "42") (term "0,1,4,0,1,0"))
            (rule "polySimp_mulAssoc" (formula "42") (term "0,0,1,4,0,1,0"))
            (rule "polySimp_mulComm0" (formula "42") (term "0,0,0,1,4,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "42") (term "0,0,1,4,0,1,0"))
            (rule "polySimp_elimOne" (formula "42") (term "0,0,1,4,0,1,0"))
            (rule "polySimp_addAssoc" (formula "42") (term "4,0,1,0"))
            (rule "polySimp_addAssoc" (formula "42") (term "0,4,0,1,0"))
            (rule "polySimp_addComm0" (formula "42") (term "0,0,4,0,1,0"))
            (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,4,0,1,0"))
            (rule "add_literals" (formula "42") (term "1,1,0,4,0,1,0"))
            (rule "times_zero_1" (formula "42") (term "1,0,4,0,1,0"))
            (rule "add_zero_right" (formula "42") (term "0,4,0,1,0"))
            (rule "jmod_axiom" (formula "41") (term "0,1,5,0"))
            (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,5,0"))
            (rule "polySimp_mulComm0" (formula "41") (term "1,5,0"))
            (rule "polySimp_rightDist" (formula "41") (term "1,5,0"))
            (rule "polySimp_mulLiterals" (formula "41") (term "1,1,5,0"))
            (rule "polySimp_rightDist" (formula "41") (term "0,1,5,0"))
            (rule "polySimp_mulAssoc" (formula "41") (term "0,0,1,5,0"))
            (rule "polySimp_mulComm0" (formula "41") (term "0,0,0,1,5,0"))
            (rule "polySimp_mulLiterals" (formula "41") (term "0,0,1,5,0"))
            (rule "polySimp_elimOne" (formula "41") (term "0,0,1,5,0"))
            (rule "polySimp_addAssoc" (formula "41") (term "5,0"))
            (rule "polySimp_addAssoc" (formula "41") (term "0,5,0"))
            (rule "polySimp_addComm0" (formula "41") (term "0,0,5,0"))
            (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,5,0"))
            (rule "add_literals" (formula "41") (term "1,1,0,5,0"))
            (rule "times_zero_1" (formula "41") (term "1,0,5,0"))
            (rule "add_zero_right" (formula "41") (term "0,5,0"))
            (rule "jmod_axiom" (formula "33") (term "0,1,2,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,2,1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "1,2,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "33") (term "1,2,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "1,1,2,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "33") (term "0,1,2,1,0,0,1,0"))
            (rule "polySimp_mulAssoc" (formula "33") (term "0,0,1,2,1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "33") (term "0,0,0,1,2,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "33") (term "0,0,1,2,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "33") (term "0,0,1,2,1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "33") (term "2,1,0,0,1,0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0,2,1,0,0,1,0"))
            (rule "polySimp_addComm1" (formula "33") (term "0,0,2,1,0,0,1,0"))
            (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,2,1,0,0,1,0"))
            (rule "add_literals" (formula "33") (term "1,1,0,2,1,0,0,1,0"))
            (rule "times_zero_1" (formula "33") (term "1,0,2,1,0,0,1,0"))
            (rule "add_zero_right" (formula "33") (term "0,2,1,0,0,1,0"))
            (rule "jmod_axiom" (formula "39") (term "0,1,0"))
            (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "39") (term "1,0"))
            (rule "polySimp_rightDist" (formula "39") (term "1,0"))
            (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0"))
            (rule "polySimp_rightDist" (formula "39") (term "0,1,0"))
            (rule "polySimp_mulAssoc" (formula "39") (term "0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "39") (term "0,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "39") (term "0,0,1,0"))
            (rule "polySimp_elimOne" (formula "39") (term "0,0,1,0"))
            (rule "polySimp_addComm1" (formula "39") (term "0"))
            (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "39") (term "0,0,0"))
            (rule "polySimp_addComm0" (formula "39") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0"))
            (rule "add_literals" (formula "39") (term "1,1,0,0,0"))
            (rule "times_zero_1" (formula "39") (term "1,0,0,0"))
            (rule "add_zero_right" (formula "39") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0,0"))
            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
            (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "17"))
            (rule "polySimp_mulComm0" (formula "17") (term "1"))
            (rule "polySimp_rightDist" (formula "17") (term "1"))
            (rule "mul_literals" (formula "17") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
            (rule "polySimp_elimOne" (formula "17") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "1"))
            (rule "polySimp_mulComm0" (formula "65") (term "1,1"))
            (rule "polySimp_rightDist" (formula "65") (term "1,1"))
            (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1"))
            (rule "mul_literals" (formula "65") (term "0,1,1"))
            (rule "polySimp_elimOne" (formula "65") (term "1,1,1"))
            (rule "inEqSimp_sepNegMonomial1" (formula "65") (term "0"))
            (rule "polySimp_mulLiterals" (formula "65") (term "0,0"))
            (rule "polySimp_elimOne" (formula "65") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "39"))
            (rule "polySimp_mulLiterals" (formula "39") (term "0"))
            (rule "polySimp_elimOne" (formula "39") (term "0"))
            (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "20"))
            (rule "leq_literals" (formula "22") (term "0"))
             (builtin "One Step Simplification" (formula "22"))
            (rule "true_left" (formula "22"))
            (rule "inEqSimp_subsumption1" (formula "64") (term "1") (ifseqformula "19"))
            (rule "inEqSimp_homoInEq0" (formula "64") (term "0,1"))
            (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,1"))
            (rule "polySimp_rightDist" (formula "64") (term "1,0,0,1"))
            (rule "mul_literals" (formula "64") (term "0,1,0,0,1"))
            (rule "polySimp_addAssoc" (formula "64") (term "0,0,1"))
            (rule "polySimp_addComm0" (formula "64") (term "0,0,0,1"))
            (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0,1"))
            (rule "add_literals" (formula "64") (term "1,1,0,0,1"))
            (rule "times_zero_1" (formula "64") (term "1,0,0,1"))
            (rule "add_zero_right" (formula "64") (term "0,0,1"))
            (rule "qeq_literals" (formula "64") (term "0,1"))
             (builtin "One Step Simplification" (formula "64"))
            (rule "inEqSimp_leqRight" (formula "64"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "17"))
            (rule "leq_literals" (formula "16") (term "0"))
             (builtin "One Step Simplification" (formula "16"))
            (rule "true_left" (formula "16"))
            (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "18"))
            (rule "leq_literals" (formula "7") (term "0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "1"))
            (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
            (rule "add_literals" (formula "18") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "18") (term "1,0,0"))
            (rule "add_zero_right" (formula "18") (term "0,0"))
            (rule "qeq_literals" (formula "18") (term "0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "true_left" (formula "18"))
            (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "36"))
            (rule "mul_literals" (formula "33") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "33") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "33"))
            (rule "polySimp_mulComm0" (formula "33") (term "1"))
            (rule "polySimp_rightDist" (formula "33") (term "1"))
            (rule "mul_literals" (formula "33") (term "0,1"))
            (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "7"))
            (rule "polySimp_rightDist" (formula "1") (term "0,0"))
            (rule "mul_literals" (formula "1") (term "0,0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_subsumption0" (formula "7") (ifseqformula "1"))
            (rule "leq_literals" (formula "7") (term "0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "17"))
            (rule "qeq_literals" (formula "1") (term "0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "Usage"
             (builtin "One Step Simplification" (formula "65"))
            (rule "translateJavaSubInt" (formula "65") (term "0,1,0"))
            (rule "polySimp_elimSub" (formula "65") (term "0,1,0"))
            (rule "polySimp_addComm0" (formula "65") (term "0,1,0"))
            (rule "assignmentModulo" (formula "65"))
            (branch "Case 1"
                (builtin "One Step Simplification" (formula "65"))
               (rule "translateJavaMod" (formula "65") (term "0,1,0"))
               (rule "assignmentSubtractionInt" (formula "65") (term "1"))
               (branch "Overflow check"
                   (builtin "One Step Simplification" (formula "65"))
                  (rule "expand_inInt" (formula "65"))
                  (rule "replace_int_MIN" (formula "65") (term "0,1"))
                  (rule "replace_int_MAX" (formula "65") (term "1,0"))
                  (rule "polySimp_elimSub" (formula "65") (term "0,0"))
                  (rule "polySimp_elimSub" (formula "65") (term "1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "39"))
                  (rule "polySimp_addComm1" (formula "39") (term "0"))
                  (rule "inEqSimp_homoInEq1" (formula "17"))
                  (rule "polySimp_addComm1" (formula "17") (term "0"))
                  (rule "inEqSimp_homoInEq0" (formula "65") (term "0"))
                  (rule "polySimp_mulComm0" (formula "65") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "65") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "65") (term "1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "65") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "65") (term "0,0"))
                  (rule "inEqSimp_homoInEq0" (formula "65") (term "1"))
                  (rule "mul_literals" (formula "65") (term "1,0,1"))
                  (rule "polySimp_addComm1" (formula "65") (term "0,1"))
                  (rule "polySimp_addComm0" (formula "65") (term "0,0,1"))
                  (rule "jmod_axiom" (formula "41") (term "0,1,5,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,5,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,5,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "1,5,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,5,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "0,1,5,0"))
                  (rule "polySimp_mulAssoc" (formula "41") (term "0,0,1,5,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "0,0,0,1,5,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "0,0,1,5,0"))
                  (rule "polySimp_elimOne" (formula "41") (term "0,0,1,5,0"))
                  (rule "polySimp_addAssoc" (formula "41") (term "5,0"))
                  (rule "polySimp_addAssoc" (formula "41") (term "0,5,0"))
                  (rule "polySimp_addComm0" (formula "41") (term "0,0,5,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,5,0"))
                  (rule "add_literals" (formula "41") (term "1,1,0,5,0"))
                  (rule "times_zero_1" (formula "41") (term "1,0,5,0"))
                  (rule "add_zero_right" (formula "41") (term "0,5,0"))
                  (rule "jmod_axiom" (formula "42") (term "0,1,4,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,4,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "42") (term "1,4,0,1,0"))
                  (rule "polySimp_rightDist" (formula "42") (term "1,4,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "1,1,4,0,1,0"))
                  (rule "polySimp_rightDist" (formula "42") (term "0,1,4,0,1,0"))
                  (rule "polySimp_mulAssoc" (formula "42") (term "0,0,1,4,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "42") (term "0,0,0,1,4,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "0,0,1,4,0,1,0"))
                  (rule "polySimp_elimOne" (formula "42") (term "0,0,1,4,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "42") (term "4,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "42") (term "0,4,0,1,0"))
                  (rule "polySimp_addComm0" (formula "42") (term "0,0,4,0,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,4,0,1,0"))
                  (rule "add_literals" (formula "42") (term "1,1,0,4,0,1,0"))
                  (rule "times_zero_1" (formula "42") (term "1,0,4,0,1,0"))
                  (rule "add_zero_right" (formula "42") (term "0,4,0,1,0"))
                  (rule "jmod_axiom" (formula "33") (term "0,1,2,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "1,0,1,2,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1,2,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "33") (term "1,2,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "1,1,2,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "33") (term "0,1,2,1,0,0,1,0"))
                  (rule "polySimp_mulAssoc" (formula "33") (term "0,0,1,2,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "33") (term "0,0,0,1,2,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "0,0,1,2,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "33") (term "0,0,1,2,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "33") (term "2,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "33") (term "0,2,1,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "33") (term "0,0,2,1,0,0,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,2,1,0,0,1,0"))
                  (rule "add_literals" (formula "33") (term "1,1,0,2,1,0,0,1,0"))
                  (rule "times_zero_1" (formula "33") (term "1,0,2,1,0,0,1,0"))
                  (rule "add_zero_right" (formula "33") (term "0,2,1,0,0,1,0"))
                  (rule "jmod_axiom" (formula "39") (term "0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "0,1,0"))
                  (rule "polySimp_mulAssoc" (formula "39") (term "0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "39") (term "0"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0,0,0"))
                  (rule "polySimp_addComm0" (formula "39") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0"))
                  (rule "add_literals" (formula "39") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "39") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "39") (term "0,0,0"))
                  (rule "jmod_axiom" (formula "65") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "65") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "65") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "65") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "65") (term "0,0,0"))
                  (rule "add_literals" (formula "65") (term "1,1,0,0,0"))
                  (rule "times_zero_1" (formula "65") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "65") (term "0,0,0"))
                  (rule "jmod_axiom" (formula "65") (term "0,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "65") (term "1,0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "65") (term "1,0,1"))
                  (rule "polySimp_rightDist" (formula "65") (term "1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "65") (term "0,1,0,1"))
                  (rule "polySimp_mulAssoc" (formula "65") (term "0,0,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "65") (term "0,0,0,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "65") (term "0,0,1,0,1"))
                  (rule "polySimp_elimOne" (formula "65") (term "0,0,1,0,1"))
                  (rule "polySimp_addAssoc" (formula "65") (term "0,1"))
                  (rule "polySimp_addAssoc" (formula "65") (term "0,0,1"))
                  (rule "polySimp_addComm1" (formula "65") (term "0,0,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "65") (term "0,0,1"))
                  (rule "add_literals" (formula "65") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "65") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "65") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
                  (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1"))
                  (rule "polySimp_rightDist" (formula "17") (term "1"))
                  (rule "mul_literals" (formula "17") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                  (rule "polySimp_elimOne" (formula "39") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "65") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "65") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "1"))
                  (rule "polySimp_mulComm0" (formula "65") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "65") (term "1,1"))
                  (rule "mul_literals" (formula "65") (term "0,1,1"))
                  (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "16"))
                  (rule "leq_literals" (formula "15") (term "0"))
                   (builtin "One Step Simplification" (formula "15"))
                  (rule "true_left" (formula "15"))
                  (rule "inEqSimp_subsumption1" (formula "6") (ifseqformula "17"))
                  (rule "leq_literals" (formula "6") (term "0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "18"))
                  (rule "leq_literals" (formula "20") (term "0"))
                   (builtin "One Step Simplification" (formula "20"))
                  (rule "true_left" (formula "20"))
                  (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "19"))
                  (rule "polySimp_mulComm0" (formula "20") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "20") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                  (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                  (rule "polySimp_elimOne" (formula "20") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "20"))
                  (rule "leq_literals" (formula "6") (term "0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "36"))
                  (rule "mul_literals" (formula "33") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "33") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "33"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1"))
                  (rule "polySimp_rightDist" (formula "33") (term "1"))
                  (rule "mul_literals" (formula "33") (term "0,1"))
                  (rule "replace_known_left" (formula "63") (term "1") (ifseqformula "33"))
                   (builtin "One Step Simplification" (formula "63"))
                  (rule "inEqSimp_leqRight" (formula "63"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq0" (formula "34") (term "0"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "34") (term "0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                  (rule "add_literals" (formula "34") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "34") (term "0,0"))
                  (rule "add_literals" (formula "34") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "34") (term "1,0,0"))
                  (rule "add_zero_right" (formula "34") (term "0,0"))
                  (rule "qeq_literals" (formula "34") (term "0"))
                   (builtin "One Step Simplification" (formula "34"))
                  (rule "true_left" (formula "34"))
                  (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "37"))
                  (rule "polySimp_mulComm0" (formula "36") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "36") (term "0"))
                  (rule "polySimp_pullOutFactor2" (formula "36") (term "0,0"))
                  (rule "add_literals" (formula "36") (term "1,0,0"))
                  (rule "times_zero_1" (formula "36") (term "0,0"))
                  (rule "add_zero_left" (formula "36") (term "0"))
                  (rule "elimGcdGeq_antec" (formula "36") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=jdiv(add(mul(begin, Z(neglit(1(#)))), end), Z(6(1(#))))") (inst "elimGcd=Z(6(1(#)))"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,0,1,0"))
                  (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "36") (term "0,0"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "add_zero_right" (formula "36") (term "0,0,0,0"))
                  (rule "add_zero_right" (formula "36") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "36") (term "0,0"))
                  (rule "add_literals" (formula "36") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "36") (term "1,0,0"))
                  (rule "add_zero_right" (formula "36") (term "0,0"))
                  (rule "leq_literals" (formula "36") (term "0"))
                   (builtin "One Step Simplification" (formula "36"))
                  (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "33"))
                  (rule "polySimp_mulComm0" (formula "37") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "37") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "37"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "0"))
                  (rule "polySimp_elimOne" (formula "37") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "20"))
                  (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "17") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                  (rule "polySimp_elimOne" (formula "17") (term "0"))
                  (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "17"))
                  (rule "leq_literals" (formula "6") (term "0"))
                   (builtin "One Step Simplification" (formula "6"))
                  (rule "true_left" (formula "6"))
                  (rule "inEqSimp_and_subsumption3" (formula "22") (term "0,0,0"))
                  (rule "leq_literals" (formula "22") (term "0,1,0,0,0,0"))
                   (builtin "One Step Simplification" (formula "22"))
                  (rule "nnf_imp2or" (formula "29") (term "0"))
                  (rule "nnf_imp2or" (formula "41") (term "0"))
                  (rule "nnf_imp2or" (formula "22") (term "0"))
                  (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "25"))
                   (builtin "One Step Simplification" (formula "25"))
                  (rule "andLeft" (formula "25"))
                  (rule "andLeft" (formula "25"))
                  (rule "andLeft" (formula "25"))
                  (rule "andLeft" (formula "25"))
                  (rule "andLeft" (formula "25"))
                  (rule "andLeft" (formula "25"))
                  (rule "translateJavaSubInt" (formula "30") (term "0,2,0"))
                  (rule "translateJavaSubInt" (formula "30") (term "0,2,1"))
                  (rule "eqSymm" (formula "27"))
                  (rule "eqSymm" (formula "30"))
                  (rule "translateJavaMulInt" (formula "27") (term "1,0"))
                  (rule "polySimp_elimSub" (formula "30") (term "0,2,0"))
                  (rule "mul_literals" (formula "30") (term "1,0,2,0"))
                  (rule "eqSymm" (formula "30"))
                  (rule "polySimp_elimSub" (formula "30") (term "0,2,0"))
                  (rule "mul_literals" (formula "30") (term "1,0,2,0"))
                  (rule "eqSymm" (formula "30"))
                  (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "30") (term "0,2,0"))
                  (rule "eqSymm" (formula "30"))
                  (rule "polySimp_addComm0" (formula "30") (term "0,2,0"))
                  (rule "eqSymm" (formula "30"))
                  (rule "inEqSimp_commuteLeq" (formula "25"))
                  (rule "applyEq" (formula "25") (term "0") (ifseqformula "24"))
                  (rule "applyEq" (formula "26") (term "0") (ifseqformula "24"))
                  (rule "applyEq" (formula "27") (term "1") (ifseqformula "24"))
                  (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "14"))
                  (rule "mul_literals" (formula "25") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "25") (term "0"))
                  (rule "add_literals" (formula "25") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                  (rule "mul_literals" (formula "25") (term "1"))
                  (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "25"))
                  (rule "leq_literals" (formula "13") (term "0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "true_left" (formula "13"))
                  (rule "Free_class_invariant_axiom_for_de_wiesler_Buffers" (formula "41") (inst "b=b"))
                   (builtin "One Step Simplification" (formula "41") (ifInst ""  (formula "26")))
                  (rule "expand_inInt" (formula "41") (term "1,0,0,1"))
                  (rule "replace_int_MIN" (formula "41") (term "0,1,1,0,0,1"))
                  (rule "replace_int_MAX" (formula "41") (term "1,0,1,0,0,1"))
                  (rule "andLeft" (formula "41"))
                  (rule "andLeft" (formula "41"))
                  (rule "andLeft" (formula "41"))
                  (rule "andLeft" (formula "41"))
                  (rule "notLeft" (formula "41"))
                  (rule "translateJavaMulInt" (formula "41") (term "1"))
                  (rule "mul_literals" (formula "41") (term "1"))
                  (rule "eqSymm" (formula "54"))
                  (rule "inEqSimp_ltToLeq" (formula "44") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "44") (term "0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "44") (term "1,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "43"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "44") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "44") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "44") (term "1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "44") (term "1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "44") (term "0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "44") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_subsumption1" (formula "43") (ifseqformula "25"))
                  (rule "leq_literals" (formula "43") (term "0"))
                   (builtin "One Step Simplification" (formula "43"))
                  (rule "true_left" (formula "43"))
                  (rule "Contract_axiom_for_isEmpty_in_Buffers" (formula "22") (term "0") (inst "element=element"))
                  (rule "expand_inInt" (formula "22") (term "0,0,1,0,1,1,1"))
                  (rule "replace_int_MAX" (formula "22") (term "1,0,0,0,1,0,1,1,1"))
                  (rule "replace_int_MIN" (formula "22") (term "0,1,0,0,1,0,1,1,1"))
                  (rule "replace_known_left" (formula "22") (term "1,0,0") (ifseqformula "8"))
                   (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "2")) (ifInst ""  (formula "71")) (ifInst ""  (formula "23")) (ifInst ""  (formula "23")) (ifInst ""  (formula "11")))
                  (rule "inEqSimp_commuteLeq" (formula "22") (term "1,0,0,1,1,1"))
                  (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "53"))
                  (rule "andLeft" (formula "53"))
                  (rule "notLeft" (formula "53"))
                  (rule "notLeft" (formula "53"))
                  (rule "Definition_axiom_for_isEmpty_in_de_wiesler_Buffers" (formula "23") (term "0") (inst "b=b"))
                   (builtin "One Step Simplification" (formula "23"))
                  (rule "expand_inInt" (formula "23") (term "1,0,0"))
                  (rule "replace_int_MAX" (formula "23") (term "1,0,1,0,0"))
                  (rule "replace_int_MIN" (formula "23") (term "0,1,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "23") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "23") (term "1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "23") (term "0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,0"))
                  (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "notLeft" (formula "10"))
                  (rule "notLeft" (formula "10"))
                  (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "51"))
                  (rule "andLeft" (formula "51"))
                  (rule "notLeft" (formula "51"))
                  (rule "notLeft" (formula "51"))
                  (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "50"))
                   (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "28")))
                  (rule "andLeft" (formula "50"))
                  (rule "andLeft" (formula "50"))
                  (rule "andLeft" (formula "50"))
                  (rule "andLeft" (formula "50"))
                  (rule "andLeft" (formula "50"))
                  (rule "eqSymm" (formula "54"))
                  (rule "eqSymm" (formula "52"))
                  (rule "translateJavaSubInt" (formula "54") (term "0,2,0"))
                  (rule "translateJavaSubInt" (formula "54") (term "0,2,1"))
                  (rule "translateJavaMulInt" (formula "52") (term "1,0"))
                  (rule "polySimp_elimSub" (formula "54") (term "0,2,0"))
                  (rule "mul_literals" (formula "54") (term "1,0,2,0"))
                  (rule "eqSymm" (formula "54"))
                  (rule "polySimp_elimSub" (formula "54") (term "0,2,0"))
                  (rule "mul_literals" (formula "54") (term "1,0,2,0"))
                  (rule "eqSymm" (formula "54"))
                  (rule "polySimp_mulComm0" (formula "52") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "54") (term "0,2,0"))
                  (rule "eqSymm" (formula "54"))
                  (rule "polySimp_addComm0" (formula "54") (term "0,2,0"))
                  (rule "eqSymm" (formula "54"))
                  (rule "inEqSimp_commuteLeq" (formula "50"))
                  (rule "applyEq" (formula "52") (term "0") (ifseqformula "27"))
                  (rule "eqSymm" (formula "52"))
                  (rule "applyEq" (formula "50") (term "0") (ifseqformula "23"))
                  (rule "applyEq" (formula "50") (term "0") (ifseqformula "23"))
                  (rule "pullOutSelect" (formula "51") (term "1") (inst "selectSK=arr_0"))
                  (rule "simplifySelectOfAnonEQ" (formula "52") (ifseqformula "37"))
                   (builtin "One Step Simplification" (formula "52") (ifInst ""  (formula "56")))
                  (rule "simplifySelectOfAnonEQ" (formula "51") (ifseqformula "37"))
                   (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "56")))
                  (rule "applyEq" (formula "52") (term "2,0") (ifseqformula "30"))
                  (rule "elementOfUnion" (formula "52") (term "0,0,0"))
                  (rule "elementOfArrayRangeConcrete" (formula "52") (term "1,0,0,0"))
                  (rule "replace_known_right" (formula "52") (term "0,0,1,0,0,0") (ifseqformula "70"))
                   (builtin "One Step Simplification" (formula "52"))
                  (rule "elementOfUnion" (formula "51") (term "0,0,0"))
                  (rule "elementOfArrayRangeConcrete" (formula "51") (term "1,0,0,0"))
                  (rule "replace_known_right" (formula "51") (term "0,0,1,0,0,0") (ifseqformula "70"))
                   (builtin "One Step Simplification" (formula "51"))
                  (rule "elementOfUnion" (formula "52") (term "0,0,0"))
                  (rule "elementOfArrayRangeConcrete" (formula "52") (term "1,0,0,0"))
                  (rule "replace_known_right" (formula "52") (term "0,0,1,0,0,0") (ifseqformula "68"))
                   (builtin "One Step Simplification" (formula "52"))
                  (rule "elementOfUnion" (formula "51") (term "0,0,0"))
                  (rule "elementOfArrayRangeConcrete" (formula "51") (term "1,0,0,0"))
                  (rule "replace_known_right" (formula "51") (term "0,0,1,0,0,0") (ifseqformula "68"))
                   (builtin "One Step Simplification" (formula "51"))
                  (rule "elementOfUnion" (formula "52") (term "0,0,0"))
                  (rule "elementOfArrayRangeConcrete" (formula "52") (term "0,0,0,0"))
                  (rule "replace_known_right" (formula "52") (term "0,0,0,0,0,0") (ifseqformula "65"))
                   (builtin "One Step Simplification" (formula "52"))
                  (rule "elementOfArrayRangeConcrete" (formula "52") (term "0,0,0"))
                  (rule "replace_known_right" (formula "52") (term "0,0,0,0,0") (ifseqformula "61"))
                   (builtin "One Step Simplification" (formula "52"))
                  (rule "ifthenelse_negated" (formula "52") (term "0"))
                  (rule "elementOfUnion" (formula "51") (term "0,0,0"))
                  (rule "elementOfArrayRangeConcrete" (formula "51") (term "0,0,0,0"))
                  (rule "replace_known_right" (formula "51") (term "0,0,0,0,0,0") (ifseqformula "65"))
                   (builtin "One Step Simplification" (formula "51"))
                  (rule "elementOfArrayRangeConcrete" (formula "51") (term "0,0,0"))
                  (rule "replace_known_right" (formula "51") (term "0,0,0,0,0") (ifseqformula "61"))
                   (builtin "One Step Simplification" (formula "51"))
                  (rule "ifthenelse_negated" (formula "51") (term "0"))
                  (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "47") (term "0"))
                   (builtin "One Step Simplification" (formula "47"))
                  (rule "translateJavaMod" (formula "47") (term "0"))
                  (rule "jmod_axiom" (formula "47") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "47") (term "1,0"))
                  (rule "polySimp_sepNegMonomial" (formula "47"))
                  (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                  (rule "newSym_eq" (formula "47") (inst "l=l_0") (inst "newSymDef=add(mul(begin, Z(0(#))), mul(result_22, Z(0(#))))"))
                  (rule "times_zero_1" (formula "47") (term "1,1,1"))
                  (rule "times_zero_1" (formula "47") (term "0,1,1"))
                  (rule "add_zero_right" (formula "47") (term "1,1"))
                  (rule "add_zero_right" (formula "47") (term "1"))
                  (rule "applyEq" (formula "48") (term "0,0") (ifseqformula "47"))
                  (rule "polySimp_homoEq" (formula "48"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "48") (term "0"))
                  (rule "polySimp_addComm0" (formula "48") (term "0,0"))
                  (rule "polySimp_sepPosMonomial" (formula "48"))
                  (rule "polySimp_mulComm0" (formula "48") (term "1"))
                  (rule "polySimp_rightDist" (formula "48") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                  (rule "polySimp_mulComm0" (formula "48") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "48") (term "0,1"))
                  (rule "applyEq" (formula "49") (term "4,0") (ifseqformula "48"))
                  (rule "applyEq" (formula "50") (term "3,0,1,0") (ifseqformula "48"))
                  (rule "applyEq" (formula "40") (term "0") (ifseqformula "48"))
                  (rule "inEqSimp_homoInEq1" (formula "40"))
                  (rule "polySimp_mulComm0" (formula "40") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                  (rule "polySimp_mulAssoc" (formula "40") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "40") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "40") (term "0"))
                  (rule "applyEq" (formula "45") (term "0") (ifseqformula "48"))
                  (rule "inEqSimp_homoInEq1" (formula "45"))
                  (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                  (rule "polySimp_mulAssoc" (formula "45") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "45") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "45") (term "0"))
                  (rule "polySimp_addComm0" (formula "45") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "45") (term "0"))
                  (rule "add_literals" (formula "45") (term "1,1,0"))
                  (rule "times_zero_1" (formula "45") (term "1,0"))
                  (rule "add_zero_right" (formula "45") (term "0"))
                  (rule "applyEq" (formula "46") (term "0") (ifseqformula "48"))
                  (rule "inEqSimp_homoInEq0" (formula "46"))
                  (rule "polySimp_mulComm0" (formula "46") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "46") (term "1,0"))
                  (rule "polySimp_mulAssoc" (formula "46") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "46") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "0,1,0"))
                  (rule "polySimp_addComm1" (formula "46") (term "0"))
                  (rule "polySimp_addAssoc" (formula "46") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "46") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0"))
                  (rule "add_literals" (formula "46") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "46") (term "1,0,0"))
                  (rule "add_zero_right" (formula "46") (term "0,0"))
                  (rule "applyEq" (formula "47") (term "1,0,0") (ifseqformula "48"))
                  (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "47") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2b" (formula "47") (term "0,0"))
                  (rule "add_literals" (formula "47") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "47") (term "1,0,0"))
                  (rule "add_zero_right" (formula "47") (term "0,0"))
                  (rule "applyEq" (formula "39") (term "0") (ifseqformula "48"))
                  (rule "inEqSimp_homoInEq0" (formula "39"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,0"))
                  (rule "polySimp_mulAssoc" (formula "39") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "40"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                  (rule "polySimp_elimOne" (formula "40") (term "0"))
                  (rule "inEqSimp_invertInEq0" (formula "45"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                  (rule "times_zero_2" (formula "45") (term "1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "46"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "1"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "39"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "0"))
                  (rule "polySimp_elimOne" (formula "39") (term "0"))
                  (rule "elimGcdGeq_antec" (formula "46") (inst "elimGcdRightDiv=mul(l_0, Z(6(1(#))))") (inst "elimGcdLeftDiv=jdiv(add(mul(begin, Z(neglit(1(#)))), end), Z(6(1(#))))") (inst "elimGcd=Z(6(1(#)))"))
                  (rule "mul_literals" (formula "46") (term "0,1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,0"))
                  (rule "leq_literals" (formula "46") (term "0,0"))
                   (builtin "One Step Simplification" (formula "46"))
                  (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0"))
                  (rule "add_literals" (formula "46") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "46") (term "1,0,0"))
                  (rule "add_zero_right" (formula "46") (term "0,0"))
                  (rule "polySimp_mulAssoc" (formula "46") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "46") (term "0,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "46") (term "1,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0"))
                  (rule "add_literals" (formula "46") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "46") (term "1,0,0"))
                  (rule "add_literals" (formula "46") (term "0,0"))
                  (rule "leq_literals" (formula "46") (term "0"))
                   (builtin "One Step Simplification" (formula "46"))
                  (rule "elimGcdGeq_antec" (formula "45") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                  (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,0"))
                  (rule "add_zero_right" (formula "45") (term "0,0,0,1,0"))
                  (rule "leq_literals" (formula "45") (term "0,0"))
                   (builtin "One Step Simplification" (formula "45"))
                  (rule "times_zero_1" (formula "45") (term "1,0,0,0,0"))
                  (rule "add_zero_right" (formula "45") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "45") (term "0,0"))
                  (rule "add_literals" (formula "45") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "45") (term "1,0,0"))
                  (rule "add_literals" (formula "45") (term "0,0"))
                  (rule "leq_literals" (formula "45") (term "0"))
                   (builtin "One Step Simplification" (formula "45"))
                  (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "39"))
                  (rule "times_zero_1" (formula "13") (term "0,0"))
                  (rule "add_zero_left" (formula "13") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                  (rule "elimGcdLeq_antec" (formula "13") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,0,1,0"))
                  (rule "neg_literal" (formula "13") (term "0,0,0,0,0,1,0"))
                  (rule "leq_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
                  (rule "polySimp_addLiterals" (formula "13") (term "0,0,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "13") (term "0,0"))
                  (rule "add_literals" (formula "13") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0"))
                  (rule "add_literals" (formula "13") (term "0,0"))
                  (rule "qeq_literals" (formula "13") (term "0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "15"))
                  (rule "polySimp_rightDist" (formula "41") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0"))
                  (rule "mul_literals" (formula "41") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "41") (term "0"))
                  (rule "add_literals" (formula "41") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                  (rule "mul_literals" (formula "41") (term "1"))
                  (rule "inEqSimp_subsumption6" (formula "41") (ifseqformula "47"))
                  (rule "times_zero_1" (formula "41") (term "1,1,0"))
                  (rule "greater_literals" (formula "41") (term "0,0"))
                   (builtin "One Step Simplification" (formula "41"))
                  (rule "leq_literals" (formula "41") (term "0"))
                   (builtin "One Step Simplification" (formula "41"))
                  (rule "true_left" (formula "41"))
                  (rule "Free_class_invariant_axiom_for_de_wiesler_Buffers" (formula "10") (inst "b=b"))
                   (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "43")) (ifInst ""  (formula "27")))
                  (rule "expand_inInt" (formula "10") (term "1,0,0,1"))
                  (rule "replace_int_MAX" (formula "10") (term "1,0,1,0,0,1"))
                  (rule "replace_int_MIN" (formula "10") (term "0,1,1,0,0,1"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "notLeft" (formula "10"))
                  (rule "translateJavaMulInt" (formula "10") (term "1"))
                  (rule "mul_literals" (formula "10") (term "1"))
                  (rule "eqSymm" (formula "57"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "11") (term "0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "11") (term "1,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "10"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "11") (term "0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "27"))
                  (rule "leq_literals" (formula "10") (term "0"))
                   (builtin "One Step Simplification" (formula "10"))
                  (rule "true_left" (formula "10"))
                  (rule "nnf_notAnd" (formula "36") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0"))
                  (rule "mul_literals" (formula "36") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "36") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0"))
                  (rule "mul_literals" (formula "36") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0"))
                  (rule "mul_literals" (formula "36") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "36") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                  (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "51") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "51") (term "1,0,0"))
                  (rule "mul_literals" (formula "51") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "51") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "51") (term "1,0,0"))
                  (rule "mul_literals" (formula "51") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "51") (term "0,0,0"))
                  (rule "mul_literals" (formula "51") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "51") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "51") (term "0,0,0"))
                  (rule "mul_literals" (formula "51") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "21") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                  (rule "mul_literals" (formula "21") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                  (rule "mul_literals" (formula "21") (term "1,1,0,0"))
                  (rule "nnf_imp2or" (formula "44") (term "0"))
                  (rule "nnf_imp2or" (formula "23") (term "0"))
                  (rule "nnf_imp2or" (formula "22") (term "0,1,1,1"))
                  (rule "Definition_axiom_for_countElement_in_de_wiesler_Classifier" (formula "36") (term "0,1,0"))
                  (rule "translateJavaAddInt" (formula "36") (term "0,1,0"))
                  (rule "translateJavaAddInt" (formula "36") (term "0,0,1,0"))
                  (rule "polySimp_homoEq" (formula "36") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1,0,1,0"))
                  (rule "polySimp_addComm1" (formula "36") (term "1,1,0,1,0"))
                  (rule "polySimp_addComm0" (formula "36") (term "0,1,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "36") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "36") (term "0,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "36") (term "0,0,1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "36") (term "0,1,0"))
                  (rule "polySimp_addComm0" (formula "36") (term "0,0,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,1,0"))
                  (rule "add_literals" (formula "36") (term "1,1,0,1,0"))
                  (rule "times_zero_1" (formula "36") (term "1,0,1,0"))
                  (rule "add_zero_right" (formula "36") (term "0,1,0"))
                  (rule "polySimp_sepNegMonomial" (formula "36") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "0,1,0"))
                  (rule "polySimp_elimOne" (formula "36") (term "0,1,0"))
                  (rule "Definition_axiom_for_countElement_in_de_wiesler_Classifier" (formula "51") (term "1,1,0"))
                  (rule "translateJavaAddInt" (formula "51") (term "1,1,0"))
                  (rule "translateJavaAddInt" (formula "51") (term "0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "51") (term "1,1,0"))
                  (rule "polySimp_addComm0" (formula "51") (term "0,1,1,0"))
                  (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "32") (inst "i=i") (inst "i_0=i_0"))
                  (rule "andLeft" (formula "32"))
                   (builtin "One Step Simplification" (formula "32"))
                  (rule "expand_inInt" (formula "33") (term "1,0,0"))
                  (rule "expand_inInt" (formula "32") (term "1,0,0,1"))
                  (rule "replace_int_MAX" (formula "33") (term "1,0,1,0,0"))
                  (rule "replace_int_MIN" (formula "33") (term "0,1,1,0,0"))
                  (rule "replace_int_MAX" (formula "32") (term "1,0,1,0,0,1"))
                  (rule "replace_int_MIN" (formula "32") (term "0,1,1,0,0,1"))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "34"))
                  (rule "andLeft" (formula "32"))
                  (rule "andLeft" (formula "33"))
                  (rule "andLeft" (formula "32"))
                  (rule "notLeft" (formula "32"))
                  (rule "notLeft" (formula "32"))
                  (rule "eqSymm" (formula "40") (term "1,0"))
                  (rule "translateJavaSubInt" (formula "38") (term "3,0"))
                  (rule "translateJavaShiftLeftInt" (formula "34") (term "1"))
                  (rule "translateJavaSubInt" (formula "40") (term "0,2,0,1,0"))
                  (rule "polySimp_elimSub" (formula "38") (term "3,0"))
                  (rule "mul_literals" (formula "38") (term "1,3,0"))
                  (rule "polySimp_elimSub" (formula "40") (term "0,2,0,1,0"))
                  (rule "mul_literals" (formula "40") (term "1,0,2,0,1,0"))
                  (rule "polySimp_addComm0" (formula "38") (term "3,0"))
                  (rule "polySimp_addComm0" (formula "40") (term "0,2,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "40") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "39") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "39") (term "1,1,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "40") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "40") (term "1,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "39") (term "1,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "39") (term "0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "37"))
                  (rule "inEqSimp_commuteLeq" (formula "36"))
                  (rule "inEqSimp_commuteLeq" (formula "35"))
                  (rule "inEqSimp_commuteLeq" (formula "32"))
                  (rule "applyEq" (formula "37") (term "1") (ifseqformula "34"))
                  (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "34"))
                  (rule "applyEq" (formula "62") (term "1,0,2,2,0") (ifseqformula "34"))
                  (rule "applyEq" (formula "40") (term "1,0,1,0") (ifseqformula "29"))
                  (rule "applyEq" (formula "31") (term "1,0,2,0") (ifseqformula "34"))
                  (rule "eqSymm" (formula "31"))
                  (rule "applyEq" (formula "61") (term "1,0,2,1,0") (ifseqformula "34"))
                  (rule "applyEq" (formula "35") (term "0") (ifseqformula "34"))
                  (rule "applyEq" (formula "62") (term "1,0,2,1,0") (ifseqformula "34"))
                  (rule "applyEq" (formula "65") (term "0") (ifseqformula "29"))
                  (rule "applyEq" (formula "36") (term "1") (ifseqformula "34"))
                  (rule "applyEq" (formula "61") (term "1,0,2,2,0") (ifseqformula "34"))
                  (rule "applyEq" (formula "60") (term "3,0") (ifseqformula "34"))
                  (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "29"))
                  (rule "applyEq" (formula "28") (term "2,0") (ifseqformula "34"))
                  (rule "applyEq" (formula "37") (term "0,0") (ifseqformula "29"))
                  (rule "inEqSimp_commuteGeq" (formula "37"))
                  (rule "applyEq" (formula "38") (term "1,3,0") (ifseqformula "34"))
                  (rule "applyEq" (formula "30") (term "3,0") (ifseqformula "34"))
                  (rule "applyEq" (formula "40") (term "0,1,0,0,1,0,0,0") (ifseqformula "34"))
                  (rule "applyEq" (formula "39") (term "0,1,0,0,1,0,0,0") (ifseqformula "34"))
                  (rule "applyEq" (formula "39") (term "0,1,0,0,1,1,0") (ifseqformula "34"))
                  (rule "applyEq" (formula "31") (term "1,0,2,0") (ifseqformula "34"))
                  (rule "eqSymm" (formula "31"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "40") (term "0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,1,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,1,0"))
                  (rule "mul_literals" (formula "39") (term "0,1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "39") (term "1,1,1,1,0"))
                  (rule "javaShiftLeftIntDef" (formula "34") (term "1"))
                  (rule "mod_axiom" (formula "34") (term "1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,1"))
                  (rule "javaShiftLeftIntDef" (formula "28") (term "0,1,0"))
                  (rule "mod_axiom" (formula "28") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1,0"))
                  (rule "javaShiftLeftIntDef" (formula "62") (term "1,0,2,2,0"))
                  (rule "mod_axiom" (formula "62") (term "1,0,1,0,2,2,0"))
                  (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,1,0,2,2,0"))
                  (rule "javaShiftLeftIntDef" (formula "61") (term "1,0,2,1,0"))
                  (rule "mod_axiom" (formula "61") (term "1,0,1,0,2,1,0"))
                  (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,1,0,2,1,0"))
                  (rule "javaShiftLeftIntDef" (formula "35") (term "0"))
                  (rule "mod_axiom" (formula "35") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                  (rule "javaShiftLeftIntDef" (formula "62") (term "1,0,2,1,0"))
                  (rule "mod_axiom" (formula "62") (term "1,0,1,0,2,1,0"))
                  (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,1,0,2,1,0"))
                  (rule "javaShiftLeftIntDef" (formula "36") (term "1"))
                  (rule "mod_axiom" (formula "36") (term "1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1"))
                  (rule "javaShiftLeftIntDef" (formula "61") (term "1,0,2,2,0"))
                  (rule "mod_axiom" (formula "61") (term "1,0,1,0,2,2,0"))
                  (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,1,0,2,2,0"))
                  (rule "javaShiftLeftIntDef" (formula "60") (term "3,0"))
                  (rule "mod_axiom" (formula "60") (term "1,0,3,0"))
                  (rule "polySimp_mulLiterals" (formula "60") (term "1,1,0,3,0"))
                  (rule "javaShiftLeftIntDef" (formula "28") (term "2,0"))
                  (rule "mod_axiom" (formula "28") (term "1,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,2,0"))
                  (rule "javaShiftLeftIntDef" (formula "37") (term "0"))
                  (rule "mod_axiom" (formula "37") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                  (rule "javaShiftLeftIntDef" (formula "38") (term "1,3,0"))
                  (rule "mod_axiom" (formula "38") (term "1,0,1,3,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,1,3,0"))
                  (rule "javaShiftLeftIntDef" (formula "30") (term "3,0"))
                  (rule "mod_axiom" (formula "30") (term "1,0,3,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,3,0"))
                  (rule "javaShiftLeftIntDef" (formula "31") (term "1,0,2,1"))
                  (rule "mod_axiom" (formula "31") (term "1,0,1,0,2,1"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1,0,2,1"))
                  (rule "javaShiftLeftIntDef" (formula "31") (term "1,0,2,0"))
                  (rule "mod_axiom" (formula "31") (term "1,0,1,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,1,0,2,0"))
                  (rule "javaShiftLeftIntDef" (formula "40") (term "1,1,1,0,0,0"))
                  (rule "mod_axiom" (formula "40") (term "1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "javaShiftLeftIntDef" (formula "39") (term "1,1,1,0,0,0"))
                  (rule "mod_axiom" (formula "39") (term "1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "javaShiftLeftIntDef" (formula "39") (term "1,1,1,1,0"))
                  (rule "mod_axiom" (formula "39") (term "1,0,1,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,1,1,1,1,0"))
                  (rule "shiftLeftDef" (formula "34") (term "0,1"))
                  (rule "eqSymm" (formula "34"))
                  (rule "polySimp_elimNeg" (formula "34") (term "1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "34") (term "0,1,1,0,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "34") (term "2,0,0"))
                  (rule "polySimp_elimOneLeft0" (formula "34") (term "2,0,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "34") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "34") (term "0,0,0"))
                  (rule "times_zero_1" (formula "34") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "34") (term "0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "34") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "0,0,0,0"))
                  (rule "shiftLeftDef" (formula "28") (term "0,0,1,0"))
                  (rule "polySimp_elimNeg" (formula "28") (term "1,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "0,1,1,0,0,1,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "28") (term "2,0,0,1,0"))
                  (rule "polySimp_elimOneLeft0" (formula "28") (term "2,0,0,1,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "28") (term "1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,1,0"))
                  (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,1,0"))
                  (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,0,1,0"))
                  (rule "applyEq" (formula "28") (term "0,1,0") (ifseqformula "34"))
                  (rule "shiftLeftDef" (formula "62") (term "0,1,0,2,2,0"))
                  (rule "polySimp_elimNeg" (formula "62") (term "1,1,0,1,0,2,2,0"))
                  (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,1,0,2,2,0"))
                  (rule "polySimp_rightDist" (formula "62") (term "1,1,0,1,0,2,2,0"))
                  (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,1,0,2,2,0"))
                  (rule "polySimp_mulComm0" (formula "62") (term "0,1,1,0,1,0,2,2,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "62") (term "2,0,1,0,2,2,0"))
                  (rule "polySimp_elimOneLeft0" (formula "62") (term "2,0,1,0,2,2,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "62") (term "1,0,1,0,2,2,0"))
                  (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,1,0,2,2,0"))
                  (rule "times_zero_1" (formula "62") (term "1,0,0,0,0,1,0,2,2,0"))
                  (rule "add_zero_right" (formula "62") (term "0,0,0,0,1,0,2,2,0"))
                  (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,1,0,2,2,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "62") (term "0,0,1,0,2,2,0"))
                  (rule "polySimp_mulLiterals" (formula "62") (term "0,0,0,1,0,2,2,0"))
                  (rule "applyEq" (formula "62") (term "1,0,2,2,0") (ifseqformula "34"))
                  (rule "shiftLeftDef" (formula "61") (term "0,1,0,2,1,0"))
                  (rule "polySimp_elimNeg" (formula "61") (term "1,1,0,1,0,2,1,0"))
                  (rule "polySimp_mulComm0" (formula "61") (term "1,1,0,1,0,2,1,0"))
                  (rule "polySimp_rightDist" (formula "61") (term "1,1,0,1,0,2,1,0"))
                  (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0,1,0,2,1,0"))
                  (rule "polySimp_mulComm0" (formula "61") (term "0,1,1,0,1,0,2,1,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "61") (term "2,0,1,0,2,1,0"))
                  (rule "polySimp_elimOneLeft0" (formula "61") (term "2,0,1,0,2,1,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "61") (term "1,0,1,0,2,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,1,0,2,1,0"))
                  (rule "times_zero_1" (formula "61") (term "1,0,0,0,0,1,0,2,1,0"))
                  (rule "add_zero_right" (formula "61") (term "0,0,0,0,1,0,2,1,0"))
                  (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,1,0,2,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "61") (term "0,0,1,0,2,1,0"))
                  (rule "polySimp_mulLiterals" (formula "61") (term "0,0,0,1,0,2,1,0"))
                  (rule "applyEq" (formula "61") (term "1,0,2,1,0") (ifseqformula "34"))
                  (rule "shiftLeftDef" (formula "35") (term "0,0"))
                  (rule "polySimp_elimNeg" (formula "35") (term "1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "35") (term "0,1,1,0,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "35") (term "2,0,0"))
                  (rule "polySimp_elimOneLeft0" (formula "35") (term "2,0,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "35") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,0"))
                  (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "35") (term "0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "35") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "35") (term "0,0,0,0"))
                  (rule "applyEq" (formula "35") (term "0") (ifseqformula "34"))
                  (rule "shiftLeftDef" (formula "62") (term "0,1,0,2,1,0"))
                  (rule "polySimp_elimNeg" (formula "62") (term "1,1,0,1,0,2,1,0"))
                  (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,1,0,2,1,0"))
                  (rule "polySimp_rightDist" (formula "62") (term "1,1,0,1,0,2,1,0"))
                  (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,1,0,2,1,0"))
                  (rule "polySimp_mulComm0" (formula "62") (term "0,1,1,0,1,0,2,1,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "62") (term "2,0,1,0,2,1,0"))
                  (rule "polySimp_elimOneLeft0" (formula "62") (term "2,0,1,0,2,1,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "62") (term "1,0,1,0,2,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,1,0,2,1,0"))
                  (rule "times_zero_1" (formula "62") (term "1,0,0,0,0,1,0,2,1,0"))
                  (rule "add_zero_right" (formula "62") (term "0,0,0,0,1,0,2,1,0"))
                  (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,1,0,2,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "62") (term "0,0,1,0,2,1,0"))
                  (rule "polySimp_mulLiterals" (formula "62") (term "0,0,0,1,0,2,1,0"))
                  (rule "applyEq" (formula "62") (term "1,0,2,1,0") (ifseqformula "34"))
                  (rule "shiftLeftDef" (formula "36") (term "0,1"))
                  (rule "polySimp_elimNeg" (formula "36") (term "1,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "36") (term "1,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "36") (term "0,1,1,0,1"))
                  (rule "shiftLeftPositiveShiftDef" (formula "36") (term "2,0,1"))
                  (rule "polySimp_elimOneLeft0" (formula "36") (term "2,0,1"))
                  (rule "shiftRightPositiveShiftDef" (formula "36") (term "1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1"))
                  (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,1"))
                  (rule "add_literals" (formula "36") (term "0,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1"))
                  (rule "inEqSimp_commuteGeq" (formula "36"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,0"))
                  (rule "applyEq" (formula "36") (term "0") (ifseqformula "34"))
                  (rule "inEqSimp_commuteLeq" (formula "36"))
                  (rule "shiftLeftDef" (formula "61") (term "0,1,0,2,2,0"))
                  (rule "polySimp_elimNeg" (formula "61") (term "1,1,0,1,0,2,2,0"))
                  (rule "polySimp_mulComm0" (formula "61") (term "1,1,0,1,0,2,2,0"))
                  (rule "polySimp_rightDist" (formula "61") (term "1,1,0,1,0,2,2,0"))
                  (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0,1,0,2,2,0"))
                  (rule "polySimp_mulComm0" (formula "61") (term "0,1,1,0,1,0,2,2,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "61") (term "2,0,1,0,2,2,0"))
                  (rule "polySimp_elimOneLeft0" (formula "61") (term "2,0,1,0,2,2,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "61") (term "1,0,1,0,2,2,0"))
                  (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,1,0,2,2,0"))
                  (rule "times_zero_1" (formula "61") (term "1,0,0,0,0,1,0,2,2,0"))
                  (rule "add_zero_right" (formula "61") (term "0,0,0,0,1,0,2,2,0"))
                  (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,1,0,2,2,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "61") (term "0,0,1,0,2,2,0"))
                  (rule "polySimp_mulLiterals" (formula "61") (term "0,0,0,1,0,2,2,0"))
                  (rule "applyEq" (formula "61") (term "1,0,2,2,0") (ifseqformula "34"))
                  (rule "shiftLeftDef" (formula "60") (term "0,3,0"))
                  (rule "polySimp_elimNeg" (formula "60") (term "1,1,0,3,0"))
                  (rule "polySimp_mulComm0" (formula "60") (term "1,1,0,3,0"))
                  (rule "polySimp_rightDist" (formula "60") (term "1,1,0,3,0"))
                  (rule "polySimp_mulLiterals" (formula "60") (term "1,1,1,0,3,0"))
                  (rule "polySimp_mulComm0" (formula "60") (term "0,1,1,0,3,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "60") (term "2,0,3,0"))
                  (rule "polySimp_elimOneLeft0" (formula "60") (term "2,0,3,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "60") (term "1,0,3,0"))
                  (rule "inEqSimp_ltToLeq" (formula "60") (term "0,0,3,0"))
                  (rule "times_zero_1" (formula "60") (term "1,0,0,0,0,3,0"))
                  (rule "add_zero_right" (formula "60") (term "0,0,0,0,3,0"))
                  (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,3,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "60") (term "0,0,3,0"))
                  (rule "polySimp_mulLiterals" (formula "60") (term "0,0,0,3,0"))
                  (rule "applyEq" (formula "60") (term "3,0") (ifseqformula "34"))
                  (rule "shiftLeftDef" (formula "28") (term "0,2,0"))
                  (rule "polySimp_elimNeg" (formula "28") (term "1,1,0,2,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,2,0"))
                  (rule "polySimp_rightDist" (formula "28") (term "1,1,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,2,0"))
                  (rule "polySimp_mulComm0" (formula "28") (term "0,1,1,0,2,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "28") (term "2,0,2,0"))
                  (rule "polySimp_elimOneLeft0" (formula "28") (term "2,0,2,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "28") (term "1,0,2,0"))
                  (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,2,0"))
                  (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,2,0"))
                  (rule "add_literals" (formula "28") (term "0,0,0,0,2,0"))
                  (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,2,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "28") (term "0,0,0,2,0"))
                  (rule "applyEq" (formula "28") (term "2,0") (ifseqformula "34"))
                  (rule "shiftLeftDef" (formula "37") (term "0,0"))
                  (rule "polySimp_elimNeg" (formula "37") (term "1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "37") (term "0,1,1,0,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "37") (term "2,0,0"))
                  (rule "polySimp_elimOneLeft0" (formula "37") (term "2,0,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "37") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0"))
                  (rule "times_zero_1" (formula "37") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "37") (term "0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "37") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "37") (term "0,0,0,0"))
                  (rule "applyEq" (formula "37") (term "0") (ifseqformula "34"))
                  (rule "shiftLeftDef" (formula "38") (term "0,1,3,0"))
                  (rule "polySimp_elimNeg" (formula "38") (term "1,1,0,1,3,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,1,3,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,1,0,1,3,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,1,3,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "0,1,1,0,1,3,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "38") (term "2,0,1,3,0"))
                  (rule "polySimp_elimOneLeft0" (formula "38") (term "2,0,1,3,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "38") (term "1,0,1,3,0"))
                  (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,1,3,0"))
                  (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,1,3,0"))
                  (rule "add_zero_right" (formula "38") (term "0,0,0,0,1,3,0"))
                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,1,3,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0,1,3,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,1,3,0"))
                  (rule "applyEq" (formula "38") (term "1,3,0") (ifseqformula "34"))
                  (rule "shiftLeftDef" (formula "30") (term "0,3,0"))
                  (rule "polySimp_elimNeg" (formula "30") (term "1,1,0,3,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,3,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0,3,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,3,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "0,1,1,0,3,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "30") (term "2,0,3,0"))
                  (rule "polySimp_elimOneLeft0" (formula "30") (term "2,0,3,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "30") (term "1,0,3,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,3,0"))
                  (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,3,0"))
                  (rule "add_zero_right" (formula "30") (term "0,0,0,0,3,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,3,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,0,3,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0,3,0"))
                  (rule "applyEq" (formula "30") (term "3,0") (ifseqformula "34"))
                  (rule "shiftLeftDef" (formula "31") (term "0,1,0,2,1"))
                  (rule "eqSymm" (formula "31"))
                  (rule "polySimp_elimNeg" (formula "31") (term "1,1,0,1,0,2,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,1,0,2,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "1,1,0,1,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,1,0,2,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "0,1,1,0,1,0,2,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "31") (term "2,0,1,0,2,0"))
                  (rule "polySimp_elimOneLeft0" (formula "31") (term "2,0,1,0,2,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "31") (term "1,0,1,0,2,0"))
                  (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,1,0,2,0"))
                  (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,1,0,2,0"))
                  (rule "add_literals" (formula "31") (term "0,0,0,0,1,0,2,0"))
                  (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,1,0,2,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0,1,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,1,0,2,0"))
                  (rule "applyEq" (formula "31") (term "1,0,2,0") (ifseqformula "34"))
                  (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "31"))
                  (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "31"))
                  (rule "shiftLeftDef" (formula "40") (term "0,1,1,1,0,0,0"))
                  (rule "polySimp_elimNeg" (formula "40") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "40") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "40") (term "0,1,1,0,1,1,1,0,0,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "40") (term "2,0,1,1,1,0,0,0"))
                  (rule "polySimp_elimOneLeft0" (formula "40") (term "2,0,1,1,1,0,0,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "40") (term "1,0,1,1,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,1,1,0,0,0"))
                  (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,1,1,1,0,0,0"))
                  (rule "add_zero_right" (formula "40") (term "0,0,0,0,1,1,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0,1,1,1,0,0,0"))
                  (rule "applyEq" (formula "40") (term "1,1,1,0,0,0") (ifseqformula "34"))
                  (rule "shiftLeftDef" (formula "39") (term "0,1,1,1,0,0,0"))
                  (rule "polySimp_elimNeg" (formula "39") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "0,1,1,0,1,1,1,0,0,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "39") (term "2,0,1,1,1,0,0,0"))
                  (rule "polySimp_elimOneLeft0" (formula "39") (term "2,0,1,1,1,0,0,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "39") (term "1,0,1,1,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,1,1,0,0,0"))
                  (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,1,1,1,0,0,0"))
                  (rule "add_zero_right" (formula "39") (term "0,0,0,0,1,1,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1,1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0,1,1,1,0,0,0"))
                  (rule "applyEq" (formula "39") (term "1,1,1,0,0,0") (ifseqformula "34"))
                  (rule "shiftLeftDef" (formula "39") (term "0,1,1,1,1,0"))
                  (rule "polySimp_elimNeg" (formula "39") (term "1,1,0,1,1,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,1,1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,1,0,1,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,1,1,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "39") (term "0,1,1,0,1,1,1,1,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "39") (term "2,0,1,1,1,1,0"))
                  (rule "polySimp_elimOneLeft0" (formula "39") (term "2,0,1,1,1,1,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "39") (term "1,0,1,1,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1,1,1,1,0"))
                  (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,1,1,1,1,0"))
                  (rule "add_zero_right" (formula "39") (term "0,0,0,0,1,1,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1,1,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,0,1,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0,1,1,1,1,0"))
                  (rule "applyEq" (formula "39") (term "1,1,1,1,0") (ifseqformula "34"))
                  (rule "shiftLeftDef" (formula "31") (term "0,1,0,2,1"))
                  (rule "eqSymm" (formula "31"))
                  (rule "polySimp_elimNeg" (formula "31") (term "1,1,0,1,0,2,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,1,0,2,0"))
                  (rule "polySimp_rightDist" (formula "31") (term "1,1,0,1,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,1,0,2,0"))
                  (rule "polySimp_mulComm0" (formula "31") (term "0,1,1,0,1,0,2,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "31") (term "2,0,1,0,2,0"))
                  (rule "polySimp_elimOneLeft0" (formula "31") (term "2,0,1,0,2,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "31") (term "1,0,1,0,2,0"))
                  (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,1,0,2,0"))
                  (rule "times_zero_1" (formula "31") (term "1,0,0,0,0,1,0,2,0"))
                  (rule "add_zero_right" (formula "31") (term "0,0,0,0,1,0,2,0"))
                  (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,1,0,2,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0,1,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,1,0,2,0"))
                  (rule "applyEq" (formula "31") (term "1,0,2,0") (ifseqformula "34"))
                  (rule "shiftLeftDef" (formula "61") (term "0,1,0,2,1,0"))
                  (rule "polySimp_elimNeg" (formula "61") (term "1,1,0,1,0,2,1,0"))
                  (rule "polySimp_mulComm0" (formula "61") (term "1,1,0,1,0,2,1,0"))
                  (rule "polySimp_rightDist" (formula "61") (term "1,1,0,1,0,2,1,0"))
                  (rule "polySimp_mulLiterals" (formula "61") (term "1,1,1,0,1,0,2,1,0"))
                  (rule "polySimp_mulComm0" (formula "61") (term "0,1,1,0,1,0,2,1,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "61") (term "2,0,1,0,2,1,0"))
                  (rule "polySimp_elimOneLeft0" (formula "61") (term "2,0,1,0,2,1,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "61") (term "1,0,1,0,2,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "61") (term "0,0,1,0,2,1,0"))
                  (rule "times_zero_1" (formula "61") (term "1,0,0,0,0,1,0,2,1,0"))
                  (rule "add_zero_right" (formula "61") (term "0,0,0,0,1,0,2,1,0"))
                  (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,1,0,2,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "61") (term "0,0,1,0,2,1,0"))
                  (rule "polySimp_mulLiterals" (formula "61") (term "0,0,0,1,0,2,1,0"))
                  (rule "applyEq" (formula "61") (term "1,0,2,1,0") (ifseqformula "34"))
                  (rule "applyEq" (formula "61") (term "1,0") (ifseqformula "31"))
                  (rule "shiftLeftDef" (formula "62") (term "0,1,0,2,1,0"))
                  (rule "polySimp_elimNeg" (formula "62") (term "1,1,0,1,0,2,1,0"))
                  (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,1,0,2,1,0"))
                  (rule "polySimp_rightDist" (formula "62") (term "1,1,0,1,0,2,1,0"))
                  (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,1,0,2,1,0"))
                  (rule "polySimp_mulComm0" (formula "62") (term "0,1,1,0,1,0,2,1,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "62") (term "2,0,1,0,2,1,0"))
                  (rule "polySimp_elimOneLeft0" (formula "62") (term "2,0,1,0,2,1,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "62") (term "1,0,1,0,2,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,1,0,2,1,0"))
                  (rule "times_zero_1" (formula "62") (term "1,0,0,0,0,1,0,2,1,0"))
                  (rule "add_zero_right" (formula "62") (term "0,0,0,0,1,0,2,1,0"))
                  (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,1,0,2,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "62") (term "0,0,1,0,2,1,0"))
                  (rule "polySimp_mulLiterals" (formula "62") (term "0,0,0,1,0,2,1,0"))
                  (rule "applyEq" (formula "62") (term "1,0,2,1,0") (ifseqformula "34"))
                  (rule "applyEq" (formula "62") (term "1,0") (ifseqformula "31"))
                  (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "37"))
                  (rule "mul_literals" (formula "35") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                  (rule "mul_literals" (formula "35") (term "1"))
                  (rule "nnf_imp2or" (formula "10") (term "0"))
                  (rule "nnf_notAnd" (formula "53") (term "0,0"))
                  (rule "nnf_notAnd" (formula "23") (term "0,0"))
                  (rule "nnf_notAnd" (formula "21") (term "0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "21") (term "0,0,0,0"))
                  (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0,0"))
                  (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0,0"))
                  (rule "add_literals" (formula "21") (term "0,0,0,0,0,0,0"))
                  (rule "add_zero_left" (formula "21") (term "0,0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "0,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0"))
                  (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0,0"))
                  (rule "inEqSimp_notGeq" (formula "21") (term "1,0,0,0"))
                  (rule "times_zero_1" (formula "21") (term "1,0,0,1,0,0,0"))
                  (rule "add_zero_right" (formula "21") (term "0,0,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "21") (term "1,1,0,0,0"))
                  (rule "nnf_notAnd" (formula "22") (term "0,0,1,1,1"))
                  (rule "inEqSimp_notGeq" (formula "22") (term "1,0,0,1,1,1"))
                  (rule "mul_literals" (formula "22") (term "1,0,0,1,0,0,1,1,1"))
                  (rule "add_literals" (formula "22") (term "0,0,1,0,0,1,1,1"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0,0,1,1,1"))
                  (rule "mul_literals" (formula "22") (term "1,1,0,0,1,1,1"))
                  (rule "inEqSimp_notLeq" (formula "22") (term "0,0,0,1,1,1"))
                  (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0,1,1,1"))
                  (rule "add_literals" (formula "22") (term "0,0,0,0,0,1,1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "0,0,0,1,1,1"))
                  (rule "mul_literals" (formula "22") (term "1,0,0,0,1,1,1"))
                  (rule "expand_moduloInteger" (formula "34") (term "0"))
                  (rule "replace_int_HALFRANGE" (formula "34") (term "0,0,1,0"))
                  (rule "replace_int_MIN" (formula "34") (term "0,0"))
                  (rule "replace_int_RANGE" (formula "34") (term "1,1,0"))
                  (rule "polySimp_homoEq" (formula "34"))
                  (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                  (rule "mul_literals" (formula "34") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "34") (term "0"))
                  (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                  (rule "polySimp_sepNegMonomial" (formula "34"))
                  (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                  (rule "polySimp_elimOne" (formula "34") (term "0"))
                  (rule "Definition_axiom_for_countElement_in_de_wiesler_Buffers" (formula "22") (term "0,1,0,1,1,1") (inst "b=b"))
                  (rule "translateJavaCastInt" (formula "22") (term "0,1,0,1,1,1"))
                  (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "22") (term "0"))
                  (rule "replace_known_right" (formula "22") (term "0,0,0") (ifseqformula "67"))
                   (builtin "One Step Simplification" (formula "22") (ifInst ""  (formula "66")))
                  (rule "andLeft" (formula "22"))
                  (rule "andLeft" (formula "23"))
                  (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "62") (term "1,1,1,0") (inst "i=i_1"))
                  (rule "polySimp_homoEq" (formula "62") (term "1,0"))
                  (rule "polySimp_addComm1" (formula "62") (term "0,1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "62") (term "1,0"))
                  (rule "polySimp_mulComm0" (formula "62") (term "1,1,0"))
                  (rule "polySimp_rightDist" (formula "62") (term "1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "62") (term "1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "62") (term "0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "62") (term "0,0,1,1,0"))
                  (rule "Class_invariant_axiom_for_de_wiesler_Tree" (formula "66") (inst "i=i_1") (inst "i_0=i_0"))
                   (builtin "One Step Simplification" (formula "66") (ifInst ""  (formula "67")) (ifInst ""  (formula "35")))
                  (rule "expand_inInt" (formula "66") (term "1,0,0,1,0"))
                  (rule "expand_inInt" (formula "66") (term "1,0,0,1"))
                  (rule "replace_int_MAX" (formula "66") (term "1,0,1,0,0,1,0"))
                  (rule "replace_int_MIN" (formula "66") (term "0,1,1,0,0,1,0"))
                  (rule "replace_int_MIN" (formula "66") (term "0,1,1,0,0,1"))
                  (rule "replace_int_MAX" (formula "66") (term "1,0,1,0,0,1"))
                  (rule "andLeft" (formula "66"))
                  (rule "andLeft" (formula "66"))
                  (rule "andLeft" (formula "66"))
                  (rule "andLeft" (formula "66"))
                  (rule "andLeft" (formula "66"))
                  (rule "andLeft" (formula "66"))
                  (rule "andLeft" (formula "68"))
                  (rule "andLeft" (formula "66"))
                  (rule "notLeft" (formula "66"))
                  (rule "eqSymm" (formula "73") (term "1,0"))
                  (rule "translateJavaSubInt" (formula "71") (term "3,0"))
                  (rule "translateJavaShiftLeftInt" (formula "67") (term "1"))
                  (rule "translateJavaSubInt" (formula "73") (term "0,2,0,1,0"))
                  (rule "polySimp_elimSub" (formula "71") (term "3,0"))
                  (rule "mul_literals" (formula "71") (term "1,3,0"))
                  (rule "polySimp_elimSub" (formula "73") (term "0,2,0,1,0"))
                  (rule "mul_literals" (formula "73") (term "1,0,2,0,1,0"))
                  (rule "polySimp_addComm0" (formula "71") (term "3,0"))
                  (rule "polySimp_addComm0" (formula "73") (term "0,2,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "73") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "73") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "72") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "72") (term "1,1,0"))
                  (rule "polySimp_mulComm0" (formula "72") (term "1,0,0,1,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "73") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "73") (term "1,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "72") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "72") (term "0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "72") (term "1,1,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "70"))
                  (rule "inEqSimp_commuteLeq" (formula "69"))
                  (rule "inEqSimp_commuteLeq" (formula "68"))
                  (rule "inEqSimp_commuteLeq" (formula "66"))
                  (rule "applyEq" (formula "64") (term "1,0,2,2,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "32") (term "3,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "65") (term "1,0,2,2,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "64") (term "1,0,2,1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "33") (term "1,0,2,0") (ifseqformula "66"))
                  (rule "eqSymm" (formula "33"))
                  (rule "applyEq" (formula "42") (term "1,1,1,0,0,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "40") (term "0") (ifseqformula "66"))
                  (rule "applyEq" (formula "41") (term "1,3,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "43") (term "1,1,1,0,0,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "63") (term "3,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "30") (term "2,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "42") (term "1,1,1,1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "39") (term "1") (ifseqformula "66"))
                  (rule "applyEq" (formula "65") (term "1,0,2,1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "38") (term "0") (ifseqformula "66"))
                  (rule "applyEq" (formula "68") (term "1,0") (ifseqformula "31"))
                  (rule "applyEq" (formula "67") (term "0,0") (ifseqformula "31"))
                  (rule "inEqSimp_commuteGeq" (formula "67"))
                  (rule "applyEq" (formula "68") (term "1,3,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "71") (term "0") (ifseqformula "31"))
                  (rule "applyEq" (formula "70") (term "1,0,1,0") (ifseqformula "31"))
                  (rule "applyEq" (formula "36") (term "1,1") (ifseqformula "66"))
                  (rule "applyEq" (formula "70") (term "0,1,0,0,1,0,0,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "69") (term "0,1,0,0,1,0,0,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "69") (term "0,1,0,0,1,1,0") (ifseqformula "66"))
                  (rule "applyEq" (formula "33") (term "1,0,2,0") (ifseqformula "66"))
                  (rule "eqSymm" (formula "33"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "70") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "70") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "70") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "70") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "70") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "70") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "69") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "69") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "69") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "69") (term "1,1,1,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "69") (term "1,1,0"))
                  (rule "polySimp_mulComm0" (formula "69") (term "1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "69") (term "1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "69") (term "1,1,1,1,0"))
                  (rule "mul_literals" (formula "69") (term "0,1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "69") (term "1,1,1,1,0"))
                  (rule "javaShiftLeftIntDef" (formula "66") (term "1"))
                  (rule "applyEq" (formula "67") (term "0") (ifseqformula "66"))
                  (rule "mod_axiom" (formula "66") (term "1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "66") (term "1,1,0,1"))
                  (rule "mod_axiom" (formula "67") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,0"))
                  (rule "javaShiftLeftIntDef" (formula "64") (term "1,0,2,2,0"))
                  (rule "mod_axiom" (formula "64") (term "1,0,1,0,2,2,0"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,1,0,2,2,0"))
                  (rule "javaShiftLeftIntDef" (formula "32") (term "3,0"))
                  (rule "mod_axiom" (formula "32") (term "1,0,3,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,3,0"))
                  (rule "javaShiftLeftIntDef" (formula "65") (term "1,0,2,2,0"))
                  (rule "mod_axiom" (formula "65") (term "1,0,1,0,2,2,0"))
                  (rule "polySimp_mulLiterals" (formula "65") (term "1,1,0,1,0,2,2,0"))
                  (rule "javaShiftLeftIntDef" (formula "64") (term "1,0,2,1,0"))
                  (rule "mod_axiom" (formula "64") (term "1,0,1,0,2,1,0"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,1,0,2,1,0"))
                  (rule "javaShiftLeftIntDef" (formula "42") (term "1,1,1,0,0,0"))
                  (rule "mod_axiom" (formula "42") (term "1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "javaShiftLeftIntDef" (formula "40") (term "0"))
                  (rule "mod_axiom" (formula "40") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                  (rule "javaShiftLeftIntDef" (formula "40") (term "1,3,0"))
                  (rule "mod_axiom" (formula "40") (term "1,0,1,3,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,1,3,0"))
                  (rule "javaShiftLeftIntDef" (formula "42") (term "1,1,1,0,0,0"))
                  (rule "mod_axiom" (formula "42") (term "1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "javaShiftLeftIntDef" (formula "62") (term "3,0"))
                  (rule "mod_axiom" (formula "62") (term "1,0,3,0"))
                  (rule "polySimp_mulLiterals" (formula "62") (term "1,1,0,3,0"))
                  (rule "javaShiftLeftIntDef" (formula "30") (term "2,0"))
                  (rule "mod_axiom" (formula "30") (term "1,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,2,0"))
                  (rule "javaShiftLeftIntDef" (formula "41") (term "1,1,1,1,0"))
                  (rule "mod_axiom" (formula "41") (term "1,0,1,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,1,1,1,0"))
                  (rule "javaShiftLeftIntDef" (formula "39") (term "1"))
                  (rule "mod_axiom" (formula "39") (term "1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,1"))
                  (rule "javaShiftLeftIntDef" (formula "64") (term "1,0,2,1,0"))
                  (rule "mod_axiom" (formula "64") (term "1,0,1,0,2,1,0"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,1,0,2,1,0"))
                  (rule "javaShiftLeftIntDef" (formula "30") (term "0,1,0"))
                  (rule "mod_axiom" (formula "30") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1,0"))
                  (rule "javaShiftLeftIntDef" (formula "38") (term "0"))
                  (rule "mod_axiom" (formula "38") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                  (rule "javaShiftLeftIntDef" (formula "67") (term "1,3,0"))
                  (rule "mod_axiom" (formula "67") (term "1,0,1,3,0"))
                  (rule "polySimp_mulLiterals" (formula "67") (term "1,1,0,1,3,0"))
                  (rule "javaShiftLeftIntDef" (formula "36") (term "1,1"))
                  (rule "mod_axiom" (formula "36") (term "1,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,1,1"))
                  (rule "javaShiftLeftIntDef" (formula "33") (term "1,0,2,1"))
                  (rule "mod_axiom" (formula "33") (term "1,0,1,0,2,1"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,1,0,2,1"))
                  (rule "javaShiftLeftIntDef" (formula "33") (term "1,0,2,0"))
                  (rule "mod_axiom" (formula "33") (term "1,0,1,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,1,0,2,0"))
                  (rule "javaShiftLeftIntDef" (formula "68") (term "1,1,1,0,0,0"))
                  (rule "mod_axiom" (formula "68") (term "1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "shiftLeftDef" (formula "65") (term "0,1"))
                  (rule "eqSymm" (formula "65"))
                  (rule "polySimp_elimNeg" (formula "65") (term "1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "65") (term "0,1,1,0,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "65") (term "2,0,0"))
                  (rule "polySimp_elimOneLeft0" (formula "65") (term "2,0,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "65") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "65") (term "0,0,0"))
                  (rule "times_zero_1" (formula "65") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "65") (term "0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "65") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "65") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "65") (term "0,0,0,0"))
                  (rule "shiftLeftDef" (formula "66") (term "0,0"))
                  (rule "polySimp_elimNeg" (formula "66") (term "1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "66") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "66") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "66") (term "1,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "66") (term "0,1,1,0,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "66") (term "2,0,0"))
                  (rule "polySimp_elimOneLeft0" (formula "66") (term "2,0,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "66") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "66") (term "0,0,0"))
                  (rule "times_zero_1" (formula "66") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "66") (term "0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "66") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "66") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "66") (term "0,0,0,0"))
                  (rule "applyEq" (formula "66") (term "0") (ifseqformula "65"))
                  (rule "shiftLeftDef" (formula "63") (term "0,1,0,2,2,0"))
                  (rule "polySimp_elimNeg" (formula "63") (term "1,1,0,1,0,2,2,0"))
                  (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,1,0,2,2,0"))
                  (rule "polySimp_rightDist" (formula "63") (term "1,1,0,1,0,2,2,0"))
                  (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,1,0,2,2,0"))
                  (rule "polySimp_mulComm0" (formula "63") (term "0,1,1,0,1,0,2,2,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "63") (term "2,0,1,0,2,2,0"))
                  (rule "polySimp_elimOneLeft0" (formula "63") (term "2,0,1,0,2,2,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "63") (term "1,0,1,0,2,2,0"))
                  (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,1,0,2,2,0"))
                  (rule "times_zero_1" (formula "63") (term "1,0,0,0,0,1,0,2,2,0"))
                  (rule "add_zero_right" (formula "63") (term "0,0,0,0,1,0,2,2,0"))
                  (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,1,0,2,2,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "63") (term "0,0,1,0,2,2,0"))
                  (rule "polySimp_mulLiterals" (formula "63") (term "0,0,0,1,0,2,2,0"))
                  (rule "applyEq" (formula "63") (term "1,0,2,2,0") (ifseqformula "65"))
                  (rule "shiftLeftDef" (formula "32") (term "0,3,0"))
                  (rule "polySimp_elimNeg" (formula "32") (term "1,1,0,3,0"))
                  (rule "polySimp_mulComm0" (formula "32") (term "1,1,0,3,0"))
                  (rule "polySimp_rightDist" (formula "32") (term "1,1,0,3,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "1,1,1,0,3,0"))
                  (rule "polySimp_mulComm0" (formula "32") (term "0,1,1,0,3,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "32") (term "2,0,3,0"))
                  (rule "polySimp_elimOneLeft0" (formula "32") (term "2,0,3,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "32") (term "1,0,3,0"))
                  (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,3,0"))
                  (rule "times_zero_1" (formula "32") (term "1,0,0,0,0,3,0"))
                  (rule "add_zero_right" (formula "32") (term "0,0,0,0,3,0"))
                  (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,3,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0,0,3,0"))
                  (rule "polySimp_mulLiterals" (formula "32") (term "0,0,0,3,0"))
                  (rule "applyEq" (formula "32") (term "3,0") (ifseqformula "65"))
                  (rule "shiftLeftDef" (formula "64") (term "0,1,0,2,2,0"))
                  (rule "polySimp_elimNeg" (formula "64") (term "1,1,0,1,0,2,2,0"))
                  (rule "polySimp_mulComm0" (formula "64") (term "1,1,0,1,0,2,2,0"))
                  (rule "polySimp_rightDist" (formula "64") (term "1,1,0,1,0,2,2,0"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,0,1,0,2,2,0"))
                  (rule "polySimp_mulComm0" (formula "64") (term "0,1,1,0,1,0,2,2,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "64") (term "2,0,1,0,2,2,0"))
                  (rule "polySimp_elimOneLeft0" (formula "64") (term "2,0,1,0,2,2,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "64") (term "1,0,1,0,2,2,0"))
                  (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,1,0,2,2,0"))
                  (rule "mul_literals" (formula "64") (term "1,0,0,0,0,1,0,2,2,0"))
                  (rule "add_zero_right" (formula "64") (term "0,0,0,0,1,0,2,2,0"))
                  (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,1,0,2,2,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "64") (term "0,0,1,0,2,2,0"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "0,0,0,1,0,2,2,0"))
                  (rule "applyEq" (formula "64") (term "1,0,2,2,0") (ifseqformula "65"))
                  (rule "shiftLeftDef" (formula "63") (term "0,1,0,2,1,0"))
                  (rule "polySimp_elimNeg" (formula "63") (term "1,1,0,1,0,2,1,0"))
                  (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,1,0,2,1,0"))
                  (rule "polySimp_rightDist" (formula "63") (term "1,1,0,1,0,2,1,0"))
                  (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,1,0,2,1,0"))
                  (rule "polySimp_mulComm0" (formula "63") (term "0,1,1,0,1,0,2,1,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "63") (term "2,0,1,0,2,1,0"))
                  (rule "polySimp_elimOneLeft0" (formula "63") (term "2,0,1,0,2,1,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "63") (term "1,0,1,0,2,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,1,0,2,1,0"))
                  (rule "times_zero_1" (formula "63") (term "1,0,0,0,0,1,0,2,1,0"))
                  (rule "add_zero_right" (formula "63") (term "0,0,0,0,1,0,2,1,0"))
                  (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,1,0,2,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "63") (term "0,0,1,0,2,1,0"))
                  (rule "polySimp_mulLiterals" (formula "63") (term "0,0,0,1,0,2,1,0"))
                  (rule "applyEq" (formula "63") (term "1,0,2,1,0") (ifseqformula "65"))
                  (rule "shiftLeftDef" (formula "41") (term "0,1,1,1,0,0,0"))
                  (rule "polySimp_elimNeg" (formula "41") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "0,1,1,0,1,1,1,0,0,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "41") (term "2,0,1,1,1,0,0,0"))
                  (rule "polySimp_elimOneLeft0" (formula "41") (term "2,0,1,1,1,0,0,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "41") (term "1,0,1,1,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,1,1,1,0,0,0"))
                  (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,1,1,1,0,0,0"))
                  (rule "add_zero_right" (formula "41") (term "0,0,0,0,1,1,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,1,1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "0,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "0,0,0,1,1,1,0,0,0"))
                  (rule "applyEq" (formula "41") (term "1,1,1,0,0,0") (ifseqformula "65"))
                  (rule "shiftLeftDef" (formula "40") (term "0,1,3,0"))
                  (rule "polySimp_elimNeg" (formula "40") (term "1,1,0,1,3,0"))
                  (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,1,3,0"))
                  (rule "polySimp_rightDist" (formula "40") (term "1,1,0,1,3,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,1,3,0"))
                  (rule "polySimp_mulComm0" (formula "40") (term "0,1,1,0,1,3,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "40") (term "2,0,1,3,0"))
                  (rule "polySimp_elimOneLeft0" (formula "40") (term "2,0,1,3,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "40") (term "1,0,1,3,0"))
                  (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,1,3,0"))
                  (rule "times_zero_1" (formula "40") (term "1,0,0,0,0,1,3,0"))
                  (rule "add_zero_right" (formula "40") (term "0,0,0,0,1,3,0"))
                  (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,1,3,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0,0,1,3,0"))
                  (rule "polySimp_mulLiterals" (formula "40") (term "0,0,0,1,3,0"))
                  (rule "applyEq" (formula "40") (term "1,3,0") (ifseqformula "65"))
                  (rule "shiftLeftDef" (formula "42") (term "0,1,1,1,0,0,0"))
                  (rule "polySimp_elimNeg" (formula "42") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "42") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "42") (term "0,1,1,0,1,1,1,0,0,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "42") (term "2,0,1,1,1,0,0,0"))
                  (rule "polySimp_elimOneLeft0" (formula "42") (term "2,0,1,1,1,0,0,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "42") (term "1,0,1,1,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "42") (term "0,0,1,1,1,0,0,0"))
                  (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,1,1,1,0,0,0"))
                  (rule "add_zero_right" (formula "42") (term "0,0,0,0,1,1,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,1,1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "42") (term "0,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "0,0,0,1,1,1,0,0,0"))
                  (rule "applyEq" (formula "42") (term "1,1,1,0,0,0") (ifseqformula "65"))
                  (rule "shiftLeftDef" (formula "62") (term "0,3,0"))
                  (rule "polySimp_elimNeg" (formula "62") (term "1,1,0,3,0"))
                  (rule "polySimp_mulComm0" (formula "62") (term "1,1,0,3,0"))
                  (rule "polySimp_rightDist" (formula "62") (term "1,1,0,3,0"))
                  (rule "polySimp_mulLiterals" (formula "62") (term "1,1,1,0,3,0"))
                  (rule "polySimp_mulComm0" (formula "62") (term "0,1,1,0,3,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "62") (term "2,0,3,0"))
                  (rule "polySimp_elimOneLeft0" (formula "62") (term "2,0,3,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "62") (term "1,0,3,0"))
                  (rule "inEqSimp_ltToLeq" (formula "62") (term "0,0,3,0"))
                  (rule "times_zero_1" (formula "62") (term "1,0,0,0,0,3,0"))
                  (rule "add_literals" (formula "62") (term "0,0,0,0,3,0"))
                  (rule "polySimp_addAssoc" (formula "62") (term "0,0,0,3,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "62") (term "0,0,3,0"))
                  (rule "polySimp_mulLiterals" (formula "62") (term "0,0,0,3,0"))
                  (rule "applyEq" (formula "62") (term "3,0") (ifseqformula "65"))
                  (rule "shiftLeftDef" (formula "30") (term "0,2,0"))
                  (rule "polySimp_elimNeg" (formula "30") (term "1,1,0,2,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,2,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,2,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "0,1,1,0,2,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "30") (term "2,0,2,0"))
                  (rule "polySimp_elimOneLeft0" (formula "30") (term "2,0,2,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "30") (term "1,0,2,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,2,0"))
                  (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,2,0"))
                  (rule "add_literals" (formula "30") (term "0,0,0,0,2,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,2,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0,2,0"))
                  (rule "applyEq" (formula "30") (term "2,0") (ifseqformula "65"))
                  (rule "shiftLeftDef" (formula "41") (term "0,1,1,1,1,0"))
                  (rule "polySimp_elimNeg" (formula "41") (term "1,1,0,1,1,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,1,1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "1,1,0,1,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,1,1,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "0,1,1,0,1,1,1,1,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "41") (term "2,0,1,1,1,1,0"))
                  (rule "polySimp_elimOneLeft0" (formula "41") (term "2,0,1,1,1,1,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "41") (term "1,0,1,1,1,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,1,1,1,1,0"))
                  (rule "times_zero_1" (formula "41") (term "1,0,0,0,0,1,1,1,1,0"))
                  (rule "add_zero_right" (formula "41") (term "0,0,0,0,1,1,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,1,1,1,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "41") (term "0,0,1,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "0,0,0,1,1,1,1,0"))
                  (rule "applyEq" (formula "41") (term "1,1,1,1,0") (ifseqformula "65"))
                  (rule "shiftLeftDef" (formula "39") (term "0,1"))
                  (rule "polySimp_elimNeg" (formula "39") (term "1,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "39") (term "1,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,1"))
                  (rule "polySimp_mulComm0" (formula "39") (term "0,1,1,0,1"))
                  (rule "shiftLeftPositiveShiftDef" (formula "39") (term "2,0,1"))
                  (rule "polySimp_elimOneLeft0" (formula "39") (term "2,0,1"))
                  (rule "shiftRightPositiveShiftDef" (formula "39") (term "1,0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "39") (term "0,0,1"))
                  (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,1"))
                  (rule "add_literals" (formula "39") (term "0,0,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,1"))
                  (rule "inEqSimp_commuteGeq" (formula "39"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "39") (term "0,0,0,0"))
                  (rule "applyEq" (formula "39") (term "0") (ifseqformula "65"))
                  (rule "inEqSimp_commuteLeq" (formula "39"))
                  (rule "shiftLeftDef" (formula "64") (term "0,1,0,2,1,0"))
                  (rule "polySimp_elimNeg" (formula "64") (term "1,1,0,1,0,2,1,0"))
                  (rule "polySimp_mulComm0" (formula "64") (term "1,1,0,1,0,2,1,0"))
                  (rule "polySimp_rightDist" (formula "64") (term "1,1,0,1,0,2,1,0"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,0,1,0,2,1,0"))
                  (rule "polySimp_mulComm0" (formula "64") (term "0,1,1,0,1,0,2,1,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "64") (term "2,0,1,0,2,1,0"))
                  (rule "polySimp_elimOneLeft0" (formula "64") (term "2,0,1,0,2,1,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "64") (term "1,0,1,0,2,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,1,0,2,1,0"))
                  (rule "times_zero_1" (formula "64") (term "1,0,0,0,0,1,0,2,1,0"))
                  (rule "add_zero_right" (formula "64") (term "0,0,0,0,1,0,2,1,0"))
                  (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,1,0,2,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "64") (term "0,0,1,0,2,1,0"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "0,0,0,1,0,2,1,0"))
                  (rule "applyEq" (formula "64") (term "1,0,2,1,0") (ifseqformula "65"))
                  (rule "shiftLeftDef" (formula "30") (term "0,0,1,0"))
                  (rule "polySimp_elimNeg" (formula "30") (term "1,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "30") (term "1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "30") (term "0,1,1,0,0,1,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "30") (term "2,0,0,1,0"))
                  (rule "polySimp_elimOneLeft0" (formula "30") (term "2,0,0,1,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "30") (term "1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,1,0"))
                  (rule "times_zero_1" (formula "30") (term "1,0,0,0,0,0,1,0"))
                  (rule "add_zero_right" (formula "30") (term "0,0,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "30") (term "0,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "30") (term "0,0,0,0,1,0"))
                  (rule "applyEq" (formula "30") (term "0,1,0") (ifseqformula "65"))
                  (rule "shiftLeftDef" (formula "38") (term "0,0"))
                  (rule "polySimp_elimNeg" (formula "38") (term "1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "38") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "38") (term "0,1,1,0,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "38") (term "2,0,0"))
                  (rule "polySimp_elimOneLeft0" (formula "38") (term "2,0,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "38") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "38") (term "0,0,0"))
                  (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "38") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "38") (term "0,0,0,0"))
                  (rule "applyEq" (formula "38") (term "0") (ifseqformula "65"))
                  (rule "shiftLeftDef" (formula "67") (term "0,1,3,0"))
                  (rule "polySimp_elimNeg" (formula "67") (term "1,1,0,1,3,0"))
                  (rule "polySimp_mulComm0" (formula "67") (term "1,1,0,1,3,0"))
                  (rule "polySimp_rightDist" (formula "67") (term "1,1,0,1,3,0"))
                  (rule "polySimp_mulLiterals" (formula "67") (term "1,1,1,0,1,3,0"))
                  (rule "polySimp_mulComm0" (formula "67") (term "0,1,1,0,1,3,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "67") (term "2,0,1,3,0"))
                  (rule "polySimp_elimOneLeft0" (formula "67") (term "2,0,1,3,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "67") (term "1,0,1,3,0"))
                  (rule "inEqSimp_ltToLeq" (formula "67") (term "0,0,1,3,0"))
                  (rule "times_zero_1" (formula "67") (term "1,0,0,0,0,1,3,0"))
                  (rule "add_zero_right" (formula "67") (term "0,0,0,0,1,3,0"))
                  (rule "polySimp_addAssoc" (formula "67") (term "0,0,0,1,3,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "67") (term "0,0,1,3,0"))
                  (rule "polySimp_mulLiterals" (formula "67") (term "0,0,0,1,3,0"))
                  (rule "applyEq" (formula "67") (term "1,3,0") (ifseqformula "65"))
                  (rule "shiftLeftDef" (formula "36") (term "0,1,1"))
                  (rule "polySimp_homoEq" (formula "36"))
                  (rule "polySimp_elimNeg" (formula "36") (term "1,1,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,1,0,0"))
                  (rule "polySimp_addComm1" (formula "36") (term "0"))
                  (rule "polySimp_rightDist" (formula "36") (term "1,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "36") (term "0,1,1,0,1,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "36") (term "2,0,1,0"))
                  (rule "polySimp_elimOneLeft0" (formula "36") (term "2,0,1,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "36") (term "1,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "36") (term "0,0,1,0"))
                  (rule "times_zero_1" (formula "36") (term "1,0,0,0,0,1,0"))
                  (rule "add_zero_right" (formula "36") (term "0,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,1,0"))
                  (rule "polySimp_sepPosMonomial" (formula "36"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1"))
                  (rule "polySimp_rightDist" (formula "36") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                  (rule "mul_literals" (formula "36") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "0,0,0,0"))
                  (rule "polySimp_homoEq" (formula "36"))
                  (rule "polySimp_addComm1" (formula "36") (term "0"))
                  (rule "applyEq" (formula "36") (term "0,1,0,0") (ifseqformula "65"))
                  (rule "polySimp_sepPosMonomial" (formula "36"))
                  (rule "polySimp_mulComm0" (formula "36") (term "1"))
                  (rule "polySimp_rightDist" (formula "36") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "36") (term "1,1"))
                  (rule "mul_literals" (formula "36") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "36") (term "1,1"))
                  (rule "shiftLeftDef" (formula "33") (term "0,1,0,2,1"))
                  (rule "eqSymm" (formula "33"))
                  (rule "polySimp_elimNeg" (formula "33") (term "1,1,0,1,0,2,0"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,1,0,2,0"))
                  (rule "polySimp_rightDist" (formula "33") (term "1,1,0,1,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,1,0,2,0"))
                  (rule "polySimp_mulComm0" (formula "33") (term "0,1,1,0,1,0,2,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "33") (term "2,0,1,0,2,0"))
                  (rule "polySimp_elimOneLeft0" (formula "33") (term "2,0,1,0,2,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "33") (term "1,0,1,0,2,0"))
                  (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,1,0,2,0"))
                  (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,1,0,2,0"))
                  (rule "add_zero_right" (formula "33") (term "0,0,0,0,1,0,2,0"))
                  (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,1,0,2,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0,0,1,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0,1,0,2,0"))
                  (rule "applyEq" (formula "33") (term "1,0,2,0") (ifseqformula "65"))
                  (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "33"))
                  (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "33"))
                  (rule "shiftLeftDef" (formula "68") (term "0,1,1,1,0,0,0"))
                  (rule "polySimp_elimNeg" (formula "68") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "68") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "68") (term "1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "68") (term "1,1,1,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "68") (term "0,1,1,0,1,1,1,0,0,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "68") (term "2,0,1,1,1,0,0,0"))
                  (rule "polySimp_elimOneLeft0" (formula "68") (term "2,0,1,1,1,0,0,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "68") (term "1,0,1,1,1,0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "68") (term "0,0,1,1,1,0,0,0"))
                  (rule "times_zero_1" (formula "68") (term "1,0,0,0,0,1,1,1,0,0,0"))
                  (rule "add_literals" (formula "68") (term "0,0,0,0,1,1,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "68") (term "0,0,0,1,1,1,0,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "68") (term "0,0,1,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "68") (term "0,0,0,1,1,1,0,0,0"))
                  (rule "applyEq" (formula "68") (term "1,1,1,0,0,0") (ifseqformula "65"))
                  (rule "shiftLeftDef" (formula "33") (term "0,1,0,2,1"))
                  (rule "eqSymm" (formula "33"))
                  (rule "polySimp_elimNeg" (formula "33") (term "1,1,0,1,0,2,0"))
                  (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,1,0,2,0"))
                  (rule "polySimp_rightDist" (formula "33") (term "1,1,0,1,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,1,0,2,0"))
                  (rule "polySimp_mulComm0" (formula "33") (term "0,1,1,0,1,0,2,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "33") (term "2,0,1,0,2,0"))
                  (rule "polySimp_elimOneLeft0" (formula "33") (term "2,0,1,0,2,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "33") (term "1,0,1,0,2,0"))
                  (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,1,0,2,0"))
                  (rule "times_zero_1" (formula "33") (term "1,0,0,0,0,1,0,2,0"))
                  (rule "add_zero_right" (formula "33") (term "0,0,0,0,1,0,2,0"))
                  (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,1,0,2,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0,0,1,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "33") (term "0,0,0,1,0,2,0"))
                  (rule "applyEq" (formula "33") (term "1,0,2,0") (ifseqformula "65"))
                  (rule "shiftLeftDef" (formula "64") (term "0,1,0,2,1,0"))
                  (rule "polySimp_elimNeg" (formula "64") (term "1,1,0,1,0,2,1,0"))
                  (rule "polySimp_mulComm0" (formula "64") (term "1,1,0,1,0,2,1,0"))
                  (rule "polySimp_rightDist" (formula "64") (term "1,1,0,1,0,2,1,0"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "1,1,1,0,1,0,2,1,0"))
                  (rule "polySimp_mulComm0" (formula "64") (term "0,1,1,0,1,0,2,1,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "64") (term "2,0,1,0,2,1,0"))
                  (rule "polySimp_elimOneLeft0" (formula "64") (term "2,0,1,0,2,1,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "64") (term "1,0,1,0,2,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,1,0,2,1,0"))
                  (rule "times_zero_1" (formula "64") (term "1,0,0,0,0,1,0,2,1,0"))
                  (rule "add_zero_right" (formula "64") (term "0,0,0,0,1,0,2,1,0"))
                  (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,1,0,2,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "64") (term "0,0,1,0,2,1,0"))
                  (rule "polySimp_mulLiterals" (formula "64") (term "0,0,0,1,0,2,1,0"))
                  (rule "applyEq" (formula "64") (term "1,0,2,1,0") (ifseqformula "65"))
                  (rule "applyEq" (formula "64") (term "1,0") (ifseqformula "33"))
                  (rule "shiftLeftDef" (formula "63") (term "0,1,0,2,1,0"))
                  (rule "polySimp_elimNeg" (formula "63") (term "1,1,0,1,0,2,1,0"))
                  (rule "polySimp_mulComm0" (formula "63") (term "1,1,0,1,0,2,1,0"))
                  (rule "polySimp_rightDist" (formula "63") (term "1,1,0,1,0,2,1,0"))
                  (rule "polySimp_mulLiterals" (formula "63") (term "1,1,1,0,1,0,2,1,0"))
                  (rule "polySimp_mulComm0" (formula "63") (term "0,1,1,0,1,0,2,1,0"))
                  (rule "shiftLeftPositiveShiftDef" (formula "63") (term "2,0,1,0,2,1,0"))
                  (rule "polySimp_elimOneLeft0" (formula "63") (term "2,0,1,0,2,1,0"))
                  (rule "shiftRightPositiveShiftDef" (formula "63") (term "1,0,1,0,2,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "63") (term "0,0,1,0,2,1,0"))
                  (rule "times_zero_1" (formula "63") (term "1,0,0,0,0,1,0,2,1,0"))
                  (rule "add_zero_right" (formula "63") (term "0,0,0,0,1,0,2,1,0"))
                  (rule "polySimp_addAssoc" (formula "63") (term "0,0,0,1,0,2,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "63") (term "0,0,1,0,2,1,0"))
                  (rule "polySimp_mulLiterals" (formula "63") (term "0,0,0,1,0,2,1,0"))
                  (rule "applyEq" (formula "63") (term "1,0,2,1,0") (ifseqformula "65"))
                  (rule "applyEq" (formula "63") (term "1,0") (ifseqformula "33"))
                  (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "66"))
                  (rule "mul_literals" (formula "38") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                  (rule "mul_literals" (formula "38") (term "1"))
                  (rule "Contract_axiom_for_countElement_in_Buffers" (formula "46") (term "0,1,1,0"))
                  (rule "replace_known_left" (formula "46") (term "1,0,0,0") (ifseqformula "2"))
                   (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "22")) (ifInst ""  (formula "8")) (ifInst ""  (formula "92")) (ifInst ""  (formula "22")))
                  (rule "Contract_axiom_for_isClassifiedUntil_in_Classifier" (formula "61") (term "0"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "1,0,0") (ifseqformula "49"))
                  (rule "wellFormedAnonEQ" (formula "61") (term "1,0,0,0") (ifseqformula "49"))
                  (rule "translateJavaSubInt" (formula "61") (term "0,0,0,1,1,1,0,0,0,0"))
                  (rule "eqSymm" (formula "61") (term "0,1,1,0,0,0,0"))
                  (rule "replace_known_right" (formula "61") (term "0,0,1,1,1,1,1,1,0,0,0,0") (ifseqformula "92"))
                   (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "26")) (ifInst ""  (formula "94")) (ifInst ""  (formula "93")) (ifInst ""  (formula "2")) (ifInst ""  (formula "48")) (ifInst ""  (formula "3")) (ifInst ""  (formula "91")))
                  (rule "polySimp_elimSub" (formula "61") (term "0,0,0,1,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,0,1,1,0"))
                  (rule "add_literals" (formula "61") (term "1,1,0,0,0,1,1,0"))
                  (rule "times_zero_1" (formula "61") (term "1,0,0,0,1,1,0"))
                  (rule "add_zero_right" (formula "61") (term "0,0,0,1,1,0"))
                  (rule "inEqSimp_commuteGeq" (formula "61") (term "0,1,0"))
                  (rule "applyEq" (formula "61") (term "0,0,1,0") (ifseqformula "26"))
                  (rule "inEqSimp_subsumption0" (formula "61") (term "0,1,0") (ifseqformula "12"))
                  (rule "inEqSimp_homoInEq0" (formula "61") (term "0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "61") (term "1,0,0,0,1,0"))
                  (rule "mul_literals" (formula "61") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "61") (term "0,0,0,0,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,0,1,0"))
                  (rule "add_literals" (formula "61") (term "1,1,0,0,0,1,0"))
                  (rule "times_zero_1" (formula "61") (term "1,0,0,0,1,0"))
                  (rule "add_literals" (formula "61") (term "0,0,0,1,0"))
                  (rule "qeq_literals" (formula "61") (term "0,0,1,0"))
                   (builtin "One Step Simplification" (formula "61"))
                  (rule "Definition_axiom_for_countElement_in_de_wiesler_Functions" (formula "47") (term "0,1,0") (inst "i=i_1"))
                  (rule "bsum_lower_equals_upper" (formula "47") (term "0,1,0"))
                  (rule "eqSymm" (formula "47") (term "1,0"))
                  (rule "polySimp_invertEq" (formula "47") (term "1,0"))
                  (rule "polySimp_mulLiterals" (formula "47") (term "0,1,0"))
                  (rule "mul_literals" (formula "47") (term "1,1,0"))
                  (rule "polySimp_elimOne" (formula "47") (term "0,1,0"))
                  (rule "Definition_axiom_for_isClassifiedUntil_in_de_wiesler_Classifier" (formula "62") (term "0") (inst "b=b"))
                   (builtin "One Step Simplification" (formula "62"))
                  (rule "expand_inInt" (formula "62") (term "1,0,0,1,0"))
                  (rule "replace_int_MIN" (formula "62") (term "0,1,1,0,0,1,0"))
                  (rule "replace_int_MAX" (formula "62") (term "1,0,1,0,0,1,0"))
                  (rule "andLeft" (formula "62"))
                  (rule "andLeft" (formula "62"))
                  (rule "andLeft" (formula "62"))
                  (rule "andLeft" (formula "62"))
                  (rule "translateJavaSubInt" (formula "66") (term "1"))
                  (rule "polySimp_elimSub" (formula "66") (term "1"))
                  (rule "polySimp_mulComm0" (formula "66") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "66") (term "1,1"))
                  (rule "polySimp_mulAssoc" (formula "66") (term "0,1,1"))
                  (rule "polySimp_mulComm0" (formula "66") (term "0,0,1,1"))
                  (rule "polySimp_mulLiterals" (formula "66") (term "0,1,1"))
                  (rule "polySimp_addComm1" (formula "66") (term "1"))
                  (rule "polySimp_addAssoc" (formula "66") (term "0,1"))
                  (rule "polySimp_addComm0" (formula "66") (term "0,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "66") (term "0,1"))
                  (rule "add_literals" (formula "66") (term "1,1,0,1"))
                  (rule "times_zero_1" (formula "66") (term "1,0,1"))
                  (rule "add_zero_right" (formula "66") (term "0,1"))
                  (rule "inEqSimp_ltToLeq" (formula "65") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "65") (term "1,0,0,1,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "65") (term "0,0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "65") (term "1,1,0,0"))
                  (rule "applyEq" (formula "65") (term "0,1,0,0,1,0,0,0") (ifseqformula "26"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "65") (term "1,0,0,0"))
                  (rule "polySimp_mulComm0" (formula "65") (term "1,1,0,0,0"))
                  (rule "polySimp_rightDist" (formula "65") (term "1,1,0,0,0"))
                  (rule "mul_literals" (formula "65") (term "0,1,1,0,0,0"))
                  (rule "polySimp_mulLiterals" (formula "65") (term "1,1,1,0,0,0"))
                  (rule "polySimp_elimOne" (formula "65") (term "1,1,1,0,0,0"))
                  (rule "Definition_axiom_for_bufferLen_in_de_wiesler_Buffers" (formula "25") (term "0,1,0"))
                  (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "42") (term "1,0,2,0,1,0"))
                  (rule "translateJavaSubInt" (formula "42") (term "0,1,1,1,0,2,0,1,0"))
                  (rule "polySimp_elimSub" (formula "42") (term "1,0,0,1,0,2,0,1,0"))
                  (rule "polySimp_elimSub" (formula "42") (term "1,1,1,0,2,0,1,0"))
                  (rule "polySimp_elimSub" (formula "42") (term "0,1,1,1,0,2,0,1,0"))
                  (rule "mul_literals" (formula "42") (term "1,0,1,1,1,0,2,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "42") (term "1,0,2,0,1,0"))
                  (rule "polySimp_addComm0" (formula "42") (term "0,1,0,1,0,2,0,1,0"))
                  (rule "polySimp_rightDist" (formula "42") (term "0,1,1,0,2,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,1,0,2,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "42") (term "0,0,1,1,0,2,0,1,0"))
                  (rule "polySimp_addComm1" (formula "42") (term "1,1,0,2,0,1,0"))
                  (rule "polySimp_addComm0" (formula "42") (term "0,1,1,0,2,0,1,0"))
                  (rule "polySimp_rightDist" (formula "42") (term "1,0,2,0,1,0"))
                  (rule "polySimp_mulComm1" (formula "42") (term "1,1,0,2,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "42") (term "0,1,1,0,2,0,1,0"))
                  (rule "polySimp_rightDist" (formula "42") (term "0,1,0,2,0,1,0"))
                  (rule "polySimp_elimOne" (formula "42") (term "0,0,1,0,2,0,1,0"))
                  (rule "polySimp_mulComm1" (formula "42") (term "1,0,1,0,2,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "42") (term "0,1,0,1,0,2,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "42") (term "0,2,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "42") (term "0,0,2,0,1,0"))
                  (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "41") (term "0,0,1,0"))
                  (rule "translateJavaSubInt" (formula "41") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_elimSub" (formula "41") (term "1,0,0,0,0,1,0"))
                  (rule "polySimp_elimSub" (formula "41") (term "0,1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "41") (term "1,0,1,1,0,0,1,0"))
                  (rule "polySimp_elimSub" (formula "41") (term "1,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "41") (term "0,1,0,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "0,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "0,0,1,0,0,1,0"))
                  (rule "polySimp_addComm1" (formula "41") (term "1,0,0,1,0"))
                  (rule "polySimp_addComm0" (formula "41") (term "0,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "0,0,1,0"))
                  (rule "polySimp_mulComm1" (formula "41") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "41") (term "0,0,0,0,1,0"))
                  (rule "polySimp_mulComm1" (formula "41") (term "1,0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,0,0,1,0"))
                  (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "0,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "0,0,1,0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,1,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "0,1,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0,1,0"))
                  (rule "mul_literals" (formula "41") (term "0,0,1,0,1,0"))
                  (rule "polySimp_elimOne" (formula "41") (term "1,0,1,0,1,0"))
                  (rule "Definition_axiom_for_pi_in_de_wiesler_Tree" (formula "41") (term "0,1,1,0"))
                  (rule "translateJavaSubInt" (formula "41") (term "0,1,1,0,1,1,0"))
                  (rule "polySimp_elimSub" (formula "41") (term "1,0,0,0,1,1,0"))
                  (rule "polySimp_elimSub" (formula "41") (term "0,1,1,0,1,1,0"))
                  (rule "mul_literals" (formula "41") (term "1,0,1,1,0,1,1,0"))
                  (rule "polySimp_elimSub" (formula "41") (term "1,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "0,1,1,0"))
                  (rule "polySimp_addComm0" (formula "41") (term "0,1,0,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "0,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "0,0,1,0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "41") (term "1,0,1,1,0"))
                  (rule "polySimp_addComm0" (formula "41") (term "0,1,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "0,1,1,0"))
                  (rule "polySimp_mulComm1" (formula "41") (term "1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "0,0,1,1,0"))
                  (rule "polySimp_elimOne" (formula "41") (term "0,0,0,1,1,0"))
                  (rule "polySimp_mulComm1" (formula "41") (term "1,0,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "0,1,0,0,1,1,0"))
                  (rule "inEqSimp_homoInEq0" (formula "41") (term "1,1,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,1,1,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "0,1,0,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,0,1,1,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "0,0,1,0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "41") (term "0,1,1,0"))
                  (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,1,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,1,0"))
                  (rule "polySimp_mulComm0" (formula "41") (term "1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "0,1,1,1,0"))
                  (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,1,1,0"))
                  (rule "polySimp_elimOne" (formula "41") (term "1,0,1,1,1,0"))
                  (rule "polySimp_rightDist" (formula "41") (term "0,0,1,1,1,0"))
                  (rule "mul_literals" (formula "41") (term "0,0,0,1,1,1,0"))
                  (rule "commute_and" (formula "42") (term "1,0,0"))
                  (rule "commute_and" (formula "41") (term "1,0,0"))
                  (rule "nnf_notAnd" (formula "10") (term "0,0"))
                  (rule "jdiv_axiom" (formula "58") (term "0"))
                  (rule "eqSymm" (formula "58"))
                  (rule "polySimp_mulComm0" (formula "58") (term "0,0,2,0"))
                  (rule "polySimp_rightDist" (formula "58") (term "0,0,2,0"))
                  (rule "polySimp_mulAssoc" (formula "58") (term "0,0,0,2,0"))
                  (rule "polySimp_mulComm0" (formula "58") (term "0,0,0,0,2,0"))
                  (rule "polySimp_mulLiterals" (formula "58") (term "0,0,0,2,0"))
                  (rule "polySimp_elimOne" (formula "58") (term "0,0,0,2,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "0,0"))
                  (rule "polySimp_mulLiterals" (formula "58") (term "1,0,0"))
                  (rule "polySimp_elimOne" (formula "58") (term "1,0,0"))
                  (rule "replace_known_left" (formula "58") (term "0,0") (ifseqformula "16"))
                   (builtin "One Step Simplification" (formula "58"))
                  (rule "eqSymm" (formula "58"))
                  (rule "applyEq" (formula "49") (term "0,1,2,1,0,0,1,0") (ifseqformula "58"))
                  (rule "applyEq" (formula "1") (term "0,0") (ifseqformula "58"))
                  (rule "applyEq" (formula "56") (term "0") (ifseqformula "58"))
                  (rule "applyEq" (formula "59") (term "0") (ifseqformula "58"))
                  (rule "applyEq" (formula "67") (term "0,1,1") (ifseqformula "58"))
                  (rule "applyEq" (formula "68") (term "0,1,4,1,1,1,0") (ifseqformula "58"))
                  (rule "jdiv_axiom" (formula "60") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "60") (term "0,0,2,1"))
                  (rule "eqSymm" (formula "60"))
                  (rule "applyEq" (formula "60") (term "1") (ifseqformula "61"))
                  (rule "inEqSimp_subsumption6" (formula "60") (term "0,0") (ifseqformula "57"))
                  (rule "times_zero_1" (formula "60") (term "1,1,0,0,0"))
                  (rule "greater_literals" (formula "60") (term "0,0,0,0"))
                   (builtin "One Step Simplification" (formula "60"))
                  (rule "leq_literals" (formula "60") (term "0,0,0"))
                   (builtin "One Step Simplification" (formula "60"))
                  (rule "polyDiv_pullOut" (formula "60") (term "0") (inst "polyDivCoeff=l_0"))
                  (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,2,0"))
                  (rule "equal_literals" (formula "60") (term "0,0"))
                   (builtin "One Step Simplification" (formula "60"))
                  (rule "polySimp_homoEq" (formula "60"))
                  (rule "polySimp_pullOutFactor0" (formula "60") (term "0,0,0,1,0"))
                  (rule "add_literals" (formula "60") (term "1,0,0,0,1,0"))
                  (rule "times_zero_1" (formula "60") (term "0,0,0,1,0"))
                  (rule "div_literals" (formula "60") (term "0,0,1,0"))
                  (rule "add_zero_left" (formula "60") (term "0,1,0"))
                  (rule "polySimp_pullOutFactor1" (formula "60") (term "0"))
                  (rule "add_literals" (formula "60") (term "1,0"))
                  (rule "times_zero_1" (formula "60") (term "0"))
                   (builtin "One Step Simplification" (formula "60"))
                  (rule "true_left" (formula "60"))
                  (rule "nnf_notAnd" (formula "55") (term "0,0,0"))
                  (rule "nnf_notAnd" (formula "55") (term "1,0,0"))
                  (rule "nnf_notAnd" (formula "25") (term "0,0,0"))
                  (rule "nnf_notAnd" (formula "25") (term "1,0,0"))
                  (rule "arrayLengthNotNegative" (formula "54") (term "0"))
                  (rule "applyEq" (formula "54") (term "0") (ifseqformula "55"))
                  (rule "qeq_literals" (formula "54"))
                  (rule "true_left" (formula "54"))
                  (rule "arrayLengthIsAShort" (formula "17") (term "0"))
                  (rule "expand_inShort" (formula "17"))
                  (rule "replace_short_MAX" (formula "17") (term "1,0"))
                  (rule "replace_short_MIN" (formula "17") (term "0,1"))
                  (rule "andLeft" (formula "17"))
                  (rule "inEqSimp_commuteLeq" (formula "17"))
                  (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
                  (rule "leq_literals" (formula "17") (term "0"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "true_left" (formula "17"))
                  (rule "arrayLengthIsAShort" (formula "11") (term "0"))
                  (rule "expand_inShort" (formula "11"))
                  (rule "replace_short_MAX" (formula "11") (term "1,0"))
                  (rule "replace_short_MIN" (formula "11") (term "0,1"))
                  (rule "andLeft" (formula "11"))
                  (rule "inEqSimp_commuteLeq" (formula "11"))
                  (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "28"))
                  (rule "leq_literals" (formula "11") (term "0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "arrayLengthNotNegative" (formula "17") (term "0"))
                  (rule "arrayLengthNotNegative" (formula "53") (term "0"))
                  (rule "applyEq" (formula "53") (term "0") (ifseqformula "54"))
                  (rule "qeq_literals" (formula "53"))
                  (rule "true_left" (formula "53"))
                  (rule "arrayLengthIsAShort" (formula "54") (term "0"))
                  (rule "expand_inShort" (formula "54"))
                  (rule "replace_short_MAX" (formula "54") (term "1,0"))
                  (rule "replace_short_MIN" (formula "54") (term "0,1"))
                  (rule "andLeft" (formula "54"))
                  (rule "inEqSimp_commuteLeq" (formula "55"))
                  (rule "applyEq" (formula "55") (term "0") (ifseqformula "56"))
                  (rule "qeq_literals" (formula "55"))
                  (rule "true_left" (formula "55"))
                  (rule "applyEq" (formula "54") (term "0") (ifseqformula "55"))
                  (rule "leq_literals" (formula "54"))
                  (rule "true_left" (formula "54"))
                  (rule "arrayLengthNotNegative" (formula "27") (term "0"))
                  (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "28"))
                  (rule "leq_literals" (formula "27") (term "0"))
                   (builtin "One Step Simplification" (formula "27"))
                  (rule "true_left" (formula "27"))
                  (rule "arrayLengthIsAShort" (formula "53") (term "0"))
                  (rule "expand_inShort" (formula "53"))
                  (rule "replace_short_MAX" (formula "53") (term "1,0"))
                  (rule "replace_short_MIN" (formula "53") (term "0,1"))
                  (rule "andLeft" (formula "53"))
                  (rule "inEqSimp_commuteLeq" (formula "54"))
                  (rule "applyEq" (formula "54") (term "0") (ifseqformula "55"))
                  (rule "qeq_literals" (formula "54"))
                  (rule "true_left" (formula "54"))
                  (rule "applyEq" (formula "53") (term "0") (ifseqformula "54"))
                  (rule "leq_literals" (formula "53"))
                  (rule "closeFalse" (formula "53"))
               )
               (branch "Usage"
                   (builtin "One Step Simplification" (formula "65"))
                   (builtin "Block Contract (Internal)" (formula "65") (newnames "result_23,exc_27,heap_Before_BLOCK_0,savedHeap_Before_BLOCK_0,o,f"))
                  (branch "Validity"
                      (builtin "One Step Simplification" (formula "66"))
                      (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "11")) (ifInst ""  (formula "3")) (ifInst ""  (formula "62")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "1") (ifseqformula "33"))
                     (rule "andLeft" (formula "46"))
                     (rule "eqSymm" (formula "67") (term "0,0,1,0,1"))
                     (rule "translateJavaSubInt" (formula "67") (term "0,1,0,0"))
                     (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "2"))
                      (builtin "One Step Simplification" (formula "47"))
                     (rule "true_left" (formula "47"))
                     (rule "polySimp_elimSub" (formula "66") (term "0,1,0,0"))
                     (rule "variableDeclarationAssign" (formula "66") (term "1"))
                     (rule "variableDeclaration" (formula "66") (term "1") (newnames "exc_27_1"))
                     (rule "assignment" (formula "66") (term "1"))
                      (builtin "One Step Simplification" (formula "66"))
                     (rule "emptyStatement" (formula "66") (term "1"))
                      (builtin "One Step Simplification" (formula "66"))
                     (rule "emptyStatement" (formula "66") (term "1"))
                     (rule "tryEmpty" (formula "66") (term "1"))
                     (rule "blockEmptyLabel" (formula "66") (term "1"))
                     (rule "blockEmpty" (formula "66") (term "1"))
                     (rule "methodCallEmpty" (formula "66") (term "1"))
                     (rule "emptyModality" (formula "66") (term "1"))
                     (rule "andRight" (formula "66"))
                     (branch "Case 1"
                         (builtin "One Step Simplification" (formula "66"))
                        (rule "closeTrue" (formula "66"))
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "66"))
                        (rule "closeTrue" (formula "66"))
                     )
                  )
                  (branch "Precondition"
                     (rule "andRight" (formula "65"))
                     (branch "Case 1"
                        (rule "andRight" (formula "65"))
                        (branch "Case 1"
                            (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "11")))
                           (rule "closeTrue" (formula "65"))
                        )
                        (branch "Case 2"
                            (builtin "One Step Simplification" (formula "65"))
                           (rule "wellFormedAnonEQ" (formula "65") (ifseqformula "33"))
                           (rule "replace_known_left" (formula "65") (term "0") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "32")))
                           (rule "closeTrue" (formula "65"))
                        )
                     )
                     (branch "Case 2"
                        (rule "andRight" (formula "65"))
                        (branch "Case 1"
                           (rule "andRight" (formula "65"))
                           (branch "Case 1"
                               (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "61")))
                              (rule "closeTrue" (formula "65"))
                           )
                           (branch "Case 2"
                               (builtin "One Step Simplification" (formula "65"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "65") (ifseqformula "33"))
                              (rule "orRight" (formula "65"))
                              (rule "close" (formula "65") (ifseqformula "2"))
                           )
                        )
                        (branch "Case 2"
                            (builtin "One Step Simplification" (formula "65") (ifInst ""  (formula "3")))
                           (rule "closeTrue" (formula "65"))
                        )
                     )
                  )
                  (branch "Usage"
                      (builtin "One Step Simplification" (formula "46"))
                      (builtin "One Step Simplification" (formula "66"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "46") (term "1,1,1,0") (ifseqformula "33"))
                     (rule "expand_inInt" (formula "46") (term "0,1,0"))
                     (rule "replace_int_MIN" (formula "46") (term "0,1,0,1,0"))
                     (rule "replace_int_MAX" (formula "46") (term "1,0,0,1,0"))
                     (rule "andLeft" (formula "46"))
                     (rule "andLeft" (formula "46"))
                     (rule "andLeft" (formula "47"))
                     (rule "andLeft" (formula "47"))
                     (rule "translateJavaSubInt" (formula "70") (term "0,1,0"))
                     (rule "translateJavaSubInt" (formula "50") (term "1,0"))
                     (rule "translateJavaSubInt" (formula "50") (term "0"))
                     (rule "replace_known_left" (formula "49") (term "0") (ifseqformula "46"))
                      (builtin "One Step Simplification" (formula "49"))
                     (rule "true_left" (formula "49"))
                     (rule "polySimp_elimSub" (formula "69") (term "0,1,0"))
                     (rule "polySimp_elimSub" (formula "49") (term "0"))
                     (rule "polySimp_elimSub" (formula "49") (term "0,1,0"))
                     (rule "polySimp_mulComm0" (formula "49") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "49") (term "1,0"))
                     (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0"))
                     (rule "polySimp_elimOne" (formula "49") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "49") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "49") (term "0"))
                     (rule "polySimp_pullOutFactor1" (formula "49") (term "0,0"))
                     (rule "add_literals" (formula "49") (term "1,0,0"))
                     (rule "times_zero_1" (formula "49") (term "0,0"))
                     (rule "add_zero_left" (formula "49") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "48"))
                     (rule "elim_double_block_2" (formula "69") (term "1"))
                     (rule "onlyCreatedObjectsAreReferencedFinal" (formula "60") (term "1") (ifseqformula "1") (ifseqformula "10"))
                     (rule "onlyCreatedObjectsAreReferencedFinal" (formula "55") (term "0,0") (ifseqformula "2") (ifseqformula "3"))
                     (rule "onlyCreatedObjectsAreReferencedFinal" (formula "58") (term "0") (ifseqformula "3") (ifseqformula "12"))
                     (rule "onlyCreatedObjectsAreReferencedFinal" (formula "60") (term "0") (ifseqformula "4") (ifseqformula "5"))
                     (rule "ifUnfold" (formula "73") (term "1") (inst "#boolv=x"))
                     (rule "variableDeclaration" (formula "73") (term "1") (newnames "x_4"))
                     (rule "inequality_comparison_simple" (formula "73") (term "1"))
                      (builtin "One Step Simplification" (formula "73"))
                     (rule "replace_known_left" (formula "73") (term "0,0,1,0") (ifseqformula "50"))
                      (builtin "One Step Simplification" (formula "73"))
                     (rule "ifSplit" (formula "73"))
                     (branch "if x_4 true"
                         (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "if x_4 false"
                         (builtin "One Step Simplification" (formula "1"))
                         (builtin "One Step Simplification" (formula "74"))
                        (rule "true_left" (formula "1"))
                        (rule "blockEmpty" (formula "73") (term "1"))
                        (rule "variableDeclarationAssign" (formula "73") (term "1"))
                        (rule "variableDeclaration" (formula "73") (term "1") (newnames "indices"))
                        (rule "arrayCreation" (formula "73") (term "1") (inst "#v0=x_arr"))
                        (rule "variableDeclaration" (formula "73") (term "1") (newnames "x_arr"))
                        (rule "variableDeclarationAssign" (formula "73") (term "1"))
                        (rule "variableDeclaration" (formula "73") (term "1") (newnames "dim0"))
                        (rule "assignmentSubtractionInt" (formula "73") (term "1"))
                        (branch "Overflow check"
                            (builtin "One Step Simplification" (formula "73"))
                           (rule "expand_inInt" (formula "73"))
                           (rule "replace_int_MAX" (formula "73") (term "1,0"))
                           (rule "replace_int_MIN" (formula "73") (term "0,1"))
                           (rule "polySimp_elimSub" (formula "73") (term "0,0"))
                           (rule "polySimp_elimSub" (formula "73") (term "1,1"))
                           (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "73") (term "1,1,1"))
                           (rule "polySimp_rightDist" (formula "73") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "73") (term "1,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "73") (term "0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "73") (term "1,1,1"))
                           (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1,1"))
                           (rule "polySimp_elimOne" (formula "73") (term "1,1,1,1"))
                           (rule "polySimp_mulComm0" (formula "73") (term "0,1,1,1"))
                           (rule "polySimp_addAssoc" (formula "73") (term "0,0"))
                           (rule "polySimp_pullOutFactor1" (formula "73") (term "0,0,0"))
                           (rule "add_literals" (formula "73") (term "1,0,0,0"))
                           (rule "times_zero_1" (formula "73") (term "0,0,0"))
                           (rule "add_zero_left" (formula "73") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "73") (term "1,1"))
                           (rule "polySimp_pullOutFactor1" (formula "73") (term "0,1,1"))
                           (rule "add_literals" (formula "73") (term "1,0,1,1"))
                           (rule "times_zero_1" (formula "73") (term "0,1,1"))
                           (rule "add_zero_left" (formula "73") (term "1,1"))
                           (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "73") (term "1"))
                           (rule "inEqSimp_homoInEq0" (formula "43"))
                           (rule "polySimp_addComm1" (formula "43") (term "0"))
                           (rule "inEqSimp_homoInEq1" (formula "21"))
                           (rule "polySimp_addComm1" (formula "21") (term "0"))
                           (rule "jmod_axiom" (formula "53") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "53") (term "1,0"))
                           (rule "jmod_axiom" (formula "46") (term "0,1,4,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,0,1,4,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "1,4,0,1,0"))
                           (rule "polySimp_rightDist" (formula "46") (term "1,4,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "1,1,4,0,1,0"))
                           (rule "polySimp_rightDist" (formula "46") (term "0,1,4,0,1,0"))
                           (rule "polySimp_mulAssoc" (formula "46") (term "0,0,1,4,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "46") (term "0,0,0,1,4,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "46") (term "0,0,1,4,0,1,0"))
                           (rule "polySimp_elimOne" (formula "46") (term "0,0,1,4,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "46") (term "4,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "46") (term "0,4,0,1,0"))
                           (rule "polySimp_addComm0" (formula "46") (term "0,0,4,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,4,0,1,0"))
                           (rule "add_literals" (formula "46") (term "1,1,0,4,0,1,0"))
                           (rule "times_zero_1" (formula "46") (term "1,0,4,0,1,0"))
                           (rule "add_zero_right" (formula "46") (term "0,4,0,1,0"))
                           (rule "jmod_axiom" (formula "45") (term "0,1,5,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,5,0"))
                           (rule "polySimp_mulComm0" (formula "45") (term "1,5,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "1,5,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "1,1,5,0"))
                           (rule "polySimp_rightDist" (formula "45") (term "0,1,5,0"))
                           (rule "polySimp_mulAssoc" (formula "45") (term "0,0,1,5,0"))
                           (rule "polySimp_mulComm0" (formula "45") (term "0,0,0,1,5,0"))
                           (rule "polySimp_mulLiterals" (formula "45") (term "0,0,1,5,0"))
                           (rule "polySimp_elimOne" (formula "45") (term "0,0,1,5,0"))
                           (rule "polySimp_addAssoc" (formula "45") (term "5,0"))
                           (rule "polySimp_addAssoc" (formula "45") (term "0,5,0"))
                           (rule "polySimp_addComm0" (formula "45") (term "0,0,5,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,5,0"))
                           (rule "add_literals" (formula "45") (term "1,1,0,5,0"))
                           (rule "times_zero_1" (formula "45") (term "1,0,5,0"))
                           (rule "add_zero_right" (formula "45") (term "0,5,0"))
                           (rule "jmod_axiom" (formula "37") (term "0,1,2,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "1,0,1,2,1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1,2,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "37") (term "1,2,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "1,1,2,1,0,0,1,0"))
                           (rule "polySimp_rightDist" (formula "37") (term "0,1,2,1,0,0,1,0"))
                           (rule "polySimp_mulAssoc" (formula "37") (term "0,0,1,2,1,0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "37") (term "0,0,0,1,2,1,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "0,0,1,2,1,0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "37") (term "0,0,1,2,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "37") (term "2,1,0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "37") (term "0,2,1,0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "37") (term "0,0,2,1,0,0,1,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,2,1,0,0,1,0"))
                           (rule "add_literals" (formula "37") (term "1,1,0,2,1,0,0,1,0"))
                           (rule "times_zero_1" (formula "37") (term "1,0,2,1,0,0,1,0"))
                           (rule "add_zero_right" (formula "37") (term "0,2,1,0,0,1,0"))
                           (rule "jmod_axiom" (formula "73") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "73") (term "1,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "73") (term "0"))
                           (rule "polySimp_mulComm0" (formula "73") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "73") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "73") (term "0,1,0,0"))
                           (rule "polySimp_mulAssoc" (formula "73") (term "0,0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "73") (term "0,0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "73") (term "0,0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "73") (term "0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "73") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "73") (term "0,0,0"))
                           (rule "jmod_axiom" (formula "73") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "73") (term "1,0,1"))
                           (rule "inEqSimp_homoInEq1" (formula "73") (term "1"))
                           (rule "polySimp_mulComm0" (formula "73") (term "1,0,1"))
                           (rule "polySimp_rightDist" (formula "73") (term "1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,1"))
                           (rule "polySimp_rightDist" (formula "73") (term "0,1,0,1"))
                           (rule "polySimp_mulAssoc" (formula "73") (term "0,0,1,0,1"))
                           (rule "polySimp_mulComm0" (formula "73") (term "0,0,0,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "73") (term "0,0,1,0,1"))
                           (rule "polySimp_elimOne" (formula "73") (term "0,0,1,0,1"))
                           (rule "polySimp_addAssoc" (formula "73") (term "0,1"))
                           (rule "polySimp_addAssoc" (formula "73") (term "0,0,1"))
                           (rule "jmod_axiom" (formula "43") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "43") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "43") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "43") (term "0,1,0"))
                           (rule "polySimp_mulAssoc" (formula "43") (term "0,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "43") (term "0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "0,0,1,0"))
                           (rule "polySimp_elimOne" (formula "43") (term "0,0,1,0"))
                           (rule "polySimp_addComm1" (formula "43") (term "0"))
                           (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "43") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "43") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "43") (term "0,0,0"))
                           (rule "add_literals" (formula "43") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "43") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "43") (term "0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1"))
                           (rule "polySimp_rightDist" (formula "21") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                           (rule "mul_literals" (formula "21") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "53"))
                           (rule "polySimp_mulLiterals" (formula "53") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "73") (term "0"))
                           (rule "polySimp_mulComm0" (formula "73") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "73") (term "1,0"))
                           (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0"))
                           (rule "polySimp_elimOne" (formula "73") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "73") (term "0,1,0"))
                           (rule "mul_literals" (formula "73") (term "0,0,1,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "73") (term "1"))
                           (rule "polySimp_mulComm0" (formula "73") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "73") (term "1,1"))
                           (rule "polySimp_mulLiterals" (formula "73") (term "1,1,1"))
                           (rule "polySimp_elimOne" (formula "73") (term "1,1,1"))
                           (rule "polySimp_rightDist" (formula "73") (term "0,1,1"))
                           (rule "mul_literals" (formula "73") (term "0,0,1,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                           (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                           (rule "polySimp_elimOne" (formula "43") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "20"))
                           (rule "leq_literals" (formula "19") (term "0"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "21"))
                           (rule "leq_literals" (formula "10") (term "0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "22"))
                           (rule "leq_literals" (formula "24") (term "0"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "true_left" (formula "24"))
                           (rule "inEqSimp_subsumption0" (formula "70") (term "1") (ifseqformula "50"))
                           (rule "inEqSimp_homoInEq0" (formula "70") (term "0,1"))
                           (rule "polySimp_mulComm0" (formula "70") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "70") (term "1,0,0,1"))
                           (rule "polySimp_mulAssoc" (formula "70") (term "0,1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "70") (term "0,0,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "70") (term "0,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "70") (term "0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "70") (term "0,0,1"))
                           (rule "polySimp_addComm1" (formula "70") (term "0,0,0,1"))
                           (rule "polySimp_pullOutFactor1b" (formula "70") (term "0,0,1"))
                           (rule "add_literals" (formula "70") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "70") (term "1,0,0,1"))
                           (rule "add_zero_right" (formula "70") (term "0,0,1"))
                           (rule "polySimp_pullOutFactor2b" (formula "70") (term "0,0,1"))
                           (rule "add_literals" (formula "70") (term "1,1,0,0,1"))
                           (rule "times_zero_1" (formula "70") (term "1,0,0,1"))
                           (rule "add_literals" (formula "70") (term "0,0,1"))
                           (rule "qeq_literals" (formula "70") (term "0,1"))
                            (builtin "One Step Simplification" (formula "70"))
                           (rule "inEqSimp_geqRight" (formula "70"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                           (rule "mul_literals" (formula "1") (term "0,0,1"))
                           (rule "inEqSimp_subsumption2" (formula "51") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "51"))
                           (rule "greater_literals" (formula "51") (term "0,0"))
                            (builtin "One Step Simplification" (formula "51"))
                           (rule "polySimp_rightDist" (formula "51") (term "0,0"))
                           (rule "polySimp_rightDist" (formula "51") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "51") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "51") (term "0,1,0"))
                           (rule "polySimp_rightDist" (formula "51") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "51") (term "0,0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "51") (term "0"))
                           (rule "polySimp_mulComm0" (formula "51") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "51") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "51") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "51") (term "0,1,0,0"))
                           (rule "mul_literals" (formula "51") (term "0,0,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "51") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "51") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,0"))
                           (rule "add_literals" (formula "51") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "51") (term "1,0,0"))
                           (rule "add_zero_right" (formula "51") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "51") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "51") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,0"))
                           (rule "add_literals" (formula "51") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "51") (term "1,0,0"))
                           (rule "add_zero_right" (formula "51") (term "0,0"))
                           (rule "qeq_literals" (formula "51") (term "0"))
                            (builtin "One Step Simplification" (formula "51"))
                           (rule "true_left" (formula "51"))
                           (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "24"))
                           (rule "polySimp_mulComm0" (formula "25") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "25") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                           (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                           (rule "polySimp_elimOne" (formula "25") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "11") (ifseqformula "25"))
                           (rule "leq_literals" (formula "11") (term "0"))
                            (builtin "One Step Simplification" (formula "11"))
                           (rule "true_left" (formula "11"))
                           (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "37"))
                           (rule "polySimp_mulComm0" (formula "40") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "40") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                           (rule "polySimp_elimOne" (formula "40") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "41"))
                           (rule "polySimp_mulComm0" (formula "40") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "40") (term "0"))
                           (rule "polySimp_pullOutFactor2" (formula "40") (term "0,0"))
                           (rule "add_literals" (formula "40") (term "1,0,0"))
                           (rule "times_zero_1" (formula "40") (term "0,0"))
                           (rule "add_zero_left" (formula "40") (term "0"))
                           (rule "elimGcdGeq_antec" (formula "40") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=jdiv(add(mul(begin, Z(neglit(1(#)))), end), Z(6(1(#))))") (inst "elimGcd=Z(6(1(#)))"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "1,0,1,0"))
                           (rule "leq_literals" (formula "40") (term "0,0"))
                            (builtin "One Step Simplification" (formula "40"))
                           (rule "add_zero_right" (formula "40") (term "0,0,0,0"))
                           (rule "times_zero_1" (formula "40") (term "1,0,0,0,0"))
                           (rule "add_literals" (formula "40") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0"))
                           (rule "add_literals" (formula "40") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "40") (term "1,0,0"))
                           (rule "add_zero_right" (formula "40") (term "0,0"))
                           (rule "leq_literals" (formula "40") (term "0"))
                            (builtin "One Step Simplification" (formula "40"))
                           (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "42"))
                           (rule "mul_literals" (formula "38") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "38") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1"))
                           (rule "polySimp_rightDist" (formula "38") (term "1"))
                           (rule "mul_literals" (formula "38") (term "0,1"))
                           (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "24"))
                           (rule "polySimp_mulComm0" (formula "21") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "21") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                           (rule "polySimp_elimOne" (formula "21") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "21"))
                           (rule "leq_literals" (formula "10") (term "0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "inEqSimp_exactShadow0" (formula "38") (ifseqformula "1"))
                            (builtin "One Step Simplification" (formula "38"))
                           (rule "greater_literals" (formula "38") (term "0"))
                            (builtin "One Step Simplification" (formula "38"))
                           (rule "polySimp_rightDist" (formula "38") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "38") (term "0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "0,0"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0"))
                           (rule "mul_literals" (formula "38") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0"))
                           (rule "mul_literals" (formula "38") (term "0,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "38") (term "0"))
                           (rule "polySimp_addAssoc" (formula "38") (term "0,0"))
                           (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                           (rule "add_literals" (formula "38") (term "0,0,0,0"))
                           (rule "add_zero_left" (formula "38") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor0" (formula "38") (term "0,0"))
                           (rule "add_literals" (formula "38") (term "1,0,0"))
                           (rule "times_zero_1" (formula "38") (term "0,0"))
                           (rule "add_zero_left" (formula "38") (term "0"))
                           (rule "elimGcdGeq_antec" (formula "38") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=end") (inst "elimGcd=Z(6(1(#)))"))
                           (rule "polySimp_mulLiterals" (formula "38") (term "1,0,1,0"))
                           (rule "leq_literals" (formula "38") (term "0,0"))
                            (builtin "One Step Simplification" (formula "38"))
                           (rule "add_zero_right" (formula "38") (term "0,0,0,0"))
                           (rule "times_zero_1" (formula "38") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "38") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "38") (term "0,0"))
                           (rule "add_literals" (formula "38") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "38") (term "1,0,0"))
                           (rule "add_zero_right" (formula "38") (term "0,0"))
                           (rule "leq_literals" (formula "38") (term "0"))
                            (builtin "One Step Simplification" (formula "38"))
                           (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "38"))
                           (rule "leq_literals" (formula "10") (term "0"))
                            (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "inEqSimp_exactShadow2" (formula "41") (ifseqformula "1"))
                           (rule "greater_literals" (formula "41") (term "0"))
                            (builtin "One Step Simplification" (formula "41"))
                           (rule "mul_literals" (formula "41") (term "1,0,0"))
                           (rule "times_zero_1" (formula "41") (term "0,0"))
                           (rule "add_zero_left" (formula "41") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                           (rule "polySimp_mulComm0" (formula "41") (term "1"))
                           (rule "polySimp_rightDist" (formula "41") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
                           (rule "mul_literals" (formula "41") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "41") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "41"))
                           (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                           (rule "add_literals" (formula "20") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0"))
                           (rule "qeq_literals" (formula "20") (term "0"))
                            (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "22"))
                           (rule "polySimp_rightDist" (formula "40") (term "0,0"))
                           (rule "mul_literals" (formula "40") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "40") (term "0"))
                           (rule "add_literals" (formula "40") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                           (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                           (rule "polySimp_elimOne" (formula "40") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "18") (ifseqformula "40"))
                           (rule "qeq_literals" (formula "18") (term "0"))
                            (builtin "One Step Simplification" (formula "18"))
                           (rule "closeFalse" (formula "18"))
                        )
                        (branch "Usage"
                            (builtin "One Step Simplification" (formula "73"))
                           (rule "translateJavaSubInt" (formula "73") (term "0,1,0"))
                           (rule "polySimp_elimSub" (formula "73") (term "0,1,0"))
                           (rule "polySimp_mulComm0" (formula "73") (term "1,0,1,0"))
                           (rule "polySimp_rightDist" (formula "73") (term "1,0,1,0"))
                           (rule "polySimp_mulLiterals" (formula "73") (term "1,1,0,1,0"))
                           (rule "polySimp_elimOne" (formula "73") (term "1,1,0,1,0"))
                           (rule "polySimp_mulComm0" (formula "73") (term "0,1,0,1,0"))
                           (rule "polySimp_addAssoc" (formula "73") (term "0,1,0"))
                           (rule "polySimp_pullOutFactor1" (formula "73") (term "0,0,1,0"))
                           (rule "add_literals" (formula "73") (term "1,0,0,1,0"))
                           (rule "times_zero_1" (formula "73") (term "0,0,1,0"))
                           (rule "add_zero_left" (formula "73") (term "0,1,0"))
                           (rule "ifUnfold" (formula "73") (term "1") (inst "#boolv=x"))
                           (rule "variableDeclaration" (formula "73") (term "1") (newnames "x_5"))
                           (rule "less_than_comparison_simple" (formula "73") (term "1"))
                            (builtin "One Step Simplification" (formula "73"))
                           (rule "ifSplit" (formula "73"))
                           (branch "if x_5 true"
                               (builtin "One Step Simplification" (formula "1"))
                               (builtin "One Step Simplification" (formula "74"))
                              (rule "blockThrow" (formula "74") (term "1"))
                               (builtin "One Step Simplification" (formula "74"))
                              (rule "throwUnfold" (formula "74") (term "1") (inst "#v0=n"))
                              (rule "variableDeclarationAssign" (formula "74") (term "1"))
                              (rule "variableDeclaration" (formula "74") (term "1") (newnames "n"))
                               (builtin "Use Dependency Contract" (formula "50") (ifInst ""  (formula "74") (term "1,0,0,1")) (ifInst ""  (formula "38")) (contract "de.wiesler.Classifier[java.lang.Object::<inv>()].JML accessible clause.0"))
                              (rule "wellFormedAnonEQ" (formula "55") (term "1,1,0,0,0") (ifseqformula "38"))
                              (rule "replace_known_left" (formula "55") (term "1,1") (ifseqformula "17"))
                               (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "71")) (ifInst ""  (formula "7")) (ifInst ""  (formula "6")) (ifInst ""  (formula "6")) (ifInst ""  (formula "37")) (ifInst ""  (formula "17")) (ifInst ""  (formula "50")))
                              (rule "true_left" (formula "55"))
                              (rule "instanceCreationAssignment" (formula "74") (term "1") (inst "#v0=n_1"))
                              (rule "variableDeclarationAssign" (formula "74") (term "1"))
                              (rule "variableDeclaration" (formula "74") (term "1") (newnames "n_1"))
                              (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "74") (term "1") (inst "#v0=n_2"))
                              (rule "variableDeclaration" (formula "74") (term "1") (newnames "n_2"))
                              (rule "methodBodyExpand" (formula "74") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
                               (builtin "One Step Simplification" (formula "74"))
                              (rule "variableDeclaration" (formula "74") (term "1") (newnames "__NEW__"))
                              (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "74") (term "1") (inst "#v0=n_3"))
                              (rule "variableDeclaration" (formula "74") (term "1") (newnames "n_3"))
                              (rule "allocateInstance" (formula "74"))
                               (builtin "One Step Simplification" (formula "75"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "39"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0") (ifseqformula "39"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "replace_known_left" (formula "1") (term "1,0") (ifseqformula "39"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "8")))
                              (rule "notLeft" (formula "1"))
                              (rule "orRight" (formula "56"))
                              (rule "blockEmpty" (formula "78") (term "1"))
                              (rule "assignment" (formula "78") (term "1"))
                               (builtin "One Step Simplification" (formula "78"))
                              (rule "methodBodyExpand" (formula "78") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
                               (builtin "One Step Simplification" (formula "78"))
                              (rule "assignment_write_attribute_this" (formula "78"))
                               (builtin "One Step Simplification" (formula "78"))
                              (rule "methodCallWithinClass" (formula "78") (term "1"))
                              (rule "methodBodyExpand" (formula "78") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
                               (builtin "One Step Simplification" (formula "78"))
                              (rule "methodCallSuper" (formula "78") (term "1"))
                              (rule "methodBodyExpand" (formula "78") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
                               (builtin "One Step Simplification" (formula "78"))
                              (rule "methodCallSuper" (formula "78") (term "1"))
                              (rule "methodBodyExpand" (formula "78") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
                               (builtin "One Step Simplification" (formula "78"))
                              (rule "methodCallSuper" (formula "78") (term "1"))
                              (rule "methodBodyExpand" (formula "78") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
                               (builtin "One Step Simplification" (formula "78"))
                              (rule "methodCallSuper" (formula "78") (term "1"))
                              (rule "methodBodyExpand" (formula "78") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
                               (builtin "One Step Simplification" (formula "78"))
                              (rule "methodCallEmpty" (formula "78") (term "1"))
                              (rule "blockEmpty" (formula "78") (term "1"))
                              (rule "assignment_write_attribute_this" (formula "78"))
                               (builtin "One Step Simplification" (formula "78"))
                              (rule "assignment_write_attribute_this" (formula "78"))
                               (builtin "One Step Simplification" (formula "78"))
                              (rule "methodCallEmpty" (formula "78") (term "1"))
                              (rule "methodCallEmpty" (formula "78") (term "1"))
                              (rule "methodCallEmpty" (formula "78") (term "1"))
                              (rule "methodCallEmpty" (formula "78") (term "1"))
                              (rule "blockEmpty" (formula "78") (term "1"))
                              (rule "methodCallReturnIgnoreResult" (formula "78") (term "1"))
                              (rule "methodCallReturn" (formula "78") (term "1"))
                              (rule "assignment" (formula "78") (term "1"))
                               (builtin "One Step Simplification" (formula "78"))
                              (rule "methodCallEmpty" (formula "78") (term "1"))
                              (rule "blockEmpty" (formula "78") (term "1"))
                              (rule "assignment" (formula "78") (term "1"))
                               (builtin "One Step Simplification" (formula "78"))
                              (rule "methodBodyExpand" (formula "78") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
                               (builtin "One Step Simplification" (formula "78"))
                              (rule "methodCallSuper" (formula "78") (term "1"))
                              (rule "methodBodyExpand" (formula "78") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
                               (builtin "One Step Simplification" (formula "78"))
                              (rule "methodCallSuper" (formula "78") (term "1"))
                              (rule "methodBodyExpand" (formula "78") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
                               (builtin "One Step Simplification" (formula "78"))
                              (rule "methodCallSuper" (formula "78") (term "1"))
                              (rule "methodBodyExpand" (formula "78") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
                               (builtin "One Step Simplification" (formula "78"))
                              (rule "methodCallSuper" (formula "78") (term "1"))
                              (rule "methodBodyExpand" (formula "78") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
                               (builtin "One Step Simplification" (formula "78"))
                              (rule "methodCallEmpty" (formula "78") (term "1"))
                              (rule "blockEmpty" (formula "78") (term "1"))
                              (rule "assignment_write_attribute_this" (formula "78"))
                               (builtin "One Step Simplification" (formula "78"))
                              (rule "assignment_write_attribute_this" (formula "78"))
                               (builtin "One Step Simplification" (formula "78"))
                              (rule "methodCallEmpty" (formula "78") (term "1"))
                              (rule "methodCallEmpty" (formula "78") (term "1"))
                              (rule "methodCallEmpty" (formula "78") (term "1"))
                              (rule "methodCallEmpty" (formula "78") (term "1"))
                              (rule "blockEmpty" (formula "78") (term "1"))
                              (rule "assignment_write_attribute" (formula "78"))
                              (branch "Normal Execution (n_1 != null)"
                                  (builtin "One Step Simplification" (formula "78"))
                                 (rule "assignment" (formula "78") (term "1"))
                                  (builtin "One Step Simplification" (formula "78"))
                                 (rule "methodCallParamThrow" (formula "78") (term "1"))
                                  (builtin "One Step Simplification" (formula "78"))
                                 (rule "tryCatchThrow" (formula "78") (term "1"))
                                 (rule "ifElseUnfold" (formula "78") (term "1") (inst "#boolv=x"))
                                 (rule "variableDeclaration" (formula "78") (term "1") (newnames "x_6"))
                                 (rule "equality_comparison_simple" (formula "78") (term "1"))
                                  (builtin "One Step Simplification" (formula "78"))
                                 (rule "replace_known_right" (formula "78") (term "0,0,1,0") (ifseqformula "58"))
                                  (builtin "One Step Simplification" (formula "78"))
                                 (rule "ifElseSplit" (formula "78"))
                                 (branch "if x_6 true"
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "closeFalse" (formula "1"))
                                 )
                                 (branch "if x_6 false"
                                     (builtin "One Step Simplification" (formula "79"))
                                     (builtin "One Step Simplification" (formula "1"))
                                    (rule "true_left" (formula "1"))
                                    (rule "elim_double_block" (formula "78") (term "1"))
                                    (rule "ifElseSplit" (formula "78"))
                                    (branch "if n instanceof java.lang.Throwable true"
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                                       (rule "true_left" (formula "1"))
                                       (rule "variableDeclaration" (formula "78") (term "1") (newnames "e"))
                                       (rule "delete_unnecessary_cast" (formula "78") (term "1"))
                                        (builtin "One Step Simplification" (formula "79"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "assignment" (formula "78") (term "1"))
                                        (builtin "One Step Simplification" (formula "78"))
                                       (rule "emptyModality" (formula "78") (term "1"))
                                       (rule "andRight" (formula "78"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "78"))
                                          (branch "Case 1"
                                              (builtin "One Step Simplification" (formula "78"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "45"))
                                             (rule "polySimp_addComm1" (formula "45") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "23"))
                                             (rule "polySimp_addComm1" (formula "23") (term "0"))
                                             (rule "jmod_axiom" (formula "39") (term "0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,2,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1,2,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "1,1,2,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "39") (term "0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "39") (term "0,0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "0,0,0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "0,0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "39") (term "0,0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "2,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "0,2,1,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "39") (term "0,0,2,1,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,2,1,0,0,1,0"))
                                             (rule "add_literals" (formula "39") (term "1,1,0,2,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "39") (term "1,0,2,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "39") (term "0,2,1,0,0,1,0"))
                                             (rule "jmod_axiom" (formula "47") (term "0,1,5,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,5,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,5,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,5,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,1,5,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "0,1,5,0"))
                                             (rule "polySimp_mulAssoc" (formula "47") (term "0,0,1,5,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "0,0,0,1,5,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "0,0,1,5,0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "0,0,1,5,0"))
                                             (rule "polySimp_addAssoc" (formula "47") (term "5,0"))
                                             (rule "polySimp_addAssoc" (formula "47") (term "0,5,0"))
                                             (rule "polySimp_addComm0" (formula "47") (term "0,0,5,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,5,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,5,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,5,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,5,0"))
                                             (rule "jmod_axiom" (formula "55") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "55") (term "1,0"))
                                             (rule "jmod_axiom" (formula "48") (term "0,1,4,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,4,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,4,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1,4,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,1,4,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "0,1,4,0,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "48") (term "0,0,1,4,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "0,0,0,1,4,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "0,0,1,4,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "48") (term "0,0,1,4,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "48") (term "4,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "48") (term "0,4,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "48") (term "0,0,4,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,4,0,1,0"))
                                             (rule "add_literals" (formula "48") (term "1,1,0,4,0,1,0"))
                                             (rule "times_zero_1" (formula "48") (term "1,0,4,0,1,0"))
                                             (rule "add_zero_right" (formula "48") (term "0,4,0,1,0"))
                                             (rule "jmod_axiom" (formula "2") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                             (rule "jmod_axiom" (formula "45") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "45") (term "0,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "45") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "45") (term "0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "45") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "45") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "45") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "45") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,0"))
                                             (rule "add_literals" (formula "45") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "45") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "45") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1"))
                                             (rule "mul_literals" (formula "23") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "55"))
                                             (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "45"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                             (rule "polySimp_elimOne" (formula "45") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "26"))
                                             (rule "leq_literals" (formula "28") (term "0"))
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "true_left" (formula "28"))
                                             (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "24"))
                                             (rule "leq_literals" (formula "12") (term "0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "true_left" (formula "12"))
                                             (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "21"))
                                             (rule "leq_literals" (formula "20") (term "0"))
                                              (builtin "One Step Simplification" (formula "20"))
                                             (rule "true_left" (formula "20"))
                                             (rule "inEqSimp_contradInEq4" (formula "52") (ifseqformula "2"))
                                             (rule "greater_literals" (formula "52") (term "0,1,0"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "greater_literals" (formula "52") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "andLeft" (formula "52"))
                                             (rule "polySimp_rightDist" (formula "52") (term "1"))
                                             (rule "polySimp_rightDist" (formula "52") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "0,0"))
                                             (rule "polySimp_rightDist" (formula "52") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,0,1"))
                                             (rule "mul_literals" (formula "52") (term "0,0,1"))
                                             (rule "inEqSimp_homoInEq1" (formula "52"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "52") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "52") (term "0"))
                                             (rule "polySimp_addComm1" (formula "52") (term "0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "52") (term "0,0,0"))
                                             (rule "add_literals" (formula "52") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "52") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "52") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "52") (term "0"))
                                             (rule "add_literals" (formula "52") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "52") (term "1,0"))
                                             (rule "add_zero_right" (formula "52") (term "0"))
                                             (rule "leq_literals" (formula "52"))
                                             (rule "closeFalse" (formula "52"))
                                          )
                                          (branch "Case 2"
                                              (builtin "One Step Simplification" (formula "78"))
                                             (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "2"))
                                             (rule "mul_literals" (formula "2") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "23"))
                                             (rule "polySimp_addComm1" (formula "23") (term "0"))
                                             (rule "inEqSimp_homoInEq0" (formula "45"))
                                             (rule "polySimp_addComm1" (formula "45") (term "0"))
                                             (rule "jmod_axiom" (formula "39") (term "0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "1,2,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "39") (term "1,2,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "1,1,2,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "39") (term "0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "39") (term "0,0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "39") (term "0,0,0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "39") (term "0,0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "39") (term "0,0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "2,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "39") (term "0,2,1,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "39") (term "0,0,2,1,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,2,1,0,0,1,0"))
                                             (rule "add_literals" (formula "39") (term "1,1,0,2,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "39") (term "1,0,2,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "39") (term "0,2,1,0,0,1,0"))
                                             (rule "jmod_axiom" (formula "48") (term "0,1,4,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,4,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "1,4,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "1,4,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,1,4,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "48") (term "0,1,4,0,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "48") (term "0,0,1,4,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "48") (term "0,0,0,1,4,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "0,0,1,4,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "48") (term "0,0,1,4,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "48") (term "4,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "48") (term "0,4,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "48") (term "0,0,4,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,4,0,1,0"))
                                             (rule "add_literals" (formula "48") (term "1,1,0,4,0,1,0"))
                                             (rule "times_zero_1" (formula "48") (term "1,0,4,0,1,0"))
                                             (rule "add_zero_right" (formula "48") (term "0,4,0,1,0"))
                                             (rule "jmod_axiom" (formula "55") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "55") (term "1,0"))
                                             (rule "jmod_axiom" (formula "47") (term "0,1,5,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,5,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,5,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,5,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,1,5,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "0,1,5,0"))
                                             (rule "polySimp_mulAssoc" (formula "47") (term "0,0,1,5,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "0,0,0,1,5,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "0,0,1,5,0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "0,0,1,5,0"))
                                             (rule "polySimp_addAssoc" (formula "47") (term "5,0"))
                                             (rule "polySimp_addAssoc" (formula "47") (term "0,5,0"))
                                             (rule "polySimp_addComm0" (formula "47") (term "0,0,5,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,5,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,5,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,5,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,5,0"))
                                             (rule "jmod_axiom" (formula "2") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                             (rule "jmod_axiom" (formula "45") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "45") (term "0,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "45") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "45") (term "0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "45") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "45") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "45") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "45") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,0"))
                                             (rule "add_literals" (formula "45") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "45") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "45") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                             (rule "polySimp_rightDist" (formula "23") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                             (rule "mul_literals" (formula "23") (term "0,1"))
                                             (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "55"))
                                             (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "45"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                             (rule "polySimp_elimOne" (formula "45") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "22"))
                                             (rule "leq_literals" (formula "21") (term "0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "23"))
                                             (rule "leq_literals" (formula "12") (term "0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "true_left" (formula "12"))
                                             (rule "inEqSimp_subsumption1" (formula "26") (ifseqformula "24"))
                                             (rule "leq_literals" (formula "26") (term "0"))
                                              (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "inEqSimp_contradInEq4" (formula "52") (ifseqformula "2"))
                                             (rule "greater_literals" (formula "52") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "greater_literals" (formula "52") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "andLeft" (formula "52"))
                                             (rule "polySimp_rightDist" (formula "52") (term "1"))
                                             (rule "polySimp_rightDist" (formula "52") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "0,0"))
                                             (rule "polySimp_rightDist" (formula "52") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,0,1"))
                                             (rule "mul_literals" (formula "52") (term "0,0,1"))
                                             (rule "inEqSimp_homoInEq1" (formula "52"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "52") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "52") (term "0"))
                                             (rule "polySimp_addComm1" (formula "52") (term "0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "52") (term "0"))
                                             (rule "add_literals" (formula "52") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "52") (term "1,0"))
                                             (rule "add_zero_right" (formula "52") (term "0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "52") (term "0"))
                                             (rule "add_literals" (formula "52") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "52") (term "1,0"))
                                             (rule "add_zero_right" (formula "52") (term "0"))
                                             (rule "leq_literals" (formula "52"))
                                             (rule "closeFalse" (formula "52"))
                                          )
                                       )
                                       (branch "Case 2"
                                           (builtin "One Step Simplification" (formula "78") (ifInst ""  (formula "58")))
                                          (rule "false_right" (formula "78"))
                                          (rule "inEqSimp_ltToLeq" (formula "30") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "2"))
                                          (rule "mul_literals" (formula "2") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "45"))
                                          (rule "polySimp_addComm1" (formula "45") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "23"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0"))
                                          (rule "jmod_axiom" (formula "48") (term "0,1,4,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,4,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "48") (term "1,4,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "48") (term "1,4,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "1,1,4,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "48") (term "0,1,4,0,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "48") (term "0,0,1,4,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "48") (term "0,0,0,1,4,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "48") (term "0,0,1,4,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "48") (term "0,0,1,4,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "48") (term "4,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "48") (term "0,4,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "48") (term "0,0,4,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,4,0,1,0"))
                                          (rule "add_literals" (formula "48") (term "1,1,0,4,0,1,0"))
                                          (rule "times_zero_1" (formula "48") (term "1,0,4,0,1,0"))
                                          (rule "add_zero_right" (formula "48") (term "0,4,0,1,0"))
                                          (rule "jmod_axiom" (formula "47") (term "0,1,5,0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,5,0"))
                                          (rule "polySimp_mulComm0" (formula "47") (term "1,5,0"))
                                          (rule "polySimp_rightDist" (formula "47") (term "1,5,0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,1,5,0"))
                                          (rule "polySimp_rightDist" (formula "47") (term "0,1,5,0"))
                                          (rule "polySimp_mulAssoc" (formula "47") (term "0,0,1,5,0"))
                                          (rule "polySimp_mulComm0" (formula "47") (term "0,0,0,1,5,0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "0,0,1,5,0"))
                                          (rule "polySimp_elimOne" (formula "47") (term "0,0,1,5,0"))
                                          (rule "polySimp_addAssoc" (formula "47") (term "5,0"))
                                          (rule "polySimp_addAssoc" (formula "47") (term "0,5,0"))
                                          (rule "polySimp_addComm0" (formula "47") (term "0,0,5,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,5,0"))
                                          (rule "add_literals" (formula "47") (term "1,1,0,5,0"))
                                          (rule "times_zero_1" (formula "47") (term "1,0,5,0"))
                                          (rule "add_zero_right" (formula "47") (term "0,5,0"))
                                          (rule "jmod_axiom" (formula "55") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "55") (term "1,0"))
                                          (rule "jmod_axiom" (formula "39") (term "0,1,2,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,2,1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,2,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,2,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1,2,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "0,1,2,1,0,0,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "39") (term "0,0,1,2,1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "0,0,0,1,2,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "0,0,1,2,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "0,0,1,2,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "2,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,2,1,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0,0,2,1,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,2,1,0,0,1,0"))
                                          (rule "add_literals" (formula "39") (term "1,1,0,2,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,2,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,2,1,0,0,1,0"))
                                          (rule "jmod_axiom" (formula "2") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                          (rule "jmod_axiom" (formula "45") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "45") (term "0,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "45") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "45") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "45") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "45") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "45") (term "0,0,0"))
                                          (rule "polySimp_addComm0" (formula "45") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,0"))
                                          (rule "add_literals" (formula "45") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "45") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "45") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1"))
                                          (rule "mul_literals" (formula "23") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "55"))
                                          (rule "polySimp_mulLiterals" (formula "55") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "45"))
                                          (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                          (rule "polySimp_elimOne" (formula "45") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "55") (ifseqformula "2"))
                                          (rule "andLeft" (formula "55"))
                                          (rule "inEqSimp_homoInEq1" (formula "55"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "55") (term "1,0"))
                                          (rule "polySimp_mulAssoc" (formula "55") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "55") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "55") (term "0,1,0"))
                                          (rule "polySimp_elimOne" (formula "55") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "55") (term "0"))
                                          (rule "polySimp_addComm1" (formula "55") (term "0,0"))
                                          (rule "polySimp_pullOutFactor2b" (formula "55") (term "0,0,0"))
                                          (rule "add_literals" (formula "55") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "55") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "55") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "55") (term "0"))
                                          (rule "add_literals" (formula "55") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "55") (term "1,0"))
                                          (rule "add_zero_right" (formula "55") (term "0"))
                                          (rule "leq_literals" (formula "55"))
                                          (rule "closeFalse" (formula "55"))
                                       )
                                    )
                                    (branch "if n instanceof java.lang.Throwable false"
                                        (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                 )
                              )
                              (branch "Null Reference (n_1 = null)"
                                 (rule "false_right" (formula "79"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "59")))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "if x_5 false"
                               (builtin "One Step Simplification" (formula "1"))
                               (builtin "One Step Simplification" (formula "74"))
                              (rule "notLeft" (formula "1"))
                               (builtin "Use Dependency Contract" (formula "49") (ifInst ""  (formula "74") (term "1,0,0,1")) (ifInst ""  (formula "37")) (contract "de.wiesler.Classifier[java.lang.Object::<inv>()].JML accessible clause.0"))
                              (rule "wellFormedAnonEQ" (formula "54") (term "1,1,0,0,0") (ifseqformula "37"))
                              (rule "replace_known_left" (formula "54") (term "0,1") (ifseqformula "49"))
                               (builtin "One Step Simplification" (formula "54") (ifInst ""  (formula "71")) (ifInst ""  (formula "6")) (ifInst ""  (formula "5")) (ifInst ""  (formula "5")) (ifInst ""  (formula "36")) (ifInst ""  (formula "16")) (ifInst ""  (formula "16")))
                              (rule "true_left" (formula "54"))
                              (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "74") (term "1") (inst "#v0=x_arr_1"))
                              (rule "variableDeclaration" (formula "74") (term "1") (newnames "x_arr_1"))
                              (rule "variableDeclarationAssign" (formula "74") (term "1"))
                              (rule "variableDeclaration" (formula "74") (term "1") (newnames "length_1"))
                              (rule "assignment" (formula "74") (term "1"))
                               (builtin "One Step Simplification" (formula "74"))
                              (rule "methodBodyExpand" (formula "74") (term "1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>"))
                               (builtin "One Step Simplification" (formula "74"))
                              (rule "variableDeclaration" (formula "74") (term "1") (newnames "newObject"))
                              (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "74") (term "1") (inst "#v0=x_arr_2"))
                              (rule "variableDeclaration" (formula "74") (term "1") (newnames "x_arr_2"))
                              (rule "variableDeclarationAssign" (formula "74") (term "1"))
                              (rule "variableDeclaration" (formula "74") (term "1") (newnames "length_2"))
                              (rule "assignment" (formula "74") (term "1"))
                               (builtin "One Step Simplification" (formula "74"))
                              (rule "allocateInstanceWithLength" (formula "74"))
                               (builtin "One Step Simplification" (formula "75"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "wellFormedAnonEQ" (formula "1") (term "0,1,0") (ifseqformula "38"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0") (ifseqformula "38"))
                              (rule "andLeft" (formula "1"))
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "7"))
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "38")))
                              (rule "andLeft" (formula "1"))
                              (rule "notLeft" (formula "1"))
                              (rule "orRight" (formula "56"))
                              (rule "blockEmpty" (formula "79") (term "1"))
                              (rule "assignment" (formula "79") (term "1"))
                               (builtin "One Step Simplification" (formula "79"))
                              (rule "arrayLengthIsAShort" (formula "1") (term "0"))
                              (rule "expand_inShort" (formula "1"))
                              (rule "replace_short_MIN" (formula "1") (term "0,1"))
                              (rule "replace_short_MAX" (formula "1") (term "1,0"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_commuteLeq" (formula "2"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                              (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                              (rule "arrayLengthNotNegative" (formula "3") (term "0"))
                              (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
                              (rule "methodCall" (formula "81"))
                              (branch "Normal Execution (newObject != null )"
                                 (rule "methodBodyExpand" (formula "81") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>"))
                                  (builtin "One Step Simplification" (formula "81"))
                                 (rule "assignment_write_attribute_this" (formula "81"))
                                  (builtin "One Step Simplification" (formula "81"))
                                 (rule "methodCallWithinClass" (formula "81") (term "1"))
                                 (rule "methodBodyExpand" (formula "81") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
                                  (builtin "One Step Simplification" (formula "81"))
                                 (rule "arrayInitialisation" (formula "81") (term "1"))
                                  (builtin "One Step Simplification" (formula "81"))
                                 (rule "polySimp_elimSub" (formula "81") (term "2,1,0,1,0"))
                                 (rule "mul_literals" (formula "81") (term "1,2,1,0,1,0"))
                                 (rule "polySimp_addComm0" (formula "81") (term "2,1,0,1,0"))
                                 (rule "applyEq" (formula "81") (term "1,2,1,0,1,0") (ifseqformula "3"))
                                 (rule "methodCallEmpty" (formula "81") (term "1"))
                                 (rule "blockEmpty" (formula "81") (term "1"))
                                 (rule "assignment_write_attribute_this" (formula "81"))
                                  (builtin "One Step Simplification" (formula "81"))
                                 (rule "methodCallReturnIgnoreResult" (formula "81") (term "1"))
                                 (rule "blockEmpty" (formula "81") (term "1"))
                                 (rule "methodCallReturn" (formula "81") (term "1"))
                                 (rule "assignment" (formula "81") (term "1"))
                                  (builtin "One Step Simplification" (formula "81"))
                                 (rule "methodCallEmpty" (formula "81") (term "1"))
                                 (rule "blockEmpty" (formula "81") (term "1"))
                                 (rule "assignment" (formula "81") (term "1"))
                                  (builtin "One Step Simplification" (formula "81"))
                                 (rule "blockEmpty" (formula "81") (term "1"))
                                 (rule "assignment" (formula "81") (term "1"))
                                  (builtin "One Step Simplification" (formula "81"))
                                  (builtin "Block Contract (Internal)" (formula "81") (newnames "result_24,exc_28,heap_Before_BLOCK_1,savedHeap_Before_BLOCK_1,o,f"))
                                 (branch "Validity"
                                     (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "19")) (ifInst ""  (formula "11")) (ifInst ""  (formula "78")))
                                     (builtin "One Step Simplification" (formula "82"))
                                    (rule "andLeft" (formula "58"))
                                    (rule "eqSymm" (formula "83") (term "0,0,1,0,1"))
                                    (rule "dismissNonSelectedField" (formula "59") (term "0"))
                                    (rule "variableDeclarationAssign" (formula "83") (term "1"))
                                    (rule "variableDeclaration" (formula "83") (term "1") (newnames "exc_28_1"))
                                    (rule "assignment" (formula "83") (term "1"))
                                     (builtin "One Step Simplification" (formula "83"))
                                    (rule "emptyStatement" (formula "83") (term "1"))
                                     (builtin "One Step Simplification" (formula "83"))
                                    (rule "emptyStatement" (formula "83") (term "1"))
                                    (rule "pullOutSelect" (formula "59") (term "0") (inst "selectSK=java_lang_Object_created__0"))
                                    (rule "simplifySelectOfMemset" (formula "59"))
                                     (builtin "One Step Simplification" (formula "59"))
                                    (rule "simplifySelectOfStore" (formula "59"))
                                     (builtin "One Step Simplification" (formula "59"))
                                    (rule "simplifySelectOfStore" (formula "59"))
                                     (builtin "One Step Simplification" (formula "59"))
                                    (rule "simplifySelectOfStore" (formula "59"))
                                     (builtin "One Step Simplification" (formula "59"))
                                    (rule "simplifySelectOfCreate" (formula "59"))
                                     (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "63")))
                                    (rule "castDel" (formula "59") (term "1,0"))
                                    (rule "eqSymm" (formula "59") (term "0,0"))
                                    (rule "sortsDisjointModuloNull" (formula "59") (term "0,0"))
                                    (rule "replace_known_right" (formula "59") (term "1,0,0") (ifseqformula "63"))
                                     (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "80")))
                                    (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "41"))
                                     (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "80")) (ifInst ""  (formula "10")))
                                    (rule "applyEqReverse" (formula "60") (term "0") (ifseqformula "59"))
                                    (rule "hideAuxiliaryEq" (formula "59"))
                                    (rule "tryEmpty" (formula "82") (term "1"))
                                    (rule "blockEmptyLabel" (formula "82") (term "1"))
                                    (rule "blockEmpty" (formula "82") (term "1"))
                                    (rule "methodCallEmpty" (formula "82") (term "1"))
                                    (rule "emptyModality" (formula "82") (term "1"))
                                    (rule "andRight" (formula "82"))
                                    (branch "Case 1"
                                        (builtin "One Step Simplification" (formula "82"))
                                       (rule "closeTrue" (formula "82"))
                                    )
                                    (branch "Case 2"
                                        (builtin "One Step Simplification" (formula "82"))
                                       (rule "closeTrue" (formula "82"))
                                    )
                                 )
                                 (branch "Precondition"
                                    (rule "andRight" (formula "81"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "81"))
                                       (branch "Case 1"
                                           (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "19")))
                                          (rule "closeTrue" (formula "81"))
                                       )
                                       (branch "Case 2"
                                           (builtin "One Step Simplification" (formula "81"))
                                          (rule "wellFormedStorePrimitive" (formula "81"))
                                          (rule "inEqSimp_ltRight" (formula "61"))
                                          (rule "mul_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "47"))
                                          (rule "polySimp_addComm1" (formula "47") (term "0"))
                                          (rule "inEqSimp_homoInEq1" (formula "25"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0"))
                                          (rule "jmod_axiom" (formula "2") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "2") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "2") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                          (rule "jmod_axiom" (formula "57") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "57") (term "1,0"))
                                          (rule "jmod_axiom" (formula "49") (term "0,1,5,0"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,5,0"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "1,5,0"))
                                          (rule "polySimp_rightDist" (formula "49") (term "1,5,0"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "1,1,5,0"))
                                          (rule "polySimp_rightDist" (formula "49") (term "0,1,5,0"))
                                          (rule "polySimp_mulAssoc" (formula "49") (term "0,0,1,5,0"))
                                          (rule "polySimp_mulComm0" (formula "49") (term "0,0,0,1,5,0"))
                                          (rule "polySimp_mulLiterals" (formula "49") (term "0,0,1,5,0"))
                                          (rule "polySimp_elimOne" (formula "49") (term "0,0,1,5,0"))
                                          (rule "polySimp_addAssoc" (formula "49") (term "5,0"))
                                          (rule "polySimp_addAssoc" (formula "49") (term "0,5,0"))
                                          (rule "polySimp_addComm0" (formula "49") (term "0,0,5,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,5,0"))
                                          (rule "add_literals" (formula "49") (term "1,1,0,5,0"))
                                          (rule "times_zero_1" (formula "49") (term "1,0,5,0"))
                                          (rule "add_zero_right" (formula "49") (term "0,5,0"))
                                          (rule "jmod_axiom" (formula "1") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "1") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "jmod_axiom" (formula "50") (term "0,1,4,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,4,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "1,4,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "50") (term "1,4,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "1,1,4,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "50") (term "0,1,4,0,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "50") (term "0,0,1,4,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "50") (term "0,0,0,1,4,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "50") (term "0,0,1,4,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "50") (term "0,0,1,4,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "50") (term "4,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "50") (term "0,4,0,1,0"))
                                          (rule "polySimp_addComm0" (formula "50") (term "0,0,4,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,4,0,1,0"))
                                          (rule "add_literals" (formula "50") (term "1,1,0,4,0,1,0"))
                                          (rule "times_zero_1" (formula "50") (term "1,0,4,0,1,0"))
                                          (rule "add_zero_right" (formula "50") (term "0,4,0,1,0"))
                                          (rule "jmod_axiom" (formula "3") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                          (rule "jmod_axiom" (formula "41") (term "0,1,2,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,2,1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,2,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "1,2,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "1,1,2,1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "0,1,2,1,0,0,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "0,0,0,1,2,1,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "41") (term "2,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "41") (term "0,2,1,0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "41") (term "0,0,2,1,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,2,1,0,0,1,0"))
                                          (rule "add_literals" (formula "41") (term "1,1,0,2,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "41") (term "1,0,2,1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,2,1,0,0,1,0"))
                                          (rule "jmod_axiom" (formula "80") (term "1,2,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "80") (term "1,1,2,1,0"))
                                          (rule "polySimp_addAssoc" (formula "80") (term "2,1,0"))
                                          (rule "polySimp_addAssoc" (formula "80") (term "0,2,1,0"))
                                          (rule "jmod_axiom" (formula "47") (term "0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "47") (term "0,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "47") (term "0,0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "47") (term "0,0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "0,0,1,0"))
                                          (rule "polySimp_elimOne" (formula "47") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "47") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
                                          (rule "polySimp_addComm0" (formula "47") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,0"))
                                          (rule "add_literals" (formula "47") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "47") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "47") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1"))
                                          (rule "mul_literals" (formula "25") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                          (rule "mul_literals" (formula "2") (term "0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "57"))
                                          (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                          (rule "mul_literals" (formula "1") (term "0,0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                          (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                          (rule "polySimp_elimOne" (formula "47") (term "0"))
                                          (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "24"))
                                          (rule "leq_literals" (formula "23") (term "0"))
                                           (builtin "One Step Simplification" (formula "23"))
                                          (rule "true_left" (formula "23"))
                                          (rule "inEqSimp_subsumption2" (formula "2") (ifseqformula "56"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "greater_literals" (formula "2") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                          (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                          (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "2") (term "0,0"))
                                          (rule "qeq_literals" (formula "2") (term "0"))
                                           (builtin "One Step Simplification" (formula "2"))
                                          (rule "true_left" (formula "2"))
                                          (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "26"))
                                          (rule "leq_literals" (formula "28") (term "0"))
                                           (builtin "One Step Simplification" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "24"))
                                          (rule "leq_literals" (formula "13") (term "0"))
                                           (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "wellFormedMemsetArrayPrimitive" (formula "76"))
                                          (rule "wellFormedStorePrimitive" (formula "76"))
                                          (rule "wellFormedStorePrimitive" (formula "76"))
                                          (rule "wellFormedStorePrimitive" (formula "76"))
                                          (rule "wellFormedCreate" (formula "76"))
                                          (rule "wellFormedAnonEQ" (formula "76") (ifseqformula "37"))
                                          (rule "replace_known_left" (formula "76") (term "0") (ifseqformula "8"))
                                           (builtin "One Step Simplification" (formula "76") (ifInst ""  (formula "36")))
                                          (rule "closeTrue" (formula "76"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "andRight" (formula "81"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "81"))
                                          (branch "Case 1"
                                              (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "77")))
                                             (rule "closeTrue" (formula "81"))
                                          )
                                          (branch "Case 2"
                                              (builtin "One Step Simplification" (formula "81"))
                                             (rule "dismissNonSelectedField" (formula "81") (term "0"))
                                             (rule "inEqSimp_ltRight" (formula "61"))
                                             (rule "times_zero_1" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "25"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0"))
                                             (rule "inEqSimp_homoInEq0" (formula "47"))
                                             (rule "polySimp_addComm1" (formula "47") (term "0"))
                                             (rule "jmod_axiom" (formula "49") (term "0,1,5,0"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,5,0"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "1,5,0"))
                                             (rule "polySimp_rightDist" (formula "49") (term "1,5,0"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "1,1,5,0"))
                                             (rule "polySimp_rightDist" (formula "49") (term "0,1,5,0"))
                                             (rule "polySimp_mulAssoc" (formula "49") (term "0,0,1,5,0"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "0,0,0,1,5,0"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "0,0,1,5,0"))
                                             (rule "polySimp_elimOne" (formula "49") (term "0,0,1,5,0"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "5,0"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "0,5,0"))
                                             (rule "polySimp_addComm0" (formula "49") (term "0,0,5,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,5,0"))
                                             (rule "add_literals" (formula "49") (term "1,1,0,5,0"))
                                             (rule "times_zero_1" (formula "49") (term "1,0,5,0"))
                                             (rule "add_zero_right" (formula "49") (term "0,5,0"))
                                             (rule "jmod_axiom" (formula "57") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "57") (term "1,0"))
                                             (rule "jmod_axiom" (formula "3") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "jmod_axiom" (formula "2") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "2") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                             (rule "jmod_axiom" (formula "41") (term "0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,2,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,2,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,1,2,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "0,0,0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "2,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "0,2,1,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "41") (term "0,0,2,1,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,2,1,0,0,1,0"))
                                             (rule "add_literals" (formula "41") (term "1,1,0,2,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "41") (term "1,0,2,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "41") (term "0,2,1,0,0,1,0"))
                                             (rule "jmod_axiom" (formula "1") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "1") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "jmod_axiom" (formula "50") (term "0,1,4,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,4,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "50") (term "1,4,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "50") (term "1,4,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "50") (term "1,1,4,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "50") (term "0,1,4,0,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "50") (term "0,0,1,4,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "50") (term "0,0,0,1,4,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "50") (term "0,0,1,4,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "50") (term "0,0,1,4,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "50") (term "4,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "50") (term "0,4,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "50") (term "0,0,4,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,4,0,1,0"))
                                             (rule "add_literals" (formula "50") (term "1,1,0,4,0,1,0"))
                                             (rule "times_zero_1" (formula "50") (term "1,0,4,0,1,0"))
                                             (rule "add_zero_right" (formula "50") (term "0,4,0,1,0"))
                                             (rule "jmod_axiom" (formula "80") (term "1,2,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "80") (term "1,1,2,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "80") (term "2,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "80") (term "0,2,1,0,0"))
                                             (rule "jmod_axiom" (formula "47") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "0,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "47") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "47") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "47") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1"))
                                             (rule "mul_literals" (formula "25") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "57"))
                                             (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                             (rule "mul_literals" (formula "2") (term "0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                             (rule "mul_literals" (formula "1") (term "0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "28"))
                                             (rule "leq_literals" (formula "30") (term "0"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "inEqSimp_subsumption2" (formula "2") (ifseqformula "56"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "greater_literals" (formula "2") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                             (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,0"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "23"))
                                             (rule "leq_literals" (formula "22") (term "0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "24"))
                                             (rule "leq_literals" (formula "13") (term "0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "pullOutSelect" (formula "76") (term "0") (inst "selectSK=java_lang_Object_created__0"))
                                             (rule "simplifySelectOfMemset" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0"))
                                             (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "73"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "73")) (ifInst ""  (formula "10")))
                                             (rule "applyEqReverse" (formula "77") (term "0") (ifseqformula "1"))
                                             (rule "close" (formula "77") (ifseqformula "10"))
                                          )
                                       )
                                       (branch "Case 2"
                                           (builtin "One Step Simplification" (formula "81") (ifInst ""  (formula "11")))
                                          (rule "closeTrue" (formula "81"))
                                       )
                                    )
                                 )
                                 (branch "Usage"
                                     (builtin "One Step Simplification" (formula "58"))
                                     (builtin "One Step Simplification" (formula "82"))
                                    (rule "expand_inInt" (formula "58") (term "0,1,0"))
                                    (rule "replace_int_MIN" (formula "58") (term "0,1,0,1,0"))
                                    (rule "replace_int_MAX" (formula "58") (term "1,0,0,1,0"))
                                    (rule "andLeft" (formula "58"))
                                    (rule "andLeft" (formula "59"))
                                    (rule "andLeft" (formula "58"))
                                    (rule "andLeft" (formula "60"))
                                    (rule "andLeft" (formula "59"))
                                    (rule "andLeft" (formula "61"))
                                    (rule "andLeft" (formula "59"))
                                    (rule "andLeft" (formula "62"))
                                    (rule "andLeft" (formula "62"))
                                    (rule "andLeft" (formula "62"))
                                    (rule "andLeft" (formula "62"))
                                    (rule "andLeft" (formula "62"))
                                    (rule "andLeft" (formula "62"))
                                    (rule "andLeft" (formula "62"))
                                    (rule "andLeft" (formula "62"))
                                    (rule "andLeft" (formula "62"))
                                    (rule "andLeft" (formula "62"))
                                    (rule "andLeft" (formula "62"))
                                    (rule "andLeft" (formula "62"))
                                    (rule "andLeft" (formula "62"))
                                    (rule "andLeft" (formula "62"))
                                    (rule "andLeft" (formula "62"))
                                    (rule "andLeft" (formula "62"))
                                    (rule "andLeft" (formula "62"))
                                    (rule "replace_known_left" (formula "61") (term "0") (ifseqformula "58"))
                                     (builtin "One Step Simplification" (formula "61"))
                                    (rule "true_left" (formula "61"))
                                    (rule "disjointDefinition" (formula "81"))
                                     (builtin "One Step Simplification" (formula "81"))
                                    (rule "notLeft" (formula "81"))
                                    (rule "disjointDefinition" (formula "80"))
                                     (builtin "One Step Simplification" (formula "80"))
                                    (rule "notLeft" (formula "80"))
                                    (rule "disjointDefinition" (formula "79"))
                                     (builtin "One Step Simplification" (formula "79"))
                                    (rule "notLeft" (formula "79"))
                                    (rule "eqSymm" (formula "79"))
                                    (rule "disjointDefinition" (formula "78"))
                                     (builtin "One Step Simplification" (formula "78"))
                                    (rule "notLeft" (formula "78"))
                                    (rule "disjointDefinition" (formula "77"))
                                     (builtin "One Step Simplification" (formula "77"))
                                    (rule "notLeft" (formula "77"))
                                    (rule "eqSymm" (formula "77"))
                                    (rule "disjointDefinition" (formula "76"))
                                     (builtin "One Step Simplification" (formula "76"))
                                    (rule "notLeft" (formula "76"))
                                    (rule "eqSymm" (formula "76"))
                                    (rule "disjointDefinition" (formula "75"))
                                     (builtin "One Step Simplification" (formula "75"))
                                    (rule "notLeft" (formula "75"))
                                    (rule "disjointDefinition" (formula "74"))
                                     (builtin "One Step Simplification" (formula "74"))
                                    (rule "notLeft" (formula "74"))
                                    (rule "eqSymm" (formula "74"))
                                    (rule "disjointDefinition" (formula "73"))
                                     (builtin "One Step Simplification" (formula "73"))
                                    (rule "notLeft" (formula "73"))
                                    (rule "eqSymm" (formula "73"))
                                    (rule "disjointDefinition" (formula "72"))
                                     (builtin "One Step Simplification" (formula "72"))
                                    (rule "notLeft" (formula "72"))
                                    (rule "eqSymm" (formula "72"))
                                    (rule "disjointDefinition" (formula "71"))
                                     (builtin "One Step Simplification" (formula "71"))
                                    (rule "notLeft" (formula "71"))
                                    (rule "eqSymm" (formula "71"))
                                    (rule "disjointDefinition" (formula "70"))
                                     (builtin "One Step Simplification" (formula "70"))
                                    (rule "notLeft" (formula "70"))
                                    (rule "eqSymm" (formula "70"))
                                    (rule "disjointDefinition" (formula "69"))
                                     (builtin "One Step Simplification" (formula "69"))
                                    (rule "notLeft" (formula "69"))
                                    (rule "eqSymm" (formula "69"))
                                    (rule "disjointDefinition" (formula "68"))
                                     (builtin "One Step Simplification" (formula "68"))
                                    (rule "notLeft" (formula "68"))
                                    (rule "eqSymm" (formula "68"))
                                    (rule "disjointDefinition" (formula "67"))
                                     (builtin "One Step Simplification" (formula "67"))
                                    (rule "notLeft" (formula "67"))
                                    (rule "eqSymm" (formula "67"))
                                    (rule "disjointDefinition" (formula "66"))
                                     (builtin "One Step Simplification" (formula "66"))
                                    (rule "notLeft" (formula "66"))
                                    (rule "eqSymm" (formula "66"))
                                    (rule "disjointDefinition" (formula "65"))
                                     (builtin "One Step Simplification" (formula "65"))
                                    (rule "notLeft" (formula "65"))
                                    (rule "eqSymm" (formula "65"))
                                    (rule "disjointDefinition" (formula "64"))
                                     (builtin "One Step Simplification" (formula "64"))
                                    (rule "notLeft" (formula "64"))
                                    (rule "eqSymm" (formula "64"))
                                    (rule "disjointDefinition" (formula "63"))
                                     (builtin "One Step Simplification" (formula "63"))
                                    (rule "notLeft" (formula "63"))
                                    (rule "eqSymm" (formula "63"))
                                    (rule "disjointDefinition" (formula "61"))
                                     (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "74")))
                                    (rule "true_left" (formula "61"))
                                    (rule "disjointDefinition" (formula "61"))
                                     (builtin "One Step Simplification" (formula "61"))
                                    (rule "notLeft" (formula "61"))
                                    (rule "eqSymm" (formula "61"))
                                    (rule "inEqSimp_commuteLeq" (formula "60"))
                                    (rule "elim_double_block_2" (formula "90") (term "1"))
                                    (rule "ifUnfold" (formula "90") (term "1") (inst "#boolv=x"))
                                    (rule "variableDeclaration" (formula "90") (term "1") (newnames "x_6"))
                                    (rule "inequality_comparison_simple" (formula "90") (term "1"))
                                     (builtin "One Step Simplification" (formula "90"))
                                    (rule "replace_known_left" (formula "90") (term "0,0,1,0") (ifseqformula "58"))
                                     (builtin "One Step Simplification" (formula "90"))
                                    (rule "ifSplit" (formula "90"))
                                    (branch "if x_6 true"
                                        (builtin "One Step Simplification" (formula "91"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "if x_6 false"
                                        (builtin "One Step Simplification" (formula "91"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "blockEmpty" (formula "90") (term "1"))
                                        (builtin "Use Operation Contract" (formula "90") (newnames "heapBefore_classify_all,exc_29,heapAfter_classify_all,anon_heap_classify_all") (contract "de.wiesler.Classifier[de.wiesler.Classifier::classify_all([I,int,int,[I)].JML normal_behavior operation contract.0"))
                                       (branch "Post (classify_all)"
                                           (builtin "One Step Simplification" (formula "92"))
                                           (builtin "One Step Simplification" (formula "62"))
                                          (rule "expand_inInt" (formula "62") (term "1,0,0,0,1,0,1"))
                                          (rule "replace_int_MAX" (formula "62") (term "1,0,1,0,0,0,1,0,1"))
                                          (rule "replace_int_MIN" (formula "62") (term "0,1,1,0,0,0,1,0,1"))
                                          (rule "andLeft" (formula "62"))
                                          (rule "andLeft" (formula "63"))
                                          (rule "andLeft" (formula "63"))
                                          (rule "andLeft" (formula "65"))
                                          (rule "andLeft" (formula "64"))
                                          (rule "translateJavaAddInt" (formula "64") (term "0,2,2,0,1,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "64") (term "1,1,0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "64") (term "0,0,0,0"))
                                          (rule "applyEq" (formula "64") (term "1,1,0,0,0") (ifseqformula "3"))
                                          (rule "commute_and" (formula "64") (term "1,0,0"))
                                          (rule "commute_and" (formula "64") (term "0,0,0"))
                                          (rule "shift_paren_and" (formula "64") (term "0,0"))
                                          (rule "commute_and_2" (formula "64") (term "0,0,0"))
                                           (builtin "Use Operation Contract" (formula "96") (newnames "heapBefore_finish_batch,result_25,exc_30,heapAfter_finish_batch,anon_heap_finish_batch") (contract "de.wiesler.Classifier[de.wiesler.Classifier::finish_batch([I,[I,int,int,int,int,[I,de.wiesler.Buffers)].JML normal_behavior operation contract.0"))
                                          (branch "Post (finish_batch)"
                                              (builtin "One Step Simplification" (formula "98"))
                                              (builtin "One Step Simplification" (formula "68"))
                                             (rule "expand_inInt" (formula "68") (term "0,0,0,1,1,1,1,1,0,1"))
                                             (rule "expand_inInt" (formula "68") (term "0,1,0,1"))
                                             (rule "replace_int_MIN" (formula "68") (term "0,1,0,0,0,1,1,1,1,1,0,1"))
                                             (rule "replace_int_MAX" (formula "68") (term "1,0,0,0,0,1,1,1,1,1,0,1"))
                                             (rule "replace_int_MAX" (formula "68") (term "1,0,0,1,0,1"))
                                             (rule "replace_int_MIN" (formula "68") (term "0,1,0,1,0,1"))
                                             (rule "andLeft" (formula "68"))
                                             (rule "andLeft" (formula "69"))
                                             (rule "andLeft" (formula "69"))
                                             (rule "andLeft" (formula "71"))
                                             (rule "andLeft" (formula "70"))
                                             (rule "andLeft" (formula "72"))
                                             (rule "andLeft" (formula "70"))
                                             (rule "andLeft" (formula "72"))
                                             (rule "andLeft" (formula "73"))
                                             (rule "andLeft" (formula "72"))
                                             (rule "andLeft" (formula "74"))
                                             (rule "andLeft" (formula "76"))
                                             (rule "andLeft" (formula "74"))
                                             (rule "andLeft" (formula "78"))
                                             (rule "translateJavaSubInt" (formula "68") (term "2,0,0,1,0"))
                                             (rule "translateJavaSubInt" (formula "68") (term "2,1,0,1,0"))
                                             (rule "translateJavaSubInt" (formula "68") (term "2,1,1,1,0"))
                                             (rule "translateJavaSubInt" (formula "68") (term "2,0,1,1,0"))
                                             (rule "translateJavaSubInt" (formula "76") (term "0,0"))
                                             (rule "translateJavaAddInt" (formula "77") (term "5,0"))
                                             (rule "eqSymm" (formula "78") (term "1,0"))
                                             (rule "translateJavaMulInt" (formula "68") (term "0,2,1,1,1,0"))
                                             (rule "translateJavaAddInt" (formula "78") (term "4,0,1,0"))
                                             (rule "polySimp_elimSub" (formula "68") (term "2,0,0,1,0"))
                                             (rule "mul_literals" (formula "68") (term "1,2,0,0,1,0"))
                                             (rule "polySimp_elimSub" (formula "68") (term "2,1,0,1,0"))
                                             (rule "mul_literals" (formula "68") (term "1,2,1,0,1,0"))
                                             (rule "polySimp_elimSub" (formula "68") (term "2,0,1,1,0"))
                                             (rule "mul_literals" (formula "68") (term "1,2,0,1,1,0"))
                                             (rule "polySimp_elimSub" (formula "76") (term "0,0"))
                                             (rule "polySimp_elimSub" (formula "68") (term "2,1,1,1,0"))
                                             (rule "mul_literals" (formula "68") (term "1,2,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "68") (term "0,2,1,1,1,0"))
                                             (rule "polySimp_addComm1" (formula "68") (term "2,0,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "68") (term "2,1,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "68") (term "2,0,1,1,0"))
                                             (rule "polySimp_addComm0" (formula "76") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "68") (term "2,1,1,1,0"))
                                             (rule "polySimp_addComm0" (formula "68") (term "0,2,0,0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "71"))
                                             (rule "inEqSimp_commuteLeq" (formula "74"))
                                             (rule "inEqSimp_commuteLeq" (formula "78") (term "1,0,0"))
                                             (rule "assignment" (formula "110") (term "1"))
                                              (builtin "One Step Simplification" (formula "110"))
                                             (rule "applyEq" (formula "78") (term "1,4,0,1,0") (ifseqformula "3"))
                                             (rule "polySimp_pullOutFactor2b" (formula "78") (term "4,0,1,0"))
                                             (rule "add_literals" (formula "78") (term "1,1,4,0,1,0"))
                                             (rule "times_zero_1" (formula "78") (term "1,4,0,1,0"))
                                             (rule "add_zero_right" (formula "78") (term "4,0,1,0"))
                                             (rule "applyEq" (formula "68") (term "1,2,0,1,1,0") (ifseqformula "34"))
                                             (rule "applyEq" (formula "68") (term "0,1,2,1,1,1,0") (ifseqformula "34"))
                                             (rule "applyEq" (formula "68") (term "1,2,1,0,1,0") (ifseqformula "34"))
                                             (rule "applyEq" (formula "77") (term "1,5,0") (ifseqformula "3"))
                                             (rule "polySimp_pullOutFactor2b" (formula "77") (term "5,0"))
                                             (rule "add_literals" (formula "77") (term "1,1,5,0"))
                                             (rule "times_zero_1" (formula "77") (term "1,5,0"))
                                             (rule "add_zero_right" (formula "77") (term "5,0"))
                                             (rule "commuteUnion" (formula "68") (term "1,1,0"))
                                             (rule "commuteUnion" (formula "68") (term "0,1,0"))
                                             (rule "commute_and" (formula "78") (term "0,0"))
                                             (rule "associativeLawUnion" (formula "68") (term "1,0"))
                                              (builtin "Use Operation Contract" (formula "110") (newnames "heapBefore_calculate_bucket_starts,exc_31,heapAfter_calculate_bucket_starts,anon_heap_calculate_bucket_starts") (contract "de.wiesler.Classifier[de.wiesler.Classifier::calculate_bucket_starts([I,int,int,int,[I,de.wiesler.Buffers)].JML normal_behavior operation contract.0"))
                                             (branch "Post (calculate_bucket_starts)"
                                                 (builtin "One Step Simplification" (formula "82"))
                                                 (builtin "One Step Simplification" (formula "112"))
                                                (rule "expand_inInt" (formula "82") (term "1,0,0,0,1,1,0,1"))
                                                (rule "replace_int_MAX" (formula "82") (term "1,0,1,0,0,0,1,1,0,1"))
                                                (rule "replace_int_MIN" (formula "82") (term "0,1,1,0,0,0,1,1,0,1"))
                                                (rule "andLeft" (formula "82"))
                                                (rule "andLeft" (formula "83"))
                                                (rule "andLeft" (formula "84"))
                                                (rule "andLeft" (formula "83"))
                                                (rule "andLeft" (formula "83"))
                                                (rule "andLeft" (formula "83"))
                                                (rule "andLeft" (formula "85"))
                                                (rule "translateJavaSubInt" (formula "84") (term "1"))
                                                (rule "translateJavaSubInt" (formula "85") (term "0,1,0"))
                                                (rule "translateJavaAddInt" (formula "85") (term "1,1,0"))
                                                (rule "translateJavaAddInt" (formula "85") (term "0,2,0,0,1,0"))
                                                (rule "polySimp_elimSub" (formula "84") (term "1"))
                                                (rule "polySimp_elimSub" (formula "85") (term "0,1,0"))
                                                (rule "polySimp_addComm0" (formula "85") (term "1,1,0"))
                                                (rule "polySimp_addComm0" (formula "84") (term "1"))
                                                (rule "polySimp_addComm0" (formula "85") (term "0,1,0"))
                                                (rule "polySimp_addComm0" (formula "85") (term "0,2,1,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "85") (term "1,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "85") (term "0,0,0,0"))
                                                (rule "applyEq" (formula "82") (term "2,1,0") (ifseqformula "34"))
                                                (rule "applyEq" (formula "83") (term "2,0") (ifseqformula "34"))
                                                (rule "applyEq" (formula "84") (term "0,2,0") (ifseqformula "34"))
                                                (rule "applyEq" (formula "85") (term "1,1,0,0,0") (ifseqformula "34"))
                                                (rule "pullOutSelect" (formula "84") (term "0") (inst "selectSK=arr_0"))
                                                (rule "simplifySelectOfAnonEQ" (formula "84") (ifseqformula "82"))
                                                 (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "116")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,1,0,0") (ifseqformula "68"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,0,1,0,0") (ifseqformula "62"))
                                                (rule "elementOfArrayRangeConcrete" (formula "84") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "84"))
                                                (rule "dismissNonSelectedField" (formula "84") (term "0,0,0,0,1,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "84") (term "0,0,0,0"))
                                                (rule "pullOutSelect" (formula "84") (term "2,0") (inst "selectSK=arr_1"))
                                                (rule "simplifySelectOfAnonEQ" (formula "84") (ifseqformula "68"))
                                                 (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "117")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "84") (term "0,1,0,0") (ifseqformula "62"))
                                                (rule "dismissNonSelectedField" (formula "84") (term "0,0,0,1,0,0"))
                                                (rule "elementOfUnion" (formula "84") (term "0,0,0"))
                                                (rule "elementOfArrayRangeConcrete" (formula "84") (term "1,0,0,0"))
                                                (rule "eqSymm" (formula "84") (term "0,0,1,0,0,0"))
                                                (rule "replace_known_right" (formula "84") (term "0,0,1,0,0,0") (ifseqformula "107"))
                                                 (builtin "One Step Simplification" (formula "84"))
                                                (rule "elementOfUnion" (formula "84") (term "0,0,0"))
                                                (rule "elementOfArrayRangeConcrete" (formula "84") (term "1,0,0,0"))
                                                (rule "eqSymm" (formula "84") (term "0,0,1,0,0,0"))
                                                (rule "replace_known_right" (formula "84") (term "0,0,1,0,0,0") (ifseqformula "106"))
                                                 (builtin "One Step Simplification" (formula "84"))
                                                (rule "elementOfUnion" (formula "84") (term "0,0,0"))
                                                (rule "elementOfArrayRangeConcrete" (formula "84") (term "1,0,0,0"))
                                                (rule "eqSymm" (formula "84") (term "0,0,1,0,0,0"))
                                                (rule "replace_known_right" (formula "84") (term "0,0,1,0,0,0") (ifseqformula "102"))
                                                 (builtin "One Step Simplification" (formula "84"))
                                                (rule "elementOfArrayRangeConcrete" (formula "84") (term "0,0,0"))
                                                 (builtin "One Step Simplification" (formula "84"))
                                                (rule "inEqSimp_commuteLeq" (formula "84") (term "0,0,0,0"))
                                                (rule "pullOutSelect" (formula "85") (term "0,0,0,0,1,0,0") (inst "selectSK=java_lang_Object_created__0"))
                                                (rule "applyEq" (formula "84") (term "0,0,0,1,0,0") (ifseqformula "85"))
                                                (rule "simplifySelectOfMemset" (formula "85"))
                                                 (builtin "One Step Simplification" (formula "85"))
                                                (rule "simplifySelectOfStore" (formula "85"))
                                                 (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "93")))
                                                (rule "simplifySelectOfStore" (formula "85"))
                                                 (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "93")))
                                                (rule "simplifySelectOfStore" (formula "85"))
                                                 (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "93")))
                                                (rule "simplifySelectOfCreate" (formula "85"))
                                                 (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "93")) (ifInst ""  (formula "100")))
                                                (rule "simplifySelectOfAnonEQ" (formula "85") (ifseqformula "41"))
                                                 (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "118")) (ifInst ""  (formula "17")))
                                                (rule "applyEqReverse" (formula "86") (term "0,0,0,0,1,0,0") (ifseqformula "85"))
                                                (rule "applyEqReverse" (formula "84") (term "0,0,0,1,0,0") (ifseqformula "85"))
                                                (rule "hideAuxiliaryEq" (formula "85"))
                                                (rule "replace_known_left" (formula "84") (term "0,0,1,0,0") (ifseqformula "17"))
                                                 (builtin "One Step Simplification" (formula "84"))
                                                (rule "replace_known_left" (formula "85") (term "0,0,0,1,0,0") (ifseqformula "17"))
                                                 (builtin "One Step Simplification" (formula "85"))
                                                (rule "pullOutSelect" (formula "84") (term "2,0") (inst "selectSK=arr_2"))
                                                (rule "simplifySelectOfAnonEQ" (formula "84") (ifseqformula "62"))
                                                 (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "118")))
                                                (rule "eqSymm" (formula "84") (term "0,0,0"))
                                                (rule "replace_known_right" (formula "84") (term "0,0,0") (ifseqformula "93"))
                                                 (builtin "One Step Simplification" (formula "84"))
                                                (rule "dismissNonSelectedField" (formula "84") (term "2,0"))
                                                (rule "dismissNonSelectedField" (formula "84") (term "0,0,0,0"))
                                                (rule "replaceKnownSelect_taclet0001201112101012_2" (formula "84") (term "0,0,0,0"))
                                                (rule "replaceKnownAuxiliaryConstant_taclet0001201112101012_8" (formula "84") (term "0,0,0,0"))
                                                (rule "replace_known_left" (formula "84") (term "0,0,0") (ifseqformula "17"))
                                                 (builtin "One Step Simplification" (formula "84"))
                                                (rule "simplifySelectOfMemset" (formula "84"))
                                                 (builtin "One Step Simplification" (formula "84"))
                                                (rule "dismissNonSelectedField" (formula "84") (term "2,0"))
                                                (rule "elementOfArrayRangeConcrete" (formula "84") (term "0,0"))
                                                (rule "eqSymm" (formula "84") (term "0,0,0,0"))
                                                (rule "replace_known_right" (formula "84") (term "0,0,0,0") (ifseqformula "93"))
                                                 (builtin "One Step Simplification" (formula "84"))
                                                (rule "simplifySelectOfStore" (formula "84"))
                                                 (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "93")))
                                                (rule "simplifySelectOfStore" (formula "84"))
                                                 (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "93")))
                                                (rule "simplifySelectOfCreate" (formula "84"))
                                                 (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "93")) (ifInst ""  (formula "100")))
                                                (rule "simplifySelectOfAnonEQ" (formula "84") (ifseqformula "41"))
                                                 (builtin "One Step Simplification" (formula "84") (ifInst ""  (formula "118")) (ifInst ""  (formula "17")))
                                                (rule "elementOfUnion" (formula "84") (term "0,0"))
                                                (rule "elementOfArrayRangeConcrete" (formula "84") (term "1,0,0"))
                                                (rule "eqSymm" (formula "84") (term "0,0,1,0,0"))
                                                (rule "replace_known_right" (formula "84") (term "0,0,1,0,0") (ifseqformula "108"))
                                                 (builtin "One Step Simplification" (formula "84"))
                                                (rule "elementOfUnion" (formula "84") (term "0,0"))
                                                (rule "elementOfArrayRangeConcrete" (formula "84") (term "1,0,0"))
                                                (rule "eqSymm" (formula "84") (term "0,0,1,0,0"))
                                                (rule "replace_known_right" (formula "84") (term "0,0,1,0,0") (ifseqformula "107"))
                                                 (builtin "One Step Simplification" (formula "84"))
                                                (rule "elementOfUnion" (formula "84") (term "0,0"))
                                                (rule "elementOfArrayRangeConcrete" (formula "84") (term "1,0,0"))
                                                (rule "eqSymm" (formula "84") (term "0,0,1,0,0"))
                                                (rule "replace_known_right" (formula "84") (term "0,0,1,0,0") (ifseqformula "103"))
                                                 (builtin "One Step Simplification" (formula "84"))
                                                (rule "elementOfArrayRangeConcrete" (formula "84") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "84"))
                                                (rule "inEqSimp_commuteLeq" (formula "84") (term "0,0,0"))
                                                (rule "commute_and" (formula "88") (term "1,0,0"))
                                                (rule "commute_and" (formula "88") (term "0,0,0"))
                                                (rule "methodCallReturn" (formula "121") (term "1"))
                                                (rule "assignment" (formula "121") (term "1"))
                                                 (builtin "One Step Simplification" (formula "121"))
                                                (rule "shift_paren_and" (formula "88") (term "0,0"))
                                                (rule "commute_and_2" (formula "88") (term "0,0,0"))
                                                (rule "methodCallEmpty" (formula "121") (term "1"))
                                                (rule "tryEmpty" (formula "121") (term "1"))
                                                (rule "emptyModality" (formula "121") (term "1"))
                                                (rule "andRight" (formula "121"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "121"))
                                                   (branch "Case 1"
                                                       (builtin "One Step Simplification" (formula "121"))
                                                      (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "121") (userinteraction))
                                                      (rule "polySimp_homoEq" (formula "87"))
                                                      (rule "polySimp_homoEq" (formula "88") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "88") (term "1,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "87") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "87") (term "0,0"))
                                                      (rule "polySimp_rightDist" (formula "88") (term "1,0,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "88") (term "0,1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "88") (term "0,0,1,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "88") (term "0,1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "88") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "88") (term "0,1,0"))
                                                      (rule "inEqSimp_ltRight" (formula "101"))
                                                      (rule "times_zero_1" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "88") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "88") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "47"))
                                                      (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25"))
                                                      (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "75"))
                                                      (rule "polySimp_addComm1" (formula "75") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "86") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "86") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "86") (term "1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "86") (term "0,1,0,0"))
                                                      (rule "qeq_literals" (formula "86") (term "1,0,0"))
                                                       (builtin "One Step Simplification" (formula "86"))
                                                      (rule "inEqSimp_homoInEq0" (formula "85") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "85") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "85") (term "1,1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "85") (term "1,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "85") (term "0,1,0,0"))
                                                      (rule "qeq_literals" (formula "85") (term "1,0,0"))
                                                       (builtin "One Step Simplification" (formula "85"))
                                                      (rule "applyEqReverse" (formula "86") (term "2,0") (ifseqformula "85"))
                                                      (rule "hideAuxiliaryEq" (formula "85"))
                                                      (rule "inEqSimp_homoInEq0" (formula "84") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "84") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "84") (term "1,1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "84") (term "1,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "84") (term "0,1,0,0"))
                                                      (rule "qeq_literals" (formula "84") (term "1,0,0"))
                                                       (builtin "One Step Simplification" (formula "84"))
                                                      (rule "applyEqReverse" (formula "85") (term "2,0") (ifseqformula "84"))
                                                      (rule "hideAuxiliaryEq" (formula "84"))
                                                      (rule "jmod_axiom" (formula "64") (term "0,1,0,0,2,2,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "64") (term "1,0,1,0,0,2,2,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,2,2,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "64") (term "1,0,0,2,2,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,2,2,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "64") (term "0,1,0,0,2,2,0,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "64") (term "0,0,1,0,0,2,2,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "64") (term "0,0,0,1,0,0,2,2,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "64") (term "0,0,1,0,0,2,2,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "64") (term "0,0,1,0,0,2,2,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "64") (term "0,0,2,2,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,2,2,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "64") (term "0,0,0,0,2,2,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0,0,2,2,0,1,0"))
                                                      (rule "add_literals" (formula "64") (term "1,1,0,0,0,2,2,0,1,0"))
                                                      (rule "times_zero_1" (formula "64") (term "1,0,0,0,2,2,0,1,0"))
                                                      (rule "add_zero_right" (formula "64") (term "0,0,0,2,2,0,1,0"))
                                                      (rule "jmod_axiom" (formula "1") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "1") (term "0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "jmod_axiom" (formula "41") (term "0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,2,1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,2,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "0,0,0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "2,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0,2,1,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "41") (term "0,0,2,1,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,2,1,0,0,1,0"))
                                                      (rule "add_literals" (formula "41") (term "1,1,0,2,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "41") (term "1,0,2,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "41") (term "0,2,1,0,0,1,0"))
                                                      (rule "jmod_axiom" (formula "49") (term "0,1,5,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,5,0"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,5,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "1,5,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,1,5,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "0,1,5,0"))
                                                      (rule "polySimp_mulAssoc" (formula "49") (term "0,0,1,5,0"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "0,0,0,1,5,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "0,0,1,5,0"))
                                                      (rule "polySimp_elimOne" (formula "49") (term "0,0,1,5,0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "5,0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0,5,0"))
                                                      (rule "polySimp_addComm0" (formula "49") (term "0,0,5,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,5,0"))
                                                      (rule "add_literals" (formula "49") (term "1,1,0,5,0"))
                                                      (rule "times_zero_1" (formula "49") (term "1,0,5,0"))
                                                      (rule "add_zero_right" (formula "49") (term "0,5,0"))
                                                      (rule "jmod_axiom" (formula "78") (term "0,1,4,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "78") (term "1,0,1,4,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "78") (term "1,4,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "78") (term "1,4,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "78") (term "1,1,4,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "78") (term "0,1,4,1,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "78") (term "0,0,1,4,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "78") (term "0,0,0,1,4,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "78") (term "0,0,1,4,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "78") (term "0,0,1,4,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "78") (term "4,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "78") (term "0,4,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "78") (term "0,0,4,1,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,4,1,1,0"))
                                                      (rule "add_literals" (formula "78") (term "1,1,0,4,1,1,0"))
                                                      (rule "times_zero_1" (formula "78") (term "1,0,4,1,1,0"))
                                                      (rule "add_zero_right" (formula "78") (term "0,4,1,1,0"))
                                                      (rule "jmod_axiom" (formula "3") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                      (rule "jmod_axiom" (formula "50") (term "0,1,4,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,4,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "50") (term "1,4,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "50") (term "1,4,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "50") (term "1,1,4,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "50") (term "0,1,4,0,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "50") (term "0,0,1,4,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "50") (term "0,0,0,1,4,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "50") (term "0,0,1,4,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "50") (term "0,0,1,4,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "4,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "0,4,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "50") (term "0,0,4,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,4,0,1,0"))
                                                      (rule "add_literals" (formula "50") (term "1,1,0,4,0,1,0"))
                                                      (rule "times_zero_1" (formula "50") (term "1,0,4,0,1,0"))
                                                      (rule "add_zero_right" (formula "50") (term "0,4,0,1,0"))
                                                      (rule "jmod_axiom" (formula "62") (term "1,2,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "62") (term "1,1,2,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "62") (term "2,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "62") (term "0,2,1,0,0,0"))
                                                      (rule "jmod_axiom" (formula "57") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "57") (term "1,0"))
                                                      (rule "jmod_axiom" (formula "68") (term "0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "68") (term "1,0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "68") (term "1,2,1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "68") (term "1,2,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "68") (term "1,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "68") (term "0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "68") (term "0,0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "68") (term "0,0,0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "68") (term "0,0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "68") (term "0,0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "68") (term "2,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "68") (term "0,2,1,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "68") (term "0,0,2,1,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "68") (term "0,2,1,0,0,1,0"))
                                                      (rule "add_literals" (formula "68") (term "1,1,0,2,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "68") (term "1,0,2,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "68") (term "0,2,1,0,0,1,0"))
                                                      (rule "jmod_axiom" (formula "2") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "2") (term "0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                      (rule "jmod_axiom" (formula "64") (term "0,1,0,0,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "64") (term "1,0,1,0,0,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "64") (term "0,1,0,0,0,0,0,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "64") (term "0,0,1,0,0,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "64") (term "0,0,0,1,0,0,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "64") (term "0,0,1,0,0,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "64") (term "0,0,1,0,0,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0,0,0,0"))
                                                      (rule "jmod_axiom" (formula "47") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "47") (term "0,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "47") (term "0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "47") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "47") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,0"))
                                                      (rule "add_literals" (formula "47") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "47") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "47") (term "0,0,0"))
                                                      (rule "jmod_axiom" (formula "75") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "75") (term "1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "75") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "75") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "75") (term "0,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "75") (term "0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "75") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "75") (term "0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "75") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "75") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "75") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "75") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "75") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "75") (term "0,0,0"))
                                                      (rule "add_literals" (formula "75") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "75") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "75") (term "0,0,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "85"))
                                                      (rule "polySimp_mulComm0" (formula "85") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "85") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "85") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "85") (term "1,1"))
                                                      (rule "polySimp_mulAssoc" (formula "85") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "85") (term "0,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "85") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "85") (term "0,1"))
                                                      (rule "applyEq" (formula "31") (term "1") (ifseqformula "85"))
                                                      (rule "applyEq" (formula "27") (term "0") (ifseqformula "85"))
                                                      (rule "inEqSimp_homoInEq1" (formula "27"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "27") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0"))
                                                      (rule "add_zero_right" (formula "27") (term "0"))
                                                      (rule "applyEq" (formula "16") (term "0") (ifseqformula "85"))
                                                      (rule "inEqSimp_homoInEq1" (formula "16"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0"))
                                                      (rule "applyEq" (formula "41") (term "1,0,0,1,2,1,0,0,1,0") (ifseqformula "85"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "41") (term "0,0,0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                                      (rule "add_literals" (formula "41") (term "1,1,0,0,1,2,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "41") (term "1,0,0,1,2,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "41") (term "2,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "50") (term "5,0,1,0") (ifseqformula "85"))
                                                      (rule "applyEq" (formula "1") (term "1,0,0,1,0") (ifseqformula "85"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "1") (term "0,0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                      (rule "applyEq" (formula "50") (term "1,0,0,1,4,0,1,0") (ifseqformula "85"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,4,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "50") (term "0,0,0,1,4,0,1,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "50") (term "0,0,1,4,0,1,0"))
                                                      (rule "add_literals" (formula "50") (term "1,1,0,0,1,4,0,1,0"))
                                                      (rule "times_zero_1" (formula "50") (term "1,0,0,1,4,0,1,0"))
                                                      (rule "add_zero_right" (formula "50") (term "0,0,1,4,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "50") (term "4,0,1,0"))
                                                      (rule "applyEq" (formula "2") (term "1,0,0,1,0") (ifseqformula "85"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0,0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                      (rule "applyEq" (formula "39") (term "5,0,1,0") (ifseqformula "85"))
                                                      (rule "applyEq" (formula "78") (term "5,0,1,0") (ifseqformula "85"))
                                                      (rule "applyEq" (formula "77") (term "5,0") (ifseqformula "85"))
                                                      (rule "applyEq" (formula "68") (term "1,0,0,1,2,1,0,0,1,0") (ifseqformula "85"))
                                                      (rule "polySimp_addAssoc" (formula "68") (term "0,0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "68") (term "0,0,0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "68") (term "0,0,1,2,1,0,0,1,0"))
                                                      (rule "add_literals" (formula "68") (term "1,1,0,0,1,2,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "68") (term "1,0,0,1,2,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "68") (term "0,0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "68") (term "2,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "78") (term "4,0,1,0") (ifseqformula "85"))
                                                      (rule "applyEq" (formula "57") (term "1,0,0,1,0") (ifseqformula "85"))
                                                      (rule "polySimp_addComm1" (formula "57") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "57") (term "0,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "57") (term "0,0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "57") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "57") (term "1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "57") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "57") (term "0,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "57") (term "0,0"))
                                                      (rule "applyEq" (formula "49") (term "1,0,0,1,5,0") (ifseqformula "85"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,5,0"))
                                                      (rule "polySimp_addComm0" (formula "49") (term "0,0,0,1,5,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "49") (term "0,0,1,5,0"))
                                                      (rule "add_literals" (formula "49") (term "1,1,0,0,1,5,0"))
                                                      (rule "times_zero_1" (formula "49") (term "1,0,0,1,5,0"))
                                                      (rule "add_zero_right" (formula "49") (term "0,0,1,5,0"))
                                                      (rule "polySimp_addComm0" (formula "49") (term "5,0"))
                                                      (rule "applyEq" (formula "15") (term "0") (ifseqformula "85"))
                                                      (rule "inEqSimp_homoInEq0" (formula "15"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0"))
                                                      (rule "applyEq" (formula "62") (term "1,0,0,1,2,1,0,0,0") (ifseqformula "85"))
                                                      (rule "polySimp_addComm1" (formula "62") (term "2,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "62") (term "0,0,1,0,2,1,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "62") (term "0,0,0,1,0,2,1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "62") (term "0,0,1,0,2,1,0,0,0"))
                                                      (rule "add_literals" (formula "62") (term "1,1,0,0,1,0,2,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "62") (term "1,0,0,1,0,2,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "62") (term "0,0,1,0,2,1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "62") (term "0,2,1,0,0,0"))
                                                      (rule "applyEq" (formula "64") (term "1,0,0,1,0,0,2,2,0,1,0") (ifseqformula "85"))
                                                      (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0,0,2,2,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "64") (term "0,0,0,1,0,0,2,2,0,1,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "64") (term "0,0,1,0,0,2,2,0,1,0"))
                                                      (rule "add_literals" (formula "64") (term "1,1,0,0,1,0,0,2,2,0,1,0"))
                                                      (rule "times_zero_1" (formula "64") (term "1,0,0,1,0,0,2,2,0,1,0"))
                                                      (rule "add_zero_right" (formula "64") (term "0,0,1,0,0,2,2,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "64") (term "0,0,2,2,0,1,0"))
                                                      (rule "applyEq" (formula "78") (term "5,1,1,0") (ifseqformula "85"))
                                                      (rule "applyEq" (formula "64") (term "1,0,0,1,0,0,0,0,0,0,0") (ifseqformula "85"))
                                                      (rule "polySimp_addComm1" (formula "64") (term "0,0,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "64") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "64") (term "0,0,0,1,0,0,0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "64") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "64") (term "1,1,0,0,1,0,0,0,0,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "64") (term "1,0,0,1,0,0,0,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "64") (term "0,0,1,0,0,0,0,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "64") (term "0,0,0,0,0,0,0,0"))
                                                      (rule "applyEq" (formula "50") (term "5,1,1,0") (ifseqformula "85"))
                                                      (rule "applyEq" (formula "3") (term "1,0,0,1,1") (ifseqformula "85"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "1"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,1"))
                                                      (rule "polySimp_addComm0" (formula "3") (term "0,0,0,1,0,1"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0,1,0,1"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0,0,1,0,1"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0,0,1,0,1"))
                                                      (rule "add_zero_right" (formula "3") (term "0,0,1,0,1"))
                                                      (rule "polySimp_addComm0" (formula "3") (term "0,1"))
                                                      (rule "applyEq" (formula "78") (term "1,0,0,1,4,1,1,0") (ifseqformula "85"))
                                                      (rule "polySimp_addAssoc" (formula "78") (term "0,0,1,4,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "78") (term "0,0,0,1,4,1,1,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "78") (term "0,0,1,4,1,1,0"))
                                                      (rule "add_literals" (formula "78") (term "1,1,0,0,1,4,1,1,0"))
                                                      (rule "times_zero_1" (formula "78") (term "1,0,0,1,4,1,1,0"))
                                                      (rule "add_zero_right" (formula "78") (term "0,0,1,4,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "78") (term "4,1,1,0"))
                                                      (rule "applyEq" (formula "75") (term "1,0,0,1,0,0") (ifseqformula "85"))
                                                      (rule "polySimp_addAssoc" (formula "75") (term "0,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "75") (term "0,0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "75") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "75") (term "1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "75") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "75") (term "0,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "75") (term "0,0"))
                                                      (rule "applyEq" (formula "39") (term "3,1,1,0") (ifseqformula "85"))
                                                      (rule "applyEq" (formula "47") (term "1,0,0,1,0,0") (ifseqformula "85"))
                                                      (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "47") (term "0,0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "47") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "47") (term "1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "47") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "47") (term "0,0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                                                      (rule "applyEq" (formula "62") (term "1,2,1,0,0,0") (ifseqformula "85"))
                                                      (rule "polySimp_addAssoc" (formula "62") (term "2,1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "62") (term "0,2,1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "62") (term "2,1,0,0,0"))
                                                      (rule "add_literals" (formula "62") (term "1,1,2,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "62") (term "1,2,1,0,0,0"))
                                                      (rule "add_zero_right" (formula "62") (term "2,1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "62") (term "2,1,0,0,0"))
                                                      (rule "applyEq" (formula "57") (term "1,0") (ifseqformula "85"))
                                                      (rule "polySimp_addAssoc" (formula "57") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "57") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "57") (term "0"))
                                                      (rule "add_literals" (formula "57") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "57") (term "1,0"))
                                                      (rule "add_zero_right" (formula "57") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "57") (term "0"))
                                                      (rule "applyEq" (formula "2") (term "0,1,0") (ifseqformula "85"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "85"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "applyEq" (formula "3") (term "1,1") (ifseqformula "85"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "3") (term "1"))
                                                      (rule "add_literals" (formula "3") (term "1,1,1"))
                                                      (rule "times_zero_1" (formula "3") (term "1,1"))
                                                      (rule "add_zero_right" (formula "3") (term "1"))
                                                      (rule "polySimp_addComm0" (formula "3") (term "1"))
                                                      (rule "applyEq" (formula "64") (term "0,1,0,0,0,0,0,0,0") (ifseqformula "85"))
                                                      (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "64") (term "0,1,0,0,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "64") (term "0,0,0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0,0,0,0,0,0"))
                                                      (rule "add_literals" (formula "64") (term "1,1,0,0,0,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "64") (term "0,0,0,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "64") (term "0,0,0,0,0,0,0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "86") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "86") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "86") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "86") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "86") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "86") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "86") (term "1,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "86") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "86") (term "1,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                      (rule "mul_literals" (formula "25") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                      (rule "inEqSimp_invertInEq0" (formula "27"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                      (rule "times_zero_2" (formula "27") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "16"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "75"))
                                                      (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "75") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "57"))
                                                      (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "64") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "64") (term "1,0,1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "64") (term "0,0,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "64") (term "1,0,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_subsumption2" (formula "2") (ifseqformula "57"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "greater_literals" (formula "2") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "27"))
                                                      (rule "leq_literals" (formula "29") (term "0"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "23"))
                                                      (rule "leq_literals" (formula "22") (term "0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "24"))
                                                      (rule "leq_literals" (formula "13") (term "0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "true_left" (formula "13"))
                                                      (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "39"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "42") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "42"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "70") (ifseqformula "66"))
                                                      (rule "polySimp_mulComm0" (formula "70") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "70") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "70"))
                                                      (rule "polySimp_mulLiterals" (formula "70") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "70") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "43"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "42") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "42") (term "0"))
                                                      (rule "add_literals" (formula "42") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "42") (term "1,0"))
                                                      (rule "add_zero_right" (formula "42") (term "0"))
                                                      (rule "elimGcdGeq_antec" (formula "42") (inst "elimGcd=Z(6(1(#)))") (inst "elimGcdLeftDiv=jdiv(arr_0<<selectSK>>, Z(6(1(#))))") (inst "elimGcdRightDiv=Z(0(#))"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0"))
                                                      (rule "leq_literals" (formula "42") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "42") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "42") (term "0,0,0,0"))
                                                      (rule "add_zero_right" (formula "42") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0"))
                                                      (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "42") (term "0,0"))
                                                      (rule "leq_literals" (formula "42") (term "0"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "inEqSimp_exactShadow3" (formula "71") (ifseqformula "72"))
                                                      (rule "polySimp_mulComm0" (formula "71") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "71") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "71"))
                                                      (rule "polySimp_mulLiterals" (formula "71") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "71") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "68") (ifseqformula "72"))
                                                      (rule "mul_literals" (formula "68") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "68") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "68"))
                                                      (rule "polySimp_mulComm0" (formula "68") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "68") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "68") (term "1,1"))
                                                      (rule "mul_literals" (formula "68") (term "0,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "13"))
                                                      (rule "mul_literals" (formula "23") (term "0,0"))
                                                      (rule "add_zero_left" (formula "23") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                      (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "45"))
                                                      (rule "mul_literals" (formula "41") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "41"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1"))
                                                      (rule "mul_literals" (formula "41") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "12"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                      (rule "add_literals" (formula "14") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                      (rule "mul_literals" (formula "14") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "26"))
                                                      (rule "leq_literals" (formula "14") (term "0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "27"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "28") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "28"))
                                                      (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                                      (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0"))
                                                      (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "13") (term "0,0"))
                                                      (rule "qeq_literals" (formula "13") (term "0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "true_left" (formula "13"))
                                                      (rule "inEqSimp_exactShadow3" (formula "69") (ifseqformula "12"))
                                                      (rule "polySimp_rightDist" (formula "69") (term "0,0"))
                                                      (rule "mul_literals" (formula "69") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "69") (term "0"))
                                                      (rule "add_literals" (formula "69") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "69"))
                                                      (rule "mul_literals" (formula "69") (term "1"))
                                                      (rule "inEqSimp_subsumption6" (formula "69") (ifseqformula "43"))
                                                      (rule "greater_literals" (formula "69") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "69"))
                                                      (rule "mul_literals" (formula "69") (term "1,0"))
                                                      (rule "leq_literals" (formula "69") (term "0"))
                                                       (builtin "One Step Simplification" (formula "69"))
                                                      (rule "true_left" (formula "69"))
                                                      (rule "inEqSimp_exactShadow3" (formula "69") (ifseqformula "27"))
                                                      (rule "polySimp_rightDist" (formula "69") (term "0,0"))
                                                      (rule "mul_literals" (formula "69") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "69") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "69") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "69") (term "0,0"))
                                                      (rule "add_literals" (formula "69") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "69"))
                                                      (rule "polySimp_mulComm0" (formula "69") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "69") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "69") (term "1,1"))
                                                      (rule "mul_literals" (formula "69") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "69") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "69") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "69") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "69") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "69") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "69") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "69") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "69") (term "0,0,0"))
                                                      (rule "add_literals" (formula "69") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "69") (term "0,0"))
                                                      (rule "add_literals" (formula "69") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "69") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "69") (term "0,0"))
                                                      (rule "qeq_literals" (formula "69") (term "0"))
                                                       (builtin "One Step Simplification" (formula "69"))
                                                      (rule "true_left" (formula "69"))
                                                      (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "27"))
                                                      (rule "mul_literals" (formula "23") (term "0,0"))
                                                      (rule "add_zero_left" (formula "23") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                      (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "22") (ifseqformula "23"))
                                                      (rule "leq_literals" (formula "22") (term "0"))
                                                       (builtin "One Step Simplification" (formula "22"))
                                                      (rule "true_left" (formula "22"))
                                                      (rule "inEqSimp_exactShadow2" (formula "43") (ifseqformula "55"))
                                                      (rule "greater_literals" (formula "43") (term "0"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "mul_literals" (formula "43") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "43") (term "0,0"))
                                                      (rule "add_zero_left" (formula "43") (term "0"))
                                                      (rule "inEqSimp_and_subsumption3" (formula "85") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "85") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "85"))
                                                      (rule "inEqSimp_and_subsumption3" (formula "29") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "29") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "29"))
                                                      (rule "inEqSimp_and_subsumption3" (formula "62") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "62") (term "0,1,0,0,0,0"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "17"))
                                                      (rule "andLeft" (formula "17"))
                                                      (rule "notLeft" (formula "18"))
                                                      (rule "notLeft" (formula "17"))
                                                      (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "88"))
                                                       (builtin "One Step Simplification" (formula "6"))
                                                      (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "89"))
                                                       (builtin "One Step Simplification" (formula "4"))
                                                      (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "62"))
                                                       (builtin "One Step Simplification" (formula "62"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "andLeft" (formula "62"))
                                                      (rule "eqSymm" (formula "67"))
                                                      (rule "translateJavaMulInt" (formula "64") (term "1,1"))
                                                      (rule "translateJavaSubInt" (formula "67") (term "0,2,0"))
                                                      (rule "translateJavaSubInt" (formula "67") (term "0,2,1"))
                                                      (rule "eqSymm" (formula "64"))
                                                      (rule "polySimp_elimSub" (formula "67") (term "0,2,0"))
                                                      (rule "mul_literals" (formula "67") (term "1,0,2,0"))
                                                      (rule "eqSymm" (formula "67"))
                                                      (rule "polySimp_elimSub" (formula "67") (term "0,2,0"))
                                                      (rule "mul_literals" (formula "67") (term "1,0,2,0"))
                                                      (rule "eqSymm" (formula "67"))
                                                      (rule "polySimp_mulComm0" (formula "64") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "67") (term "0,2,0"))
                                                      (rule "eqSymm" (formula "67"))
                                                      (rule "polySimp_addComm0" (formula "67") (term "0,2,0"))
                                                      (rule "eqSymm" (formula "67"))
                                                      (rule "inEqSimp_commuteLeq" (formula "62"))
                                                      (rule "applyEq" (formula "63") (term "0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "62") (term "0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "64") (term "1") (ifseqformula "30"))
                                                      (rule "inEqSimp_subsumption1" (formula "88") (term "0,0") (ifseqformula "62"))
                                                      (rule "leq_literals" (formula "88") (term "0,0,0"))
                                                       (builtin "One Step Simplification" (formula "88"))
                                                      (rule "applyEqReverse" (formula "82") (term "0,5,1,1,0") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "37") (term "0,0,1,0,2,1,0,0,1,0") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "44") (term "0,0,0,1") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "47") (term "0,5,0,1,0") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "1") (term "0,0,0") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "2") (term "0,0,1,1") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "74") (term "0,0,1,1") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "1") (term "1,1") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "21") (term "0") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "61") (term "0,0,1,1,0,0,0,0") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "47") (term "0,5,1,1,0") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "2") (term "0,1") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "35") (term "0,5,0,1,0") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "47") (term "0,0,0,4,0,1,0") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "54") (term "0,0,0") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "82") (term "0,4,0,1,0") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "82") (term "0,5,0,1,0") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "71") (term "0,0,1,0,2,1,0,0,1,0") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "46") (term "0,0,0,5,0") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "13") (term "0,1,1") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "27") (term "0,1") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "79") (term "0,0,0,1") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "26") (term "0,1,1") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "61") (term "1,0,1,0,0,0,0") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "54") (term "1") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "23") (term "0") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "81") (term "0,5,0") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "42") (term "0,0") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "35") (term "0,3,1,1,0") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "89") (term "0,1") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "59") (term "1,0,2,1,0,0,0") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "59") (term "0,0,1,2,1,0,0,0") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "61") (term "0,0,0,0,0,2,2,0,1,0") (ifseqformula "88"))
                                                      (rule "applyEqReverse" (formula "82") (term "0,0,0,4,1,1,0") (ifseqformula "88"))
                                                      (rule "hideAuxiliaryEq" (formula "88"))
                                                      (rule "polySimp_homoEq" (formula "2"))
                                                      (rule "polySimp_homoEq" (formula "88"))
                                                      (rule "polySimp_addComm0" (formula "82") (term "5,1,1,0"))
                                                      (rule "polySimp_addComm1" (formula "37") (term "2,1,0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "44") (term "1"))
                                                      (rule "polySimp_addComm0" (formula "47") (term "5,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "47") (term "5,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "35") (term "5,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "47") (term "4,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "82") (term "4,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "82") (term "5,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "71") (term "2,1,0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "46") (term "5,0"))
                                                      (rule "polySimp_addComm0" (formula "27") (term "1"))
                                                      (rule "polySimp_addComm0" (formula "79") (term "1"))
                                                      (rule "polySimp_addComm0" (formula "81") (term "5,0"))
                                                      (rule "polySimp_addComm0" (formula "35") (term "3,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "61") (term "0,0,2,2,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "82") (term "4,1,1,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "88") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "88") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "74"))
                                                      (rule "polySimp_addComm1" (formula "74") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "13"))
                                                      (rule "polySimp_addComm1" (formula "13") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "26"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "44"))
                                                      (rule "polySimp_addComm1" (formula "44") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "27"))
                                                      (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "79"))
                                                      (rule "polySimp_addComm1" (formula "79") (term "0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "applyEq" (formula "47") (term "1,4,0,1,0") (ifseqformula "2"))
                                                      (rule "polySimp_addAssoc" (formula "47") (term "4,0,1,0"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0"))
                                                      (rule "applyEq" (formula "71") (term "1,2,1,0,0,1,0") (ifseqformula "2"))
                                                      (rule "polySimp_addAssoc" (formula "71") (term "2,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "54") (term "0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq0" (formula "54"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "54") (term "1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "54") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "54") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "54") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "54") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "54") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "54") (term "0"))
                                                      (rule "add_literals" (formula "54") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "54") (term "1,0"))
                                                      (rule "add_zero_right" (formula "54") (term "0"))
                                                      (rule "applyEq" (formula "79") (term "1,0") (ifseqformula "2"))
                                                      (rule "polySimp_addAssoc" (formula "79") (term "0"))
                                                      (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "2"))
                                                      (rule "polySimp_addAssoc" (formula "44") (term "0"))
                                                      (rule "applyEq" (formula "37") (term "1,2,1,0,0,1,0") (ifseqformula "2"))
                                                      (rule "polySimp_addAssoc" (formula "37") (term "2,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "46") (term "1,5,0") (ifseqformula "2"))
                                                      (rule "polySimp_addAssoc" (formula "46") (term "5,0"))
                                                      (rule "applyEq" (formula "61") (term "1,0,0,2,2,0,1,0") (ifseqformula "2"))
                                                      (rule "polySimp_addAssoc" (formula "61") (term "0,0,2,2,0,1,0"))
                                                      (rule "applyEq" (formula "82") (term "1,4,1,1,0") (ifseqformula "2"))
                                                      (rule "polySimp_addAssoc" (formula "82") (term "4,1,1,0"))
                                                      (rule "polySimp_sepPosMonomial" (formula "88"))
                                                      (rule "polySimp_mulComm0" (formula "88") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "88") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "88") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "88") (term "1,1"))
                                                      (rule "polySimp_mulComm0" (formula "88") (term "0,1"))
                                                      (rule "applyEq" (formula "81") (term "1,5,0") (ifseqformula "88"))
                                                      (rule "polySimp_addAssoc" (formula "81") (term "5,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "81") (term "0,5,0"))
                                                      (rule "add_literals" (formula "81") (term "1,0,5,0"))
                                                      (rule "times_zero_1" (formula "81") (term "0,5,0"))
                                                      (rule "add_zero_left" (formula "81") (term "5,0"))
                                                      (rule "applyEq" (formula "23") (term "0") (ifseqformula "88"))
                                                      (rule "applyEq" (formula "13") (term "0,1,0") (ifseqformula "88"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "13") (term "1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "13") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "13") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "13") (term "0,0"))
                                                      (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "13") (term "0,0"))
                                                      (rule "applyEq" (formula "71") (term "1,2,1,0,0,1,0") (ifseqformula "88"))
                                                      (rule "polySimp_addComm1" (formula "71") (term "2,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "71") (term "0,2,1,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "71") (term "0,0,2,1,0,0,1,0"))
                                                      (rule "add_literals" (formula "71") (term "1,1,0,0,2,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "71") (term "1,0,0,2,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "71") (term "0,0,2,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "42") (term "0,0") (ifseqformula "88"))
                                                      (rule "applyEq" (formula "59") (term "0,0,1,2,1,0,0,0") (ifseqformula "88"))
                                                      (rule "polySimp_addComm1" (formula "59") (term "2,1,0,0,0"))
                                                      (rule "applyEq" (formula "82") (term "1,4,0,1,0") (ifseqformula "88"))
                                                      (rule "polySimp_addAssoc" (formula "82") (term "4,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "82") (term "0,4,0,1,0"))
                                                      (rule "add_literals" (formula "82") (term "1,0,4,0,1,0"))
                                                      (rule "times_zero_1" (formula "82") (term "0,4,0,1,0"))
                                                      (rule "add_zero_left" (formula "82") (term "4,0,1,0"))
                                                      (rule "applyEq" (formula "61") (term "0,0,1,1,0,0,0,0") (ifseqformula "88"))
                                                      (rule "polySimp_addComm1" (formula "61") (term "1,0,0,0,0"))
                                                      (rule "applyEq" (formula "44") (term "1,0") (ifseqformula "88"))
                                                      (rule "polySimp_addComm1" (formula "44") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "44") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "44") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "44") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "44") (term "1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "44") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "44") (term "0,0,0"))
                                                      (rule "applyEq" (formula "26") (term "0,1,0") (ifseqformula "88"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "26") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "26") (term "0,0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0,0"))
                                                      (rule "add_literals" (formula "26") (term "0,0"))
                                                      (rule "applyEq" (formula "82") (term "1,5,0,1,0") (ifseqformula "88"))
                                                      (rule "polySimp_addAssoc" (formula "82") (term "5,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "82") (term "0,5,0,1,0"))
                                                      (rule "add_literals" (formula "82") (term "1,0,5,0,1,0"))
                                                      (rule "times_zero_1" (formula "82") (term "0,5,0,1,0"))
                                                      (rule "add_zero_left" (formula "82") (term "5,0,1,0"))
                                                      (rule "applyEq" (formula "47") (term "1,4,0,1,0") (ifseqformula "88"))
                                                      (rule "polySimp_addComm1" (formula "47") (term "4,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "47") (term "0,4,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "47") (term "0,0,4,0,1,0"))
                                                      (rule "add_literals" (formula "47") (term "1,0,0,4,0,1,0"))
                                                      (rule "times_zero_1" (formula "47") (term "0,0,4,0,1,0"))
                                                      (rule "add_zero_left" (formula "47") (term "0,4,0,1,0"))
                                                      (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "88"))
                                                      (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "27") (term "0,0,0"))
                                                      (rule "add_literals" (formula "27") (term "1,0,0,0"))
                                                      (rule "times_zero_1" (formula "27") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "27") (term "0,0"))
                                                      (rule "applyEq" (formula "21") (term "0") (ifseqformula "88"))
                                                      (rule "inEqSimp_homoInEq0" (formula "21"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "21") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "21") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                      (rule "applyEq" (formula "47") (term "1,5,0,1,0") (ifseqformula "88"))
                                                      (rule "polySimp_addAssoc" (formula "47") (term "5,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "47") (term "0,5,0,1,0"))
                                                      (rule "add_literals" (formula "47") (term "1,0,5,0,1,0"))
                                                      (rule "times_zero_1" (formula "47") (term "0,5,0,1,0"))
                                                      (rule "add_zero_left" (formula "47") (term "5,0,1,0"))
                                                      (rule "applyEq" (formula "35") (term "1,5,0,1,0") (ifseqformula "88"))
                                                      (rule "polySimp_addAssoc" (formula "35") (term "5,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "35") (term "0,5,0,1,0"))
                                                      (rule "add_literals" (formula "35") (term "1,0,5,0,1,0"))
                                                      (rule "times_zero_1" (formula "35") (term "0,5,0,1,0"))
                                                      (rule "add_zero_left" (formula "35") (term "5,0,1,0"))
                                                      (rule "applyEq" (formula "46") (term "1,5,0") (ifseqformula "88"))
                                                      (rule "polySimp_addComm1" (formula "46") (term "5,0"))
                                                      (rule "polySimp_addAssoc" (formula "46") (term "0,5,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "46") (term "0,0,5,0"))
                                                      (rule "add_literals" (formula "46") (term "1,0,0,5,0"))
                                                      (rule "times_zero_1" (formula "46") (term "0,0,5,0"))
                                                      (rule "add_zero_left" (formula "46") (term "0,5,0"))
                                                      (rule "applyEq" (formula "37") (term "1,2,1,0,0,1,0") (ifseqformula "88"))
                                                      (rule "polySimp_addComm1" (formula "37") (term "2,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "37") (term "0,2,1,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,2,1,0,0,1,0"))
                                                      (rule "add_literals" (formula "37") (term "1,1,0,0,2,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "37") (term "1,0,0,2,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "37") (term "0,0,2,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "2") (term "0,0,0") (ifseqformula "88"))
                                                      (rule "polySimp_homoEq" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                      (rule "applyEq" (formula "74") (term "0,0,1,0") (ifseqformula "88"))
                                                      (rule "applyEq" (formula "79") (term "1,0") (ifseqformula "88"))
                                                      (rule "polySimp_addComm1" (formula "79") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "79") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "79") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "79") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "79") (term "1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "79") (term "0,0,0,0"))
                                                      (rule "add_zero_left" (formula "79") (term "0,0,0"))
                                                      (rule "applyEq" (formula "82") (term "1,4,1,1,0") (ifseqformula "88"))
                                                      (rule "polySimp_addComm1" (formula "82") (term "4,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "82") (term "0,4,1,1,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "82") (term "0,0,4,1,1,0"))
                                                      (rule "add_literals" (formula "82") (term "1,0,0,4,1,1,0"))
                                                      (rule "times_zero_1" (formula "82") (term "0,0,4,1,1,0"))
                                                      (rule "add_zero_left" (formula "82") (term "0,4,1,1,0"))
                                                      (rule "applyEq" (formula "82") (term "1,5,1,1,0") (ifseqformula "88"))
                                                      (rule "polySimp_addAssoc" (formula "82") (term "5,1,1,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "82") (term "0,5,1,1,0"))
                                                      (rule "add_literals" (formula "82") (term "1,0,5,1,1,0"))
                                                      (rule "times_zero_1" (formula "82") (term "0,5,1,1,0"))
                                                      (rule "add_zero_left" (formula "82") (term "5,1,1,0"))
                                                      (rule "applyEq" (formula "61") (term "1,0,0,2,2,0,1,0") (ifseqformula "88"))
                                                      (rule "polySimp_addComm1" (formula "61") (term "0,0,2,2,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,2,2,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "61") (term "0,0,0,0,2,2,0,1,0"))
                                                      (rule "add_literals" (formula "61") (term "1,0,0,0,0,2,2,0,1,0"))
                                                      (rule "times_zero_1" (formula "61") (term "0,0,0,0,2,2,0,1,0"))
                                                      (rule "add_zero_left" (formula "61") (term "0,0,0,2,2,0,1,0"))
                                                      (rule "applyEq" (formula "47") (term "1,5,1,1,0") (ifseqformula "88"))
                                                      (rule "polySimp_addAssoc" (formula "47") (term "5,1,1,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "47") (term "0,5,1,1,0"))
                                                      (rule "add_literals" (formula "47") (term "1,0,5,1,1,0"))
                                                      (rule "times_zero_1" (formula "47") (term "0,5,1,1,0"))
                                                      (rule "add_zero_left" (formula "47") (term "5,1,1,0"))
                                                      (rule "applyEq" (formula "35") (term "1,3,1,1,0") (ifseqformula "88"))
                                                      (rule "polySimp_addAssoc" (formula "35") (term "3,1,1,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "35") (term "0,3,1,1,0"))
                                                      (rule "add_literals" (formula "35") (term "1,0,3,1,1,0"))
                                                      (rule "times_zero_1" (formula "35") (term "0,3,1,1,0"))
                                                      (rule "add_zero_left" (formula "35") (term "3,1,1,0"))
                                                      (rule "applyEq" (formula "59") (term "1,2,1,0,0,0") (ifseqformula "88"))
                                                      (rule "polySimp_addComm1" (formula "59") (term "2,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "59") (term "0,2,1,0,0,0"))
                                                      (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "88"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                      (rule "applyEq" (formula "61") (term "1,1,0,0,0,0") (ifseqformula "88"))
                                                      (rule "polySimp_addComm1" (formula "61") (term "1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "61") (term "0,1,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                      (rule "polySimp_mulLiterals" (formula "23") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "23") (term "1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                                      (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "13") (term "0"))
                                                      (rule "polySimp_sepNegMonomial" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "1") (term "0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "applyEq" (formula "54") (term "0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "47") (term "0,1,4,0,1,0") (ifseqformula "2"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "1,4,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "47") (term "1,4,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "1,1,4,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "47") (term "0,1,4,0,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "47") (term "0,0,1,4,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "0,0,0,1,4,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "0,0,1,4,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "47") (term "0,0,1,4,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "47") (term "4,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "47") (term "0,4,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "47") (term "0,0,4,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,4,0,1,0"))
                                                      (rule "add_literals" (formula "47") (term "1,1,0,4,0,1,0"))
                                                      (rule "times_zero_1" (formula "47") (term "1,0,4,0,1,0"))
                                                      (rule "add_zero_right" (formula "47") (term "0,4,0,1,0"))
                                                      (rule "applyEq" (formula "79") (term "0,1,0") (ifseqformula "2"))
                                                      (rule "polySimp_mulComm0" (formula "79") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "79") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "79") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "79") (term "0,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "79") (term "0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "79") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "79") (term "0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "79") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "79") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "79") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "79") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "79") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "79") (term "0,0,0"))
                                                      (rule "add_literals" (formula "79") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "79") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "79") (term "0,0,0"))
                                                      (rule "applyEq" (formula "71") (term "0,1,2,1,0,0,1,0") (ifseqformula "2"))
                                                      (rule "polySimp_mulComm0" (formula "71") (term "1,2,1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "71") (term "1,2,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "71") (term "1,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "71") (term "0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "71") (term "0,0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "71") (term "0,0,0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "71") (term "0,0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "71") (term "0,0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "71") (term "2,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "71") (term "0,2,1,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "71") (term "0,0,2,1,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "71") (term "0,2,1,0,0,1,0"))
                                                      (rule "add_literals" (formula "71") (term "1,1,0,2,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "71") (term "1,0,2,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "71") (term "0,2,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "44") (term "0,1,0") (ifseqformula "2"))
                                                      (rule "polySimp_mulComm0" (formula "44") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "44") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "44") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "44") (term "0,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "44") (term "0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "44") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "44") (term "0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "44") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "44") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "44") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "44") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "44") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,0,0"))
                                                      (rule "add_literals" (formula "44") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "44") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "44") (term "0,0,0"))
                                                      (rule "applyEq" (formula "37") (term "0,1,2,1,0,0,1,0") (ifseqformula "2"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,2,1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "1,2,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "1,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "37") (term "0,0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "0,0,0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "0,0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "37") (term "0,0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "37") (term "2,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "37") (term "0,2,1,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "37") (term "0,0,2,1,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,2,1,0,0,1,0"))
                                                      (rule "add_literals" (formula "37") (term "1,1,0,2,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "37") (term "1,0,2,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "37") (term "0,2,1,0,0,1,0"))
                                                      (rule "applyEq" (formula "46") (term "0,1,5,0") (ifseqformula "2"))
                                                      (rule "polySimp_mulComm0" (formula "46") (term "1,5,0"))
                                                      (rule "polySimp_rightDist" (formula "46") (term "1,5,0"))
                                                      (rule "polySimp_mulLiterals" (formula "46") (term "1,1,5,0"))
                                                      (rule "polySimp_rightDist" (formula "46") (term "0,1,5,0"))
                                                      (rule "polySimp_mulAssoc" (formula "46") (term "0,0,1,5,0"))
                                                      (rule "polySimp_mulComm0" (formula "46") (term "0,0,0,1,5,0"))
                                                      (rule "polySimp_mulLiterals" (formula "46") (term "0,0,1,5,0"))
                                                      (rule "polySimp_elimOne" (formula "46") (term "0,0,1,5,0"))
                                                      (rule "polySimp_addAssoc" (formula "46") (term "5,0"))
                                                      (rule "polySimp_addAssoc" (formula "46") (term "0,5,0"))
                                                      (rule "polySimp_addComm0" (formula "46") (term "0,0,5,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,5,0"))
                                                      (rule "add_literals" (formula "46") (term "1,1,0,5,0"))
                                                      (rule "times_zero_1" (formula "46") (term "1,0,5,0"))
                                                      (rule "add_zero_right" (formula "46") (term "0,5,0"))
                                                      (rule "applyEq" (formula "82") (term "0,1,4,1,1,0") (ifseqformula "2"))
                                                      (rule "polySimp_mulComm0" (formula "82") (term "1,4,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "82") (term "1,4,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "82") (term "1,1,4,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "82") (term "0,1,4,1,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "82") (term "0,0,1,4,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "82") (term "0,0,0,1,4,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "82") (term "0,0,1,4,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "82") (term "0,0,1,4,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "82") (term "4,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "82") (term "0,4,1,1,0"))
                                                      (rule "polySimp_addComm0" (formula "82") (term "0,0,4,1,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "82") (term "0,4,1,1,0"))
                                                      (rule "add_literals" (formula "82") (term "1,1,0,4,1,1,0"))
                                                      (rule "times_zero_1" (formula "82") (term "1,0,4,1,1,0"))
                                                      (rule "add_zero_right" (formula "82") (term "0,4,1,1,0"))
                                                      (rule "applyEq" (formula "61") (term "0,1,0,0,2,2,0,1,0") (ifseqformula "2"))
                                                      (rule "polySimp_mulComm0" (formula "61") (term "1,0,0,2,2,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "61") (term "1,0,0,2,2,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "61") (term "1,1,0,0,2,2,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "61") (term "0,1,0,0,2,2,0,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "61") (term "0,0,1,0,0,2,2,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "61") (term "0,0,0,1,0,0,2,2,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "61") (term "0,0,1,0,0,2,2,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "61") (term "0,0,1,0,0,2,2,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "61") (term "0,0,2,2,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "61") (term "0,0,0,2,2,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "61") (term "0,0,0,0,2,2,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "61") (term "0,0,0,2,2,0,1,0"))
                                                      (rule "add_literals" (formula "61") (term "1,1,0,0,0,2,2,0,1,0"))
                                                      (rule "times_zero_1" (formula "61") (term "1,0,0,0,2,2,0,1,0"))
                                                      (rule "add_zero_right" (formula "61") (term "0,0,0,2,2,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "27"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "74"))
                                                      (rule "polySimp_mulLiterals" (formula "74") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "54"))
                                                      (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "79"))
                                                      (rule "polySimp_mulLiterals" (formula "79") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "79") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "44"))
                                                      (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "44") (term "0"))
                                                      (rule "pullOutSelect" (formula "67") (term "1") (inst "selectSK=arr_3"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "59"))
                                                       (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "100")) (ifInst ""  (formula "95")))
                                                      (rule "simplifySelectOfAnonEQ" (formula "68") (ifseqformula "59"))
                                                       (builtin "One Step Simplification" (formula "68") (ifInst ""  (formula "100")) (ifInst ""  (formula "95")))
                                                      (rule "ifthenelse_negated" (formula "67") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "68") (term "2,0"))
                                                      (rule "dismissNonSelectedField" (formula "68") (term "0,0,0,0"))
                                                      (rule "dismissNonSelectedField" (formula "67") (term "1,0"))
                                                      (rule "dismissNonSelectedField" (formula "67") (term "0,0,0"))
                                                      (rule "ifthenelse_negated" (formula "68") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "44"))
                                                      (rule "mul_literals" (formula "40") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "40") (term "1"))
                                                      (rule "mul_literals" (formula "40") (term "0,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "44"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                      (rule "polySimp_pullOutFactor2" (formula "43") (term "0,0"))
                                                      (rule "add_literals" (formula "43") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "43") (term "0,0"))
                                                      (rule "add_zero_left" (formula "43") (term "0"))
                                                      (rule "inEqSimp_subsumption6" (formula "43") (ifseqformula "42"))
                                                      (rule "mul_literals" (formula "43") (term "1,1,0"))
                                                      (rule "greater_literals" (formula "43") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "leq_literals" (formula "43") (term "0"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "true_left" (formula "43"))
                                                      (rule "inEqSimp_exactShadow3" (formula "76") (ifseqformula "80"))
                                                      (rule "mul_literals" (formula "76") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "76") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "76"))
                                                      (rule "polySimp_mulComm0" (formula "76") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "76") (term "1"))
                                                      (rule "mul_literals" (formula "76") (term "0,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "79") (ifseqformula "80"))
                                                      (rule "polySimp_mulComm0" (formula "79") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "79") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "79"))
                                                      (rule "polySimp_mulLiterals" (formula "79") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "79") (term "0"))
                                                      (rule "pullOutSelect" (formula "67") (term "1,0") (inst "selectSK=arr_4"))
                                                      (rule "simplifySelectOfMemset" (formula "67"))
                                                       (builtin "One Step Simplification" (formula "67"))
                                                      (rule "dismissNonSelectedField" (formula "67") (term "2,0"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "67") (term "0,0"))
                                                      (rule "replace_known_right" (formula "67") (term "0,0,0,0") (ifseqformula "101"))
                                                       (builtin "One Step Simplification" (formula "67"))
                                                      (rule "simplifySelectOfStore" (formula "67"))
                                                       (builtin "One Step Simplification" (formula "67"))
                                                      (rule "simplifySelectOfStore" (formula "67"))
                                                       (builtin "One Step Simplification" (formula "67"))
                                                      (rule "simplifySelectOfCreate" (formula "67"))
                                                       (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "105")))
                                                      (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "96")) (ifInst ""  (formula "4")))
                                                      (rule "elementOfUnion" (formula "67") (term "0,0"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "67") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "67") (term "0,0,1,0,0") (ifseqformula "118"))
                                                       (builtin "One Step Simplification" (formula "67"))
                                                      (rule "elementOfUnion" (formula "67") (term "0,0"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "67") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "67") (term "0,0,1,0,0") (ifseqformula "116"))
                                                       (builtin "One Step Simplification" (formula "67"))
                                                      (rule "elementOfUnion" (formula "67") (term "0,0"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "67") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "67") (term "0,0,1,0,0") (ifseqformula "109"))
                                                       (builtin "One Step Simplification" (formula "67"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "67") (term "0,0"))
                                                      (rule "replace_known_right" (formula "67") (term "0,0,0,0") (ifseqformula "113"))
                                                       (builtin "One Step Simplification" (formula "67"))
                                                      (rule "applyEqReverse" (formula "68") (term "1,0") (ifseqformula "67"))
                                                      (rule "hideAuxiliaryEq" (formula "67"))
                                                      (rule "pullOutSelect" (formula "67") (term "0,0,0") (inst "selectSK=java_lang_Object_created__1"))
                                                      (rule "applyEq" (formula "69") (term "0,0,0") (ifseqformula "67"))
                                                      (rule "simplifySelectOfMemset" (formula "67"))
                                                       (builtin "One Step Simplification" (formula "67"))
                                                      (rule "simplifySelectOfStore" (formula "67"))
                                                       (builtin "One Step Simplification" (formula "67"))
                                                      (rule "simplifySelectOfStore" (formula "67"))
                                                       (builtin "One Step Simplification" (formula "67"))
                                                      (rule "simplifySelectOfStore" (formula "67"))
                                                       (builtin "One Step Simplification" (formula "67"))
                                                      (rule "simplifySelectOfCreate" (formula "67"))
                                                       (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "105")))
                                                      (rule "castDel" (formula "67") (term "1,0"))
                                                      (rule "eqSymm" (formula "67") (term "0,0"))
                                                      (rule "replace_known_right" (formula "67") (term "0,0") (ifseqformula "101"))
                                                       (builtin "One Step Simplification" (formula "67"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "37"))
                                                       (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "96")) (ifInst ""  (formula "4")))
                                                      (rule "applyEqReverse" (formula "69") (term "0,0,0") (ifseqformula "67"))
                                                      (rule "applyEqReverse" (formula "68") (term "0,0,0") (ifseqformula "67"))
                                                      (rule "hideAuxiliaryEq" (formula "67"))
                                                      (rule "replace_known_left" (formula "67") (term "0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "67"))
                                                      (rule "applyEqReverse" (formula "68") (term "1") (ifseqformula "67"))
                                                      (rule "hideAuxiliaryEq" (formula "67"))
                                                      (rule "replace_known_left" (formula "67") (term "0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "67"))
                                                      (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "21"))
                                                      (rule "mul_literals" (formula "13") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                      (rule "add_literals" (formula "13") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                                      (rule "mul_literals" (formula "13") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "23"))
                                                      (rule "leq_literals" (formula "13") (term "0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "true_left" (formula "13"))
                                                      (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "25"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "27") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                      (rule "inEqSimp_exactShadow0" (formula "74") (ifseqformula "54"))
                                                       (builtin "One Step Simplification" (formula "74"))
                                                      (rule "greater_literals" (formula "74") (term "0"))
                                                       (builtin "One Step Simplification" (formula "74"))
                                                      (rule "polySimp_rightDist" (formula "74") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "74") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "74") (term "0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "74") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "74") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "74") (term "0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "74") (term "0,0"))
                                                      (rule "mul_literals" (formula "74") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "74") (term "1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "74") (term "0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "74") (term "0,0"))
                                                      (rule "add_literals" (formula "74") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "74") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "74") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "74"))
                                                      (rule "mul_literals" (formula "74") (term "1"))
                                                      (rule "inEqSimp_subsumption6" (formula "74") (ifseqformula "13"))
                                                      (rule "greater_literals" (formula "74") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "74"))
                                                      (rule "mul_literals" (formula "74") (term "1,0"))
                                                      (rule "leq_literals" (formula "74") (term "0"))
                                                       (builtin "One Step Simplification" (formula "74"))
                                                      (rule "true_left" (formula "74"))
                                                      (rule "inEqSimp_exactShadow2" (formula "42") (ifseqformula "54"))
                                                      (rule "greater_literals" (formula "42") (term "0"))
                                                       (builtin "One Step Simplification" (formula "42"))
                                                      (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "42") (term "0,0"))
                                                      (rule "add_zero_left" (formula "42") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "62") (ifseqformula "20"))
                                                      (rule "mul_literals" (formula "62") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "62") (term "0"))
                                                      (rule "add_literals" (formula "62") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "62"))
                                                      (rule "mul_literals" (formula "62") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "62"))
                                                      (rule "leq_literals" (formula "19") (term "0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "25"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "22") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "22"))
                                                      (rule "leq_literals" (formula "12") (term "0"))
                                                       (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "pullOutSelect" (formula "67") (term "0") (inst "selectSK=arr_5"))
                                                      (rule "simplifySelectOfMemset" (formula "67"))
                                                       (builtin "One Step Simplification" (formula "67"))
                                                      (rule "eqSymm" (formula "68"))
                                                      (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "68"))
                                                      (rule "hideAuxiliaryEq" (formula "68"))
                                                      (rule "dismissNonSelectedField" (formula "67") (term "2,0"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "67") (term "0,0"))
                                                      (rule "replace_known_right" (formula "67") (term "0,0,0,0") (ifseqformula "99"))
                                                       (builtin "One Step Simplification" (formula "67"))
                                                      (rule "dismissNonSelectedField" (formula "67") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "67") (term "0"))
                                                      (rule "pullOutSelect" (formula "67") (term "0") (inst "selectSK=arr_6"))
                                                      (rule "simplifySelectOfCreate" (formula "67"))
                                                       (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "104")))
                                                      (rule "simplifySelectOfAnonEQ" (formula "67") (ifseqformula "36"))
                                                       (builtin "One Step Simplification" (formula "67") (ifInst ""  (formula "95")) (ifInst ""  (formula "4")))
                                                      (rule "eqSymm" (formula "68"))
                                                      (rule "applyEqReverse" (formula "67") (term "1") (ifseqformula "68"))
                                                      (rule "hideAuxiliaryEq" (formula "68"))
                                                      (rule "elementOfUnion" (formula "67") (term "0,0"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "67") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "67") (term "0,0,1,0,0") (ifseqformula "116"))
                                                       (builtin "One Step Simplification" (formula "67"))
                                                      (rule "elementOfUnion" (formula "67") (term "0,0"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "67") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "67") (term "0,0,1,0,0") (ifseqformula "114"))
                                                       (builtin "One Step Simplification" (formula "67"))
                                                      (rule "elementOfUnion" (formula "67") (term "0,0"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "67") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "67") (term "0,0,1,0,0") (ifseqformula "107"))
                                                       (builtin "One Step Simplification" (formula "67"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "67") (term "0,0"))
                                                      (rule "replace_known_right" (formula "67") (term "0,0,0,0") (ifseqformula "111"))
                                                       (builtin "One Step Simplification" (formula "67"))
                                                      (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "90"))
                                                       (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "65")))
                                                      (rule "andLeft" (formula "90"))
                                                      (rule "andLeft" (formula "90"))
                                                      (rule "andLeft" (formula "90"))
                                                      (rule "andLeft" (formula "90"))
                                                      (rule "andLeft" (formula "90"))
                                                      (rule "translateJavaSubInt" (formula "94") (term "0,2,1"))
                                                      (rule "translateJavaSubInt" (formula "94") (term "0,2,0"))
                                                      (rule "translateJavaMulInt" (formula "92") (term "1,1"))
                                                      (rule "eqSymm" (formula "94"))
                                                      (rule "eqSymm" (formula "92"))
                                                      (rule "polySimp_elimSub" (formula "94") (term "0,2,0"))
                                                      (rule "mul_literals" (formula "94") (term "1,0,2,0"))
                                                      (rule "eqSymm" (formula "94"))
                                                      (rule "polySimp_elimSub" (formula "94") (term "0,2,0"))
                                                      (rule "mul_literals" (formula "94") (term "1,0,2,0"))
                                                      (rule "eqSymm" (formula "94"))
                                                      (rule "polySimp_mulComm0" (formula "92") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "94") (term "0,2,0"))
                                                      (rule "eqSymm" (formula "94"))
                                                      (rule "polySimp_addComm0" (formula "94") (term "0,2,0"))
                                                      (rule "eqSymm" (formula "94"))
                                                      (rule "inEqSimp_commuteLeq" (formula "90"))
                                                      (rule "applyEq" (formula "91") (term "0") (ifseqformula "29"))
                                                      (rule "applyEq" (formula "90") (term "0") (ifseqformula "29"))
                                                      (rule "applyEq" (formula "90") (term "0") (ifseqformula "64"))
                                                      (rule "eqSymm" (formula "90"))
                                                      (rule "pullOutSelect" (formula "91") (term "0") (inst "selectSK=arr_7"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "91") (ifseqformula "86"))
                                                       (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "97")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "91") (term "0,1,0,0") (ifseqformula "71"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "91") (term "0,0,1,0,0") (ifseqformula "58"))
                                                      (rule "eqSymm" (formula "92"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "92") (ifseqformula "86"))
                                                       (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "97")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "0,1,0,0") (ifseqformula "71"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "0,0,1,0,0") (ifseqformula "58"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "91") (term "0,0,0"))
                                                      (rule "replace_known_right" (formula "91") (term "0,0,0,0,0") (ifseqformula "114"))
                                                       (builtin "One Step Simplification" (formula "91"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "92") (term "0,0,0"))
                                                      (rule "replace_known_right" (formula "92") (term "0,0,0,0,0") (ifseqformula "114"))
                                                       (builtin "One Step Simplification" (formula "92"))
                                                      (rule "ifthenelse_negated" (formula "91") (term "0"))
                                                      (rule "ifthenelse_negated" (formula "92") (term "0"))
                                                      (rule "dismissNonSelectedField" (formula "91") (term "0,0,0,0,0"))
                                                      (rule "replaceKnownSelect_taclet000001201112101012_26" (formula "91") (term "0,0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000001201112101012_32" (formula "91") (term "0,0,0,0,0"))
                                                      (rule "replace_known_left" (formula "91") (term "0,0,0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "91"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "91") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "97")))
                                                      (rule "replaceKnownSelect_taclet000001201112101012_19" (formula "91") (term "2,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000001201112101012_33" (formula "91") (term "2,0"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "91") (term "0,1,0,0") (ifseqformula "58"))
                                                      (rule "dismissNonSelectedField" (formula "92") (term "0,0,0,0,0"))
                                                      (rule "replaceKnownSelect_taclet000001201112101012_26" (formula "92") (term "0,0,0,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000001201112101012_32" (formula "92") (term "0,0,0,0,0"))
                                                      (rule "replace_known_left" (formula "92") (term "0,0,0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "92"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "92") (ifseqformula "71"))
                                                       (builtin "One Step Simplification" (formula "92") (ifInst ""  (formula "97")))
                                                      (rule "replaceKnownSelect_taclet000001201112101012_18" (formula "92") (term "2,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000001201112101012_33" (formula "92") (term "2,0"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "92") (term "0,1,0,0") (ifseqformula "58"))
                                                      (rule "dismissNonSelectedField" (formula "91") (term "0,0,0,1,0,0"))
                                                      (rule "replaceKnownSelect_taclet000001201112101012_26" (formula "91") (term "0,0,0,1,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000001201112101012_32" (formula "91") (term "0,0,0,1,0,0"))
                                                      (rule "replace_known_left" (formula "91") (term "0,0,1,0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "91"))
                                                      (rule "dismissNonSelectedField" (formula "92") (term "0,0,0,1,0,0"))
                                                      (rule "replaceKnownSelect_taclet000001201112101012_26" (formula "92") (term "0,0,0,1,0,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000001201112101012_32" (formula "92") (term "0,0,0,1,0,0"))
                                                      (rule "replace_known_left" (formula "92") (term "0,0,1,0,0") (ifseqformula "4"))
                                                       (builtin "One Step Simplification" (formula "92"))
                                                      (rule "elementOfUnion" (formula "91") (term "0,0"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "91") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "91") (term "0,0,1,0,0") (ifseqformula "119"))
                                                       (builtin "One Step Simplification" (formula "91"))
                                                      (rule "elementOfUnion" (formula "92") (term "0,0"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "92") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "92") (term "0,0,1,0,0") (ifseqformula "119"))
                                                       (builtin "One Step Simplification" (formula "92"))
                                                      (rule "elementOfUnion" (formula "91") (term "0,0"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "91") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "91") (term "0,0,1,0,0") (ifseqformula "117"))
                                                       (builtin "One Step Simplification" (formula "91"))
                                                      (rule "elementOfUnion" (formula "92") (term "0,0"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "92") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "92") (term "0,0,1,0,0") (ifseqformula "117"))
                                                       (builtin "One Step Simplification" (formula "92"))
                                                      (rule "elementOfUnion" (formula "91") (term "0,0"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "91") (term "1,0,0"))
                                                      (rule "replace_known_right" (formula "91") (term "0,0,1,0,0") (ifseqformula "110"))
                                                       (builtin "One Step Simplification" (formula "91"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "91") (term "0,0"))
                                                      (rule "replace_known_right" (formula "91") (term "0,0,0,0") (ifseqformula "114"))
                                                       (builtin "One Step Simplification" (formula "91"))
                                                      (rule "applyEqReverse" (formula "92") (term "1") (ifseqformula "91"))
                                                       (builtin "One Step Simplification" (formula "92"))
                                                      (rule "hideAuxiliaryEq" (formula "91"))
                                                      (rule "elementOfUnion" (formula "91") (term "0,0"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "91") (term "0,0,0"))
                                                      (rule "replace_known_right" (formula "91") (term "0,0,0,0,0") (ifseqformula "113"))
                                                       (builtin "One Step Simplification" (formula "91"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "91") (term "0,0"))
                                                      (rule "replace_known_right" (formula "91") (term "0,0,0,0") (ifseqformula "109"))
                                                       (builtin "One Step Simplification" (formula "91"))
                                                      (rule "true_left" (formula "91"))
                                                      (rule "Contract_axiom_for_isEmpty_in_Buffers" (formula "28") (term "0") (inst "element=element"))
                                                      (rule "expand_inInt" (formula "28") (term "0,0,1,0,1,1,1"))
                                                      (rule "replace_int_MIN" (formula "28") (term "0,1,0,0,1,0,1,1,1"))
                                                      (rule "replace_int_MAX" (formula "28") (term "1,0,0,0,1,0,1,1,1"))
                                                      (rule "replace_known_left" (formula "28") (term "1,1,1,1") (ifseqformula "16"))
                                                       (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "8")) (ifInst ""  (formula "14")) (ifInst ""  (formula "123")) (ifInst ""  (formula "29")) (ifInst ""  (formula "29")))
                                                      (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0,0,1,1,1"))
                                                      (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "78"))
                                                       (builtin "One Step Simplification" (formula "78") (ifInst ""  (formula "66")))
                                                      (rule "andLeft" (formula "78"))
                                                      (rule "andLeft" (formula "78"))
                                                      (rule "andLeft" (formula "78"))
                                                      (rule "andLeft" (formula "78"))
                                                      (rule "andLeft" (formula "78"))
                                                      (rule "eqSymm" (formula "82"))
                                                      (rule "translateJavaMulInt" (formula "80") (term "1,1"))
                                                      (rule "translateJavaSubInt" (formula "82") (term "0,2,0"))
                                                      (rule "translateJavaSubInt" (formula "82") (term "0,2,1"))
                                                      (rule "eqSymm" (formula "80"))
                                                      (rule "polySimp_elimSub" (formula "82") (term "0,2,0"))
                                                      (rule "mul_literals" (formula "82") (term "1,0,2,0"))
                                                      (rule "eqSymm" (formula "82"))
                                                      (rule "polySimp_elimSub" (formula "82") (term "0,2,0"))
                                                      (rule "mul_literals" (formula "82") (term "1,0,2,0"))
                                                      (rule "eqSymm" (formula "82"))
                                                      (rule "polySimp_mulComm0" (formula "80") (term "1,0"))
                                                      (rule "polySimp_addComm0" (formula "82") (term "0,2,1"))
                                                      (rule "replaceKnownSelect_taclet000001201112101012_42" (formula "82") (term "1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000001201112101012_43" (formula "82") (term "1"))
                                                      (rule "polySimp_addComm0" (formula "82") (term "0,2,0"))
                                                      (rule "replaceKnownSelect_taclet000001201112101012_41" (formula "82") (term "0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000001201112101012_43" (formula "82") (term "0"))
                                                       (builtin "One Step Simplification" (formula "82"))
                                                      (rule "true_left" (formula "82"))
                                                      (rule "inEqSimp_commuteLeq" (formula "78"))
                                                      (rule "applyEq" (formula "79") (term "0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "65") (term "0") (ifseqformula "79"))
                                                      (rule "applyEq" (formula "77") (term "0") (ifseqformula "30"))
                                                      (rule "applyEq" (formula "77") (term "1") (ifseqformula "30"))
                                                      (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "49"))
                                                      (rule "close" (formula "126") (ifseqformula "49"))
                                                   )
                                                   (branch "Case 2"
                                                       (builtin "One Step Simplification" (formula "121") (ifInst ""  (formula "90")))
                                                      (rule "closeTrue" (formula "121"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                    (builtin "One Step Simplification" (formula "121"))
                                                   (rule "closeTrue" (formula "121"))
                                                )
                                             )
                                             (branch "Exceptional Post (calculate_bucket_starts)"
                                                 (builtin "One Step Simplification" (formula "82"))
                                                 (builtin "One Step Simplification" (formula "112"))
                                                (rule "andLeft" (formula "82"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "83") (term "1,0") (ifseqformula "82"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "83") (term "0,1,0") (ifseqformula "68"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "83") (term "0,0,1,0") (ifseqformula "62"))
                                                (rule "andLeft" (formula "83"))
                                                (rule "andLeft" (formula "83"))
                                                (rule "andLeft" (formula "85"))
                                                (rule "notLeft" (formula "83"))
                                                (rule "close" (formula "86") (ifseqformula "85"))
                                             )
                                             (branch "Pre (calculate_bucket_starts)"
                                                 (builtin "One Step Simplification" (formula "110") (ifInst ""  (formula "80")) (ifInst ""  (formula "109")) (ifInst ""  (formula "107")) (ifInst ""  (formula "108")) (ifInst ""  (formula "109")) (ifInst ""  (formula "107")) (ifInst ""  (formula "108")))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "110") (term "1") (ifseqformula "68"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "110") (term "0,1") (ifseqformula "62"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "110") (term "1,0") (ifseqformula "68"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "110") (term "0,1,0") (ifseqformula "62"))
                                                (rule "wellFormedAnonEQ" (formula "110") (term "0,0,0,0,0,0") (ifseqformula "68"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "110") (term "1,0,0,0,0,0") (ifseqformula "68"))
                                                (rule "selectCreatedOfAnonAsFormulaEQ" (formula "110") (term "0,1,0,0,0,0,0") (ifseqformula "62"))
                                                (rule "wellFormedAnonEQ" (formula "110") (term "0,0,0,0,0,0,0") (ifseqformula "62"))
                                                (rule "wellFormedStorePrimitive" (formula "110") (term "0,0,0,0,0,0,0,0"))
                                                (rule "expand_inInt" (formula "110") (term "1,0,0,0"))
                                                (rule "expand_inInt" (formula "110") (term "1,0,0"))
                                                (rule "expand_inInt" (formula "110") (term "1,0,0,0,0"))
                                                (rule "replace_int_MAX" (formula "110") (term "1,0,1,0,0,0"))
                                                (rule "replace_int_MIN" (formula "110") (term "0,1,1,0,0,0"))
                                                (rule "replace_int_MIN" (formula "110") (term "0,1,1,0,0"))
                                                (rule "replace_int_MAX" (formula "110") (term "1,0,1,0,0"))
                                                (rule "replace_int_MIN" (formula "110") (term "0,1,1,0,0,0,0"))
                                                (rule "replace_int_MAX" (formula "110") (term "1,0,1,0,0,0,0"))
                                                (rule "replace_known_left" (formula "110") (term "1,0,0,0,0,0,0,0") (ifseqformula "61"))
                                                 (builtin "One Step Simplification" (formula "110") (ifInst ""  (formula "67")) (ifInst ""  (formula "13")) (ifInst ""  (formula "70")) (ifInst ""  (formula "15")))
                                                (rule "inEqSimp_ltRight" (formula "90"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "109") (term "0,0,0,1"))
                                                (rule "dismissNonSelectedField" (formula "109") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "dismissNonSelectedField" (formula "109") (term "0,0,0,1,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "109") (term "1,0,0,0"))
                                                (rule "replace_known_left" (formula "109") (term "1,0,0,0") (ifseqformula "71"))
                                                 (builtin "One Step Simplification" (formula "109"))
                                                (rule "inEqSimp_commuteLeq" (formula "109") (term "1,0,0"))
                                                (rule "replace_known_left" (formula "109") (term "1,0,0") (ifseqformula "16"))
                                                 (builtin "One Step Simplification" (formula "109"))
                                                (rule "inEqSimp_commuteLeq" (formula "109") (term "1,0,0"))
                                                (rule "replace_known_left" (formula "109") (term "1,0,0") (ifseqformula "14"))
                                                 (builtin "One Step Simplification" (formula "109"))
                                                (rule "inEqSimp_homoInEq1" (formula "25"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "47"))
                                                (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "75"))
                                                (rule "polySimp_addComm1" (formula "75") (term "0"))
                                                (rule "jmod_axiom" (formula "3") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                (rule "jmod_axiom" (formula "62") (term "1,2,1,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "62") (term "1,1,2,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "62") (term "2,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "62") (term "0,2,1,0,0,0"))
                                                (rule "jmod_axiom" (formula "78") (term "0,1,4,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "78") (term "1,0,1,4,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "78") (term "1,4,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "78") (term "1,4,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "78") (term "1,1,4,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "78") (term "0,1,4,1,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "78") (term "0,0,1,4,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "78") (term "0,0,0,1,4,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "78") (term "0,0,1,4,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "78") (term "0,0,1,4,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "78") (term "4,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "78") (term "0,4,1,1,0"))
                                                (rule "polySimp_addComm0" (formula "78") (term "0,0,4,1,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "78") (term "0,4,1,1,0"))
                                                (rule "add_literals" (formula "78") (term "1,1,0,4,1,1,0"))
                                                (rule "times_zero_1" (formula "78") (term "1,0,4,1,1,0"))
                                                (rule "add_zero_right" (formula "78") (term "0,4,1,1,0"))
                                                (rule "jmod_axiom" (formula "50") (term "0,1,4,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,4,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1,4,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,4,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,1,4,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "50") (term "0,1,4,0,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "50") (term "0,0,1,4,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "0,0,0,1,4,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "0,0,1,4,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "50") (term "0,0,1,4,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "50") (term "4,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "50") (term "0,4,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "50") (term "0,0,4,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,4,0,1,0"))
                                                (rule "add_literals" (formula "50") (term "1,1,0,4,0,1,0"))
                                                (rule "times_zero_1" (formula "50") (term "1,0,4,0,1,0"))
                                                (rule "add_zero_right" (formula "50") (term "0,4,0,1,0"))
                                                (rule "jmod_axiom" (formula "2") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "2") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                (rule "jmod_axiom" (formula "68") (term "0,1,2,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "68") (term "1,0,1,2,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "68") (term "1,2,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "68") (term "1,2,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "68") (term "1,1,2,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "68") (term "0,1,2,1,0,0,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "68") (term "0,0,1,2,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "68") (term "0,0,0,1,2,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "68") (term "0,0,1,2,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "68") (term "0,0,1,2,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "68") (term "2,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "68") (term "0,2,1,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "68") (term "0,0,2,1,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "68") (term "0,2,1,0,0,1,0"))
                                                (rule "add_literals" (formula "68") (term "1,1,0,2,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "68") (term "1,0,2,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "68") (term "0,2,1,0,0,1,0"))
                                                (rule "jmod_axiom" (formula "64") (term "0,1,0,0,2,2,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "64") (term "1,0,1,0,0,2,2,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,2,2,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "64") (term "1,0,0,2,2,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,2,2,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "64") (term "0,1,0,0,2,2,0,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "64") (term "0,0,1,0,0,2,2,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "64") (term "0,0,0,1,0,0,2,2,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "64") (term "0,0,1,0,0,2,2,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "64") (term "0,0,1,0,0,2,2,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "64") (term "0,0,2,2,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,2,2,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "64") (term "0,0,0,0,2,2,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0,0,2,2,0,1,0"))
                                                (rule "add_literals" (formula "64") (term "1,1,0,0,0,2,2,0,1,0"))
                                                (rule "times_zero_1" (formula "64") (term "1,0,0,0,2,2,0,1,0"))
                                                (rule "add_zero_right" (formula "64") (term "0,0,0,2,2,0,1,0"))
                                                (rule "jmod_axiom" (formula "49") (term "0,1,5,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,5,0"))
                                                (rule "polySimp_mulComm0" (formula "49") (term "1,5,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,5,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,5,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "0,1,5,0"))
                                                (rule "polySimp_mulAssoc" (formula "49") (term "0,0,1,5,0"))
                                                (rule "polySimp_mulComm0" (formula "49") (term "0,0,0,1,5,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "0,0,1,5,0"))
                                                (rule "polySimp_elimOne" (formula "49") (term "0,0,1,5,0"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "5,0"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "0,5,0"))
                                                (rule "polySimp_addComm0" (formula "49") (term "0,0,5,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,5,0"))
                                                (rule "add_literals" (formula "49") (term "1,1,0,5,0"))
                                                (rule "times_zero_1" (formula "49") (term "1,0,5,0"))
                                                (rule "add_zero_right" (formula "49") (term "0,5,0"))
                                                (rule "jmod_axiom" (formula "1") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "1") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "jmod_axiom" (formula "57") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "57") (term "1,0"))
                                                (rule "jmod_axiom" (formula "41") (term "0,1,2,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,2,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1,2,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "41") (term "1,2,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "41") (term "1,1,2,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "41") (term "0,1,2,1,0,0,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "0,0,0,1,2,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "41") (term "2,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "41") (term "0,2,1,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "41") (term "0,0,2,1,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,2,1,0,0,1,0"))
                                                (rule "add_literals" (formula "41") (term "1,1,0,2,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "41") (term "1,0,2,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "41") (term "0,2,1,0,0,1,0"))
                                                (rule "jmod_axiom" (formula "64") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "64") (term "1,0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "64") (term "0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "64") (term "0,0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "64") (term "0,0,0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "64") (term "0,0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "64") (term "0,0,1,0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0,0,0,0"))
                                                (rule "jmod_axiom" (formula "109") (term "1,2,1,0,0,0,0,1"))
                                                (rule "polySimp_mulLiterals" (formula "109") (term "1,1,2,1,0,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "109") (term "2,1,0,0,0,0,1"))
                                                (rule "polySimp_addAssoc" (formula "109") (term "0,2,1,0,0,0,0,1"))
                                                (rule "jmod_axiom" (formula "109") (term "1,2,1,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "109") (term "1,1,2,1,0,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "109") (term "2,1,0,0,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "109") (term "0,2,1,0,0,0,0,1,0"))
                                                (rule "jmod_axiom" (formula "109") (term "1,2,1,0,0,0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "109") (term "1,1,2,1,0,0,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "109") (term "2,1,0,0,0,0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "109") (term "0,2,1,0,0,0,0,1,0,0"))
                                                (rule "jmod_axiom" (formula "109") (term "1,2,1,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "109") (term "1,1,2,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "109") (term "2,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "109") (term "0,2,1,0,0,0,0"))
                                                (rule "jmod_axiom" (formula "47") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "0,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "47") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "47") (term "0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "47") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,0"))
                                                (rule "add_literals" (formula "47") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "47") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "47") (term "0,0,0"))
                                                (rule "jmod_axiom" (formula "75") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "75") (term "1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "75") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "75") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "75") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "75") (term "0,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "75") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "75") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "75") (term "0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "75") (term "0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "75") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "75") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "75") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "75") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "75") (term "0,0,0"))
                                                (rule "add_literals" (formula "75") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "75") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "75") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                (rule "mul_literals" (formula "25") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "57"))
                                                (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "64") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "64") (term "1,0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "64") (term "1,0,1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "64") (term "0,0,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "64") (term "0,0,0,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "75"))
                                                (rule "polySimp_mulLiterals" (formula "75") (term "0"))
                                                (rule "polySimp_elimOne" (formula "75") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "24"))
                                                (rule "leq_literals" (formula "23") (term "0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "inEqSimp_subsumption2" (formula "2") (ifseqformula "56"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "greater_literals" (formula "2") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                                (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "2") (term "0,0"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "24"))
                                                (rule "leq_literals" (formula "13") (term "0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "true_left" (formula "13"))
                                                (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "25"))
                                                (rule "leq_literals" (formula "27") (term "0"))
                                                 (builtin "One Step Simplification" (formula "27"))
                                                (rule "true_left" (formula "27"))
                                                (rule "wellFormedMemsetArrayPrimitive" (formula "105") (term "0,0,0"))
                                                (rule "wellFormedStorePrimitive" (formula "105") (term "0,0,0"))
                                                (rule "wellFormedStorePrimitive" (formula "105") (term "0,0,0"))
                                                (rule "wellFormedStorePrimitive" (formula "105") (term "0,0,0"))
                                                (rule "wellFormedCreate" (formula "105") (term "0,0,0"))
                                                (rule "wellFormedAnonEQ" (formula "105") (term "0,0,0") (ifseqformula "37"))
                                                (rule "replace_known_left" (formula "105") (term "0,0,0,0") (ifseqformula "8"))
                                                 (builtin "One Step Simplification" (formula "105") (ifInst ""  (formula "36")))
                                                (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "13"))
                                                (rule "polySimp_mulComm0" (formula "24") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "24") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "43"))
                                                (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                                (rule "polySimp_pullOutFactor2" (formula "42") (term "0,0"))
                                                (rule "add_literals" (formula "42") (term "1,0,0"))
                                                (rule "times_zero_1" (formula "42") (term "0,0"))
                                                (rule "add_zero_left" (formula "42") (term "0"))
                                                (rule "elimGcdGeq_antec" (formula "42") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=jdiv(add(mul(begin, Z(neglit(1(#)))), end), Z(6(1(#))))") (inst "elimGcd=Z(6(1(#)))"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0"))
                                                (rule "leq_literals" (formula "42") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "times_zero_1" (formula "42") (term "1,0,0,0,0,0"))
                                                (rule "add_literals" (formula "42") (term "0,0,0,0,0"))
                                                (rule "add_zero_right" (formula "42") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0"))
                                                (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                                (rule "add_literals" (formula "42") (term "0,0"))
                                                (rule "leq_literals" (formula "42") (term "0"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "39"))
                                                (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "43") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                                (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                (rule "polySimp_elimOne" (formula "43") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "68") (ifseqformula "72"))
                                                (rule "mul_literals" (formula "68") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "68") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "68"))
                                                (rule "polySimp_mulComm0" (formula "68") (term "1"))
                                                (rule "polySimp_rightDist" (formula "68") (term "1"))
                                                (rule "mul_literals" (formula "68") (term "0,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "44"))
                                                (rule "mul_literals" (formula "40") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                                (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                                (rule "polySimp_rightDist" (formula "40") (term "1"))
                                                (rule "mul_literals" (formula "40") (term "0,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "72") (ifseqformula "67"))
                                                (rule "polySimp_mulComm0" (formula "72") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "72") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "72"))
                                                (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                                (rule "polySimp_elimOne" (formula "72") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "72") (ifseqformula "73"))
                                                (rule "polySimp_mulComm0" (formula "72") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "72") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "72"))
                                                (rule "polySimp_mulLiterals" (formula "72") (term "0"))
                                                (rule "polySimp_elimOne" (formula "72") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "26"))
                                                (rule "polySimp_mulComm0" (formula "27") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "27") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                                (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                                (rule "polySimp_elimOne" (formula "27") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "27"))
                                                (rule "leq_literals" (formula "13") (term "0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "true_left" (formula "13"))
                                                (rule "pullOutSelect" (formula "107") (term "0,0,0,0,0") (inst "selectSK=java_lang_Object_created__0"))
                                                (rule "simplifySelectOfMemset" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "80")) (ifInst ""  (formula "88")))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "107")) (ifInst ""  (formula "12")))
                                                (rule "applyEqReverse" (formula "108") (term "0,0,0,0,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_left" (formula "107") (term "0,0,0,0") (ifseqformula "11"))
                                                 (builtin "One Step Simplification" (formula "107"))
                                                (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "26"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "23") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "23"))
                                                (rule "leq_literals" (formula "12") (term "0"))
                                                 (builtin "One Step Simplification" (formula "12"))
                                                (rule "true_left" (formula "12"))
                                                (rule "pullOutSelect" (formula "107") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__1"))
                                                (rule "simplifySelectOfMemset" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "81")))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "81")))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "81")))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "81")) (ifInst ""  (formula "88")))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "105")) (ifInst ""  (formula "14")))
                                                (rule "applyEqReverse" (formula "108") (term "0,0,0,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "replace_known_left" (formula "107") (term "0,0,0") (ifseqformula "13"))
                                                 (builtin "One Step Simplification" (formula "107"))
                                                (rule "orRight" (formula "107"))
                                                (rule "orRight" (formula "107"))
                                                (rule "inEqSimp_exactShadow0" (formula "68") (ifseqformula "54"))
                                                 (builtin "One Step Simplification" (formula "68"))
                                                (rule "greater_literals" (formula "68") (term "0"))
                                                 (builtin "One Step Simplification" (formula "68"))
                                                (rule "polySimp_rightDist" (formula "68") (term "1,0,0"))
                                                (rule "mul_literals" (formula "68") (term "0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "68") (term "1,1,0,0"))
                                                (rule "polySimp_rightDist" (formula "68") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "68") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "68") (term "0,1,0"))
                                                (rule "polySimp_rightDist" (formula "68") (term "0,0"))
                                                (rule "mul_literals" (formula "68") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "68") (term "1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "68") (term "0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "68") (term "0,0"))
                                                (rule "add_literals" (formula "68") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "68") (term "1,0,0"))
                                                (rule "add_literals" (formula "68") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "68"))
                                                (rule "mul_literals" (formula "68") (term "1"))
                                                (rule "inEqSimp_subsumption6" (formula "68") (ifseqformula "12"))
                                                (rule "greater_literals" (formula "68") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "68"))
                                                (rule "mul_literals" (formula "68") (term "1,0"))
                                                (rule "leq_literals" (formula "68") (term "0"))
                                                 (builtin "One Step Simplification" (formula "68"))
                                                (rule "true_left" (formula "68"))
                                                (rule "inEqSimp_exactShadow2" (formula "42") (ifseqformula "54"))
                                                (rule "times_zero_1" (formula "42") (term "1,0,0,1"))
                                                (rule "greater_literals" (formula "42") (term "0"))
                                                 (builtin "One Step Simplification" (formula "42"))
                                                (rule "times_zero_1" (formula "42") (term "0,0"))
                                                (rule "add_zero_left" (formula "42") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                                (rule "polySimp_mulLiterals" (formula "42") (term "1"))
                                                (rule "polySimp_elimOne" (formula "42") (term "1"))
                                                (rule "pullOutSelect" (formula "107") (term "0") (inst "selectSK=java_lang_Object_created__2"))
                                                (rule "simplifySelectOfMemset" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                                                (rule "castDel" (formula "1") (term "1,0"))
                                                (rule "eqSymm" (formula "1") (term "0,0"))
                                                (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                                (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "106"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "88")))
                                                (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "106")) (ifInst ""  (formula "15")))
                                                (rule "applyEqReverse" (formula "108") (term "0") (ifseqformula "1"))
                                                (rule "close" (formula "108") (ifseqformula "15"))
                                             )
                                          )
                                          (branch "Exceptional Post (finish_batch)"
                                              (builtin "One Step Simplification" (formula "68"))
                                              (builtin "One Step Simplification" (formula "98"))
                                             (rule "andLeft" (formula "68"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "1,0") (ifseqformula "68"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "69") (term "0,1,0") (ifseqformula "62"))
                                             (rule "andLeft" (formula "69"))
                                             (rule "andLeft" (formula "69"))
                                             (rule "andLeft" (formula "71"))
                                             (rule "notLeft" (formula "69"))
                                             (rule "close" (formula "72") (ifseqformula "71"))
                                          )
                                          (branch "Pre (finish_batch)"
                                              (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "66")) (ifInst ""  (formula "75")) (ifInst ""  (formula "95")) (ifInst ""  (formula "93")) (ifInst ""  (formula "94")) (ifInst ""  (formula "75")) (ifInst ""  (formula "95")) (ifInst ""  (formula "93")) (ifInst ""  (formula "94")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "1") (ifseqformula "62"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "1,0") (ifseqformula "62"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "1,0,0,0,0,0,0") (ifseqformula "62"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "96") (term "1,0,0,0,0,0,0,0") (ifseqformula "62"))
                                             (rule "wellFormedAnonEQ" (formula "96") (term "0,0,0,0,0,0,0,0") (ifseqformula "62"))
                                             (rule "wellFormedStorePrimitive" (formula "96") (term "0,0,0,0,0,0,0,0,0"))
                                             (rule "expand_inInt" (formula "96") (term "1,0,0,0,0,0"))
                                             (rule "expand_inInt" (formula "96") (term "1,0,0,0,0"))
                                             (rule "expand_inInt" (formula "96") (term "1,0,0"))
                                             (rule "expand_inInt" (formula "96") (term "1,0,0,0"))
                                             (rule "replace_int_MAX" (formula "96") (term "1,0,1,0,0,0,0,0"))
                                             (rule "replace_int_MIN" (formula "96") (term "0,1,1,0,0,0,0,0"))
                                             (rule "replace_int_MAX" (formula "96") (term "1,0,1,0,0,0,0"))
                                             (rule "replace_int_MIN" (formula "96") (term "0,1,1,0,0,0,0"))
                                             (rule "replace_int_MIN" (formula "96") (term "0,1,1,0,0"))
                                             (rule "replace_int_MAX" (formula "96") (term "1,0,1,0,0"))
                                             (rule "replace_int_MAX" (formula "96") (term "1,0,1,0,0,0"))
                                             (rule "replace_int_MIN" (formula "96") (term "0,1,1,0,0,0"))
                                             (rule "replace_known_left" (formula "96") (term "0,1,0,0") (ifseqformula "15"))
                                              (builtin "One Step Simplification" (formula "96") (ifInst ""  (formula "61")) (ifInst ""  (formula "13")) (ifInst ""  (formula "43")))
                                             (rule "inEqSimp_ltRight" (formula "76"))
                                             (rule "times_zero_1" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "64") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "95") (term "0,0,1,0"))
                                             (rule "dismissNonSelectedField" (formula "95") (term "0,0,1"))
                                             (rule "dismissNonSelectedField" (formula "95") (term "0,0,1,0,0,0,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "95") (term "0,0,1,0,0,0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "95") (term "1,0,0,0,0,0"))
                                             (rule "replace_known_left" (formula "95") (term "1,0,0,0,0,0") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "95"))
                                             (rule "inEqSimp_commuteLeq" (formula "95") (term "1,0,0,0,0"))
                                             (rule "replace_known_left" (formula "95") (term "1,0,0,0,0") (ifseqformula "44"))
                                              (builtin "One Step Simplification" (formula "95"))
                                             (rule "inEqSimp_commuteLeq" (formula "95") (term "1,0,0"))
                                             (rule "replace_known_left" (formula "95") (term "1,0,0") (ifseqformula "16"))
                                              (builtin "One Step Simplification" (formula "95"))
                                             (rule "inEqSimp_homoInEq1" (formula "25"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0"))
                                             (rule "inEqSimp_homoInEq0" (formula "47"))
                                             (rule "polySimp_addComm1" (formula "47") (term "0"))
                                             (rule "inEqSimp_homoInEq0" (formula "95") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "95") (term "1,0,1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "95") (term "0,1,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "95") (term "0,0,1,1,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "95") (term "0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "95") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "95") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "95") (term "1,1,0,0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "95") (term "1,1,0,0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "95") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "95") (term "0,0,1,0,0"))
                                             (rule "jmod_axiom" (formula "64") (term "0,1,0,0,2,2,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "64") (term "1,0,1,0,0,2,2,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,2,2,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "64") (term "1,0,0,2,2,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,2,2,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "64") (term "0,1,0,0,2,2,0,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "64") (term "0,0,1,0,0,2,2,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "64") (term "0,0,0,1,0,0,2,2,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "64") (term "0,0,1,0,0,2,2,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "64") (term "0,0,1,0,0,2,2,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "64") (term "0,0,2,2,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,2,2,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "64") (term "0,0,0,0,2,2,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "64") (term "0,0,0,2,2,0,1,0"))
                                             (rule "add_literals" (formula "64") (term "1,1,0,0,0,2,2,0,1,0"))
                                             (rule "times_zero_1" (formula "64") (term "1,0,0,0,2,2,0,1,0"))
                                             (rule "add_zero_right" (formula "64") (term "0,0,0,2,2,0,1,0"))
                                             (rule "jmod_axiom" (formula "50") (term "0,1,4,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,4,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "50") (term "1,4,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "50") (term "1,4,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "50") (term "1,1,4,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "50") (term "0,1,4,0,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "50") (term "0,0,1,4,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "50") (term "0,0,0,1,4,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "50") (term "0,0,1,4,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "50") (term "0,0,1,4,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "50") (term "4,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "50") (term "0,4,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "50") (term "0,0,4,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,4,0,1,0"))
                                             (rule "add_literals" (formula "50") (term "1,1,0,4,0,1,0"))
                                             (rule "times_zero_1" (formula "50") (term "1,0,4,0,1,0"))
                                             (rule "add_zero_right" (formula "50") (term "0,4,0,1,0"))
                                             (rule "jmod_axiom" (formula "1") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "1") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "jmod_axiom" (formula "49") (term "0,1,5,0"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,5,0"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "1,5,0"))
                                             (rule "polySimp_rightDist" (formula "49") (term "1,5,0"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "1,1,5,0"))
                                             (rule "polySimp_rightDist" (formula "49") (term "0,1,5,0"))
                                             (rule "polySimp_mulAssoc" (formula "49") (term "0,0,1,5,0"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "0,0,0,1,5,0"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "0,0,1,5,0"))
                                             (rule "polySimp_elimOne" (formula "49") (term "0,0,1,5,0"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "5,0"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "0,5,0"))
                                             (rule "polySimp_addComm0" (formula "49") (term "0,0,5,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,5,0"))
                                             (rule "add_literals" (formula "49") (term "1,1,0,5,0"))
                                             (rule "times_zero_1" (formula "49") (term "1,0,5,0"))
                                             (rule "add_zero_right" (formula "49") (term "0,5,0"))
                                             (rule "jmod_axiom" (formula "3") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "jmod_axiom" (formula "2") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "2") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                             (rule "jmod_axiom" (formula "57") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "57") (term "1,0"))
                                             (rule "jmod_axiom" (formula "41") (term "0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,2,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,2,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,1,2,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "0,0,0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "2,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "0,2,1,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "41") (term "0,0,2,1,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,2,1,0,0,1,0"))
                                             (rule "add_literals" (formula "41") (term "1,1,0,2,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "41") (term "1,0,2,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "41") (term "0,2,1,0,0,1,0"))
                                             (rule "jmod_axiom" (formula "62") (term "1,2,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "62") (term "1,1,2,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "62") (term "2,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "62") (term "0,2,1,0,0,0"))
                                             (rule "jmod_axiom" (formula "64") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "64") (term "1,0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "64") (term "0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "64") (term "0,0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "64") (term "0,0,0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "64") (term "0,0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "64") (term "0,0,1,0,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "64") (term "0,0,0,0,0,0,0,0"))
                                             (rule "jmod_axiom" (formula "95") (term "1,2,1,0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "95") (term "1,1,2,1,0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "95") (term "2,1,0,0,0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "95") (term "0,2,1,0,0,0,1,0,0,0,0"))
                                             (rule "jmod_axiom" (formula "95") (term "1,2,1,0,0,0,1"))
                                             (rule "polySimp_mulLiterals" (formula "95") (term "1,1,2,1,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "95") (term "2,1,0,0,0,1"))
                                             (rule "polySimp_addAssoc" (formula "95") (term "0,2,1,0,0,0,1"))
                                             (rule "jmod_axiom" (formula "95") (term "1,2,1,0,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "95") (term "1,1,2,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "95") (term "2,1,0,0,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "95") (term "0,2,1,0,0,0,0,0,0"))
                                             (rule "jmod_axiom" (formula "95") (term "1,2,1,0,0,0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "95") (term "1,1,2,1,0,0,0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "95") (term "2,1,0,0,0,1,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "95") (term "0,2,1,0,0,0,1,0,0,0"))
                                             (rule "jmod_axiom" (formula "95") (term "1,2,1,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "95") (term "1,1,2,1,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "95") (term "2,1,0,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "95") (term "0,2,1,0,0,0,1,0"))
                                             (rule "jmod_axiom" (formula "47") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "0,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "47") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "47") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "47") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0,0"))
                                             (rule "jmod_axiom" (formula "95") (term "0,1,0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "95") (term "1,0,1,0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "95") (term "1,0,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "95") (term "1,0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "95") (term "1,1,0,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "95") (term "0,1,0,1,1,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "95") (term "0,0,1,0,1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "95") (term "0,0,0,1,0,1,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "95") (term "0,0,1,0,1,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "95") (term "0,0,1,0,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "95") (term "0,1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "95") (term "0,0,1,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "95") (term "0,0,0,1,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "95") (term "0,0,1,1,0,0"))
                                             (rule "add_literals" (formula "95") (term "1,1,0,0,1,1,0,0"))
                                             (rule "times_zero_1" (formula "95") (term "1,0,0,1,1,0,0"))
                                             (rule "add_zero_right" (formula "95") (term "0,0,1,1,0,0"))
                                             (rule "jmod_axiom" (formula "95") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "95") (term "1,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "95") (term "0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "95") (term "0,0,0,1,0,0"))
                                             (rule "polySimp_addComm1" (formula "95") (term "0,0,0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "95") (term "0,0,0,1,0,0"))
                                             (rule "add_literals" (formula "95") (term "1,1,0,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "95") (term "1,0,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "95") (term "0,0,0,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1"))
                                             (rule "mul_literals" (formula "25") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                             (rule "mul_literals" (formula "1") (term "0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                             (rule "mul_literals" (formula "2") (term "0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "57"))
                                             (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "64") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "64") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "64") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "64") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "64") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "64") (term "1,0,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "64") (term "1,0,1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "64") (term "0,0,1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "64") (term "0,0,0,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "95") (term "1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "95") (term "1,1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "95") (term "1,1,1,0,0"))
                                             (rule "mul_literals" (formula "95") (term "0,1,1,1,0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "95") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "95") (term "0,0,1,0,0"))
                                             (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "57"))
                                             (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,0"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "27"))
                                             (rule "leq_literals" (formula "29") (term "0"))
                                              (builtin "One Step Simplification" (formula "29"))
                                             (rule "true_left" (formula "29"))
                                             (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "23"))
                                             (rule "leq_literals" (formula "22") (term "0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "24"))
                                             (rule "leq_literals" (formula "13") (term "0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "wellFormedMemsetArrayPrimitive" (formula "91") (term "0,0,0,0,0"))
                                             (rule "wellFormedStorePrimitive" (formula "91") (term "0,0,0,0,0"))
                                             (rule "wellFormedStorePrimitive" (formula "91") (term "0,0,0,0,0"))
                                             (rule "wellFormedStorePrimitive" (formula "91") (term "0,0,0,0,0"))
                                             (rule "wellFormedCreate" (formula "91") (term "0,0,0,0,0"))
                                             (rule "wellFormedAnonEQ" (formula "91") (term "0,0,0,0,0") (ifseqformula "37"))
                                             (rule "replace_known_left" (formula "91") (term "1,0,0,0,0,0") (ifseqformula "36"))
                                              (builtin "One Step Simplification" (formula "91") (ifInst ""  (formula "8")))
                                             (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "43"))
                                             (rule "mul_literals" (formula "40") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1"))
                                             (rule "mul_literals" (formula "40") (term "0,1"))
                                             (rule "replace_known_left" (formula "92") (term "1,1,0,0") (ifseqformula "40"))
                                              (builtin "One Step Simplification" (formula "92"))
                                             (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "27") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                             (rule "polySimp_elimOne" (formula "27") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "27"))
                                             (rule "leq_literals" (formula "13") (term "0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "39"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "43") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "44"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                             (rule "polySimp_pullOutFactor2" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "0,0"))
                                             (rule "add_zero_left" (formula "43") (term "0"))
                                             (rule "elimGcdGeq_antec" (formula "43") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=jdiv(add(mul(begin, Z(neglit(1(#)))), end), Z(6(1(#))))") (inst "elimGcd=Z(6(1(#)))"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0"))
                                             (rule "add_zero_right" (formula "43") (term "0,0,0,1,0"))
                                             (rule "leq_literals" (formula "43") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "43") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
                                             (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "add_literals" (formula "43") (term "0,0"))
                                             (rule "leq_literals" (formula "43") (term "0"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "pullOutSelect" (formula "93") (term "0,0,1,0,0,0") (inst "selectSK=java_lang_Object_created__0"))
                                             (rule "simplifySelectOfMemset" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")) (ifInst ""  (formula "74")))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "93")) (ifInst ""  (formula "12")))
                                             (rule "applyEqReverse" (formula "94") (term "0,0,1,0,0,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_left" (formula "93") (term "0,1,0,0,0") (ifseqformula "11"))
                                              (builtin "One Step Simplification" (formula "93"))
                                             (rule "inEqSimp_exactShadow0" (formula "40") (ifseqformula "55"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "greater_literals" (formula "40") (term "0"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "40") (term "0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "40") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0"))
                                             (rule "mul_literals" (formula "40") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0"))
                                             (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                             (rule "add_literals" (formula "40") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                             (rule "mul_literals" (formula "40") (term "1"))
                                             (rule "inEqSimp_subsumption6" (formula "40") (ifseqformula "13"))
                                             (rule "mul_literals" (formula "40") (term "1,1,0"))
                                             (rule "greater_literals" (formula "40") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "leq_literals" (formula "40") (term "0"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "true_left" (formula "40"))
                                             (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "23") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                             (rule "polySimp_elimOne" (formula "23") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "23"))
                                             (rule "leq_literals" (formula "12") (term "0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "true_left" (formula "12"))
                                             (rule "pullOutSelect" (formula "93") (term "0,0,0,0,0") (inst "selectSK=java_lang_Object_created__1"))
                                             (rule "simplifySelectOfMemset" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                                             (rule "castDel" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "94") (term "0,0,0,0,0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "94"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "inEqSimp_exactShadow2" (formula "43") (ifseqformula "55"))
                                             (rule "mul_literals" (formula "43") (term "1,0,0,1"))
                                             (rule "greater_literals" (formula "43") (term "0"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "times_zero_1" (formula "43") (term "0,0"))
                                             (rule "add_zero_left" (formula "43") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1"))
                                             (rule "pullOutSelect" (formula "93") (term "0,0,1,0") (inst "selectSK=java_lang_Object_created__2"))
                                             (rule "simplifySelectOfMemset" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "67")) (ifInst ""  (formula "74")))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "91")) (ifInst ""  (formula "14")))
                                             (rule "applyEqReverse" (formula "94") (term "0,0,1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_left" (formula "93") (term "0,1,0") (ifseqformula "13"))
                                              (builtin "One Step Simplification" (formula "93"))
                                             (rule "pullOutSelect" (formula "93") (term "0,0,1") (inst "selectSK=java_lang_Object_created__3"))
                                             (rule "simplifySelectOfMemset" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfStore" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                                             (rule "castDel" (formula "1") (term "1,0"))
                                             (rule "eqSymm" (formula "1") (term "0,0"))
                                             (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                             (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "92"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "74")))
                                             (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "92")) (ifInst ""  (formula "15")))
                                             (rule "applyEqReverse" (formula "94") (term "0,0,1") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "replace_known_left" (formula "93") (term "0,1") (ifseqformula "14"))
                                              (builtin "One Step Simplification" (formula "93"))
                                             (rule "inEqSimp_leqRight" (formula "93"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "inEqSimp_subsumption1" (formula "41") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "41") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "41") (term "0,1,0,0"))
                                             (rule "polySimp_elimOne" (formula "41") (term "1,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                                             (rule "add_literals" (formula "41") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "41") (term "0,0"))
                                             (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                             (rule "add_literals" (formula "41") (term "0,0"))
                                             (rule "qeq_literals" (formula "41") (term "0"))
                                              (builtin "One Step Simplification" (formula "41"))
                                             (rule "true_left" (formula "41"))
                                             (rule "inEqSimp_exactShadow0" (formula "1") (ifseqformula "55"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "greater_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_contradInEq3" (formula "1") (ifseqformula "28"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0"))
                                             (rule "greater_literals" (formula "1") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "qeq_literals" (formula "1") (term "0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                       )
                                       (branch "Exceptional Post (classify_all)"
                                           (builtin "One Step Simplification" (formula "92"))
                                           (builtin "One Step Simplification" (formula "62"))
                                          (rule "andLeft" (formula "62"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "63") (term "1,0") (ifseqformula "62"))
                                          (rule "andLeft" (formula "63"))
                                          (rule "andLeft" (formula "64"))
                                          (rule "andLeft" (formula "63"))
                                          (rule "notLeft" (formula "63"))
                                          (rule "close" (formula "66") (ifseqformula "65"))
                                       )
                                       (branch "Pre (classify_all)"
                                           (builtin "One Step Simplification" (formula "90") (ifInst ""  (formula "89")) (ifInst ""  (formula "69")) (ifInst ""  (formula "89")) (ifInst ""  (formula "69")))
                                          (rule "andRight" (formula "90"))
                                          (branch "Case 1"
                                             (rule "inEqSimp_ltRight" (formula "70"))
                                             (rule "mul_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "47"))
                                             (rule "polySimp_addComm1" (formula "47") (term "0"))
                                             (rule "inEqSimp_homoInEq1" (formula "25"))
                                             (rule "polySimp_addComm1" (formula "25") (term "0"))
                                             (rule "jmod_axiom" (formula "57") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "57") (term "1,0"))
                                             (rule "jmod_axiom" (formula "50") (term "0,1,4,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,4,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "50") (term "1,4,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "50") (term "1,4,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "50") (term "1,1,4,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "50") (term "0,1,4,0,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "50") (term "0,0,1,4,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "50") (term "0,0,0,1,4,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "50") (term "0,0,1,4,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "50") (term "0,0,1,4,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "50") (term "4,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "50") (term "0,4,0,1,0"))
                                             (rule "polySimp_addComm0" (formula "50") (term "0,0,4,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,4,0,1,0"))
                                             (rule "add_literals" (formula "50") (term "1,1,0,4,0,1,0"))
                                             (rule "times_zero_1" (formula "50") (term "1,0,4,0,1,0"))
                                             (rule "add_zero_right" (formula "50") (term "0,4,0,1,0"))
                                             (rule "jmod_axiom" (formula "1") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "1") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "jmod_axiom" (formula "89") (term "1,2,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "89") (term "1,1,2,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "89") (term "2,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "89") (term "0,2,1,0,0"))
                                             (rule "jmod_axiom" (formula "3") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                             (rule "jmod_axiom" (formula "2") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                             (rule "inEqSimp_homoInEq1" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "2") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "2") (term "0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                             (rule "jmod_axiom" (formula "49") (term "0,1,5,0"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,5,0"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "1,5,0"))
                                             (rule "polySimp_rightDist" (formula "49") (term "1,5,0"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "1,1,5,0"))
                                             (rule "polySimp_rightDist" (formula "49") (term "0,1,5,0"))
                                             (rule "polySimp_mulAssoc" (formula "49") (term "0,0,1,5,0"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "0,0,0,1,5,0"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "0,0,1,5,0"))
                                             (rule "polySimp_elimOne" (formula "49") (term "0,0,1,5,0"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "5,0"))
                                             (rule "polySimp_addAssoc" (formula "49") (term "0,5,0"))
                                             (rule "polySimp_addComm0" (formula "49") (term "0,0,5,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,5,0"))
                                             (rule "add_literals" (formula "49") (term "1,1,0,5,0"))
                                             (rule "times_zero_1" (formula "49") (term "1,0,5,0"))
                                             (rule "add_zero_right" (formula "49") (term "0,5,0"))
                                             (rule "jmod_axiom" (formula "41") (term "0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "1,2,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "1,2,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "1,1,2,1,0,0,1,0"))
                                             (rule "polySimp_rightDist" (formula "41") (term "0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "41") (term "0,0,0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "2,1,0,0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "41") (term "0,2,1,0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "41") (term "0,0,2,1,0,0,1,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,2,1,0,0,1,0"))
                                             (rule "add_literals" (formula "41") (term "1,1,0,2,1,0,0,1,0"))
                                             (rule "times_zero_1" (formula "41") (term "1,0,2,1,0,0,1,0"))
                                             (rule "add_zero_right" (formula "41") (term "0,2,1,0,0,1,0"))
                                             (rule "jmod_axiom" (formula "47") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "0,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "47") (term "0,0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "0,0,1,0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "0,0,1,0"))
                                             (rule "polySimp_addComm1" (formula "47") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
                                             (rule "polySimp_addComm0" (formula "47") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,0"))
                                             (rule "add_literals" (formula "47") (term "1,1,0,0,0"))
                                             (rule "times_zero_1" (formula "47") (term "1,0,0,0"))
                                             (rule "add_zero_right" (formula "47") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                             (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                             (rule "polySimp_rightDist" (formula "25") (term "1"))
                                             (rule "mul_literals" (formula "25") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "57"))
                                             (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                             (rule "mul_literals" (formula "1") (term "0,0,1"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                             (rule "mul_literals" (formula "2") (term "0,0,1"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "0"))
                                             (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "28"))
                                             (rule "leq_literals" (formula "30") (term "0"))
                                              (builtin "One Step Simplification" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "26"))
                                             (rule "leq_literals" (formula "14") (term "0"))
                                              (builtin "One Step Simplification" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "23"))
                                             (rule "leq_literals" (formula "22") (term "0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "inEqSimp_subsumption2" (formula "2") (ifseqformula "54"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "greater_literals" (formula "2") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                             (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                             (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "2") (term "0,0"))
                                             (rule "qeq_literals" (formula "2") (term "0"))
                                              (builtin "One Step Simplification" (formula "2"))
                                             (rule "true_left" (formula "2"))
                                             (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "43"))
                                             (rule "polySimp_mulComm0" (formula "42") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "42") (term "0"))
                                             (rule "polySimp_pullOutFactor2" (formula "42") (term "0,0"))
                                             (rule "add_literals" (formula "42") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "42") (term "0,0"))
                                             (rule "add_zero_left" (formula "42") (term "0"))
                                             (rule "elimGcdGeq_antec" (formula "42") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=jdiv(add(mul(begin, Z(neglit(1(#)))), end), Z(6(1(#))))") (inst "elimGcd=Z(6(1(#)))"))
                                             (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,0"))
                                             (rule "add_zero_right" (formula "42") (term "0,0,0,1,0"))
                                             (rule "leq_literals" (formula "42") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "42"))
                                             (rule "times_zero_1" (formula "42") (term "1,0,0,0,0"))
                                             (rule "add_literals" (formula "42") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "42") (term "0,0"))
                                             (rule "add_literals" (formula "42") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "42") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "42") (term "0,0"))
                                             (rule "leq_literals" (formula "42") (term "0"))
                                              (builtin "One Step Simplification" (formula "42"))
                                             (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "13"))
                                             (rule "polySimp_mulComm0" (formula "24") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "24") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                             (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                             (rule "polySimp_elimOne" (formula "24") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "39"))
                                             (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "43") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                             (rule "polySimp_elimOne" (formula "43") (term "0"))
                                             (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "27") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "27"))
                                             (rule "polySimp_mulLiterals" (formula "27") (term "0"))
                                             (rule "polySimp_elimOne" (formula "27") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "27"))
                                             (rule "leq_literals" (formula "13") (term "0"))
                                              (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "44"))
                                             (rule "mul_literals" (formula "40") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1"))
                                             (rule "mul_literals" (formula "40") (term "0,1"))
                                             (rule "inEqSimp_exactShadow0" (formula "40") (ifseqformula "55"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "greater_literals" (formula "40") (term "0"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1,0"))
                                             (rule "polySimp_mulComm0" (formula "40") (term "0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "0,1,0"))
                                             (rule "polySimp_rightDist" (formula "40") (term "1,0,0"))
                                             (rule "mul_literals" (formula "40") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "40") (term "0,0"))
                                             (rule "mul_literals" (formula "40") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "40") (term "0,0"))
                                             (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "40") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "40") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                             (rule "mul_literals" (formula "40") (term "1"))
                                             (rule "inEqSimp_subsumption6" (formula "40") (ifseqformula "13"))
                                             (rule "mul_literals" (formula "40") (term "1,1,0"))
                                             (rule "greater_literals" (formula "40") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "leq_literals" (formula "40") (term "0"))
                                              (builtin "One Step Simplification" (formula "40"))
                                             (rule "true_left" (formula "40"))
                                             (rule "inEqSimp_exactShadow2" (formula "43") (ifseqformula "55"))
                                             (rule "greater_literals" (formula "43") (term "0"))
                                              (builtin "One Step Simplification" (formula "43"))
                                             (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "43") (term "0,0"))
                                             (rule "add_zero_left" (formula "43") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                             (rule "polySimp_mulLiterals" (formula "43") (term "1"))
                                             (rule "polySimp_elimOne" (formula "43") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "26"))
                                             (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "23") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                             (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                             (rule "polySimp_elimOne" (formula "23") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "23"))
                                             (rule "leq_literals" (formula "12") (term "0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "true_left" (formula "12"))
                                             (rule "inEqSimp_and_subsumption3" (formula "28") (term "0,0,0"))
                                             (rule "leq_literals" (formula "28") (term "0,1,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "28"))
                                             (rule "nnf_imp2or" (formula "35") (term "0"))
                                             (rule "nnf_imp2or" (formula "48") (term "0"))
                                             (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "31"))
                                              (builtin "One Step Simplification" (formula "31"))
                                             (rule "andLeft" (formula "31"))
                                             (rule "andLeft" (formula "31"))
                                             (rule "andLeft" (formula "31"))
                                             (rule "andLeft" (formula "31"))
                                             (rule "andLeft" (formula "31"))
                                             (rule "andLeft" (formula "31"))
                                             (rule "translateJavaSubInt" (formula "36") (term "0,2,0"))
                                             (rule "translateJavaSubInt" (formula "36") (term "0,2,1"))
                                             (rule "eqSymm" (formula "33"))
                                             (rule "eqSymm" (formula "36"))
                                             (rule "translateJavaMulInt" (formula "33") (term "1,0"))
                                             (rule "polySimp_elimSub" (formula "36") (term "0,2,0"))
                                             (rule "mul_literals" (formula "36") (term "1,0,2,0"))
                                             (rule "eqSymm" (formula "36"))
                                             (rule "polySimp_elimSub" (formula "36") (term "0,2,0"))
                                             (rule "mul_literals" (formula "36") (term "1,0,2,0"))
                                             (rule "eqSymm" (formula "36"))
                                             (rule "polySimp_mulComm0" (formula "33") (term "1,0"))
                                             (rule "polySimp_addComm0" (formula "36") (term "0,2,1"))
                                             (rule "polySimp_addComm0" (formula "36") (term "0,2,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "31"))
                                             (rule "applyEq" (formula "32") (term "0") (ifseqformula "30"))
                                             (rule "applyEq" (formula "31") (term "0") (ifseqformula "30"))
                                             (rule "applyEq" (formula "33") (term "1") (ifseqformula "30"))
                                             (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "20"))
                                             (rule "mul_literals" (formula "31") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                             (rule "add_literals" (formula "31") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                             (rule "mul_literals" (formula "31") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "31"))
                                             (rule "leq_literals" (formula "19") (term "0"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "true_left" (formula "19"))
                                             (rule "Free_class_invariant_axiom_for_de_wiesler_Classifier" (formula "55"))
                                              (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "34")))
                                             (rule "andLeft" (formula "55"))
                                             (rule "andLeft" (formula "55"))
                                             (rule "andLeft" (formula "55"))
                                             (rule "andLeft" (formula "55"))
                                             (rule "andLeft" (formula "55"))
                                             (rule "eqSymm" (formula "59"))
                                             (rule "eqSymm" (formula "57"))
                                             (rule "translateJavaSubInt" (formula "59") (term "0,2,0"))
                                             (rule "translateJavaSubInt" (formula "59") (term "0,2,1"))
                                             (rule "translateJavaMulInt" (formula "57") (term "1,0"))
                                             (rule "polySimp_elimSub" (formula "59") (term "0,2,0"))
                                             (rule "mul_literals" (formula "59") (term "1,0,2,0"))
                                             (rule "eqSymm" (formula "59"))
                                             (rule "polySimp_elimSub" (formula "59") (term "0,2,0"))
                                             (rule "mul_literals" (formula "59") (term "1,0,2,0"))
                                             (rule "eqSymm" (formula "59"))
                                             (rule "polySimp_mulComm0" (formula "57") (term "1,0"))
                                             (rule "polySimp_addComm0" (formula "59") (term "0,2,1"))
                                             (rule "polySimp_addComm0" (formula "59") (term "0,2,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "55"))
                                             (rule "applyEq" (formula "33") (term "0") (ifseqformula "57"))
                                             (rule "pullOutSelect" (formula "58") (term "1") (inst "selectSK=arr_0"))
                                             (rule "simplifySelectOfAnonEQ" (formula "59") (ifseqformula "42"))
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "42"))
                                              (builtin "One Step Simplification" (formula "58"))
                                             (rule "applyEq" (formula "59") (term "2,0") (ifseqformula "35"))
                                             (rule "elementOfUnion" (formula "59") (term "0,0,0"))
                                             (rule "elementOfArrayRangeConcrete" (formula "59") (term "1,0,0,0"))
                                             (rule "replace_known_right" (formula "59") (term "0,0,1,0,0,0") (ifseqformula "91"))
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "elementOfUnion" (formula "58") (term "0,0,0"))
                                             (rule "elementOfArrayRangeConcrete" (formula "58") (term "1,0,0,0"))
                                             (rule "replace_known_right" (formula "58") (term "0,0,1,0,0,0") (ifseqformula "91"))
                                              (builtin "One Step Simplification" (formula "58"))
                                             (rule "elementOfUnion" (formula "59") (term "0,0,0"))
                                             (rule "elementOfArrayRangeConcrete" (formula "59") (term "1,0,0,0"))
                                             (rule "replace_known_right" (formula "59") (term "0,0,1,0,0,0") (ifseqformula "89"))
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "elementOfUnion" (formula "58") (term "0,0,0"))
                                             (rule "elementOfArrayRangeConcrete" (formula "58") (term "1,0,0,0"))
                                             (rule "replace_known_right" (formula "58") (term "0,0,1,0,0,0") (ifseqformula "89"))
                                              (builtin "One Step Simplification" (formula "58"))
                                             (rule "elementOfUnion" (formula "59") (term "0,0,0"))
                                             (rule "elementOfArrayRangeConcrete" (formula "59") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "59") (term "0,0,0,0,0,0") (ifseqformula "86"))
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "elementOfArrayRangeConcrete" (formula "59") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "59") (term "0,0,0,0,0") (ifseqformula "82"))
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "elementOfUnion" (formula "58") (term "0,0,0"))
                                             (rule "elementOfArrayRangeConcrete" (formula "58") (term "0,0,0,0"))
                                             (rule "replace_known_right" (formula "58") (term "0,0,0,0,0,0") (ifseqformula "86"))
                                              (builtin "One Step Simplification" (formula "58"))
                                             (rule "elementOfArrayRangeConcrete" (formula "58") (term "0,0,0"))
                                             (rule "replace_known_right" (formula "58") (term "0,0,0,0,0") (ifseqformula "82"))
                                              (builtin "One Step Simplification" (formula "58"))
                                             (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "62"))
                                             (rule "andLeft" (formula "62"))
                                             (rule "notLeft" (formula "62"))
                                             (rule "notLeft" (formula "62"))
                                             (rule "replace_known_right" (formula "58") (term "0,0,0,0") (ifseqformula "69"))
                                              (builtin "One Step Simplification" (formula "58"))
                                             (rule "replace_known_right" (formula "59") (term "0,0,0,0") (ifseqformula "69"))
                                              (builtin "One Step Simplification" (formula "59"))
                                             (rule "replace_known_right" (formula "4") (term "0") (ifseqformula "69"))
                                              (builtin "One Step Simplification" (formula "4"))
                                             (rule "replace_known_left" (formula "58") (term "0,0,0") (ifseqformula "4"))
                                              (builtin "One Step Simplification" (formula "58"))
                                             (rule "applyEqReverse" (formula "59") (term "1") (ifseqformula "58"))
                                              (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "4")))
                                             (rule "true_left" (formula "59"))
                                             (rule "hideAuxiliaryEq" (formula "58"))
                                             (rule "replace_known_right" (formula "6") (term "0") (ifseqformula "68"))
                                              (builtin "One Step Simplification" (formula "6"))
                                             (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "16"))
                                             (rule "andLeft" (formula "16"))
                                             (rule "notLeft" (formula "16"))
                                             (rule "notLeft" (formula "16"))
                                             (rule "Free_class_invariant_axiom_for_de_wiesler_Buffers" (formula "16") (inst "b=b"))
                                              (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "31")))
                                             (rule "expand_inInt" (formula "16") (term "1,0,0,1"))
                                             (rule "replace_int_MIN" (formula "16") (term "0,1,1,0,0,1"))
                                             (rule "replace_int_MAX" (formula "16") (term "1,0,1,0,0,1"))
                                             (rule "andLeft" (formula "16"))
                                             (rule "andLeft" (formula "16"))
                                             (rule "andLeft" (formula "16"))
                                             (rule "andLeft" (formula "16"))
                                             (rule "notLeft" (formula "16"))
                                             (rule "translateJavaMulInt" (formula "16") (term "1"))
                                             (rule "mul_literals" (formula "16") (term "1"))
                                             (rule "eqSymm" (formula "69"))
                                             (rule "inEqSimp_ltToLeq" (formula "19") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "19") (term "1,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "19") (term "0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "18"))
                                             (rule "applyEq" (formula "56") (term "0") (ifseqformula "31"))
                                             (rule "applyEq" (formula "56") (term "0") (ifseqformula "31"))
                                             (rule "applyEq" (formula "56") (term "1") (ifseqformula "31"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0,0"))
                                             (rule "mul_literals" (formula "19") (term "0,1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0,0"))
                                             (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "33"))
                                             (rule "leq_literals" (formula "18") (term "0"))
                                              (builtin "One Step Simplification" (formula "18"))
                                             (rule "true_left" (formula "18"))
                                             (rule "Definition_axiom_for_isEmpty_in_de_wiesler_Buffers" (formula "29") (term "0") (inst "b=b"))
                                              (builtin "One Step Simplification" (formula "29"))
                                             (rule "expand_inInt" (formula "29") (term "1,0,0"))
                                             (rule "replace_int_MIN" (formula "29") (term "0,1,1,0,0"))
                                             (rule "replace_int_MAX" (formula "29") (term "1,0,1,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "29") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,1,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "29") (term "1,1,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0,0,0"))
                                             (rule "mul_literals" (formula "29") (term "0,1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0,0,0"))
                                             (rule "Free_class_invariant_axiom_for_de_wiesler_Buffers" (formula "48") (inst "b=b"))
                                              (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "17")) (ifInst ""  (formula "33")))
                                             (rule "expand_inInt" (formula "48") (term "1,0,0,1"))
                                             (rule "replace_int_MIN" (formula "48") (term "0,1,1,0,0,1"))
                                             (rule "replace_int_MAX" (formula "48") (term "1,0,1,0,0,1"))
                                             (rule "andLeft" (formula "48"))
                                             (rule "andLeft" (formula "48"))
                                             (rule "andLeft" (formula "48"))
                                             (rule "notLeft" (formula "48"))
                                             (rule "translateJavaMulInt" (formula "48") (term "1"))
                                             (rule "mul_literals" (formula "48") (term "1"))
                                             (rule "eqSymm" (formula "67"))
                                             (rule "inEqSimp_ltToLeq" (formula "49") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "49") (term "1,1,0,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "49") (term "0,1,0"))
                                             (rule "inEqSimp_commuteLeq" (formula "48"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "49") (term "1,1,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "49") (term "1,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0,0,0"))
                                             (rule "mul_literals" (formula "49") (term "0,1,1,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0,0,0"))
                                             (rule "inEqSimp_subsumption1" (formula "48") (ifseqformula "32"))
                                             (rule "leq_literals" (formula "48") (term "0"))
                                              (builtin "One Step Simplification" (formula "48"))
                                             (rule "true_left" (formula "48"))
                                             (rule "Class_invariant_axiom_for_de_wiesler_Buffers" (formula "58"))
                                             (rule "andLeft" (formula "58"))
                                             (rule "notLeft" (formula "58"))
                                             (rule "notLeft" (formula "58"))
                                             (rule "replace_known_right" (formula "7") (term "0") (ifseqformula "66"))
                                              (builtin "One Step Simplification" (formula "7"))
                                             (rule "replace_known_right" (formula "5") (term "0") (ifseqformula "65"))
                                              (builtin "One Step Simplification" (formula "5"))
                                             (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "52") (term "0"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "translateJavaMod" (formula "52") (term "0"))
                                             (rule "jmod_axiom" (formula "52") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,0"))
                                             (rule "polySimp_sepNegMonomial" (formula "52"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                             (rule "newSym_eq" (formula "52") (inst "l=l_0") (inst "newSymDef=add(mul(begin, Z(0(#))), mul(result_22, Z(0(#))))"))
                                             (rule "times_zero_1" (formula "52") (term "0,1,1"))
                                             (rule "times_zero_1" (formula "52") (term "1,1,1"))
                                             (rule "add_zero_right" (formula "52") (term "1,1"))
                                             (rule "add_zero_right" (formula "52") (term "1"))
                                             (rule "applyEq" (formula "53") (term "0,0") (ifseqformula "52"))
                                             (rule "polySimp_homoEq" (formula "53"))
                                             (rule "polySimp_mulLiterals" (formula "53") (term "1,0"))
                                             (rule "polySimp_addComm1" (formula "53") (term "0"))
                                             (rule "polySimp_addComm0" (formula "53") (term "0,0"))
                                             (rule "polySimp_sepPosMonomial" (formula "53"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "1"))
                                             (rule "polySimp_rightDist" (formula "53") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "53") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "53") (term "1,1"))
                                             (rule "polySimp_mulComm0" (formula "53") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "53") (term "0,1"))
                                             (rule "applyEq" (formula "54") (term "4,0") (ifseqformula "53"))
                                             (rule "applyEq" (formula "55") (term "3,0,1,0") (ifseqformula "53"))
                                             (rule "applyEq" (formula "45") (term "0") (ifseqformula "53"))
                                             (rule "inEqSimp_homoInEq0" (formula "45"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "45") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "45") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                             (rule "applyEq" (formula "52") (term "1,0,0") (ifseqformula "53"))
                                             (rule "polySimp_addAssoc" (formula "52") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "52") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor2b" (formula "52") (term "0,0"))
                                             (rule "add_literals" (formula "52") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "52") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "52") (term "0,0"))
                                             (rule "applyEq" (formula "51") (term "0") (ifseqformula "53"))
                                             (rule "inEqSimp_homoInEq0" (formula "51"))
                                             (rule "polySimp_mulComm0" (formula "51") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "51") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "51") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "51") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "51") (term "0,1,0"))
                                             (rule "polySimp_addComm1" (formula "51") (term "0"))
                                             (rule "polySimp_addAssoc" (formula "51") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "51") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,0"))
                                             (rule "add_literals" (formula "51") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "51") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "51") (term "0,0"))
                                             (rule "applyEq" (formula "47") (term "0") (ifseqformula "53"))
                                             (rule "inEqSimp_homoInEq1" (formula "47"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "47") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "47") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "47") (term "0"))
                                             (rule "applyEq" (formula "50") (term "0") (ifseqformula "53"))
                                             (rule "inEqSimp_homoInEq1" (formula "50"))
                                             (rule "polySimp_mulComm0" (formula "50") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "50") (term "1,0"))
                                             (rule "polySimp_mulAssoc" (formula "50") (term "0,1,0"))
                                             (rule "polySimp_mulComm0" (formula "50") (term "0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "50") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "50") (term "0"))
                                             (rule "polySimp_addComm0" (formula "50") (term "0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "50") (term "0"))
                                             (rule "add_literals" (formula "50") (term "1,1,0"))
                                             (rule "times_zero_1" (formula "50") (term "1,0"))
                                             (rule "add_zero_right" (formula "50") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "45"))
                                             (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                             (rule "polySimp_elimOne" (formula "45") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "51"))
                                             (rule "polySimp_mulLiterals" (formula "51") (term "1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "47"))
                                             (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                             (rule "polySimp_elimOne" (formula "47") (term "0"))
                                             (rule "inEqSimp_invertInEq0" (formula "50"))
                                             (rule "times_zero_2" (formula "50") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                             (rule "elimGcdGeq_antec" (formula "50") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                             (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "50") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "add_zero_right" (formula "50") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "50") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "50") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "50") (term "0,0"))
                                             (rule "add_literals" (formula "50") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "50") (term "1,0,0"))
                                             (rule "add_literals" (formula "50") (term "0,0"))
                                             (rule "leq_literals" (formula "50") (term "0"))
                                              (builtin "One Step Simplification" (formula "50"))
                                             (rule "elimGcdGeq_antec" (formula "51") (inst "elimGcdRightDiv=mul(l_0, Z(6(1(#))))") (inst "elimGcdLeftDiv=jdiv(add(mul(begin, Z(neglit(1(#)))), end), Z(6(1(#))))") (inst "elimGcd=Z(6(1(#)))"))
                                             (rule "mul_literals" (formula "51") (term "0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,0"))
                                             (rule "leq_literals" (formula "51") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,0"))
                                             (rule "add_literals" (formula "51") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "51") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "51") (term "0,0"))
                                             (rule "polySimp_mulAssoc" (formula "51") (term "1,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "51") (term "0,1,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "51") (term "1,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "51") (term "0,0"))
                                             (rule "add_literals" (formula "51") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "51") (term "1,0,0"))
                                             (rule "add_literals" (formula "51") (term "0,0"))
                                             (rule "leq_literals" (formula "51") (term "0"))
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "45"))
                                             (rule "mul_literals" (formula "21") (term "0,0"))
                                             (rule "add_zero_left" (formula "21") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "21") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                             (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
                                             (rule "neg_literal" (formula "21") (term "0,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "21") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                             (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                             (rule "add_literals" (formula "21") (term "0,0"))
                                             (rule "qeq_literals" (formula "21") (term "0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "inEqSimp_exactShadow3" (formula "48") (ifseqformula "23"))
                                             (rule "polySimp_rightDist" (formula "48") (term "0,0"))
                                             (rule "polySimp_mulLiterals" (formula "48") (term "1,0,0"))
                                             (rule "mul_literals" (formula "48") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "48") (term "0"))
                                             (rule "add_literals" (formula "48") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "48"))
                                             (rule "mul_literals" (formula "48") (term "1"))
                                             (rule "inEqSimp_subsumption6" (formula "48") (ifseqformula "52"))
                                             (rule "greater_literals" (formula "48") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "48"))
                                             (rule "times_zero_1" (formula "48") (term "1,0"))
                                             (rule "leq_literals" (formula "48") (term "0"))
                                              (builtin "One Step Simplification" (formula "48"))
                                             (rule "true_left" (formula "48"))
                                             (rule "inEqSimp_exactShadow2" (formula "52") (ifseqformula "63"))
                                             (rule "greater_literals" (formula "52") (term "0"))
                                              (builtin "One Step Simplification" (formula "52"))
                                             (rule "polySimp_mulAssoc" (formula "52") (term "1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "0,1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,0,0"))
                                             (rule "polySimp_mulAssoc" (formula "52") (term "0,0"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "0,0"))
                                             (rule "polySimp_addAssoc" (formula "52") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "52"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "1"))
                                             (rule "polySimp_rightDist" (formula "52") (term "1"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "52") (term "1,1"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "0,1"))
                                             (rule "inEqSimp_exactShadow3" (formula "52") (ifseqformula "27"))
                                             (rule "polySimp_rightDist" (formula "52") (term "0,0"))
                                             (rule "polySimp_mulAssoc" (formula "52") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "52") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "0,0,0"))
                                             (rule "polySimp_addComm1" (formula "52") (term "0"))
                                             (rule "polySimp_addComm0" (formula "52") (term "0,0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "52"))
                                             (rule "polySimp_mulLiterals" (formula "52") (term "0"))
                                             (rule "polySimp_elimOne" (formula "52") (term "0"))
                                             (rule "inEqSimp_subsumption0" (formula "46") (ifseqformula "52"))
                                             (rule "inEqSimp_homoInEq0" (formula "46") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "46") (term "1,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "46") (term "1,1,0,0"))
                                             (rule "mul_literals" (formula "46") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "46") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "46") (term "0,0,0"))
                                             (rule "add_literals" (formula "46") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "46") (term "0,0"))
                                             (rule "add_literals" (formula "46") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "46") (term "1,0,0"))
                                             (rule "add_literals" (formula "46") (term "0,0"))
                                             (rule "qeq_literals" (formula "46") (term "0"))
                                              (builtin "One Step Simplification" (formula "46"))
                                             (rule "true_left" (formula "46"))
                                             (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "51"))
                                             (rule "times_zero_1" (formula "22") (term "0,0"))
                                             (rule "add_zero_left" (formula "22") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                             (rule "elimGcdLeq_antec" (formula "22") (inst "elimGcdRightDiv=Z(7(2(1(#))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,0,1,0"))
                                             (rule "leq_literals" (formula "22") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                                             (rule "neg_literal" (formula "22") (term "0,0,0,0,0,0"))
                                             (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                             (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                             (rule "add_literals" (formula "22") (term "0,0"))
                                             (rule "qeq_literals" (formula "22") (term "0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "inEqSimp_subsumption0" (formula "21") (ifseqformula "22"))
                                             (rule "leq_literals" (formula "21") (term "0"))
                                              (builtin "One Step Simplification" (formula "21"))
                                             (rule "true_left" (formula "21"))
                                             (rule "nnf_imp2or" (formula "29") (term "0"))
                                             (rule "Class_invariant_axiom_for_de_wiesler_Classifier" (formula "100"))
                                             (rule "replace_known_right" (formula "100") (term "0,1") (ifseqformula "70"))
                                              (builtin "One Step Simplification" (formula "100") (ifInst ""  (formula "71")))
                                             (rule "closeTrue" (formula "100"))
                                          )
                                          (branch "Case 2"
                                             (rule "andRight" (formula "90"))
                                             (branch "Case 1"
                                                (rule "andRight" (formula "90"))
                                                (branch "Case 1"
                                                   (rule "andRight" (formula "90"))
                                                   (branch "Case 1"
                                                      (rule "andRight" (formula "90"))
                                                      (branch "Case 1"
                                                         (rule "wellFormedStorePrimitive" (formula "90"))
                                                         (rule "inEqSimp_ltRight" (formula "70"))
                                                         (rule "times_zero_1" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "47"))
                                                         (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25"))
                                                         (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                         (rule "jmod_axiom" (formula "2") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "2") (term "0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                         (rule "jmod_axiom" (formula "49") (term "0,1,5,0"))
                                                         (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,5,0"))
                                                         (rule "polySimp_mulComm0" (formula "49") (term "1,5,0"))
                                                         (rule "polySimp_rightDist" (formula "49") (term "1,5,0"))
                                                         (rule "polySimp_mulLiterals" (formula "49") (term "1,1,5,0"))
                                                         (rule "polySimp_rightDist" (formula "49") (term "0,1,5,0"))
                                                         (rule "polySimp_mulAssoc" (formula "49") (term "0,0,1,5,0"))
                                                         (rule "polySimp_mulComm0" (formula "49") (term "0,0,0,1,5,0"))
                                                         (rule "polySimp_mulLiterals" (formula "49") (term "0,0,1,5,0"))
                                                         (rule "polySimp_elimOne" (formula "49") (term "0,0,1,5,0"))
                                                         (rule "polySimp_addAssoc" (formula "49") (term "5,0"))
                                                         (rule "polySimp_addAssoc" (formula "49") (term "0,5,0"))
                                                         (rule "polySimp_addComm0" (formula "49") (term "0,0,5,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,5,0"))
                                                         (rule "add_literals" (formula "49") (term "1,1,0,5,0"))
                                                         (rule "times_zero_1" (formula "49") (term "1,0,5,0"))
                                                         (rule "add_zero_right" (formula "49") (term "0,5,0"))
                                                         (rule "jmod_axiom" (formula "57") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "57") (term "1,0"))
                                                         (rule "jmod_axiom" (formula "50") (term "0,1,4,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,4,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "50") (term "1,4,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "50") (term "1,4,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "50") (term "1,1,4,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "50") (term "0,1,4,0,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "50") (term "0,0,1,4,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "50") (term "0,0,0,1,4,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "50") (term "0,0,1,4,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "50") (term "0,0,1,4,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "50") (term "4,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "50") (term "0,4,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "50") (term "0,0,4,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,4,0,1,0"))
                                                         (rule "add_literals" (formula "50") (term "1,1,0,4,0,1,0"))
                                                         (rule "times_zero_1" (formula "50") (term "1,0,4,0,1,0"))
                                                         (rule "add_zero_right" (formula "50") (term "0,4,0,1,0"))
                                                         (rule "jmod_axiom" (formula "3") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "jmod_axiom" (formula "41") (term "0,1,2,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,2,1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,2,1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "41") (term "1,2,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,2,1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "41") (term "0,1,2,1,0,0,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "0,0,0,1,2,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "41") (term "2,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "41") (term "0,2,1,0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "41") (term "0,0,2,1,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,2,1,0,0,1,0"))
                                                         (rule "add_literals" (formula "41") (term "1,1,0,2,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "41") (term "1,0,2,1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "41") (term "0,2,1,0,0,1,0"))
                                                         (rule "jmod_axiom" (formula "1") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "1") (term "0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "jmod_axiom" (formula "89") (term "1,2,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "89") (term "1,1,2,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "89") (term "2,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "89") (term "0,2,1,0"))
                                                         (rule "jmod_axiom" (formula "47") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "0,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "47") (term "0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "47") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "47") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,0"))
                                                         (rule "add_literals" (formula "47") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "47") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "47") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                         (rule "mul_literals" (formula "25") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "57"))
                                                         (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                         (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "28"))
                                                         (rule "leq_literals" (formula "30") (term "0"))
                                                          (builtin "One Step Simplification" (formula "30"))
                                                         (rule "true_left" (formula "30"))
                                                         (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "26"))
                                                         (rule "leq_literals" (formula "14") (term "0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "23"))
                                                         (rule "leq_literals" (formula "22") (term "0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "true_left" (formula "22"))
                                                         (rule "inEqSimp_subsumption2" (formula "2") (ifseqformula "54"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "greater_literals" (formula "2") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0,0"))
                                                         (rule "qeq_literals" (formula "2") (term "0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "wellFormedMemsetArrayPrimitive" (formula "85"))
                                                         (rule "wellFormedStorePrimitive" (formula "85"))
                                                         (rule "wellFormedStorePrimitive" (formula "85"))
                                                         (rule "wellFormedStorePrimitive" (formula "85"))
                                                         (rule "wellFormedCreate" (formula "85"))
                                                         (rule "wellFormedAnonEQ" (formula "85") (ifseqformula "37"))
                                                         (rule "replace_known_left" (formula "85") (term "0") (ifseqformula "8"))
                                                          (builtin "One Step Simplification" (formula "85") (ifInst ""  (formula "36")))
                                                         (rule "closeTrue" (formula "85"))
                                                      )
                                                      (branch "Case 2"
                                                         (rule "dismissNonSelectedField" (formula "90") (term "0"))
                                                         (rule "inEqSimp_ltRight" (formula "70"))
                                                         (rule "mul_literals" (formula "1") (term "0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "47"))
                                                         (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25"))
                                                         (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                         (rule "jmod_axiom" (formula "57") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "57") (term "1,0"))
                                                         (rule "jmod_axiom" (formula "2") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "2") (term "0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                         (rule "jmod_axiom" (formula "1") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "1") (term "0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "jmod_axiom" (formula "41") (term "0,1,2,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,2,1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,2,1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "41") (term "1,2,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,2,1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "41") (term "0,1,2,1,0,0,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "0,0,0,1,2,1,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "41") (term "2,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "41") (term "0,2,1,0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "41") (term "0,0,2,1,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,2,1,0,0,1,0"))
                                                         (rule "add_literals" (formula "41") (term "1,1,0,2,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "41") (term "1,0,2,1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "41") (term "0,2,1,0,0,1,0"))
                                                         (rule "jmod_axiom" (formula "3") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "jmod_axiom" (formula "49") (term "0,1,5,0"))
                                                         (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,5,0"))
                                                         (rule "polySimp_mulComm0" (formula "49") (term "1,5,0"))
                                                         (rule "polySimp_rightDist" (formula "49") (term "1,5,0"))
                                                         (rule "polySimp_mulLiterals" (formula "49") (term "1,1,5,0"))
                                                         (rule "polySimp_rightDist" (formula "49") (term "0,1,5,0"))
                                                         (rule "polySimp_mulAssoc" (formula "49") (term "0,0,1,5,0"))
                                                         (rule "polySimp_mulComm0" (formula "49") (term "0,0,0,1,5,0"))
                                                         (rule "polySimp_mulLiterals" (formula "49") (term "0,0,1,5,0"))
                                                         (rule "polySimp_elimOne" (formula "49") (term "0,0,1,5,0"))
                                                         (rule "polySimp_addAssoc" (formula "49") (term "5,0"))
                                                         (rule "polySimp_addAssoc" (formula "49") (term "0,5,0"))
                                                         (rule "polySimp_addComm0" (formula "49") (term "0,0,5,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,5,0"))
                                                         (rule "add_literals" (formula "49") (term "1,1,0,5,0"))
                                                         (rule "times_zero_1" (formula "49") (term "1,0,5,0"))
                                                         (rule "add_zero_right" (formula "49") (term "0,5,0"))
                                                         (rule "jmod_axiom" (formula "50") (term "0,1,4,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,4,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "50") (term "1,4,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "50") (term "1,4,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "50") (term "1,1,4,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "50") (term "0,1,4,0,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "50") (term "0,0,1,4,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "50") (term "0,0,0,1,4,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "50") (term "0,0,1,4,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "50") (term "0,0,1,4,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "50") (term "4,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "50") (term "0,4,0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "50") (term "0,0,4,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,4,0,1,0"))
                                                         (rule "add_literals" (formula "50") (term "1,1,0,4,0,1,0"))
                                                         (rule "times_zero_1" (formula "50") (term "1,0,4,0,1,0"))
                                                         (rule "add_zero_right" (formula "50") (term "0,4,0,1,0"))
                                                         (rule "jmod_axiom" (formula "89") (term "1,2,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "89") (term "1,1,2,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "89") (term "2,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "89") (term "0,2,1,0,0"))
                                                         (rule "jmod_axiom" (formula "47") (term "0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "47") (term "0,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "47") (term "0,0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "47") (term "0,0,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "0,0,1,0"))
                                                         (rule "polySimp_elimOne" (formula "47") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "47") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,0"))
                                                         (rule "add_literals" (formula "47") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "47") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "47") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                         (rule "mul_literals" (formula "25") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "57"))
                                                         (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                                         (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                         (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "26"))
                                                         (rule "leq_literals" (formula "14") (term "0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "23"))
                                                         (rule "leq_literals" (formula "22") (term "0"))
                                                          (builtin "One Step Simplification" (formula "22"))
                                                         (rule "true_left" (formula "22"))
                                                         (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "26"))
                                                         (rule "leq_literals" (formula "28") (term "0"))
                                                          (builtin "One Step Simplification" (formula "28"))
                                                         (rule "true_left" (formula "28"))
                                                         (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "54"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                         (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0,0"))
                                                         (rule "qeq_literals" (formula "2") (term "0"))
                                                          (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "pullOutSelect" (formula "85") (term "0") (inst "selectSK=java_lang_Object_created__0"))
                                                         (rule "simplifySelectOfMemset" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                                                         (rule "simplifySelectOfStore" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")))
                                                         (rule "simplifySelectOfCreate" (formula "1"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "58")) (ifInst ""  (formula "66")))
                                                         (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "38"))
                                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "85")) (ifInst ""  (formula "12")))
                                                         (rule "applyEqReverse" (formula "86") (term "0") (ifseqformula "1"))
                                                         (rule "close" (formula "86") (ifseqformula "12"))
                                                      )
                                                   )
                                                   (branch "Case 2"
                                                      (rule "expand_inInt" (formula "90"))
                                                      (rule "replace_int_MAX" (formula "90") (term "1,0"))
                                                      (rule "replace_int_MIN" (formula "90") (term "0,1"))
                                                      (rule "inEqSimp_ltRight" (formula "70"))
                                                      (rule "times_zero_1" (formula "1") (term "0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "47"))
                                                      (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25"))
                                                      (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "89") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "89") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "89") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "89") (term "1,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "89") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "89") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "89") (term "1"))
                                                      (rule "mul_literals" (formula "89") (term "1,0,1"))
                                                      (rule "polySimp_addComm1" (formula "89") (term "0,1"))
                                                      (rule "polySimp_addComm0" (formula "89") (term "0,0,1"))
                                                      (rule "jmod_axiom" (formula "1") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "1") (term "0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "jmod_axiom" (formula "57") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "57") (term "1,0"))
                                                      (rule "jmod_axiom" (formula "2") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "2") (term "0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                      (rule "jmod_axiom" (formula "50") (term "0,1,4,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,4,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "50") (term "1,4,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "50") (term "1,4,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "50") (term "1,1,4,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "50") (term "0,1,4,0,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "50") (term "0,0,1,4,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "50") (term "0,0,0,1,4,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "50") (term "0,0,1,4,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "50") (term "0,0,1,4,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "4,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "0,4,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "50") (term "0,0,4,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,4,0,1,0"))
                                                      (rule "add_literals" (formula "50") (term "1,1,0,4,0,1,0"))
                                                      (rule "times_zero_1" (formula "50") (term "1,0,4,0,1,0"))
                                                      (rule "add_zero_right" (formula "50") (term "0,4,0,1,0"))
                                                      (rule "jmod_axiom" (formula "41") (term "0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,2,1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,2,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "0,0,0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "2,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0,2,1,0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "41") (term "0,0,2,1,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,2,1,0,0,1,0"))
                                                      (rule "add_literals" (formula "41") (term "1,1,0,2,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "41") (term "1,0,2,1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "41") (term "0,2,1,0,0,1,0"))
                                                      (rule "jmod_axiom" (formula "3") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                      (rule "jmod_axiom" (formula "49") (term "0,1,5,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,5,0"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "1,5,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "1,5,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "1,1,5,0"))
                                                      (rule "polySimp_rightDist" (formula "49") (term "0,1,5,0"))
                                                      (rule "polySimp_mulAssoc" (formula "49") (term "0,0,1,5,0"))
                                                      (rule "polySimp_mulComm0" (formula "49") (term "0,0,0,1,5,0"))
                                                      (rule "polySimp_mulLiterals" (formula "49") (term "0,0,1,5,0"))
                                                      (rule "polySimp_elimOne" (formula "49") (term "0,0,1,5,0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "5,0"))
                                                      (rule "polySimp_addAssoc" (formula "49") (term "0,5,0"))
                                                      (rule "polySimp_addComm0" (formula "49") (term "0,0,5,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,5,0"))
                                                      (rule "add_literals" (formula "49") (term "1,1,0,5,0"))
                                                      (rule "times_zero_1" (formula "49") (term "1,0,5,0"))
                                                      (rule "add_zero_right" (formula "49") (term "0,5,0"))
                                                      (rule "jmod_axiom" (formula "47") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "47") (term "0,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "47") (term "0,0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "0,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "47") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "47") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,0"))
                                                      (rule "add_literals" (formula "47") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "47") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "47") (term "0,0,0"))
                                                      (rule "jmod_axiom" (formula "89") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "89") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "89") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "89") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "89") (term "0,0,0"))
                                                      (rule "add_literals" (formula "89") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "89") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "89") (term "0,0,0"))
                                                      (rule "jmod_axiom" (formula "89") (term "0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "89") (term "1,0,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "89") (term "1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "89") (term "1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "89") (term "1,1,0,1"))
                                                      (rule "polySimp_rightDist" (formula "89") (term "0,1,0,1"))
                                                      (rule "polySimp_mulAssoc" (formula "89") (term "0,0,1,0,1"))
                                                      (rule "polySimp_mulComm0" (formula "89") (term "0,0,0,1,0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "89") (term "0,0,1,0,1"))
                                                      (rule "polySimp_elimOne" (formula "89") (term "0,0,1,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "89") (term "0,1"))
                                                      (rule "polySimp_addAssoc" (formula "89") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "89") (term "0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "89") (term "0,0,1"))
                                                      (rule "add_literals" (formula "89") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "89") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "89") (term "0,0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                      (rule "mul_literals" (formula "25") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "57"))
                                                      (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                      (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "89") (term "0"))
                                                      (rule "polySimp_mulLiterals" (formula "89") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "89") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "89") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "89") (term "1,1"))
                                                      (rule "mul_literals" (formula "89") (term "0,1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "26"))
                                                      (rule "leq_literals" (formula "14") (term "0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "56"))
                                                      (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                       (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "22"))
                                                      (rule "leq_literals" (formula "21") (term "0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "inEqSimp_subsumption1" (formula "27") (ifseqformula "25"))
                                                      (rule "leq_literals" (formula "27") (term "0"))
                                                       (builtin "One Step Simplification" (formula "27"))
                                                      (rule "true_left" (formula "27"))
                                                      (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "43"))
                                                      (rule "mul_literals" (formula "40") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "40") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                                      (rule "polySimp_mulComm0" (formula "40") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "40") (term "1"))
                                                      (rule "mul_literals" (formula "40") (term "0,1"))
                                                      (rule "replace_known_left" (formula "86") (term "1") (ifseqformula "40"))
                                                       (builtin "One Step Simplification" (formula "86"))
                                                      (rule "inEqSimp_leqRight" (formula "86"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "inEqSimp_subsumption5" (formula "41") (ifseqformula "1"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "greater_literals" (formula "41") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "0,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "41") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "41") (term "0,0,0"))
                                                      (rule "add_literals" (formula "41") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "41") (term "0,0"))
                                                      (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                      (rule "add_literals" (formula "41") (term "0,0"))
                                                      (rule "qeq_literals" (formula "41") (term "0"))
                                                       (builtin "One Step Simplification" (formula "41"))
                                                      (rule "true_left" (formula "41"))
                                                      (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "40"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "43") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "43"))
                                                      (rule "polySimp_mulLiterals" (formula "43") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "43") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "43") (ifseqformula "44"))
                                                      (rule "polySimp_mulComm0" (formula "43") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "43") (term "0"))
                                                      (rule "polySimp_pullOutFactor2" (formula "43") (term "0,0"))
                                                      (rule "add_literals" (formula "43") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "43") (term "0,0"))
                                                      (rule "add_zero_left" (formula "43") (term "0"))
                                                      (rule "elimGcdGeq_antec" (formula "43") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=jdiv(add(mul(begin, Z(neglit(1(#)))), end), Z(6(1(#))))") (inst "elimGcd=Z(6(1(#)))"))
                                                      (rule "times_zero_1" (formula "43") (term "1,0,0,0,0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "43") (term "1,0,1,0"))
                                                      (rule "leq_literals" (formula "43") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "add_zero_right" (formula "43") (term "0,0,0,0"))
                                                      (rule "add_zero_right" (formula "43") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "43") (term "0,0"))
                                                      (rule "add_literals" (formula "43") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                                      (rule "add_literals" (formula "43") (term "0,0"))
                                                      (rule "leq_literals" (formula "43") (term "0"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "14"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "25") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "27"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "28") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                      (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "28"))
                                                      (rule "leq_literals" (formula "14") (term "0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "inEqSimp_exactShadow2" (formula "43") (ifseqformula "55"))
                                                      (rule "greater_literals" (formula "43") (term "0"))
                                                       (builtin "One Step Simplification" (formula "43"))
                                                      (rule "times_zero_1" (formula "43") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "43") (term "0,0"))
                                                      (rule "add_zero_left" (formula "43") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "43"))
                                                      (rule "polySimp_mulLiterals" (formula "43") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "43") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "27"))
                                                      (rule "polySimp_mulComm0" (formula "24") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "24") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "24"))
                                                      (rule "leq_literals" (formula "13") (term "0"))
                                                       (builtin "One Step Simplification" (formula "13"))
                                                      (rule "true_left" (formula "13"))
                                                      (rule "inEqSimp_exactShadow0" (formula "1") (ifseqformula "55"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "greater_literals" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_contradInEq3" (formula "1") (ifseqformula "28"))
                                                      (rule "greater_literals" (formula "1") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,0"))
                                                      (rule "qeq_literals" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                )
                                                (branch "Case 2"
                                                   (rule "expand_inInt" (formula "90"))
                                                   (rule "replace_int_MIN" (formula "90") (term "0,1"))
                                                   (rule "replace_int_MAX" (formula "90") (term "1,0"))
                                                   (rule "replace_known_left" (formula "90") (term "0") (ifseqformula "15"))
                                                    (builtin "One Step Simplification" (formula "90"))
                                                   (rule "inEqSimp_ltRight" (formula "70"))
                                                   (rule "mul_literals" (formula "1") (term "0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0"))
                                                   (rule "inEqSimp_leqRight" (formula "89"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "33") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "26"))
                                                   (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "48"))
                                                   (rule "polySimp_addComm1" (formula "48") (term "0"))
                                                   (rule "jmod_axiom" (formula "4") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                   (rule "jmod_axiom" (formula "58") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "58") (term "1,0"))
                                                   (rule "jmod_axiom" (formula "51") (term "0,1,4,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "51") (term "1,0,1,4,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "51") (term "1,4,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "51") (term "1,4,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "51") (term "1,1,4,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "51") (term "0,1,4,0,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "51") (term "0,0,1,4,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "51") (term "0,0,0,1,4,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "51") (term "0,0,1,4,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "51") (term "0,0,1,4,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "51") (term "4,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "51") (term "0,4,0,1,0"))
                                                   (rule "polySimp_addComm0" (formula "51") (term "0,0,4,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "51") (term "0,4,0,1,0"))
                                                   (rule "add_literals" (formula "51") (term "1,1,0,4,0,1,0"))
                                                   (rule "times_zero_1" (formula "51") (term "1,0,4,0,1,0"))
                                                   (rule "add_zero_right" (formula "51") (term "0,4,0,1,0"))
                                                   (rule "jmod_axiom" (formula "2") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "2") (term "0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                   (rule "jmod_axiom" (formula "42") (term "0,1,2,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "42") (term "1,0,1,2,1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "42") (term "1,2,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "42") (term "1,2,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "42") (term "1,1,2,1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "42") (term "0,1,2,1,0,0,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "42") (term "0,0,1,2,1,0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "42") (term "0,0,0,1,2,1,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "42") (term "0,0,1,2,1,0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "42") (term "0,0,1,2,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "42") (term "2,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "42") (term "0,2,1,0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "42") (term "0,0,2,1,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,2,1,0,0,1,0"))
                                                   (rule "add_literals" (formula "42") (term "1,1,0,2,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "42") (term "1,0,2,1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "42") (term "0,2,1,0,0,1,0"))
                                                   (rule "jmod_axiom" (formula "50") (term "0,1,5,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,5,0"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "1,5,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "1,5,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "1,1,5,0"))
                                                   (rule "polySimp_rightDist" (formula "50") (term "0,1,5,0"))
                                                   (rule "polySimp_mulAssoc" (formula "50") (term "0,0,1,5,0"))
                                                   (rule "polySimp_mulComm0" (formula "50") (term "0,0,0,1,5,0"))
                                                   (rule "polySimp_mulLiterals" (formula "50") (term "0,0,1,5,0"))
                                                   (rule "polySimp_elimOne" (formula "50") (term "0,0,1,5,0"))
                                                   (rule "polySimp_addAssoc" (formula "50") (term "5,0"))
                                                   (rule "polySimp_addAssoc" (formula "50") (term "0,5,0"))
                                                   (rule "polySimp_addComm0" (formula "50") (term "0,0,5,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,5,0"))
                                                   (rule "add_literals" (formula "50") (term "1,1,0,5,0"))
                                                   (rule "times_zero_1" (formula "50") (term "1,0,5,0"))
                                                   (rule "add_zero_right" (formula "50") (term "0,5,0"))
                                                   (rule "jmod_axiom" (formula "3") (term "0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "3") (term "0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                   (rule "jmod_axiom" (formula "48") (term "0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "48") (term "0,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "48") (term "0,0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "48") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "0,0,1,0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "48") (term "0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "48") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "48") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,0"))
                                                   (rule "add_literals" (formula "48") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "48") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "48") (term "0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                   (rule "mul_literals" (formula "26") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "58"))
                                                   (rule "polySimp_mulLiterals" (formula "58") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                   (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "0,1"))
                                                   (rule "mul_literals" (formula "3") (term "0,0,1"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "48"))
                                                   (rule "polySimp_mulLiterals" (formula "48") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "48") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "29"))
                                                   (rule "leq_literals" (formula "31") (term "0"))
                                                    (builtin "One Step Simplification" (formula "31"))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "inEqSimp_subsumption0" (formula "3") (ifseqformula "57"))
                                                   (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                                   (rule "polySimp_mulAssoc" (formula "3") (term "0,1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "0,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "3") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                   (rule "add_literals" (formula "3") (term "0,0"))
                                                   (rule "qeq_literals" (formula "3") (term "0"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "inEqSimp_contradInEq0" (formula "16") (ifseqformula "1"))
                                                   (rule "qeq_literals" (formula "16") (term "0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "closeFalse" (formula "16"))
                                                )
                                             )
                                             (branch "Case 2"
                                                (rule "dismissNonSelectedField" (formula "90") (term "0"))
                                                (rule "inEqSimp_ltRight" (formula "70"))
                                                (rule "times_zero_1" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "25"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                (rule "inEqSimp_homoInEq0" (formula "47"))
                                                (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                (rule "jmod_axiom" (formula "50") (term "0,1,4,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,0,1,4,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "1,4,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "50") (term "1,4,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "1,1,4,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "50") (term "0,1,4,0,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "50") (term "0,0,1,4,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "50") (term "0,0,0,1,4,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "50") (term "0,0,1,4,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "50") (term "0,0,1,4,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "50") (term "4,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "50") (term "0,4,0,1,0"))
                                                (rule "polySimp_addComm0" (formula "50") (term "0,0,4,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,4,0,1,0"))
                                                (rule "add_literals" (formula "50") (term "1,1,0,4,0,1,0"))
                                                (rule "times_zero_1" (formula "50") (term "1,0,4,0,1,0"))
                                                (rule "add_zero_right" (formula "50") (term "0,4,0,1,0"))
                                                (rule "jmod_axiom" (formula "57") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "57") (term "1,0"))
                                                (rule "jmod_axiom" (formula "49") (term "0,1,5,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,0,1,5,0"))
                                                (rule "polySimp_mulComm0" (formula "49") (term "1,5,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "1,5,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "1,1,5,0"))
                                                (rule "polySimp_rightDist" (formula "49") (term "0,1,5,0"))
                                                (rule "polySimp_mulAssoc" (formula "49") (term "0,0,1,5,0"))
                                                (rule "polySimp_mulComm0" (formula "49") (term "0,0,0,1,5,0"))
                                                (rule "polySimp_mulLiterals" (formula "49") (term "0,0,1,5,0"))
                                                (rule "polySimp_elimOne" (formula "49") (term "0,0,1,5,0"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "5,0"))
                                                (rule "polySimp_addAssoc" (formula "49") (term "0,5,0"))
                                                (rule "polySimp_addComm0" (formula "49") (term "0,0,5,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,5,0"))
                                                (rule "add_literals" (formula "49") (term "1,1,0,5,0"))
                                                (rule "times_zero_1" (formula "49") (term "1,0,5,0"))
                                                (rule "add_zero_right" (formula "49") (term "0,5,0"))
                                                (rule "jmod_axiom" (formula "2") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "2") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                (rule "jmod_axiom" (formula "3") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                (rule "jmod_axiom" (formula "41") (term "0,1,2,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "41") (term "1,0,1,2,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "1,2,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "41") (term "1,2,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "41") (term "1,1,2,1,0,0,1,0"))
                                                (rule "polySimp_rightDist" (formula "41") (term "0,1,2,1,0,0,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "41") (term "0,0,0,1,2,1,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "41") (term "0,0,1,2,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "41") (term "2,1,0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "41") (term "0,2,1,0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "41") (term "0,0,2,1,0,0,1,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,2,1,0,0,1,0"))
                                                (rule "add_literals" (formula "41") (term "1,1,0,2,1,0,0,1,0"))
                                                (rule "times_zero_1" (formula "41") (term "1,0,2,1,0,0,1,0"))
                                                (rule "add_zero_right" (formula "41") (term "0,2,1,0,0,1,0"))
                                                (rule "jmod_axiom" (formula "1") (term "0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
                                                (rule "inEqSimp_homoInEq0" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "1") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0,0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "jmod_axiom" (formula "89") (term "1,2,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "89") (term "1,1,2,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "89") (term "2,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "89") (term "0,2,1,0,0"))
                                                (rule "jmod_axiom" (formula "47") (term "0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "1,0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0"))
                                                (rule "polySimp_rightDist" (formula "47") (term "0,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "47") (term "0,0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "47") (term "0,0,0,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "0,0,1,0"))
                                                (rule "polySimp_elimOne" (formula "47") (term "0,0,1,0"))
                                                (rule "polySimp_addComm1" (formula "47") (term "0"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "47") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "47") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,0"))
                                                (rule "add_literals" (formula "47") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "47") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "47") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "25"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                (rule "mul_literals" (formula "25") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "57"))
                                                (rule "polySimp_mulLiterals" (formula "57") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                                                (rule "mul_literals" (formula "2") (term "0,0,1"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "0,1"))
                                                (rule "mul_literals" (formula "1") (term "0,0,1"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "47"))
                                                (rule "polySimp_mulLiterals" (formula "47") (term "0"))
                                                (rule "polySimp_elimOne" (formula "47") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "24"))
                                                (rule "leq_literals" (formula "23") (term "0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "56"))
                                                (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0,0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "2") (term "0,0"))
                                                (rule "polySimp_pullOutFactor2b" (formula "2") (term "0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "2") (term "0,0"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "true_left" (formula "2"))
                                                (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "26"))
                                                (rule "leq_literals" (formula "28") (term "0"))
                                                 (builtin "One Step Simplification" (formula "28"))
                                                (rule "true_left" (formula "28"))
                                                (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "24"))
                                                (rule "leq_literals" (formula "13") (term "0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "true_left" (formula "13"))
                                                (rule "pullOutSelect" (formula "85") (term "0") (inst "selectSK=java_lang_Object_created__0"))
                                                (rule "simplifySelectOfMemset" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfStore" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "simplifySelectOfCreate" (formula "1"))
                                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "66")))
                                                (rule "castDel" (formula "1") (term "0"))
                                                (rule "applyEqReverse" (formula "86") (term "0") (ifseqformula "1"))
                                                 (builtin "One Step Simplification" (formula "86"))
                                                (rule "closeTrue" (formula "86"))
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "Null Reference (newObject = null)"
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "61")))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                        )
                     )
                  )
               )
            )
            (branch "Case 2"
                (builtin "One Step Simplification" (formula "65"))
               (rule "equal_literals" (formula "65") (term "0"))
                (builtin "One Step Simplification" (formula "65"))
               (rule "closeTrue" (formula "65"))
            )
         )
      )
      (branch "Exceptional Post (classify_locally_batched)"
          (builtin "One Step Simplification" (formula "53"))
          (builtin "One Step Simplification" (formula "33"))
         (rule "andLeft" (formula "33"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "1,0") (ifseqformula "33"))
         (rule "andLeft" (formula "34"))
         (rule "andLeft" (formula "35"))
         (rule "andLeft" (formula "34"))
         (rule "andLeft" (formula "36"))
         (rule "notLeft" (formula "34"))
         (rule "close" (formula "38") (ifseqformula "37"))
      )
      (branch "Pre (classify_locally_batched)"
          (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "12")) (ifInst ""  (formula "50")) (ifInst ""  (formula "48")) (ifInst ""  (formula "49")) (ifInst ""  (formula "1")) (ifInst ""  (formula "50")) (ifInst ""  (formula "4")) (ifInst ""  (formula "48")) (ifInst ""  (formula "9")) (ifInst ""  (formula "49")) (ifInst ""  (formula "10")))
         (rule "expand_inInt" (formula "51") (term "1"))
         (rule "expand_inInt" (formula "51") (term "0"))
         (rule "replace_int_MIN" (formula "51") (term "0,1,1"))
         (rule "replace_int_MAX" (formula "51") (term "1,0,1"))
         (rule "replace_int_MAX" (formula "51") (term "1,0,0"))
         (rule "replace_int_MIN" (formula "51") (term "0,1,0"))
         (rule "replace_known_left" (formula "51") (term "0,0") (ifseqformula "5"))
          (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "7")))
         (rule "inEqSimp_ltToLeq" (formula "24") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "51") (term "1"))
         (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "8"))
          (builtin "One Step Simplification" (formula "51"))
         (rule "inEqSimp_leqRight" (formula "51"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "inEqSimp_homoInEq1" (formula "18"))
         (rule "polySimp_addComm1" (formula "18") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,0,0"))
         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0,0"))
         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,0,0"))
         (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0,0"))
         (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,0,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "18"))
         (rule "polySimp_mulComm0" (formula "18") (term "1"))
         (rule "polySimp_rightDist" (formula "18") (term "1"))
         (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
         (rule "mul_literals" (formula "18") (term "0,1"))
         (rule "polySimp_elimOne" (formula "18") (term "1,1"))
         (rule "inEqSimp_subsumption0" (formula "6") (ifseqformula "1"))
         (rule "leq_literals" (formula "6") (term "0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "true_left" (formula "6"))
         (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "1"))
         (rule "qeq_literals" (formula "6") (term "0"))
          (builtin "One Step Simplification" (formula "6"))
         (rule "closeFalse" (formula "6"))
      )
   )
)
)
}
