\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Jun 05 15:23:19 CEST 2022
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , finalFields-finalFields\\:onHeap , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsCheckingOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../../src";

\proofObligation "#Proof Obligation Settings
#Sun Jun 05 15:23:19 CEST 2022
contract=de.wiesler.BucketPointers[de.wiesler.BucketPointers\\:\\:BucketPointers([I,int,int,[I)].JML normal_behavior operation contract.0
name=de.wiesler.BucketPointers[de.wiesler.BucketPointers\\:\\:BucketPointers([I,int,int,[I)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "1" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))
(keyLog "2" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))

(autoModeTime "14944")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre,o,f"))
(rule "expand_inInt" (formula "1") (term "1,0,0,1,0,0,0"))
(rule "expand_inInt" (formula "1") (term "1,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,1,0,0,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "4"))
(rule "notLeft" (formula "4"))
(rule "andLeft" (formula "5"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "7"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "9"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "12"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "13"))
(rule "andLeft" (formula "15"))
(rule "andLeft" (formula "16"))
(rule "andLeft" (formula "15"))
(rule "translateJavaAddInt" (formula "9") (term "3,0"))
(rule "translateJavaAddInt" (formula "10") (term "0"))
(rule "translateJavaMulInt" (formula "13") (term "1"))
(rule "translateJavaMulInt" (formula "14") (term "0"))
(rule "replace_known_right" (formula "7") (term "0") (ifseqformula "19"))
 (builtin "One Step Simplification" (formula "7"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "20"))
 (builtin "One Step Simplification" (formula "2"))
(rule "polySimp_mulComm0" (formula "13") (term "1"))
(rule "polySimp_mulComm0" (formula "14") (term "0"))
(rule "polySimp_addComm0" (formula "9") (term "3,0"))
(rule "polySimp_addComm0" (formula "10") (term "0"))
(rule "disjointDefinition" (formula "18"))
 (builtin "One Step Simplification" (formula "18"))
(rule "notLeft" (formula "18"))
(rule "eqSymm" (formula "18"))
(rule "inEqSimp_commuteLeq" (formula "6"))
(rule "inEqSimp_commuteLeq" (formula "4"))
(rule "inEqSimp_commuteLeq" (formula "15"))
(rule "inEqSimp_commuteLeq" (formula "16"))
(rule "inEqSimp_commuteLeq" (formula "13"))
(rule "inEqSimp_commuteLeq" (formula "14"))
(rule "inEqSimp_commuteLeq" (formula "10"))
(rule "assignment" (formula "21") (term "1"))
 (builtin "One Step Simplification" (formula "21"))
(rule "variableDeclarationAssign" (formula "21") (term "1"))
(rule "variableDeclaration" (formula "21") (term "1") (newnames "self_25"))
(rule "arrayLengthIsAShort" (formula "14") (term "0"))
(rule "expand_inShort" (formula "14"))
(rule "replace_short_MIN" (formula "14") (term "0,1"))
(rule "replace_short_MAX" (formula "14") (term "1,0"))
(rule "andLeft" (formula "14"))
(rule "inEqSimp_commuteLeq" (formula "15"))
(rule "arrayLengthNotNegative" (formula "16") (term "0"))
(rule "arrayLengthNotNegative" (formula "10") (term "0"))
(rule "arrayLengthIsAShort" (formula "11") (term "0"))
(rule "expand_inShort" (formula "11"))
(rule "replace_short_MAX" (formula "11") (term "1,0"))
(rule "replace_short_MIN" (formula "11") (term "0,1"))
(rule "andLeft" (formula "11"))
(rule "inEqSimp_commuteLeq" (formula "12"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "27") (term "1") (inst "#v0=b"))
(rule "variableDeclaration" (formula "27") (term "1") (newnames "b"))
(rule "methodBodyExpand" (formula "27") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
 (builtin "One Step Simplification" (formula "27"))
(rule "variableDeclaration" (formula "27") (term "1") (newnames "__NEW__"))
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "27") (term "1") (inst "#v0=b_1"))
(rule "variableDeclaration" (formula "27") (term "1") (newnames "b_1"))
(rule "allocateInstance" (formula "27"))
 (builtin "One Step Simplification" (formula "28"))
 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "notLeft" (formula "1"))
(rule "blockEmpty" (formula "30") (term "1"))
(rule "assignment" (formula "30") (term "1"))
 (builtin "One Step Simplification" (formula "30"))
(rule "methodBodyExpand" (formula "30") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
 (builtin "One Step Simplification" (formula "30"))
(rule "assignment_write_attribute_this" (formula "30"))
 (builtin "One Step Simplification" (formula "30"))
(rule "methodCallWithinClass" (formula "30") (term "1"))
(rule "methodBodyExpand" (formula "30") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
 (builtin "One Step Simplification" (formula "30"))
(rule "methodCallSuper" (formula "30") (term "1"))
(rule "methodBodyExpand" (formula "30") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
 (builtin "One Step Simplification" (formula "30"))
(rule "methodCallEmpty" (formula "30") (term "1"))
(rule "blockEmpty" (formula "30") (term "1"))
(rule "assignment_write_attribute_this" (formula "30"))
 (builtin "One Step Simplification" (formula "30"))
(rule "assignment_write_attribute_this" (formula "30"))
 (builtin "One Step Simplification" (formula "30"))
(rule "assignment_write_attribute_this" (formula "30"))
 (builtin "One Step Simplification" (formula "30"))
(rule "assignment_write_attribute_this" (formula "30"))
 (builtin "One Step Simplification" (formula "30"))
(rule "methodCallEmpty" (formula "30") (term "1"))
(rule "blockEmpty" (formula "30") (term "1"))
(rule "methodCallReturnIgnoreResult" (formula "30") (term "1"))
(rule "methodCallReturn" (formula "30") (term "1"))
(rule "assignment" (formula "30") (term "1"))
 (builtin "One Step Simplification" (formula "30"))
(rule "methodCallEmpty" (formula "30") (term "1"))
(rule "blockEmpty" (formula "30") (term "1"))
(rule "assignment" (formula "30") (term "1"))
 (builtin "One Step Simplification" (formula "30"))
(rule "blockEmpty" (formula "30") (term "1"))
(rule "variableDeclarationAssign" (formula "30") (term "1"))
(rule "variableDeclaration" (formula "30") (term "1") (newnames "var"))
(rule "assignment" (formula "30") (term "1"))
 (builtin "One Step Simplification" (formula "30"))
(rule "variableDeclarationAssign" (formula "30") (term "1"))
(rule "variableDeclaration" (formula "30") (term "1") (newnames "var_1"))
(rule "assignment" (formula "30") (term "1"))
 (builtin "One Step Simplification" (formula "30"))
(rule "variableDeclarationAssign" (formula "30") (term "1"))
(rule "variableDeclaration" (formula "30") (term "1") (newnames "var_2"))
(rule "assignment" (formula "30") (term "1"))
 (builtin "One Step Simplification" (formula "30"))
(rule "variableDeclarationAssign" (formula "30") (term "1"))
(rule "variableDeclaration" (formula "30") (term "1") (newnames "var_3"))
(rule "assignment" (formula "30") (term "1"))
 (builtin "One Step Simplification" (formula "30"))
(rule "methodBodyExpand" (formula "30") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>,varBefore_<init>,var_1Before_<init>,var_2Before_<init>,var_3Before_<init>,readBefore_<init>,startBefore_<init>,stopBefore_<init>"))
 (builtin "One Step Simplification" (formula "30"))
(rule "methodCallSuper" (formula "30") (term "1"))
(rule "methodBodyExpand" (formula "30") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
 (builtin "One Step Simplification" (formula "30"))
(rule "methodCallEmpty" (formula "30") (term "1"))
(rule "blockEmpty" (formula "30") (term "1"))
(rule "assignment_write_attribute_this" (formula "30"))
 (builtin "One Step Simplification" (formula "30"))
(rule "assignment_write_attribute_this" (formula "30"))
 (builtin "One Step Simplification" (formula "30"))
(rule "assignment_write_attribute_this" (formula "30"))
 (builtin "One Step Simplification" (formula "30"))
 (builtin "Block Contract (Internal)" (formula "30") (newnames "exc_25,heap_Before_BLOCK,savedHeap_Before_BLOCK,o,f"))
(branch "Validity"
    (builtin "One Step Simplification" (formula "31"))
    (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "9")) (ifInst ""  (formula "27")) (ifInst ""  (formula "1")))
   (rule "andLeft" (formula "25"))
   (rule "translateJavaAddInt" (formula "32") (term "1,3,0,1,0,0"))
   (rule "eqSymm" (formula "32") (term "0,0,1,0,1"))
   (rule "translateJavaAddInt" (formula "32") (term "1,3,0,1,0"))
   (rule "translateJavaAddInt" (formula "25") (term "1,3,0"))
   (rule "translateJavaAddInt" (formula "26") (term "1,3,0,0"))
   (rule "polySimp_addComm0" (formula "32") (term "1,3,0,1,0,0"))
   (rule "polySimp_addComm0" (formula "32") (term "1,3,0,1,0"))
   (rule "polySimp_addComm0" (formula "25") (term "1,3,0"))
   (rule "polySimp_addComm0" (formula "26") (term "1,3,0,0"))
   (rule "dismissNonSelectedField" (formula "32") (term "2,3,0,1,0"))
   (rule "dismissNonSelectedField" (formula "32") (term "2,3,0,1,0,0"))
   (rule "dismissNonSelectedField" (formula "25") (term "2,3,0"))
   (rule "dismissNonSelectedField" (formula "26") (term "2,3,0,0"))
   (rule "dismissNonSelectedField" (formula "32") (term "2,3,0,1,0"))
   (rule "dismissNonSelectedField" (formula "32") (term "2,3,0,1,0,0"))
   (rule "dismissNonSelectedField" (formula "25") (term "2,3,0"))
   (rule "dismissNonSelectedField" (formula "26") (term "2,3,0,0"))
   (rule "dismissNonSelectedField" (formula "32") (term "2,3,0,1,0"))
   (rule "dismissNonSelectedField" (formula "32") (term "2,3,0,1,0,0"))
   (rule "dismissNonSelectedField" (formula "25") (term "2,3,0"))
   (rule "dismissNonSelectedField" (formula "26") (term "0"))
   (rule "dismissNonSelectedField" (formula "32") (term "2,3,0,1,0"))
   (rule "dismissNonSelectedField" (formula "32") (term "2,3,0,1,0,0"))
   (rule "dismissNonSelectedField" (formula "25") (term "2,3,0"))
   (rule "dismissNonSelectedField" (formula "26") (term "0"))
   (rule "dismissNonSelectedField" (formula "32") (term "2,3,0,1,0"))
   (rule "dismissNonSelectedField" (formula "32") (term "2,3,0,1,0,0"))
   (rule "dismissNonSelectedField" (formula "25") (term "2,3,0"))
   (rule "dismissNonSelectedField" (formula "26") (term "0"))
   (rule "dismissNonSelectedField" (formula "26") (term "0"))
   (rule "dismissNonSelectedField" (formula "26") (term "0"))
   (rule "variableDeclarationAssign" (formula "32") (term "1"))
   (rule "variableDeclaration" (formula "32") (term "1") (newnames "exc_25_1"))
   (rule "assignment" (formula "32") (term "1"))
    (builtin "One Step Simplification" (formula "32"))
   (rule "emptyStatement" (formula "32") (term "1"))
    (builtin "One Step Simplification" (formula "32"))
   (rule "emptyStatement" (formula "32") (term "1"))
   (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=java_lang_Object_created__0"))
   (rule "simplifySelectOfCreate" (formula "26"))
    (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "29")))
   (rule "castDel" (formula "26") (term "0"))
   (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "26"))
    (builtin "One Step Simplification" (formula "27"))
   (rule "true_left" (formula "27"))
   (rule "hideAuxiliaryEq" (formula "26"))
   (rule "tryEmpty" (formula "31") (term "1"))
   (rule "blockEmptyLabel" (formula "31") (term "1"))
   (rule "blockEmpty" (formula "31") (term "1"))
   (rule "methodCallEmpty" (formula "31") (term "1"))
    (builtin "One Step Simplification" (formula "31"))
   (rule "emptyModality" (formula "31") (term "1"))
   (rule "andRight" (formula "31"))
   (branch "Case 1"
       (builtin "One Step Simplification" (formula "31"))
      (rule "closeTrue" (formula "31"))
   )
   (branch "Case 2"
       (builtin "One Step Simplification" (formula "31"))
      (rule "closeTrue" (formula "31"))
   )
)
(branch "Precondition"
   (rule "andRight" (formula "30"))
   (branch "Case 1"
      (rule "andRight" (formula "30"))
      (branch "Case 1"
          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "9")))
         (rule "closeTrue" (formula "30"))
      )
      (branch "Case 2"
          (builtin "One Step Simplification" (formula "30"))
         (rule "wellFormedStorePrimitive" (formula "30"))
         (rule "wellFormedStorePrimitive" (formula "30"))
         (rule "wellFormedStorePrimitive" (formula "30"))
         (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "22"))
         (rule "leq_literals" (formula "7") (term "0"))
          (builtin "One Step Simplification" (formula "7"))
         (rule "true_left" (formula "7"))
         (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "10"))
         (rule "leq_literals" (formula "12") (term "0"))
          (builtin "One Step Simplification" (formula "12"))
         (rule "true_left" (formula "12"))
         (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "18"))
         (rule "leq_literals" (formula "17") (term "0"))
          (builtin "One Step Simplification" (formula "17"))
         (rule "true_left" (formula "17"))
         (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcd=Z(2(#))"))
         (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "15") (term "1,0,1,0"))
         (rule "leq_literals" (formula "15") (term "0,0"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
         (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
         (rule "add_literals" (formula "15") (term "1,1,0,0"))
         (rule "times_zero_1" (formula "15") (term "1,0,0"))
         (rule "add_zero_right" (formula "15") (term "0,0"))
         (rule "leq_literals" (formula "15") (term "0"))
          (builtin "One Step Simplification" (formula "15"))
         (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "15"))
         (rule "leq_literals" (formula "5") (term "0"))
          (builtin "One Step Simplification" (formula "5"))
         (rule "true_left" (formula "5"))
         (rule "wellFormedStoreObject" (formula "26"))
          (builtin "One Step Simplification" (formula "26"))
         (rule "wellFormedStorePrimitive" (formula "26"))
         (rule "wellFormedCreate" (formula "26"))
         (rule "close" (formula "26") (ifseqformula "2"))
      )
   )
   (branch "Case 2"
      (rule "andRight" (formula "30"))
      (branch "Case 1"
         (rule "andRight" (formula "30"))
         (branch "Case 1"
             (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "26")))
            (rule "closeTrue" (formula "30"))
         )
         (branch "Case 2"
             (builtin "One Step Simplification" (formula "30"))
            (rule "translateJavaAddInt" (formula "30") (term "1,3,0,0"))
            (rule "polySimp_addComm0" (formula "30") (term "1,3,0,0"))
            (rule "dismissNonSelectedField" (formula "30") (term "2,3,0,0"))
            (rule "dismissNonSelectedField" (formula "30") (term "0"))
            (rule "dismissNonSelectedField" (formula "30") (term "0"))
            (rule "dismissNonSelectedField" (formula "30") (term "0"))
            (rule "dismissNonSelectedField" (formula "30") (term "0"))
            (rule "dismissNonSelectedField" (formula "30") (term "0"))
            (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "11"))
            (rule "leq_literals" (formula "13") (term "0"))
             (builtin "One Step Simplification" (formula "13"))
            (rule "true_left" (formula "13"))
            (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "19"))
            (rule "leq_literals" (formula "18") (term "0"))
             (builtin "One Step Simplification" (formula "18"))
            (rule "true_left" (formula "18"))
            (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "20"))
            (rule "leq_literals" (formula "7") (term "0"))
             (builtin "One Step Simplification" (formula "7"))
            (rule "true_left" (formula "7"))
            (rule "elimGcdGeq_antec" (formula "15") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcd=Z(2(#))"))
            (rule "leq_literals" (formula "15") (term "0,0"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "times_zero_1" (formula "15") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "15") (term "1,0,0"))
            (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
            (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "15") (term "0,0"))
            (rule "add_literals" (formula "15") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "15") (term "1,0,0"))
            (rule "add_zero_right" (formula "15") (term "0,0"))
            (rule "leq_literals" (formula "15") (term "0"))
             (builtin "One Step Simplification" (formula "15"))
            (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "15"))
            (rule "leq_literals" (formula "5") (term "0"))
             (builtin "One Step Simplification" (formula "5"))
            (rule "true_left" (formula "5"))
            (rule "pullOutSelect" (formula "26") (term "0") (inst "selectSK=java_lang_Object_created__0"))
            (rule "simplifySelectOfCreate" (formula "1"))
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")))
            (rule "castDel" (formula "1") (term "0"))
            (rule "applyEqReverse" (formula "27") (term "0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "27"))
            (rule "closeTrue" (formula "27"))
         )
      )
      (branch "Case 2"
          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "1")))
         (rule "closeTrue" (formula "30"))
      )
   )
)
(branch "Usage"
    (builtin "One Step Simplification" (formula "31"))
    (builtin "One Step Simplification" (formula "25"))
   (rule "expand_inInt" (formula "25") (term "1,0,0,0,1"))
   (rule "replace_int_MAX" (formula "25") (term "1,0,1,0,0,0,1"))
   (rule "replace_int_MIN" (formula "25") (term "0,1,1,0,0,0,1"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "25"))
   (rule "andLeft" (formula "27"))
   (rule "translateJavaAddInt" (formula "34") (term "1,3,0,1,0"))
   (rule "translateJavaAddInt" (formula "26") (term "1,3,0,0,1"))
   (rule "translateJavaAddInt" (formula "28") (term "1,3,0,0,0"))
   (rule "translateJavaAddInt" (formula "27") (term "1,3,0,0,1,1,0"))
   (rule "translateJavaAddInt" (formula "27") (term "1,3,0,0,1,0"))
   (rule "eqSymm" (formula "27") (term "1,0"))
   (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "25"))
    (builtin "One Step Simplification" (formula "26"))
   (rule "true_left" (formula "26"))
   (rule "polySimp_addComm0" (formula "33") (term "1,3,0,1,0"))
   (rule "polySimp_addComm0" (formula "27") (term "1,3,0,0,0"))
   (rule "polySimp_addComm0" (formula "26") (term "1,3,0,1,1,0"))
   (rule "polySimp_addComm0" (formula "26") (term "1,3,0,0,0,1,0"))
   (rule "dismissNonSelectedField" (formula "33") (term "2,3,0,1,0"))
   (rule "dismissNonSelectedField" (formula "27") (term "2,3,0,0,0"))
   (rule "dismissNonSelectedField" (formula "26") (term "2,3,0,0,0,1,0"))
   (rule "eqSymm" (formula "26") (term "1,0"))
   (rule "dismissNonSelectedField" (formula "33") (term "2,3,0,1,0"))
   (rule "dismissNonSelectedField" (formula "27") (term "2,3,0,0,0"))
   (rule "dismissNonSelectedField" (formula "26") (term "0,1,1,0"))
   (rule "dismissNonSelectedField" (formula "26") (term "2,3,0,0,1,0"))
   (rule "dismissNonSelectedField" (formula "33") (term "2,3,0,1,0"))
   (rule "dismissNonSelectedField" (formula "27") (term "2,3,0,0,0"))
   (rule "dismissNonSelectedField" (formula "26") (term "0,1,1,0"))
   (rule "dismissNonSelectedField" (formula "26") (term "2,3,0,0,1,0"))
   (rule "dismissNonSelectedField" (formula "33") (term "2,3,0,1,0"))
   (rule "dismissNonSelectedField" (formula "27") (term "2,3,0,0,0"))
   (rule "dismissNonSelectedField" (formula "26") (term "0,1,1,0"))
   (rule "dismissNonSelectedField" (formula "26") (term "2,3,0,0,1,0"))
   (rule "dismissNonSelectedField" (formula "33") (term "2,3,0,1,0"))
   (rule "dismissNonSelectedField" (formula "27") (term "2,3,0,0,0"))
   (rule "dismissNonSelectedField" (formula "26") (term "0,1,1,0"))
   (rule "dismissNonSelectedField" (formula "26") (term "2,3,0,0,1,0"))
   (rule "dismissNonSelectedField" (formula "26") (term "0,1,1,0"))
   (rule "dismissNonSelectedField" (formula "26") (term "2,3,0,0,1,0"))
   (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "26") (term "1,1,0,0"))
   (rule "pullOutSelect" (formula "27") (term "0,0") (inst "selectSK=de_wiesler_BucketPointers_bucket_starts_0"))
   (rule "simplifySelectOfStore" (formula "27"))
    (builtin "One Step Simplification" (formula "27"))
   (rule "castDel" (formula "27") (term "0"))
   (rule "applyEq" (formula "26") (term "3,0,0,1,0") (ifseqformula "27"))
   (rule "applyEq" (formula "34") (term "3,0,1,0") (ifseqformula "27"))
   (rule "eqSymm" (formula "26") (term "1,0"))
   (rule "commute_and_2" (formula "26") (term "0,0"))
   (rule "elim_double_block_2" (formula "34") (term "1"))
   (rule "commute_and" (formula "26") (term "1,0,0,0"))
   (rule "shift_paren_and" (formula "26") (term "0,0,0"))
   (rule "commute_and" (formula "26") (term "0,0,0,0"))
   (rule "ifUnfold" (formula "34") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "34") (term "1") (newnames "x"))
   (rule "inequality_comparison_simple" (formula "34") (term "1"))
    (builtin "One Step Simplification" (formula "34"))
   (rule "replace_known_left" (formula "34") (term "0,0,1,0") (ifseqformula "25"))
    (builtin "One Step Simplification" (formula "34"))
   (rule "ifSplit" (formula "34"))
   (branch "if x true"
       (builtin "One Step Simplification" (formula "35"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch "if x false"
       (builtin "One Step Simplification" (formula "35"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "blockEmpty" (formula "34") (term "1"))
      (rule "assignment_write_attribute_this" (formula "34"))
       (builtin "One Step Simplification" (formula "34"))
      (rule "for_to_while" (formula "34") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
      (rule "variableDeclarationAssign" (formula "34") (term "1"))
      (rule "variableDeclaration" (formula "34") (term "1") (newnames "bucket"))
      (rule "assignment" (formula "34") (term "1"))
       (builtin "One Step Simplification" (formula "34"))
      (rule "loopScopeInvDia" (formula "34") (term "1") (newnames "bucket_0,o,f") (inst "#x=x_1") (inst "#variant=x") (inst "#permissionsBefore_LOOP=h_2") (inst "#savedHeapBefore_LOOP=h_1") (inst "#heapBefore_LOOP=h") (inst "anon_permissions_LOOP=anon_permissions_LOOP_0") (inst "anon_savedHeap_LOOP=anon_savedHeap_LOOP_0") (inst "anon_heap_LOOP=anon_heap_LOOP_0"))
      (branch "Invariant Initially Valid"
         (rule "closeTrue" (formula "34"))
      )
      (branch "Invariant Preserved and Used"
          (builtin "One Step Simplification" (formula "35"))
         (rule "expand_inInt" (formula "35") (term "1,0,0,1,0"))
         (rule "replace_int_MAX" (formula "35") (term "1,0,1,0,0,1,0"))
         (rule "replace_int_MIN" (formula "35") (term "0,1,1,0,0,1,0"))
         (rule "impRight" (formula "35"))
         (rule "andLeft" (formula "1"))
         (rule "andLeft" (formula "1"))
         (rule "translateJavaMulInt" (formula "38") (term "0,2,1,0,1,0,1,0"))
         (rule "translateJavaSubInt" (formula "38") (term "0,1,1,0,1"))
         (rule "translateJavaSubInt" (formula "38") (term "0,1,1,0"))
         (rule "translateJavaSubInt" (formula "3") (term "2,1,0,0,0,0,1,1,0"))
         (rule "translateJavaSubInt" (formula "3") (term "2,1,0,0,0,0,1,0"))
         (rule "translateJavaAddInt" (formula "3") (term "0,2,0,0,0,1,1,0"))
         (rule "translateJavaSubInt" (formula "3") (term "2,1,0,1,0,0,1,1,0"))
         (rule "translateJavaSubInt" (formula "3") (term "2,1,0,1,1,1,0"))
         (rule "translateJavaAddInt" (formula "3") (term "0,2,0,0,1,0,1,1,0"))
         (rule "translateJavaSubInt" (formula "3") (term "2,1,0,1,0,1,0,1,1,0"))
         (rule "translateJavaSubInt" (formula "3") (term "2,1,0,0,1,0,1,0"))
         (rule "translateJavaSubInt" (formula "3") (term "2,1,0,0,0,1,0,1,1,0"))
         (rule "translateJavaSubInt" (formula "38") (term "2,1,0,1,0,1,0"))
         (rule "translateJavaMulInt" (formula "3") (term "0,2,1,0,0,0,0,1,1,0"))
         (rule "translateJavaMulInt" (formula "3") (term "0,2,1,0,0,0,0,1,0"))
         (rule "translateJavaMulInt" (formula "3") (term "0,2,1,0,1,0,0,1,1,0"))
         (rule "translateJavaMulInt" (formula "3") (term "0,2,1,0,1,1,1,0"))
         (rule "translateJavaMulInt" (formula "3") (term "0,2,1,0,1,0,1,0,1,1,0"))
         (rule "translateJavaMulInt" (formula "3") (term "0,2,1,0,0,1,0,1,0"))
         (rule "translateJavaMulInt" (formula "3") (term "0,2,1,0,0,0,1,0,1,1,0"))
         (rule "translateJavaSubInt" (formula "3") (term "0,0,1,1,0"))
         (rule "translateJavaSubInt" (formula "3") (term "0,1,0,1,1,0"))
         (rule "translateJavaSubInt" (formula "3") (term "0,1,1,0"))
         (rule "polySimp_elimSub" (formula "38") (term "0,1,1,0,1"))
         (rule "polySimp_elimSub" (formula "38") (term "0,1,1,0"))
         (rule "polySimp_elimSub" (formula "38") (term "2,1,0,1,0,1,0"))
         (rule "mul_literals" (formula "38") (term "1,2,1,0,1,0,1,0"))
         (rule "polySimp_elimSub" (formula "3") (term "2,1,0,0,0,0,1,0"))
         (rule "mul_literals" (formula "3") (term "1,2,1,0,0,0,0,1,0"))
         (rule "polySimp_elimSub" (formula "3") (term "2,1,0,1,1,1,0"))
         (rule "mul_literals" (formula "3") (term "1,2,1,0,1,1,1,0"))
         (rule "polySimp_elimSub" (formula "3") (term "2,1,0,0,1,0,1,0"))
         (rule "mul_literals" (formula "3") (term "1,2,1,0,0,1,0,1,0"))
         (rule "polySimp_elimSub" (formula "3") (term "0,1,1,0"))
         (rule "polySimp_elimSub" (formula "3") (term "0,0,1,0,1,1,0"))
         (rule "polySimp_elimSub" (formula "3") (term "2,1,0,1,0,0,1,1,0"))
         (rule "mul_literals" (formula "3") (term "1,2,1,0,1,0,0,1,1,0"))
         (rule "polySimp_elimSub" (formula "3") (term "2,1,0,0,0,0,1,1,0"))
         (rule "mul_literals" (formula "3") (term "1,2,1,0,0,0,0,1,1,0"))
         (rule "polySimp_elimSub" (formula "3") (term "2,1,0,0,1,0,0,1,0,1,1,0"))
         (rule "mul_literals" (formula "3") (term "1,2,1,0,0,1,0,0,1,0,1,1,0"))
         (rule "polySimp_elimSub" (formula "3") (term "2,1,0,0,0,0,1,0,1,1,0"))
         (rule "mul_literals" (formula "3") (term "1,2,1,0,0,0,0,1,0,1,1,0"))
         (rule "polySimp_elimSub" (formula "3") (term "0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "38") (term "0,2,1,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "3") (term "0,2,1,0,0,0,0,1,0"))
         (rule "polySimp_mulComm0" (formula "3") (term "0,2,1,0,1,1,1,0"))
         (rule "polySimp_mulComm0" (formula "3") (term "0,2,1,0,0,1,0,1,0"))
         (rule "polySimp_mulComm0" (formula "3") (term "0,2,1,0,0,1,0,0,1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "3") (term "0,2,1,0,0,0,0,1,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "3") (term "0,2,1,0,0,1,0,0,1,1,0"))
         (rule "polySimp_mulComm0" (formula "3") (term "0,2,1,0,0,0,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "38") (term "0,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "38") (term "0,1,1,0"))
         (rule "polySimp_addComm0" (formula "3") (term "0,2,0,0,0,1,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "3") (term "0,2,0,0,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "38") (term "2,1,0,1,0,1,0"))
         (rule "polySimp_addComm0" (formula "3") (term "2,1,0,0,0,0,1,0"))
         (rule "polySimp_addComm0" (formula "3") (term "2,1,0,1,1,1,0"))
         (rule "polySimp_addComm0" (formula "3") (term "2,1,0,0,1,0,1,0"))
         (rule "polySimp_addComm0" (formula "3") (term "2,1,0,0,1,0,0,1,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "3") (term "2,1,0,0,0,0,1,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "3") (term "2,1,0,0,1,0,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "3") (term "2,1,0,0,0,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "3") (term "0,0,1,0,1,1,0"))
         (rule "polySimp_addComm0" (formula "3") (term "0,0,1,1,0"))
         (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "3") (term "1,1,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "1"))
         (rule "inEqSimp_commuteLeq" (formula "2"))
         (rule "pullOutSelect" (formula "38") (term "0,1,0,1,0,1,0") (inst "selectSK=de_wiesler_BucketPointers_buffer_0"))
         (rule "applyEq" (formula "4") (term "0,1,0,0,1,0,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "4") (term "0,1,0,1,0,0,1,0,1,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "4") (term "0,1,0,1,1,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "4") (term "0,1,0,0,0,0,0,1,0,1,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "4") (term "0,1,0,0,0,0,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "4") (term "0,1,0,1,0,0,1,1,0") (ifseqformula "1"))
         (rule "applyEq" (formula "4") (term "0,1,0,0,0,0,0,1,1,0") (ifseqformula "1"))
         (rule "simplifySelectOfStore" (formula "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "castDel" (formula "1") (term "0"))
         (rule "applyEqReverse" (formula "4") (term "0,1,0,0,1,0,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "39") (term "0,1,0,1,0,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "4") (term "0,1,0,1,0,0,1,0,1,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "4") (term "0,1,0,1,1,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "4") (term "0,1,0,0,0,0,0,1,0,1,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "4") (term "0,1,0,0,0,0,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "4") (term "0,1,0,1,0,0,1,1,0") (ifseqformula "1"))
         (rule "applyEqReverse" (formula "4") (term "0,1,0,0,0,0,0,1,1,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_1"))
         (rule "commute_and" (formula "3") (term "0,0,0"))
         (rule "commute_and" (formula "3") (term "1,0,0"))
         (rule "commute_and" (formula "3") (term "0,1,0"))
         (rule "shift_paren_and" (formula "3") (term "0,0"))
         (rule "commute_and_2" (formula "3") (term "0,0,0"))
         (rule "equalityToSeqGetAndSeqLenLeft" (formula "31") (inst "iv=iv"))
         (rule "andLeft" (formula "31"))
         (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
          (builtin "One Step Simplification" (formula "32"))
         (rule "true_left" (formula "32"))
         (rule "applyEq" (formula "31") (term "0,0") (ifseqformula "32"))
          (builtin "One Step Simplification" (formula "31"))
         (rule "true_left" (formula "31"))
         (rule "ifElseUnfold" (formula "38") (term "1") (inst "#boolv=x_2"))
         (rule "variableDeclaration" (formula "38") (term "1") (newnames "x_2"))
         (rule "less_than_comparison_simple" (formula "38") (term "1"))
          (builtin "One Step Simplification" (formula "38"))
         (rule "ifElseSplit" (formula "38"))
         (branch "if x_2 true"
             (builtin "Block Contract (Internal)" (formula "39") (newnames "exc_26,heap_Before_BLOCK_0,savedHeap_Before_BLOCK_0,o,f"))
            (branch "Validity"
                (builtin "One Step Simplification" (formula "1"))
                (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "14")) (ifInst ""  (formula "36")) (ifInst ""  (formula "6")))
                (builtin "One Step Simplification" (formula "40"))
               (rule "andLeft" (formula "34"))
               (rule "eqSymm" (formula "41") (term "0,0,1,0,1"))
               (rule "dismissNonSelectedField" (formula "35") (term "0,0"))
               (rule "dismissNonSelectedField" (formula "35") (term "0,0"))
               (rule "dismissNonSelectedField" (formula "35") (term "0,0"))
               (rule "dismissNonSelectedField" (formula "35") (term "0,0"))
               (rule "dismissNonSelectedField" (formula "35") (term "0,0"))
               (rule "variableDeclarationAssign" (formula "41") (term "1"))
               (rule "variableDeclaration" (formula "41") (term "1") (newnames "exc_26_1"))
               (rule "assignment" (formula "41") (term "1"))
                (builtin "One Step Simplification" (formula "41"))
               (rule "emptyStatement" (formula "41") (term "1"))
                (builtin "One Step Simplification" (formula "41"))
               (rule "emptyStatement" (formula "41") (term "1"))
               (rule "pullOutSelect" (formula "35") (term "0,0") (inst "selectSK=java_lang_Object_created__0"))
               (rule "simplifySelectOfCreate" (formula "35"))
                (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "38")))
               (rule "castDel" (formula "35") (term "0"))
               (rule "applyEqReverse" (formula "36") (term "0,0") (ifseqformula "35"))
                (builtin "One Step Simplification" (formula "36"))
               (rule "true_left" (formula "36"))
               (rule "hideAuxiliaryEq" (formula "35"))
               (rule "tryEmpty" (formula "40") (term "1"))
               (rule "blockEmptyLabel" (formula "40") (term "1"))
               (rule "blockEmpty" (formula "40") (term "1"))
               (rule "methodCallEmpty" (formula "40") (term "1"))
                (builtin "One Step Simplification" (formula "40"))
               (rule "emptyModality" (formula "40") (term "1"))
               (rule "andRight" (formula "40"))
               (branch "Case 1"
                   (builtin "One Step Simplification" (formula "40"))
                  (rule "closeTrue" (formula "40"))
               )
               (branch "Case 2"
                   (builtin "One Step Simplification" (formula "40"))
                  (rule "closeTrue" (formula "40"))
               )
            )
            (branch "Precondition"
               (rule "andRight" (formula "39"))
               (branch "Case 1"
                  (rule "andRight" (formula "39"))
                  (branch "Case 1"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "14")))
                     (rule "closeTrue" (formula "39"))
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "39"))
                     (rule "wellFormedAnon" (formula "39"))
                     (rule "replace_known_left" (formula "39") (term "1") (ifseqformula "5"))
                      (builtin "One Step Simplification" (formula "39"))
                     (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_homoInEq0" (formula "4") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,1,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,1,0,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "4") (term "0,0,1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "0,0,0,1,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0,0,1,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,1,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,1,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,1,1,0"))
                     (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "25"))
                     (rule "leq_literals" (formula "24") (term "0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "16"))
                     (rule "leq_literals" (formula "18") (term "0"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0"))
                     (rule "qeq_literals" (formula "3") (term "0"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "24"))
                     (rule "leq_literals" (formula "11") (term "0"))
                      (builtin "One Step Simplification" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcd=Z(2(#))"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "19") (term "0,0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
                     (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                     (rule "add_literals" (formula "19") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "19") (term "1,0,0"))
                     (rule "add_zero_right" (formula "19") (term "0,0"))
                     (rule "leq_literals" (formula "19") (term "0"))
                      (builtin "One Step Simplification" (formula "19"))
                     (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "19"))
                     (rule "leq_literals" (formula "9") (term "0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "wellFormedStoreObject" (formula "34"))
                      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "32")))
                     (rule "wellFormedStorePrimitive" (formula "34") (term "0"))
                     (rule "wellFormedStorePrimitive" (formula "34") (term "0"))
                     (rule "wellFormedStorePrimitive" (formula "34") (term "0"))
                     (rule "wellFormedStorePrimitive" (formula "34") (term "0"))
                     (rule "wellFormedCreate" (formula "34") (term "0"))
                     (rule "replace_known_left" (formula "34") (term "0") (ifseqformula "6"))
                      (builtin "One Step Simplification" (formula "34"))
                     (rule "dismissNonSelectedField" (formula "34") (term "0"))
                     (rule "dismissNonSelectedField" (formula "34") (term "0"))
                     (rule "dismissNonSelectedField" (formula "34") (term "0"))
                     (rule "dismissNonSelectedField" (formula "34") (term "0"))
                     (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=java_lang_Object_created__0"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                     (rule "castDel" (formula "1") (term "1,0"))
                     (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                     (rule "replace_known_right" (formula "1") (term "1,0,0") (ifseqformula "33"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                     (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "1"))
                     (rule "close" (formula "35") (ifseqformula "11"))
                  )
               )
               (branch "Case 2"
                  (rule "andRight" (formula "39"))
                  (branch "Case 1"
                     (rule "andRight" (formula "39"))
                     (branch "Case 1"
                         (builtin "One Step Simplification" (formula "1"))
                         (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "35")))
                        (rule "closeTrue" (formula "39"))
                     )
                     (branch "Case 2"
                         (builtin "One Step Simplification" (formula "1"))
                         (builtin "One Step Simplification" (formula "39"))
                        (rule "orRight" (formula "39"))
                        (rule "dismissNonSelectedField" (formula "39") (term "0"))
                        (rule "dismissNonSelectedField" (formula "39") (term "0"))
                        (rule "dismissNonSelectedField" (formula "39") (term "0"))
                        (rule "dismissNonSelectedField" (formula "39") (term "0"))
                        (rule "dismissNonSelectedField" (formula "39") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_homoInEq0" (formula "4") (term "1,1,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,1,0,1,1,0"))
                        (rule "polySimp_mulAssoc" (formula "4") (term "0,0,1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "0,0,0,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0,0,1,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,1,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1,1,1,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,1,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,1,1,0"))
                        (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "27"))
                        (rule "leq_literals" (formula "12") (term "0"))
                         (builtin "One Step Simplification" (formula "12"))
                        (rule "true_left" (formula "12"))
                        (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0"))
                        (rule "add_literals" (formula "3") (term "0,0"))
                        (rule "qeq_literals" (formula "3") (term "0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "14"))
                        (rule "leq_literals" (formula "16") (term "0"))
                         (builtin "One Step Simplification" (formula "16"))
                        (rule "true_left" (formula "16"))
                        (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "22"))
                        (rule "leq_literals" (formula "21") (term "0"))
                         (builtin "One Step Simplification" (formula "21"))
                        (rule "true_left" (formula "21"))
                        (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcd=Z(2(#))"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                        (rule "leq_literals" (formula "19") (term "0,0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0"))
                        (rule "add_literals" (formula "19") (term "0,0"))
                        (rule "leq_literals" (formula "19") (term "0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "19"))
                        (rule "leq_literals" (formula "9") (term "0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "pullOutSelect" (formula "34") (term "0") (inst "selectSK=java_lang_Object_created__0"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                        (rule "castDel" (formula "1") (term "0"))
                        (rule "applyEqReverse" (formula "35") (term "0") (ifseqformula "1"))
                         (builtin "One Step Simplification" (formula "35"))
                        (rule "closeTrue" (formula "35"))
                     )
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "6")))
                     (rule "closeTrue" (formula "39"))
                  )
               )
            )
            (branch "Usage"
                (builtin "One Step Simplification" (formula "1"))
                (builtin "One Step Simplification" (formula "40"))
                (builtin "One Step Simplification" (formula "34"))
               (rule "andLeft" (formula "34"))
               (rule "andLeft" (formula "35"))
               (rule "andLeft" (formula "34"))
               (rule "andLeft" (formula "36"))
               (rule "translateJavaAddInt" (formula "38") (term "0,2,0"))
               (rule "translateJavaAddInt" (formula "37") (term "0,2,1"))
               (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "34"))
                (builtin "One Step Simplification" (formula "35"))
               (rule "true_left" (formula "35"))
               (rule "polySimp_addComm0" (formula "37") (term "0,2,0"))
               (rule "polySimp_addComm0" (formula "36") (term "0,2,1"))
               (rule "inEqSimp_commuteLeq" (formula "35"))
               (rule "inEqSimp_commuteLeq" (formula "37"))
               (rule "inEqSimp_commuteLeq" (formula "36"))
               (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_0"))
               (rule "applyEq" (formula "37") (term "1") (ifseqformula "35"))
               (rule "simplifySelectOfAnon" (formula "35"))
                (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "43")))
               (rule "dismissNonSelectedField" (formula "35") (term "0,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "35") (term "2,0"))
               (rule "elementOfArrayRangeConcrete" (formula "35") (term "0,0,0"))
               (rule "eqSymm" (formula "35") (term "0,0,0,0,0"))
               (rule "replace_known_right" (formula "35") (term "0,0,0,0,0") (ifseqformula "41"))
                (builtin "One Step Simplification" (formula "35"))
               (rule "dismissNonSelectedField" (formula "35") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "35") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "35") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "35") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "35") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "35") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "35") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "35") (term "0,0,0,0"))
               (rule "ifthenelse_negated" (formula "35") (term "0"))
               (rule "pullOutSelect" (formula "38") (term "1") (inst "selectSK=arr_1"))
               (rule "applyEq" (formula "37") (term "0") (ifseqformula "38"))
               (rule "simplifySelectOfAnon" (formula "38"))
                (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "44")))
               (rule "dismissNonSelectedField" (formula "38") (term "0,0,1,0,0"))
               (rule "dismissNonSelectedField" (formula "38") (term "2,0"))
               (rule "elementOfArrayRangeConcrete" (formula "38") (term "0,0,0"))
               (rule "eqSymm" (formula "38") (term "0,0,0,0,0"))
               (rule "replace_known_right" (formula "38") (term "0,0,0,0,0") (ifseqformula "42"))
                (builtin "One Step Simplification" (formula "38"))
               (rule "ifthenelse_negated" (formula "38") (term "0"))
               (rule "dismissNonSelectedField" (formula "38") (term "0,0,0"))
               (rule "dismissNonSelectedField" (formula "38") (term "1,0"))
               (rule "dismissNonSelectedField" (formula "38") (term "0,0,0"))
               (rule "dismissNonSelectedField" (formula "38") (term "1,0"))
               (rule "dismissNonSelectedField" (formula "38") (term "0,0,0"))
               (rule "dismissNonSelectedField" (formula "38") (term "1,0"))
               (rule "dismissNonSelectedField" (formula "38") (term "0,0,0"))
               (rule "dismissNonSelectedField" (formula "38") (term "1,0"))
               (rule "pullOutSelect" (formula "39") (term "0") (inst "selectSK=arr_2"))
               (rule "simplifySelectOfAnon" (formula "39"))
                (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "45")))
               (rule "dismissNonSelectedField" (formula "39") (term "2,0"))
               (rule "elementOfArrayRangeConcrete" (formula "39") (term "0,0,0"))
               (rule "eqSymm" (formula "39") (term "0,0,0,0,0"))
               (rule "replace_known_right" (formula "39") (term "0,0,0,0,0") (ifseqformula "43"))
                (builtin "One Step Simplification" (formula "39"))
               (rule "dismissNonSelectedField" (formula "39") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "39") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "39") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "39") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "39") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "39") (term "0,0,0,0"))
               (rule "dismissNonSelectedField" (formula "39") (term "2,0"))
               (rule "dismissNonSelectedField" (formula "39") (term "0,0,0,0"))
               (rule "ifthenelse_negated" (formula "39") (term "0"))
               (rule "dismissNonSelectedField" (formula "39") (term "0,0,0"))
               (rule "pullOutSelect" (formula "35") (term "1,0") (inst "selectSK=arr_3"))
               (rule "simplifySelectOfCreate" (formula "35"))
                (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "43")))
               (rule "applyEqReverse" (formula "36") (term "1,0") (ifseqformula "35"))
               (rule "hideAuxiliaryEq" (formula "35"))
               (rule "pullOutSelect" (formula "35") (term "0,0,0") (inst "selectSK=java_lang_Object_created__0"))
               (rule "applyEq" (formula "39") (term "0,0,0") (ifseqformula "35"))
               (rule "applyEq" (formula "40") (term "0,0,0") (ifseqformula "35"))
               (rule "simplifySelectOfCreate" (formula "35"))
                (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "43")))
               (rule "castDel" (formula "35") (term "1,0"))
               (rule "sortsDisjointModuloNull" (formula "35") (term "0,0"))
               (rule "replace_known_right" (formula "35") (term "1,0,0") (ifseqformula "46"))
                (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "43")))
               (rule "applyEqReverse" (formula "39") (term "0,0,0") (ifseqformula "35"))
               (rule "applyEqReverse" (formula "40") (term "0,0,0") (ifseqformula "35"))
               (rule "applyEqReverse" (formula "36") (term "0,0,0") (ifseqformula "35"))
               (rule "hideAuxiliaryEq" (formula "35"))
               (rule "replace_known_left" (formula "38") (term "0,0") (ifseqformula "8"))
                (builtin "One Step Simplification" (formula "38"))
               (rule "simplifySelectOfCreate" (formula "38"))
                (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "42")))
               (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "38"))
               (rule "applyEqReverse" (formula "37") (term "0") (ifseqformula "38"))
               (rule "hideAuxiliaryEq" (formula "38"))
               (rule "replace_known_left" (formula "35") (term "0,0") (ifseqformula "8"))
                (builtin "One Step Simplification" (formula "35"))
               (rule "applyEqReverse" (formula "36") (term "0") (ifseqformula "35"))
               (rule "applyEqReverse" (formula "37") (term "1") (ifseqformula "35"))
               (rule "hideAuxiliaryEq" (formula "35"))
               (rule "replace_known_left" (formula "37") (term "0,0") (ifseqformula "8"))
                (builtin "One Step Simplification" (formula "37"))
               (rule "simplifySelectOfCreate" (formula "37"))
                (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "40")))
               (rule "applyEqReverse" (formula "38") (term "0") (ifseqformula "37"))
               (rule "hideAuxiliaryEq" (formula "37"))
               (rule "elim_double_block_2" (formula "43") (term "1"))
               (rule "ifUnfold" (formula "43") (term "1") (inst "#boolv=x_2"))
               (rule "variableDeclaration" (formula "43") (term "1") (newnames "x_3"))
               (rule "inequality_comparison_simple" (formula "43") (term "1"))
                (builtin "One Step Simplification" (formula "43"))
               (rule "replace_known_left" (formula "43") (term "0,0,1,0") (ifseqformula "34"))
                (builtin "One Step Simplification" (formula "43"))
               (rule "ifSplit" (formula "43"))
               (branch "if x_3 true"
                   (builtin "One Step Simplification" (formula "44"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "if x_3 false"
                   (builtin "One Step Simplification" (formula "44"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "blockEmpty" (formula "43") (term "1"))
                  (rule "variableDeclarationAssign" (formula "43") (term "1"))
                  (rule "variableDeclaration" (formula "43") (term "1") (newnames "start"))
                  (rule "methodCallWithAssignmentUnfoldArguments" (formula "43") (term "1"))
                  (rule "variableDeclarationAssign" (formula "43") (term "1"))
                  (rule "variableDeclaration" (formula "43") (term "1") (newnames "var_4"))
                  (rule "assignment_array2" (formula "43"))
                  (branch "Normal Execution (var != null)"
                      (builtin "One Step Simplification" (formula "43"))
                     (rule "replaceKnownSelect_taclet20112_3" (formula "43") (term "0,1,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet20112_12" (formula "43") (term "0,1,0"))
                      (builtin "Use Operation Contract" (formula "43") (newnames "heapBefore_align_to_next_block,result_21,exc_27") (contract "de.wiesler.Buffers[de.wiesler.Buffers::align_to_next_block(int)].JML normal_behavior operation contract.0"))
                     (branch "Post (align_to_next_block)"
                         (builtin "One Step Simplification" (formula "38"))
                         (builtin "One Step Simplification" (formula "44"))
                        (rule "expand_inInt" (formula "38") (term "0,1,0"))
                        (rule "replace_int_MIN" (formula "38") (term "0,1,0,1,0"))
                        (rule "replace_int_MAX" (formula "38") (term "1,0,0,1,0"))
                        (rule "andLeft" (formula "38"))
                        (rule "andLeft" (formula "38"))
                        (rule "andLeft" (formula "38"))
                        (rule "andLeft" (formula "38"))
                        (rule "eqSymm" (formula "40"))
                        (rule "inEqSimp_commuteLeq" (formula "39"))
                        (rule "assignment" (formula "47") (term "1"))
                         (builtin "One Step Simplification" (formula "47"))
                        (rule "blockEmpty" (formula "47") (term "1"))
                        (rule "variableDeclarationAssign" (formula "47") (term "1"))
                        (rule "variableDeclaration" (formula "47") (term "1") (newnames "stop"))
                        (rule "methodCallWithAssignmentUnfoldArguments" (formula "47") (term "1"))
                        (rule "variableDeclarationAssign" (formula "47") (term "1"))
                        (rule "variableDeclaration" (formula "47") (term "1") (newnames "var_5"))
                        (rule "eval_order_array_access5" (formula "47") (term "1") (inst "#v1=x_2") (inst "#ar1=x_arr"))
                        (rule "variableDeclarationAssign" (formula "47") (term "1"))
                        (rule "variableDeclaration" (formula "47") (term "1") (newnames "x_arr"))
                        (rule "assignment" (formula "47") (term "1"))
                         (builtin "One Step Simplification" (formula "47"))
                        (rule "variableDeclarationAssign" (formula "47") (term "1"))
                        (rule "variableDeclaration" (formula "47") (term "1") (newnames "x_4"))
                        (rule "assignmentAdditionInt" (formula "47") (term "1"))
                        (branch "Overflow check"
                            (builtin "One Step Simplification" (formula "47"))
                           (rule "expand_inInt" (formula "47"))
                           (rule "replace_int_MIN" (formula "47") (term "0,1"))
                           (rule "replace_int_MAX" (formula "47") (term "1,0"))
                           (rule "polySimp_addComm0" (formula "47") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "47") (term "1,1"))
                           (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_homoInEq0" (formula "4") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1,0,1,1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "0,1,0,1,1,0"))
                           (rule "polySimp_mulAssoc" (formula "4") (term "0,0,1,0,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "0,0,0,1,0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,0,1,1,0"))
                           (rule "polySimp_elimOne" (formula "4") (term "0,0,1,0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,1,1,0"))
                           (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,1,0"))
                           (rule "inEqSimp_homoInEq0" (formula "47") (term "0"))
                           (rule "polySimp_mulComm0" (formula "47") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "47") (term "1,0,0"))
                           (rule "mul_literals" (formula "47") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "47") (term "0,0"))
                           (rule "add_literals" (formula "47") (term "0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "47") (term "1"))
                           (rule "mul_literals" (formula "47") (term "1,0,1"))
                           (rule "polySimp_addComm1" (formula "47") (term "0,1"))
                           (rule "add_literals" (formula "47") (term "0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,0,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,1,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "1,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1,1,1,0"))
                           (rule "polySimp_rightDist" (formula "4") (term "0,1,1,1,0"))
                           (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,1,1,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "47") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "47") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "47") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1"))
                           (rule "mul_literals" (formula "47") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                           (rule "add_literals" (formula "3") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "3") (term "1,0,0"))
                           (rule "add_zero_right" (formula "3") (term "0,0"))
                           (rule "qeq_literals" (formula "3") (term "0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "inEqSimp_subsumption1" (formula "46") (term "1") (ifseqformula "2"))
                           (rule "leq_literals" (formula "46") (term "0,1"))
                            (builtin "One Step Simplification" (formula "46"))
                           (rule "inEqSimp_leqRight" (formula "46"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "25"))
                           (rule "leq_literals" (formula "24") (term "0"))
                            (builtin "One Step Simplification" (formula "24"))
                           (rule "true_left" (formula "24"))
                           (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "26"))
                           (rule "leq_literals" (formula "12") (term "0"))
                            (builtin "One Step Simplification" (formula "12"))
                           (rule "true_left" (formula "12"))
                           (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "15"))
                           (rule "leq_literals" (formula "17") (term "0"))
                            (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                           (rule "leq_literals" (formula "3") (term "0"))
                            (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcd=Z(2(#))"))
                           (rule "add_zero_right" (formula "19") (term "0,0,0,1,0"))
                           (rule "leq_literals" (formula "19") (term "0,0"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                           (rule "mul_literals" (formula "19") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                           (rule "add_literals" (formula "19") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0"))
                           (rule "add_zero_right" (formula "19") (term "0,0"))
                           (rule "leq_literals" (formula "19") (term "0"))
                            (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "19"))
                           (rule "leq_literals" (formula "9") (term "0"))
                            (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "19"))
                           (rule "polySimp_mulAssoc" (formula "21") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "21") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                           (rule "elimGcdLeq_antec" (formula "21") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcd=Z(2(#))"))
                           (rule "neg_literal" (formula "21") (term "0,0,0,0,0,1,0"))
                           (rule "leq_literals" (formula "21") (term "0,0"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
                           (rule "add_literals" (formula "21") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                           (rule "add_literals" (formula "21") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "21") (term "1,0,0"))
                           (rule "add_zero_right" (formula "21") (term "0,0"))
                           (rule "qeq_literals" (formula "21") (term "0"))
                            (builtin "One Step Simplification" (formula "21"))
                           (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "21"))
                           (rule "leq_literals" (formula "8") (term "0"))
                            (builtin "One Step Simplification" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "15"))
                           (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "23") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                           (rule "polySimp_elimOne" (formula "23") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "23"))
                           (rule "leq_literals" (formula "8") (term "0"))
                            (builtin "One Step Simplification" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "12"))
                           (rule "polySimp_rightDist" (formula "13") (term "0,0"))
                           (rule "mul_literals" (formula "13") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "13") (term "0"))
                           (rule "add_literals" (formula "13") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "13"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                           (rule "polySimp_elimOne" (formula "13") (term "0"))
                           (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "20"))
                           (rule "leq_literals" (formula "13") (term "0"))
                            (builtin "One Step Simplification" (formula "13"))
                           (rule "true_left" (formula "13"))
                           (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "14"))
                           (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
                           (rule "polySimp_addComm0" (formula "32") (term "0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                           (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                           (rule "polySimp_elimOne" (formula "32") (term "0"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "19"))
                           (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                           (rule "mul_literals" (formula "2") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "2") (term "0"))
                           (rule "add_literals" (formula "2") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                           (rule "polySimp_elimOne" (formula "2") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                           (rule "qeq_literals" (formula "1") (term "0"))
                            (builtin "One Step Simplification" (formula "1"))
                           (rule "closeFalse" (formula "1"))
                        )
                        (branch "Usage"
                            (builtin "One Step Simplification" (formula "47"))
                           (rule "translateJavaAddInt" (formula "47") (term "0,1,0"))
                           (rule "polySimp_addComm0" (formula "47") (term "0,1,0"))
                           (rule "assignment_array2" (formula "47"))
                           (branch "Normal Execution (x_arr != null)"
                               (builtin "One Step Simplification" (formula "47"))
                              (rule "replaceKnownSelect_taclet20112_4" (formula "47") (term "0,1,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet20112_11" (formula "47") (term "0,1,0"))
                               (builtin "Use Operation Contract" (formula "47") (newnames "heapBefore_align_to_next_block_0,result_22,exc_28") (contract "de.wiesler.Buffers[de.wiesler.Buffers::align_to_next_block(int)].JML normal_behavior operation contract.0"))
                              (branch "Post (align_to_next_block)"
                                  (builtin "One Step Simplification" (formula "42"))
                                  (builtin "One Step Simplification" (formula "48"))
                                 (rule "expand_inInt" (formula "42") (term "0,1,0"))
                                 (rule "replace_int_MIN" (formula "42") (term "0,1,0,1,0"))
                                 (rule "replace_int_MAX" (formula "42") (term "1,0,0,1,0"))
                                 (rule "andLeft" (formula "42"))
                                 (rule "andLeft" (formula "42"))
                                 (rule "andLeft" (formula "42"))
                                 (rule "andLeft" (formula "42"))
                                 (rule "eqSymm" (formula "44"))
                                 (rule "inEqSimp_commuteLeq" (formula "43"))
                                 (rule "assignment" (formula "51") (term "1"))
                                  (builtin "One Step Simplification" (formula "51"))
                                 (rule "blockEmpty" (formula "51") (term "1"))
                                  (builtin "Block Contract (Internal)" (formula "51") (newnames "exc_29,heap_Before_BLOCK_1,savedHeap_Before_BLOCK_1,o,f"))
                                 (branch "Validity"
                                     (builtin "One Step Simplification" (formula "52"))
                                     (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "14")) (ifInst ""  (formula "48")) (ifInst ""  (formula "6")))
                                    (rule "andLeft" (formula "46"))
                                    (rule "eqSymm" (formula "53") (term "0,0,1,0,1"))
                                    (rule "dismissNonSelectedField" (formula "47") (term "0,0"))
                                    (rule "dismissNonSelectedField" (formula "47") (term "0,0"))
                                    (rule "dismissNonSelectedField" (formula "47") (term "0,0"))
                                    (rule "dismissNonSelectedField" (formula "47") (term "0,0"))
                                    (rule "dismissNonSelectedField" (formula "47") (term "0,0"))
                                    (rule "variableDeclarationAssign" (formula "53") (term "1"))
                                    (rule "variableDeclaration" (formula "53") (term "1") (newnames "exc_29_1"))
                                    (rule "assignment" (formula "53") (term "1"))
                                     (builtin "One Step Simplification" (formula "53"))
                                    (rule "emptyStatement" (formula "53") (term "1"))
                                     (builtin "One Step Simplification" (formula "53"))
                                    (rule "emptyStatement" (formula "53") (term "1"))
                                    (rule "pullOutSelect" (formula "47") (term "0,0") (inst "selectSK=java_lang_Object_created__1"))
                                    (rule "simplifySelectOfCreate" (formula "47"))
                                     (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "50")))
                                    (rule "castDel" (formula "47") (term "0"))
                                    (rule "applyEqReverse" (formula "48") (term "0,0") (ifseqformula "47"))
                                     (builtin "One Step Simplification" (formula "48"))
                                    (rule "true_left" (formula "48"))
                                    (rule "hideAuxiliaryEq" (formula "47"))
                                    (rule "tryEmpty" (formula "52") (term "1"))
                                    (rule "blockEmptyLabel" (formula "52") (term "1"))
                                    (rule "blockEmpty" (formula "52") (term "1"))
                                    (rule "methodCallEmpty" (formula "52") (term "1"))
                                     (builtin "One Step Simplification" (formula "52"))
                                    (rule "emptyModality" (formula "52") (term "1"))
                                    (rule "andRight" (formula "52"))
                                    (branch "Case 1"
                                        (builtin "One Step Simplification" (formula "52"))
                                       (rule "closeTrue" (formula "52"))
                                    )
                                    (branch "Case 2"
                                        (builtin "One Step Simplification" (formula "52"))
                                       (rule "closeTrue" (formula "52"))
                                    )
                                 )
                                 (branch "Precondition"
                                    (rule "andRight" (formula "51"))
                                    (branch "Case 1"
                                       (rule "andRight" (formula "51"))
                                       (branch "Case 1"
                                           (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "14")))
                                          (rule "closeTrue" (formula "51"))
                                       )
                                       (branch "Case 2"
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "wellFormedAnon" (formula "51"))
                                          (rule "replace_known_left" (formula "51") (term "1") (ifseqformula "5"))
                                           (builtin "One Step Simplification" (formula "51"))
                                          (rule "inEqSimp_ltToLeq" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "4") (term "1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "1,1,0,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "0,1,0,1,1,0"))
                                          (rule "polySimp_mulAssoc" (formula "4") (term "0,0,1,0,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "0,0,0,1,0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0,0,1,0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0,1,1,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "1,1,1,1,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "0,1,1,1,0"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,1,1,0"))
                                          (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "16"))
                                          (rule "leq_literals" (formula "18") (term "0"))
                                           (builtin "One Step Simplification" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "26"))
                                          (rule "leq_literals" (formula "12") (term "0"))
                                           (builtin "One Step Simplification" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "23"))
                                          (rule "leq_literals" (formula "22") (term "0"))
                                           (builtin "One Step Simplification" (formula "22"))
                                          (rule "true_left" (formula "22"))
                                          (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "3") (term "0,0"))
                                          (rule "qeq_literals" (formula "3") (term "0"))
                                           (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcd=Z(2(#))"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "19") (term "0,0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "19") (term "0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                          (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "19") (term "0,0"))
                                          (rule "leq_literals" (formula "19") (term "0"))
                                           (builtin "One Step Simplification" (formula "19"))
                                          (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "19"))
                                          (rule "leq_literals" (formula "9") (term "0"))
                                           (builtin "One Step Simplification" (formula "9"))
                                          (rule "true_left" (formula "9"))
                                          (rule "wellFormedStoreObject" (formula "46"))
                                           (builtin "One Step Simplification" (formula "46") (ifInst ""  (formula "44")))
                                          (rule "wellFormedStorePrimitive" (formula "46") (term "0"))
                                          (rule "wellFormedStorePrimitive" (formula "46") (term "0"))
                                          (rule "wellFormedStorePrimitive" (formula "46") (term "0"))
                                          (rule "wellFormedStorePrimitive" (formula "46") (term "0"))
                                          (rule "wellFormedCreate" (formula "46") (term "0"))
                                          (rule "replace_known_left" (formula "46") (term "0") (ifseqformula "6"))
                                           (builtin "One Step Simplification" (formula "46"))
                                          (rule "dismissNonSelectedField" (formula "46") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "46") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "46") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "46") (term "0"))
                                          (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=java_lang_Object_created__1"))
                                          (rule "simplifySelectOfCreate" (formula "1"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                          (rule "castDel" (formula "1") (term "1,0"))
                                          (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                          (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "43"))
                                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "45")))
                                          (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                          (rule "close" (formula "47") (ifseqformula "11"))
                                       )
                                    )
                                    (branch "Case 2"
                                       (rule "andRight" (formula "51"))
                                       (branch "Case 1"
                                          (rule "andRight" (formula "51"))
                                          (branch "Case 1"
                                              (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "47")))
                                             (rule "closeTrue" (formula "51"))
                                          )
                                          (branch "Case 2"
                                              (builtin "One Step Simplification" (formula "51"))
                                             (rule "orRight" (formula "51"))
                                             (rule "dismissNonSelectedField" (formula "51") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "51") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "51") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "51") (term "0"))
                                             (rule "dismissNonSelectedField" (formula "51") (term "0"))
                                             (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0,0"))
                                             (rule "inEqSimp_ltToLeq" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                             (rule "polySimp_addComm1" (formula "1") (term "0"))
                                             (rule "inEqSimp_homoInEq0" (formula "4") (term "1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "1,1,0,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "4") (term "0,1,0,1,1,0"))
                                             (rule "polySimp_mulAssoc" (formula "4") (term "0,0,1,0,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "0,0,0,1,0,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,0,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "0,0,1,0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "0,1,1,0"))
                                             (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,1,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
                                             (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,0,0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0,0,0"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                             (rule "polySimp_elimOne" (formula "1") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "4") (term "1,1,1,0"))
                                             (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,1,0"))
                                             (rule "polySimp_elimOne" (formula "4") (term "1,1,1,1,0"))
                                             (rule "polySimp_rightDist" (formula "4") (term "0,1,1,1,0"))
                                             (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,1,1,0"))
                                             (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "27"))
                                             (rule "leq_literals" (formula "12") (term "0"))
                                              (builtin "One Step Simplification" (formula "12"))
                                             (rule "true_left" (formula "12"))
                                             (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "15"))
                                             (rule "leq_literals" (formula "17") (term "0"))
                                              (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "23"))
                                             (rule "leq_literals" (formula "22") (term "0"))
                                              (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                             (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                             (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                             (rule "add_literals" (formula "3") (term "0,0"))
                                             (rule "qeq_literals" (formula "3") (term "0"))
                                              (builtin "One Step Simplification" (formula "3"))
                                             (rule "true_left" (formula "3"))
                                             (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcd=Z(2(#))"))
                                             (rule "leq_literals" (formula "19") (term "0,0"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                                             (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                             (rule "times_zero_1" (formula "19") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                             (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                             (rule "add_literals" (formula "19") (term "0,0"))
                                             (rule "leq_literals" (formula "19") (term "0"))
                                              (builtin "One Step Simplification" (formula "19"))
                                             (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "19"))
                                             (rule "leq_literals" (formula "9") (term "0"))
                                              (builtin "One Step Simplification" (formula "9"))
                                             (rule "true_left" (formula "9"))
                                             (rule "pullOutSelect" (formula "46") (term "0") (inst "selectSK=java_lang_Object_created__1"))
                                             (rule "simplifySelectOfCreate" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                                             (rule "castDel" (formula "1") (term "0"))
                                             (rule "applyEqReverse" (formula "47") (term "0") (ifseqformula "1"))
                                              (builtin "One Step Simplification" (formula "47"))
                                             (rule "closeTrue" (formula "47"))
                                          )
                                       )
                                       (branch "Case 2"
                                           (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "6")))
                                          (rule "closeTrue" (formula "51"))
                                       )
                                    )
                                 )
                                 (branch "Usage"
                                     (builtin "One Step Simplification" (formula "46"))
                                     (builtin "One Step Simplification" (formula "52"))
                                    (rule "andLeft" (formula "46"))
                                    (rule "andLeft" (formula "46"))
                                    (rule "andLeft" (formula "48"))
                                    (rule "andLeft" (formula "48"))
                                    (rule "eqSymm" (formula "48"))
                                    (rule "translateJavaAddInt" (formula "49") (term "2,1"))
                                    (rule "eqSymm" (formula "49"))
                                    (rule "replace_known_left" (formula "47") (term "0") (ifseqformula "46"))
                                     (builtin "One Step Simplification" (formula "47"))
                                    (rule "true_left" (formula "47"))
                                    (rule "polySimp_addComm0" (formula "48") (term "2,0"))
                                    (rule "inEqSimp_commuteLeq" (formula "49"))
                                    (rule "elim_double_block_2" (formula "55") (term "1"))
                                    (rule "ifUnfold" (formula "55") (term "1") (inst "#boolv=x_2"))
                                    (rule "variableDeclaration" (formula "55") (term "1") (newnames "x_5"))
                                    (rule "inequality_comparison_simple" (formula "55") (term "1"))
                                     (builtin "One Step Simplification" (formula "55"))
                                    (rule "replace_known_left" (formula "55") (term "0,0,1,0") (ifseqformula "46"))
                                     (builtin "One Step Simplification" (formula "55"))
                                    (rule "ifSplit" (formula "55"))
                                    (branch "if x_5 true"
                                        (builtin "One Step Simplification" (formula "56"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "if x_5 false"
                                        (builtin "One Step Simplification" (formula "56"))
                                        (builtin "One Step Simplification" (formula "1"))
                                       (rule "true_left" (formula "1"))
                                       (rule "blockEmpty" (formula "55") (term "1"))
                                       (rule "variableDeclarationAssign" (formula "55") (term "1"))
                                       (rule "variableDeclaration" (formula "55") (term "1") (newnames "read"))
                                       (rule "assignment" (formula "55") (term "1"))
                                        (builtin "One Step Simplification" (formula "55"))
                                        (builtin "Block Contract (Internal)" (formula "55") (newnames "anonOut_heap,exc_0,heap_Before_BLOCK_2,savedHeap_Before_BLOCK_2,read_Before_BLOCK#0,o,f,anonOut_read"))
                                       (branch "Validity"
                                           (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "14")) (ifInst ""  (formula "52")) (ifInst ""  (formula "6")))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "expand_inInt" (formula "50") (term "1,0,1,0"))
                                          (rule "expand_inInt" (formula "50") (term "1,1,0"))
                                          (rule "expand_inInt" (formula "50") (term "1,0,0,1,0"))
                                          (rule "expand_inInt" (formula "50") (term "0,0,0,1,0"))
                                          (rule "replace_int_MAX" (formula "50") (term "1,0,1,0,1,0"))
                                          (rule "replace_int_MIN" (formula "50") (term "0,1,1,0,1,0"))
                                          (rule "replace_int_MIN" (formula "50") (term "0,1,1,1,0"))
                                          (rule "replace_int_MAX" (formula "50") (term "1,0,1,1,0"))
                                          (rule "replace_int_MAX" (formula "50") (term "1,0,1,0,0,1,0"))
                                          (rule "replace_int_MIN" (formula "50") (term "0,1,1,0,0,1,0"))
                                          (rule "replace_int_MAX" (formula "50") (term "1,0,0,0,0,1,0"))
                                          (rule "replace_int_MIN" (formula "50") (term "0,1,0,0,0,1,0"))
                                          (rule "leq_literals" (formula "50") (term "0,1,0,0,1,0"))
                                           (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "42")) (ifInst ""  (formula "38")) (ifInst ""  (formula "11")))
                                          (rule "leq_literals" (formula "50") (term "1,0,0,1,0"))
                                           (builtin "One Step Simplification" (formula "50"))
                                          (rule "andLeft" (formula "50"))
                                          (rule "andLeft" (formula "50"))
                                          (rule "andLeft" (formula "51"))
                                          (rule "andLeft" (formula "51"))
                                          (rule "dismissNonSelectedField" (formula "54") (term "0,0"))
                                          (rule "dismissNonSelectedField" (formula "54") (term "0,0"))
                                          (rule "dismissNonSelectedField" (formula "54") (term "0,0"))
                                          (rule "dismissNonSelectedField" (formula "54") (term "0,0"))
                                          (rule "dismissNonSelectedField" (formula "54") (term "0,0"))
                                          (rule "inEqSimp_commuteLeq" (formula "53"))
                                          (rule "inEqSimp_commuteLeq" (formula "52"))
                                          (rule "inEqSimp_commuteLeq" (formula "51"))
                                          (rule "variableDeclarationAssign" (formula "57") (term "1"))
                                          (rule "variableDeclaration" (formula "57") (term "1") (newnames "exc_0_1"))
                                          (rule "assignment" (formula "57") (term "1"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "pullOutSelect" (formula "51") (term "0,0") (inst "selectSK=java_lang_Object_created__1"))
                                          (rule "simplifySelectOfCreate" (formula "51"))
                                           (builtin "One Step Simplification" (formula "51") (ifInst ""  (formula "54")))
                                          (rule "castDel" (formula "51") (term "0"))
                                          (rule "applyEqReverse" (formula "52") (term "0,0") (ifseqformula "51"))
                                           (builtin "One Step Simplification" (formula "52"))
                                          (rule "true_left" (formula "52"))
                                          (rule "hideAuxiliaryEq" (formula "51"))
                                          (rule "ifElseUnfold" (formula "56") (term "1") (inst "#boolv=x"))
                                          (rule "variableDeclaration" (formula "56") (term "1") (newnames "x_6"))
                                          (rule "less_equal_than_comparison_simple" (formula "56") (term "1"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "inEqSimp_commuteLeq" (formula "56") (term "0,0,1,0"))
                                          (rule "arrayLengthNotNegative" (formula "25") (term "0"))
                                          (rule "arrayLengthNotNegative" (formula "16") (term "0"))
                                          (rule "arrayLengthIsAShort" (formula "16") (term "0"))
                                          (rule "expand_inShort" (formula "16"))
                                          (rule "replace_short_MIN" (formula "16") (term "0,1"))
                                          (rule "replace_short_MAX" (formula "16") (term "1,0"))
                                          (rule "andLeft" (formula "16"))
                                          (rule "inEqSimp_commuteLeq" (formula "16"))
                                          (rule "arrayLengthIsAShort" (formula "23") (term "0"))
                                          (rule "expand_inShort" (formula "23"))
                                          (rule "replace_short_MIN" (formula "23") (term "0,1"))
                                          (rule "replace_short_MAX" (formula "23") (term "1,0"))
                                          (rule "andLeft" (formula "23"))
                                          (rule "inEqSimp_commuteLeq" (formula "23"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "34"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "true_left" (formula "32"))
                                          (rule "applyEq" (formula "32") (term "0,0,1,0") (ifseqformula "33"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "true_left" (formula "32"))
                                          (rule "ifElseSplit" (formula "56"))
                                          (branch "if x_6 true"
                                              (builtin "One Step Simplification" (formula "57"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "assignment" (formula "57") (term "1"))
                                              (builtin "One Step Simplification" (formula "57"))
                                             (rule "tryEmpty" (formula "57") (term "1"))
                                             (rule "blockEmptyLabel" (formula "57") (term "1"))
                                             (rule "blockEmpty" (formula "57") (term "1"))
                                             (rule "methodCallEmpty" (formula "57") (term "1"))
                                              (builtin "One Step Simplification" (formula "57"))
                                             (rule "emptyModality" (formula "57") (term "1"))
                                              (builtin "One Step Simplification" (formula "57"))
                                             (rule "closeTrue" (formula "57"))
                                          )
                                          (branch "if x_6 false"
                                              (builtin "One Step Simplification" (formula "57"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "notLeft" (formula "1"))
                                             (rule "ifElseUnfold" (formula "57") (term "1") (inst "#boolv=x"))
                                             (rule "variableDeclaration" (formula "57") (term "1") (newnames "x_7"))
                                             (rule "less_equal_than_comparison_simple" (formula "57") (term "1"))
                                              (builtin "One Step Simplification" (formula "57"))
                                             (rule "ifElseSplit" (formula "57"))
                                             (branch "if x_7 true"
                                                 (builtin "One Step Simplification" (formula "58"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "assignment" (formula "58") (term "1"))
                                                 (builtin "One Step Simplification" (formula "58"))
                                                (rule "tryEmpty" (formula "58") (term "1"))
                                                (rule "blockEmptyLabel" (formula "58") (term "1"))
                                                (rule "blockEmpty" (formula "58") (term "1"))
                                                (rule "methodCallEmpty" (formula "58") (term "1"))
                                                 (builtin "One Step Simplification" (formula "58"))
                                                (rule "emptyModality" (formula "58") (term "1"))
                                                 (builtin "One Step Simplification" (formula "58"))
                                                (rule "closeTrue" (formula "58"))
                                             )
                                             (branch "if x_7 false"
                                                 (builtin "One Step Simplification" (formula "58"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "assignment" (formula "58") (term "1"))
                                                 (builtin "One Step Simplification" (formula "58"))
                                                (rule "tryEmpty" (formula "58") (term "1"))
                                                (rule "blockEmptyLabel" (formula "58") (term "1"))
                                                (rule "blockEmpty" (formula "58") (term "1"))
                                                (rule "methodCallEmpty" (formula "58") (term "1"))
                                                 (builtin "One Step Simplification" (formula "58"))
                                                (rule "emptyModality" (formula "58") (term "1"))
                                                 (builtin "One Step Simplification" (formula "58"))
                                                (rule "closeTrue" (formula "58"))
                                             )
                                          )
                                       )
                                       (branch "Precondition"
                                          (rule "andRight" (formula "55"))
                                          (branch
                                             (rule "andRight" (formula "55"))
                                             (branch
                                                (rule "andRight" (formula "55"))
                                                (branch
                                                    (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "14")))
                                                   (rule "closeTrue" (formula "55"))
                                                )
                                                (branch
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "wellFormedAnon" (formula "55"))
                                                   (rule "replace_known_left" (formula "55") (term "1") (ifseqformula "5"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "inEqSimp_ltToLeq" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "4") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "0,1,0,1,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "4") (term "0,0,1,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "0,0,0,1,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "0,0,1,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "1,1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "0,1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,1,1,0"))
                                                   (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "3") (term "0,0"))
                                                   (rule "qeq_literals" (formula "3") (term "0"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "26"))
                                                   (rule "leq_literals" (formula "11") (term "0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "23"))
                                                   (rule "leq_literals" (formula "22") (term "0"))
                                                    (builtin "One Step Simplification" (formula "22"))
                                                   (rule "true_left" (formula "22"))
                                                   (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "14"))
                                                   (rule "leq_literals" (formula "16") (term "0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcdRightDiv=Z(0(#))"))
                                                   (rule "add_zero_right" (formula "19") (term "0,0,0,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                                                   (rule "leq_literals" (formula "19") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "19") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                                   (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "19") (term "0,0"))
                                                   (rule "leq_literals" (formula "19") (term "0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "19"))
                                                   (rule "leq_literals" (formula "9") (term "0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "wellFormedStoreObject" (formula "50"))
                                                    (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "48")))
                                                   (rule "wellFormedStorePrimitive" (formula "50") (term "0"))
                                                   (rule "wellFormedStorePrimitive" (formula "50") (term "0"))
                                                   (rule "wellFormedStorePrimitive" (formula "50") (term "0"))
                                                   (rule "wellFormedStorePrimitive" (formula "50") (term "0"))
                                                   (rule "wellFormedCreate" (formula "50") (term "0"))
                                                   (rule "replace_known_left" (formula "50") (term "0") (ifseqformula "6"))
                                                    (builtin "One Step Simplification" (formula "50"))
                                                   (rule "dismissNonSelectedField" (formula "50") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "50") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "50") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "50") (term "0"))
                                                   (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=java_lang_Object_created__1"))
                                                   (rule "simplifySelectOfCreate" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                   (rule "castDel" (formula "1") (term "1,0"))
                                                   (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                                   (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "47"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "49")))
                                                   (rule "applyEqReverse" (formula "51") (term "0") (ifseqformula "1"))
                                                   (rule "close" (formula "51") (ifseqformula "11"))
                                                )
                                             )
                                             (branch
                                                (rule "andRight" (formula "55"))
                                                (branch
                                                   (rule "andRight" (formula "55"))
                                                   (branch
                                                      (rule "andRight" (formula "55"))
                                                      (branch
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "expand_inInt" (formula "55"))
                                                         (rule "replace_int_MIN" (formula "55") (term "0,1"))
                                                         (rule "replace_int_MAX" (formula "55") (term "1,0"))
                                                         (rule "replace_known_left" (formula "55") (term "0") (ifseqformula "42"))
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "inEqSimp_leqRight" (formula "55"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "5") (term "1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "1,1,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "0,1,0,1,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "5") (term "0,0,1,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,1,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "0,0,1,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "0,0,1,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "5") (term "0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,1,1,0"))
                                                         (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "17"))
                                                         (rule "leq_literals" (formula "19") (term "0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "inEqSimp_contradInEq0" (formula "43") (ifseqformula "1"))
                                                         (rule "qeq_literals" (formula "43") (term "0"))
                                                          (builtin "One Step Simplification" (formula "43"))
                                                         (rule "closeFalse" (formula "43"))
                                                      )
                                                      (branch
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "expand_inInt" (formula "55"))
                                                         (rule "replace_int_MIN" (formula "55") (term "0,1"))
                                                         (rule "replace_int_MAX" (formula "55") (term "1,0"))
                                                         (rule "leq_literals" (formula "55") (term "1"))
                                                          (builtin "One Step Simplification" (formula "55"))
                                                         (rule "leq_literals" (formula "55"))
                                                         (rule "closeTrue" (formula "55"))
                                                      )
                                                   )
                                                   (branch
                                                       (builtin "One Step Simplification" (formula "55"))
                                                      (rule "expand_inInt" (formula "55"))
                                                      (rule "replace_int_MIN" (formula "55") (term "0,1"))
                                                      (rule "replace_int_MAX" (formula "55") (term "1,0"))
                                                      (rule "replace_known_left" (formula "55") (term "0") (ifseqformula "38"))
                                                       (builtin "One Step Simplification" (formula "55"))
                                                      (rule "inEqSimp_leqRight" (formula "55"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "5") (term "1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "1,1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "0,1,0,1,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "5") (term "0,0,1,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,1,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0,0,1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0,0,1,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "1,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,1,1,0"))
                                                      (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "17"))
                                                      (rule "leq_literals" (formula "19") (term "0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "inEqSimp_contradInEq0" (formula "39") (ifseqformula "1"))
                                                      (rule "qeq_literals" (formula "39") (term "0"))
                                                       (builtin "One Step Simplification" (formula "39"))
                                                      (rule "closeFalse" (formula "39"))
                                                   )
                                                )
                                                (branch
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "expand_inInt" (formula "55"))
                                                   (rule "replace_int_MIN" (formula "55") (term "0,1"))
                                                   (rule "replace_int_MAX" (formula "55") (term "1,0"))
                                                   (rule "replace_known_left" (formula "55") (term "0") (ifseqformula "11"))
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "inEqSimp_leqRight" (formula "55"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "5") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "0,1,0,1,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "5") (term "0,0,1,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,1,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "0,0,1,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "0,0,1,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "0,1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,1,1,0"))
                                                   (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "28"))
                                                   (rule "leq_literals" (formula "13") (term "0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "inEqSimp_subsumption0" (formula "12") (ifseqformula "1"))
                                                   (rule "leq_literals" (formula "12") (term "0"))
                                                    (builtin "One Step Simplification" (formula "12"))
                                                   (rule "true_left" (formula "12"))
                                                   (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "24"))
                                                   (rule "leq_literals" (formula "23") (term "0"))
                                                    (builtin "One Step Simplification" (formula "23"))
                                                   (rule "true_left" (formula "23"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "25"))
                                                   (rule "qeq_literals" (formula "1") (term "0"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                             )
                                          )
                                          (branch
                                             (rule "andRight" (formula "55"))
                                             (branch
                                                (rule "andRight" (formula "55"))
                                                (branch
                                                    (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "51")))
                                                   (rule "closeTrue" (formula "55"))
                                                )
                                                (branch
                                                    (builtin "One Step Simplification" (formula "55"))
                                                   (rule "orRight" (formula "55"))
                                                   (rule "dismissNonSelectedField" (formula "55") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "55") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "55") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "55") (term "0"))
                                                   (rule "dismissNonSelectedField" (formula "55") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "4") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "0,1,0,1,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "4") (term "0,0,1,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "0,0,0,1,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "0,0,1,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "1,1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "0,1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,1,1,0"))
                                                   (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                   (rule "add_literals" (formula "3") (term "0,0"))
                                                   (rule "qeq_literals" (formula "3") (term "0"))
                                                    (builtin "One Step Simplification" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "26"))
                                                   (rule "leq_literals" (formula "11") (term "0"))
                                                    (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "14"))
                                                   (rule "leq_literals" (formula "16") (term "0"))
                                                    (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "22"))
                                                   (rule "leq_literals" (formula "21") (term "0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "true_left" (formula "21"))
                                                   (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcdRightDiv=Z(0(#))"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                                                   (rule "leq_literals" (formula "19") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                                                   (rule "mul_literals" (formula "19") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                                   (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                   (rule "add_literals" (formula "19") (term "0,0"))
                                                   (rule "leq_literals" (formula "19") (term "0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "19"))
                                                   (rule "leq_literals" (formula "9") (term "0"))
                                                    (builtin "One Step Simplification" (formula "9"))
                                                   (rule "true_left" (formula "9"))
                                                   (rule "pullOutSelect" (formula "50") (term "0") (inst "selectSK=java_lang_Object_created__1"))
                                                   (rule "simplifySelectOfCreate" (formula "1"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                                                   (rule "castDel" (formula "1") (term "0"))
                                                   (rule "applyEqReverse" (formula "51") (term "0") (ifseqformula "1"))
                                                    (builtin "One Step Simplification" (formula "51"))
                                                   (rule "closeTrue" (formula "51"))
                                                )
                                             )
                                             (branch
                                                 (builtin "One Step Simplification" (formula "55") (ifInst ""  (formula "6")))
                                                (rule "closeTrue" (formula "55"))
                                             )
                                          )
                                       )
                                       (branch "Usage"
                                           (builtin "One Step Simplification" (formula "50"))
                                           (builtin "One Step Simplification" (formula "56"))
                                          (rule "expand_inInt" (formula "50") (term "0,1,0"))
                                          (rule "replace_int_MAX" (formula "50") (term "1,0,0,1,0"))
                                          (rule "replace_int_MIN" (formula "50") (term "0,1,0,1,0"))
                                          (rule "andLeft" (formula "50"))
                                          (rule "andLeft" (formula "50"))
                                          (rule "andLeft" (formula "52"))
                                          (rule "andLeft" (formula "50"))
                                          (rule "andLeft" (formula "52"))
                                          (rule "andLeft" (formula "55"))
                                          (rule "andLeft" (formula "54"))
                                          (rule "andLeft" (formula "52"))
                                          (rule "replace_known_left" (formula "54") (term "0") (ifseqformula "50"))
                                           (builtin "One Step Simplification" (formula "54"))
                                          (rule "true_left" (formula "54"))
                                          (rule "inEqSimp_commuteLeq" (formula "55"))
                                          (rule "inEqSimp_commuteLeq" (formula "53"))
                                          (rule "pullOutSelect" (formula "57") (term "3,0") (inst "selectSK=de_wiesler_BucketPointers_first_empty_position_0"))
                                          (rule "simplifySelectOfAnon" (formula "57"))
                                           (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "60")))
                                          (rule "dismissNonSelectedField" (formula "57") (term "0,0,0,0,0"))
                                          (rule "ifthenelse_negated" (formula "57") (term "0"))
                                          (rule "dismissNonSelectedField" (formula "57") (term "0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "57") (term "0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "57") (term "0,0,0,0"))
                                          (rule "dismissNonSelectedField" (formula "57") (term "0,0,0,0"))
                                          (rule "pullOutSelect" (formula "57") (term "1,0") (inst "selectSK=de_wiesler_BucketPointers_first_empty_position_1"))
                                          (rule "simplifySelectOfAnon" (formula "57"))
                                           (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "61")))
                                          (rule "dismissNonSelectedField" (formula "57") (term "0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "57") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "57") (term "0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "57") (term "2,0"))
                                          (rule "dismissNonSelectedField" (formula "57") (term "0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "57") (term "0,0,1,0,0"))
                                          (rule "dismissNonSelectedField" (formula "57") (term "0,0,1,0,0"))
                                          (rule "elementOfArrayRange" (formula "57") (term "0,0,0") (inst "iv=iv"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "ifthenelse_negated" (formula "57") (term "0"))
                                          (rule "pullOutSelect" (formula "58") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__1"))
                                          (rule "applyEq" (formula "57") (term "0,0,0") (ifseqformula "58"))
                                          (rule "simplifySelectOfCreate" (formula "58"))
                                           (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "62")))
                                          (rule "castDel" (formula "58") (term "0"))
                                          (rule "applyEqReverse" (formula "57") (term "0,0,0") (ifseqformula "58"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "simplifySelectOfStore" (formula "57"))
                                           (builtin "One Step Simplification" (formula "57"))
                                          (rule "castDel" (formula "57") (term "0"))
                                          (rule "applyEqReverse" (formula "59") (term "0,0,0,0") (ifseqformula "58"))
                                           (builtin "One Step Simplification" (formula "59"))
                                          (rule "applyEqReverse" (formula "60") (term "3,0") (ifseqformula "59"))
                                          (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "57"))
                                          (rule "applyEqReverse" (formula "60") (term "3,0") (ifseqformula "57"))
                                          (rule "hideAuxiliaryEq" (formula "58"))
                                          (rule "hideAuxiliaryEq" (formula "57"))
                                          (rule "hideAuxiliaryEq" (formula "57"))
                                          (rule "ifUnfold" (formula "63") (term "1") (inst "#boolv=x_2"))
                                          (rule "variableDeclaration" (formula "63") (term "1") (newnames "x_6"))
                                          (rule "inequality_comparison_simple" (formula "63") (term "1"))
                                           (builtin "One Step Simplification" (formula "63"))
                                          (rule "replace_known_left" (formula "63") (term "0,0,1,0") (ifseqformula "50"))
                                           (builtin "One Step Simplification" (formula "63"))
                                          (rule "arrayLengthNotNegative" (formula "19") (term "0"))
                                          (rule "arrayLengthIsAShort" (formula "18") (term "0"))
                                          (rule "expand_inShort" (formula "18"))
                                          (rule "replace_short_MIN" (formula "18") (term "0,1"))
                                          (rule "replace_short_MAX" (formula "18") (term "1,0"))
                                          (rule "andLeft" (formula "18"))
                                          (rule "inEqSimp_commuteLeq" (formula "18"))
                                          (rule "arrayLengthIsAShort" (formula "24") (term "0"))
                                          (rule "expand_inShort" (formula "24"))
                                          (rule "replace_short_MIN" (formula "24") (term "0,1"))
                                          (rule "replace_short_MAX" (formula "24") (term "1,0"))
                                          (rule "andLeft" (formula "24"))
                                          (rule "inEqSimp_commuteLeq" (formula "24"))
                                          (rule "arrayLengthNotNegative" (formula "23") (term "0"))
                                          (rule "equalityToSeqGetAndSeqLenLeft" (formula "32") (inst "iv=iv"))
                                          (rule "andLeft" (formula "32"))
                                          (rule "applyEq" (formula "33") (term "0,0,1,0") (ifseqformula "34"))
                                           (builtin "One Step Simplification" (formula "33"))
                                          (rule "true_left" (formula "33"))
                                          (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "33"))
                                           (builtin "One Step Simplification" (formula "32"))
                                          (rule "true_left" (formula "32"))
                                          (rule "ifSplit" (formula "63"))
                                          (branch "if x_6 true"
                                              (builtin "One Step Simplification" (formula "64"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "closeFalse" (formula "1"))
                                          )
                                          (branch "if x_6 false"
                                              (builtin "One Step Simplification" (formula "64"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "blockEmpty" (formula "63") (term "1"))
                                             (rule "eval_order_array_access1" (formula "63") (term "1") (inst "#v0=x_arr"))
                                             (rule "variableDeclarationAssign" (formula "63") (term "1"))
                                             (rule "variableDeclaration" (formula "63") (term "1") (newnames "x_arr_1"))
                                             (rule "assignment_read_attribute_this" (formula "63"))
                                              (builtin "One Step Simplification" (formula "63"))
                                             (rule "pullOutSelect" (formula "63") (term "0,1,0") (inst "selectSK=de_wiesler_BucketPointers_buffer_1"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,0,0,0"))
                                             (rule "replaceKnownSelect_taclet21200100120112_17" (formula "1") (term "0,0,0,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet21200100120112_19" (formula "1") (term "0,0,0,0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "simplifySelectOfAnon" (formula "1"))
                                              (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "60")))
                                             (rule "replaceKnownSelect_taclet112_1" (formula "1") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet112_2" (formula "1") (term "2,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                             (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                                             (rule "replaceKnownSelect_taclet21200100120112_17" (formula "1") (term "0,0,1,0,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet21200100120112_19" (formula "1") (term "0,0,1,0,0"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "eval_order_array_access2" (formula "64") (term "1") (inst "#ar1=x_arr_2") (inst "#v0=x_2"))
                                             (rule "variableDeclarationAssign" (formula "64") (term "1"))
                                             (rule "variableDeclaration" (formula "64") (term "1") (newnames "x_arr_2"))
                                             (rule "assignment" (formula "64") (term "1"))
                                              (builtin "One Step Simplification" (formula "64"))
                                             (rule "variableDeclarationAssign" (formula "64") (term "1"))
                                             (rule "variableDeclaration" (formula "64") (term "1") (newnames "x_7"))
                                             (rule "elementOfArrayRange" (formula "1") (term "0,0") (inst "iv=iv"))
                                              (builtin "One Step Simplification" (formula "1"))
                                             (rule "applyEqReverse" (formula "64") (term "0,1,0") (ifseqformula "1"))
                                             (rule "hideAuxiliaryEq" (formula "1"))
                                             (rule "assignmentMultiplicationInt" (formula "63") (term "1"))
                                             (branch "Overflow check"
                                                 (builtin "One Step Simplification" (formula "63"))
                                                (rule "expand_inInt" (formula "63"))
                                                (rule "replace_int_MIN" (formula "63") (term "0,1"))
                                                (rule "replace_int_MAX" (formula "63") (term "1,0"))
                                                (rule "polySimp_mulComm0" (formula "63") (term "1,1"))
                                                (rule "polySimp_mulComm0" (formula "63") (term "0,0"))
                                                (rule "inEqSimp_ltToLeq" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0,0"))
                                                (rule "inEqSimp_commuteLeq" (formula "63") (term "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "4") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,1,0,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "0,1,0,1,1,0"))
                                                (rule "polySimp_mulAssoc" (formula "4") (term "0,0,1,0,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "0,0,0,1,0,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,0,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "0,0,1,0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,1,1,0"))
                                                (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,1,0"))
                                                (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,0,0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "1,1,1,0"))
                                                (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,1,0"))
                                                (rule "polySimp_elimOne" (formula "4") (term "1,1,1,1,0"))
                                                (rule "polySimp_rightDist" (formula "4") (term "0,1,1,1,0"))
                                                (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,1,1,0"))
                                                (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "16"))
                                                (rule "leq_literals" (formula "18") (term "0"))
                                                 (builtin "One Step Simplification" (formula "18"))
                                                (rule "true_left" (formula "18"))
                                                (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "24"))
                                                (rule "leq_literals" (formula "23") (term "0"))
                                                 (builtin "One Step Simplification" (formula "23"))
                                                (rule "true_left" (formula "23"))
                                                (rule "inEqSimp_subsumption6" (formula "61") (term "1") (ifseqformula "2"))
                                                (rule "greater_literals" (formula "61") (term "0,0,1"))
                                                 (builtin "One Step Simplification" (formula "61"))
                                                (rule "mul_literals" (formula "61") (term "1,0,1"))
                                                (rule "leq_literals" (formula "61") (term "0,1"))
                                                 (builtin "One Step Simplification" (formula "61"))
                                                (rule "inEqSimp_leqRight" (formula "61"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "mul_literals" (formula "1") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "26"))
                                                (rule "leq_literals" (formula "13") (term "0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "true_left" (formula "13"))
                                                (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
                                                (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0"))
                                                (rule "qeq_literals" (formula "4") (term "0"))
                                                 (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "elimGcdGeq_antec" (formula "1") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=bucket_0") (inst "elimGcdRightDiv=Z(4(2(8(1(4(7(3(7(0(1(#)))))))))))"))
                                                (rule "leq_literals" (formula "1") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "1") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "leq_literals" (formula "1") (term "0"))
                                                 (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                (rule "leq_literals" (formula "3") (term "0"))
                                                 (builtin "One Step Simplification" (formula "3"))
                                                (rule "true_left" (formula "3"))
                                                (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcdRightDiv=Z(0(#))"))
                                                (rule "leq_literals" (formula "19") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "19") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                                (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                (rule "add_literals" (formula "19") (term "0,0"))
                                                (rule "leq_literals" (formula "19") (term "0"))
                                                 (builtin "One Step Simplification" (formula "19"))
                                                (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "19"))
                                                (rule "leq_literals" (formula "9") (term "0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "16"))
                                                (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "32") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                                (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "16"))
                                                (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "23") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "23"))
                                                (rule "leq_literals" (formula "9") (term "0"))
                                                 (builtin "One Step Simplification" (formula "9"))
                                                (rule "true_left" (formula "9"))
                                                (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "13"))
                                                (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                                (rule "mul_literals" (formula "14") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                (rule "add_literals" (formula "14") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                                (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "14"))
                                                (rule "leq_literals" (formula "8") (term "0"))
                                                 (builtin "One Step Simplification" (formula "8"))
                                                (rule "true_left" (formula "8"))
                                                (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "38"))
                                                (rule "polySimp_mulComm0" (formula "51") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "51") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "51"))
                                                (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                                (rule "polySimp_elimOne" (formula "51") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "38"))
                                                (rule "polySimp_mulComm0" (formula "45") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "45") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "45"))
                                                (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                                (rule "polySimp_elimOne" (formula "45") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "50"))
                                                (rule "mul_literals" (formula "35") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                (rule "mul_literals" (formula "35") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "18"))
                                                (rule "polySimp_mulAssoc" (formula "20") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "20") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                (rule "elimGcdLeq_antec" (formula "20") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))"))
                                                (rule "leq_literals" (formula "20") (term "0,0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                                (rule "neg_literal" (formula "20") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,0"))
                                                (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                                                (rule "polySimp_addLiterals" (formula "20") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                                (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                (rule "add_literals" (formula "20") (term "0,0"))
                                                (rule "qeq_literals" (formula "20") (term "0"))
                                                 (builtin "One Step Simplification" (formula "20"))
                                                (rule "inEqSimp_subsumption0" (formula "13") (ifseqformula "20"))
                                                (rule "leq_literals" (formula "13") (term "0"))
                                                 (builtin "One Step Simplification" (formula "13"))
                                                (rule "true_left" (formula "13"))
                                                (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "32"))
                                                (rule "polySimp_mulComm0" (formula "31") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "31") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                                (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "19"))
                                                (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "add_literals" (formula "2") (term "0,0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                                (rule "qeq_literals" (formula "2") (term "0"))
                                                 (builtin "One Step Simplification" (formula "2"))
                                                (rule "closeFalse" (formula "2"))
                                             )
                                             (branch "Usage"
                                                 (builtin "One Step Simplification" (formula "63"))
                                                (rule "translateJavaMulInt" (formula "63") (term "0,1,0"))
                                                (rule "polySimp_mulComm0" (formula "63") (term "0,1,0"))
                                                (rule "assignment_to_primitive_array_component" (formula "63"))
                                                (branch "Normal Execution (x_arr_2 != null)"
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "eval_order_array_access1" (formula "63") (term "1") (inst "#v0=x_arr"))
                                                   (rule "variableDeclarationAssign" (formula "63") (term "1"))
                                                   (rule "variableDeclaration" (formula "63") (term "1") (newnames "x_arr_3"))
                                                   (rule "assignment_read_attribute_this" (formula "63"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "dismissNonSelectedField" (formula "63") (term "0,1,0"))
                                                   (rule "replaceKnownSelect_taclet121200100120112_22" (formula "63") (term "0,1,0"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet121200100120112_24" (formula "63") (term "0,1,0"))
                                                   (rule "eval_order_array_access2" (formula "63") (term "1") (inst "#ar1=x_arr_4") (inst "#v0=x_2"))
                                                   (rule "variableDeclarationAssign" (formula "63") (term "1"))
                                                   (rule "variableDeclaration" (formula "63") (term "1") (newnames "x_arr_4"))
                                                   (rule "assignment" (formula "63") (term "1"))
                                                    (builtin "One Step Simplification" (formula "63"))
                                                   (rule "variableDeclarationAssign" (formula "63") (term "1"))
                                                   (rule "variableDeclaration" (formula "63") (term "1") (newnames "x_8"))
                                                   (rule "compound_addition_1" (formula "63") (term "1") (inst "#v=x_9"))
                                                   (rule "variableDeclarationAssign" (formula "63") (term "1"))
                                                   (rule "variableDeclaration" (formula "63") (term "1") (newnames "x_9"))
                                                   (rule "assignmentMultiplicationInt" (formula "63") (term "1"))
                                                   (branch "Overflow check"
                                                       (builtin "One Step Simplification" (formula "63"))
                                                      (rule "expand_inInt" (formula "63"))
                                                      (rule "replace_int_MIN" (formula "63") (term "0,1"))
                                                      (rule "replace_int_MAX" (formula "63") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "63") (term "1,1"))
                                                      (rule "polySimp_mulComm0" (formula "63") (term "0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0,0"))
                                                      (rule "inEqSimp_ltToLeq" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "63") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "4") (term "1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "1,1,0,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "0,1,0,1,1,0"))
                                                      (rule "polySimp_mulAssoc" (formula "4") (term "0,0,1,0,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "0,0,0,1,0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "0,0,1,0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,1,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "1,1,1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "0,1,1,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,1,1,0"))
                                                      (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "16"))
                                                      (rule "leq_literals" (formula "18") (term "0"))
                                                       (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "24"))
                                                      (rule "leq_literals" (formula "23") (term "0"))
                                                       (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0"))
                                                      (rule "qeq_literals" (formula "3") (term "0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "24"))
                                                      (rule "leq_literals" (formula "11") (term "0"))
                                                       (builtin "One Step Simplification" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "inEqSimp_subsumption6" (formula "59") (term "1") (ifseqformula "2"))
                                                      (rule "greater_literals" (formula "59") (term "0,0,1"))
                                                       (builtin "One Step Simplification" (formula "59"))
                                                      (rule "mul_literals" (formula "59") (term "1,0,1"))
                                                      (rule "leq_literals" (formula "59") (term "0,1"))
                                                       (builtin "One Step Simplification" (formula "59"))
                                                      (rule "inEqSimp_leqRight" (formula "59"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "elimGcdGeq_antec" (formula "1") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=bucket_0") (inst "elimGcdRightDiv=Z(4(2(8(1(4(7(3(7(0(1(#)))))))))))"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,1,0"))
                                                      (rule "leq_literals" (formula "1") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
                                                      (rule "polySimp_addLiterals" (formula "1") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0"))
                                                      (rule "leq_literals" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                      (rule "leq_literals" (formula "3") (term "0"))
                                                       (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcdRightDiv=Z(0(#))"))
                                                      (rule "leq_literals" (formula "19") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                                      (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0"))
                                                      (rule "leq_literals" (formula "19") (term "0"))
                                                       (builtin "One Step Simplification" (formula "19"))
                                                      (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "19"))
                                                      (rule "leq_literals" (formula "9") (term "0"))
                                                       (builtin "One Step Simplification" (formula "9"))
                                                      (rule "true_left" (formula "9"))
                                                      (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "37"))
                                                      (rule "polySimp_mulComm0" (formula "50") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "50") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "50"))
                                                      (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "50") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "14"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                      (rule "add_literals" (formula "15") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "15"))
                                                      (rule "leq_literals" (formula "8") (term "0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "16"))
                                                      (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "32") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                                      (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "50"))
                                                      (rule "mul_literals" (formula "35") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                      (rule "mul_literals" (formula "35") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "19"))
                                                      (rule "polySimp_mulAssoc" (formula "21") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "21") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                      (rule "elimGcdLeq_antec" (formula "21") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))"))
                                                      (rule "leq_literals" (formula "21") (term "0,0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                                      (rule "neg_literal" (formula "21") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                                      (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                      (rule "add_literals" (formula "21") (term "0,0"))
                                                      (rule "qeq_literals" (formula "21") (term "0"))
                                                       (builtin "One Step Simplification" (formula "21"))
                                                      (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "21"))
                                                      (rule "leq_literals" (formula "14") (term "0"))
                                                       (builtin "One Step Simplification" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "inEqSimp_exactShadow3" (formula "45") (ifseqformula "38"))
                                                      (rule "polySimp_mulComm0" (formula "45") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "45") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "45"))
                                                      (rule "polySimp_mulLiterals" (formula "45") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "45") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "15"))
                                                      (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "23") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                      (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                      (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "23"))
                                                      (rule "leq_literals" (formula "8") (term "0"))
                                                       (builtin "One Step Simplification" (formula "8"))
                                                      (rule "true_left" (formula "8"))
                                                      (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "32"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "31") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                      (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "19"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "1") (term "0"))
                                                       (builtin "One Step Simplification" (formula "1"))
                                                      (rule "closeFalse" (formula "1"))
                                                   )
                                                   (branch "Usage"
                                                       (builtin "One Step Simplification" (formula "63"))
                                                      (rule "translateJavaMulInt" (formula "63") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "63") (term "0,1,0"))
                                                      (rule "assignmentAdditionInt" (formula "63") (term "1"))
                                                      (branch "Overflow check"
                                                          (builtin "One Step Simplification" (formula "63"))
                                                         (rule "expand_inInt" (formula "63"))
                                                         (rule "replace_int_MAX" (formula "63") (term "1,0"))
                                                         (rule "replace_int_MIN" (formula "63") (term "0,1"))
                                                         (rule "polySimp_addComm0" (formula "63") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "63") (term "1,1"))
                                                         (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0,0"))
                                                         (rule "inEqSimp_ltToLeq" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "4") (term "1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "1,1,0,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "0,1,0,1,1,0"))
                                                         (rule "polySimp_mulAssoc" (formula "4") (term "0,0,1,0,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "0,0,0,1,0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "0,0,1,0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0,1,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "63") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "63") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "63") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "63") (term "0,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "63") (term "1,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "63") (term "0,0"))
                                                         (rule "add_literals" (formula "63") (term "0,0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "63") (term "1"))
                                                         (rule "mul_literals" (formula "63") (term "1,0,1"))
                                                         (rule "polySimp_addComm1" (formula "63") (term "0,1"))
                                                         (rule "add_literals" (formula "63") (term "0,0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "1,1,1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "0,1,1,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,1,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "63") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "63") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "63") (term "1"))
                                                         (rule "mul_literals" (formula "63") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "16"))
                                                         (rule "leq_literals" (formula "18") (term "0"))
                                                          (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "24"))
                                                         (rule "leq_literals" (formula "23") (term "0"))
                                                          (builtin "One Step Simplification" (formula "23"))
                                                         (rule "true_left" (formula "23"))
                                                         (rule "inEqSimp_subsumption6" (formula "61") (term "1") (ifseqformula "2"))
                                                         (rule "greater_literals" (formula "61") (term "0,0,1"))
                                                          (builtin "One Step Simplification" (formula "61"))
                                                         (rule "mul_literals" (formula "61") (term "1,0,1"))
                                                         (rule "leq_literals" (formula "61") (term "0,1"))
                                                          (builtin "One Step Simplification" (formula "61"))
                                                         (rule "inEqSimp_leqRight" (formula "61"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "26"))
                                                         (rule "leq_literals" (formula "13") (term "0"))
                                                          (builtin "One Step Simplification" (formula "13"))
                                                         (rule "true_left" (formula "13"))
                                                         (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                         (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                         (rule "add_literals" (formula "4") (term "0,0"))
                                                         (rule "qeq_literals" (formula "4") (term "0"))
                                                          (builtin "One Step Simplification" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "elimGcdGeq_antec" (formula "1") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=bucket_0") (inst "elimGcdRightDiv=Z(4(2(8(1(4(7(3(7(0(1(#)))))))))))"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0,0,0,1,0"))
                                                         (rule "leq_literals" (formula "1") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_addLiterals" (formula "1") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0"))
                                                         (rule "leq_literals" (formula "1") (term "0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                         (rule "leq_literals" (formula "3") (term "0"))
                                                          (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcdRightDiv=Z(0(#))"))
                                                         (rule "leq_literals" (formula "19") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "19") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                                         (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                         (rule "add_literals" (formula "19") (term "0,0"))
                                                         (rule "leq_literals" (formula "19") (term "0"))
                                                          (builtin "One Step Simplification" (formula "19"))
                                                         (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "19"))
                                                         (rule "leq_literals" (formula "9") (term "0"))
                                                          (builtin "One Step Simplification" (formula "9"))
                                                         (rule "true_left" (formula "9"))
                                                         (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "49"))
                                                         (rule "mul_literals" (formula "34") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                         (rule "mul_literals" (formula "34") (term "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "14"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                                                         (rule "mul_literals" (formula "15") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "15") (term "0"))
                                                         (rule "add_literals" (formula "15") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                                         (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "15") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "15"))
                                                         (rule "leq_literals" (formula "8") (term "0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "37"))
                                                         (rule "polySimp_mulComm0" (formula "44") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "44") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "44"))
                                                         (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "44") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "50") (ifseqformula "37"))
                                                         (rule "polySimp_mulComm0" (formula "50") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "50") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "50"))
                                                         (rule "polySimp_mulLiterals" (formula "50") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "50") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "19"))
                                                         (rule "polySimp_mulAssoc" (formula "21") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "21") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                         (rule "elimGcdLeq_antec" (formula "21") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))"))
                                                         (rule "leq_literals" (formula "21") (term "0,0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                                                         (rule "neg_literal" (formula "21") (term "0,0,0,0,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,0"))
                                                         (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                                         (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                                         (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                         (rule "add_literals" (formula "21") (term "0,0"))
                                                         (rule "qeq_literals" (formula "21") (term "0"))
                                                          (builtin "One Step Simplification" (formula "21"))
                                                         (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "21"))
                                                         (rule "leq_literals" (formula "14") (term "0"))
                                                          (builtin "One Step Simplification" (formula "14"))
                                                         (rule "true_left" (formula "14"))
                                                         (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "15"))
                                                         (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "32") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                                         (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "15"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "23") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "23"))
                                                         (rule "leq_literals" (formula "8") (term "0"))
                                                          (builtin "One Step Simplification" (formula "8"))
                                                         (rule "true_left" (formula "8"))
                                                         (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "32"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "31") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "31"))
                                                         (rule "polySimp_mulLiterals" (formula "31") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "31") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "19"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "inEqSimp_contradInEq0" (formula "1") (ifseqformula "2"))
                                                         (rule "qeq_literals" (formula "1") (term "0"))
                                                          (builtin "One Step Simplification" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch "Usage"
                                                          (builtin "One Step Simplification" (formula "63"))
                                                         (rule "translateJavaAddInt" (formula "63") (term "0,1,0"))
                                                         (rule "polySimp_addComm0" (formula "63") (term "0,1,0"))
                                                         (rule "assignment_to_primitive_array_component" (formula "63"))
                                                         (branch "Normal Execution (x_arr_4 != null)"
                                                             (builtin "One Step Simplification" (formula "63"))
                                                             (builtin "Block Contract (Internal)" (formula "63") (newnames "exc_1,heap_Before_BLOCK_3,savedHeap_Before_BLOCK_3,o,f"))
                                                            (branch "Validity"
                                                                (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "14")) (ifInst ""  (formula "60")) (ifInst ""  (formula "6")))
                                                                (builtin "One Step Simplification" (formula "64"))
                                                               (rule "andLeft" (formula "58"))
                                                               (rule "eqSymm" (formula "65") (term "0,0,1,0,1"))
                                                               (rule "dismissNonSelectedField" (formula "59") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "59") (term "0"))
                                                                (builtin "One Step Simplification" (formula "59"))
                                                               (rule "dismissNonSelectedField" (formula "59") (term "0,0,0"))
                                                               (rule "dismissNonSelectedField" (formula "59") (term "0,0,0"))
                                                               (rule "dismissNonSelectedField" (formula "59") (term "0,0,0"))
                                                               (rule "dismissNonSelectedField" (formula "59") (term "0,0,0"))
                                                               (rule "dismissNonSelectedField" (formula "59") (term "0,0,0"))
                                                               (rule "replaceKnownSelect_taclet21200100120112_17" (formula "59") (term "0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet21200100120112_19" (formula "59") (term "0,0,0"))
                                                                (builtin "One Step Simplification" (formula "59"))
                                                               (rule "true_left" (formula "59"))
                                                               (rule "variableDeclarationAssign" (formula "64") (term "1"))
                                                               (rule "variableDeclaration" (formula "64") (term "1") (newnames "exc_1_1"))
                                                               (rule "assignment" (formula "64") (term "1"))
                                                                (builtin "One Step Simplification" (formula "64"))
                                                               (rule "emptyStatement" (formula "64") (term "1"))
                                                                (builtin "One Step Simplification" (formula "64"))
                                                               (rule "emptyStatement" (formula "64") (term "1"))
                                                               (rule "tryEmpty" (formula "64") (term "1"))
                                                               (rule "blockEmptyLabel" (formula "64") (term "1"))
                                                               (rule "blockEmpty" (formula "64") (term "1"))
                                                               (rule "methodCallEmpty" (formula "64") (term "1"))
                                                                (builtin "One Step Simplification" (formula "64"))
                                                               (rule "emptyModality" (formula "64") (term "1"))
                                                               (rule "andRight" (formula "64"))
                                                               (branch
                                                                   (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "closeTrue" (formula "64"))
                                                               )
                                                               (branch
                                                                   (builtin "One Step Simplification" (formula "64"))
                                                                  (rule "closeTrue" (formula "64"))
                                                               )
                                                            )
                                                            (branch "Precondition"
                                                               (rule "andRight" (formula "63"))
                                                               (branch
                                                                  (rule "andRight" (formula "63"))
                                                                  (branch
                                                                      (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "14")))
                                                                     (rule "closeTrue" (formula "63"))
                                                                  )
                                                                  (branch
                                                                      (builtin "One Step Simplification" (formula "63"))
                                                                     (rule "wellFormedStorePrimitiveArray" (formula "63"))
                                                                     (rule "wellFormedStorePrimitiveArray" (formula "63"))
                                                                     (rule "wellFormedAnon" (formula "63"))
                                                                     (rule "wellFormedAnon" (formula "63") (term "0"))
                                                                     (rule "replace_known_left" (formula "63") (term "1,0") (ifseqformula "5"))
                                                                      (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "51")))
                                                                     (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "4") (term "1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "1,1,0,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "0,1,0,1,1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "4") (term "0,0,1,0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "0,0,0,1,0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "0,0,1,0,1,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "4") (term "0,1,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "1,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "1,1,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "0,1,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,1,1,0"))
                                                                     (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "16"))
                                                                     (rule "leq_literals" (formula "18") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "18"))
                                                                     (rule "true_left" (formula "18"))
                                                                     (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "24"))
                                                                     (rule "leq_literals" (formula "23") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "23"))
                                                                     (rule "true_left" (formula "23"))
                                                                     (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "25"))
                                                                     (rule "leq_literals" (formula "12") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "12"))
                                                                     (rule "true_left" (formula "12"))
                                                                     (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                                     (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "3") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "3") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "true_left" (formula "3"))
                                                                     (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                     (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                                                                     (rule "leq_literals" (formula "19") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_addLiterals" (formula "19") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "19") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                                                     (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "19") (term "0,0"))
                                                                     (rule "leq_literals" (formula "19") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "19"))
                                                                     (rule "leq_literals" (formula "9") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "true_left" (formula "9"))
                                                                     (rule "wellFormedStoreObject" (formula "58"))
                                                                      (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "56")))
                                                                     (rule "wellFormedStorePrimitive" (formula "58") (term "0"))
                                                                     (rule "wellFormedStorePrimitive" (formula "58") (term "0"))
                                                                     (rule "wellFormedStorePrimitive" (formula "58") (term "0"))
                                                                     (rule "wellFormedStorePrimitive" (formula "58") (term "0"))
                                                                     (rule "wellFormedCreate" (formula "58") (term "0"))
                                                                     (rule "replace_known_left" (formula "58") (term "0") (ifseqformula "6"))
                                                                      (builtin "One Step Simplification" (formula "58"))
                                                                     (rule "dismissNonSelectedField" (formula "58") (term "0"))
                                                                     (rule "dismissNonSelectedField" (formula "58") (term "0"))
                                                                     (rule "dismissNonSelectedField" (formula "58") (term "0"))
                                                                     (rule "dismissNonSelectedField" (formula "58") (term "0"))
                                                                     (rule "pullOutSelect" (formula "58") (term "0") (inst "selectSK=java_lang_Object_created__2"))
                                                                     (rule "simplifySelectOfCreate" (formula "1"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "55")))
                                                                     (rule "castDel" (formula "1") (term "1,0"))
                                                                     (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                                                     (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "55"))
                                                                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "57")))
                                                                     (rule "applyEqReverse" (formula "59") (term "0") (ifseqformula "1"))
                                                                     (rule "close" (formula "59") (ifseqformula "11"))
                                                                  )
                                                               )
                                                               (branch
                                                                  (rule "andRight" (formula "63"))
                                                                  (branch
                                                                     (rule "andRight" (formula "63"))
                                                                     (branch
                                                                         (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "59")))
                                                                        (rule "closeTrue" (formula "63"))
                                                                     )
                                                                     (branch
                                                                         (builtin "One Step Simplification" (formula "63"))
                                                                        (rule "dismissNonSelectedField" (formula "63") (term "0"))
                                                                        (rule "dismissNonSelectedField" (formula "63") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "63"))
                                                                        (rule "orRight" (formula "63"))
                                                                        (rule "orRight" (formula "63"))
                                                                        (rule "dismissNonSelectedField" (formula "63") (term "0"))
                                                                        (rule "dismissNonSelectedField" (formula "63") (term "0"))
                                                                        (rule "dismissNonSelectedField" (formula "63") (term "0"))
                                                                        (rule "dismissNonSelectedField" (formula "63") (term "0"))
                                                                        (rule "dismissNonSelectedField" (formula "63") (term "0"))
                                                                        (rule "replaceKnownSelect_taclet21200100120112_17" (formula "63") (term "0"))
                                                                        (rule "replaceKnownAuxiliaryConstant_taclet21200100120112_19" (formula "63") (term "0"))
                                                                         (builtin "One Step Simplification" (formula "63"))
                                                                        (rule "closeTrue" (formula "63"))
                                                                     )
                                                                  )
                                                                  (branch
                                                                      (builtin "One Step Simplification" (formula "63") (ifInst ""  (formula "6")))
                                                                     (rule "closeTrue" (formula "63"))
                                                                  )
                                                               )
                                                            )
                                                            (branch "Usage"
                                                                (builtin "One Step Simplification" (formula "64"))
                                                                (builtin "One Step Simplification" (formula "58"))
                                                               (rule "andLeft" (formula "58"))
                                                               (rule "andLeft" (formula "58"))
                                                               (rule "translateJavaAddInt" (formula "60") (term "0,2,1,0"))
                                                               (rule "replace_known_left" (formula "59") (term "0") (ifseqformula "58"))
                                                                (builtin "One Step Simplification" (formula "59"))
                                                               (rule "true_left" (formula "59"))
                                                               (rule "polySimp_addComm0" (formula "59") (term "0,2,1,0"))
                                                               (rule "pullOutSelect" (formula "59") (term "0,0") (inst "selectSK=arr_4"))
                                                               (rule "simplifySelectOfStore" (formula "59"))
                                                                (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "63")))
                                                               (rule "simplifySelectOfStore" (formula "59"))
                                                                (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "63")))
                                                               (rule "simplifySelectOfAnon" (formula "59"))
                                                                (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "65")))
                                                               (rule "replaceKnownSelect_taclet20112_3" (formula "59") (term "2,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet20112_12" (formula "59") (term "2,0"))
                                                               (rule "dismissNonSelectedField" (formula "59") (term "0,0,0,0,0"))
                                                               (rule "dismissNonSelectedField" (formula "59") (term "0,0,0,0,0"))
                                                               (rule "ifthenelse_negated" (formula "59") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "59") (term "0,0,0,0"))
                                                               (rule "dismissNonSelectedField" (formula "59") (term "0,0,0,0"))
                                                               (rule "dismissNonSelectedField" (formula "59") (term "0,0,0,0"))
                                                               (rule "replaceKnownSelect_taclet20112_8" (formula "59") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet20112_9" (formula "59") (term "0,0,0,0"))
                                                               (rule "replace_known_left" (formula "59") (term "0,0,0") (ifseqformula "8"))
                                                                (builtin "One Step Simplification" (formula "59"))
                                                               (rule "applyEqReverse" (formula "60") (term "0,0") (ifseqformula "59"))
                                                               (rule "hideAuxiliaryEq" (formula "59"))
                                                               (rule "pullOutSelect" (formula "59") (term "1,0") (inst "selectSK=arr_5"))
                                                               (rule "simplifySelectOfStore" (formula "59"))
                                                                (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "63")))
                                                               (rule "simplifySelectOfStore" (formula "59"))
                                                                (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "63")))
                                                               (rule "simplifySelectOfAnon" (formula "59"))
                                                                (builtin "One Step Simplification" (formula "59") (ifInst ""  (formula "65")))
                                                               (rule "replaceKnownSelect_taclet20112_4" (formula "59") (term "2,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet20112_11" (formula "59") (term "2,0"))
                                                               (rule "dismissNonSelectedField" (formula "59") (term "0,0,0,0,0"))
                                                               (rule "dismissNonSelectedField" (formula "59") (term "0,0,0,0,0"))
                                                               (rule "ifthenelse_negated" (formula "59") (term "0"))
                                                               (rule "dismissNonSelectedField" (formula "59") (term "0,0,0,0"))
                                                               (rule "dismissNonSelectedField" (formula "59") (term "0,0,0,0"))
                                                               (rule "dismissNonSelectedField" (formula "59") (term "0,0,0,0"))
                                                               (rule "replaceKnownSelect_taclet20112_8" (formula "59") (term "0,0,0,0"))
                                                               (rule "replaceKnownAuxiliaryConstant_taclet20112_9" (formula "59") (term "0,0,0,0"))
                                                               (rule "replace_known_left" (formula "59") (term "0,0,0") (ifseqformula "8"))
                                                                (builtin "One Step Simplification" (formula "59"))
                                                               (rule "applyEqReverse" (formula "60") (term "1,0") (ifseqformula "59"))
                                                               (rule "hideAuxiliaryEq" (formula "59"))
                                                               (rule "elim_double_block_2" (formula "65") (term "1"))
                                                               (rule "ifUnfold" (formula "65") (term "1") (inst "#boolv=x_2"))
                                                               (rule "variableDeclaration" (formula "65") (term "1") (newnames "x_10"))
                                                               (rule "inequality_comparison_simple" (formula "65") (term "1"))
                                                                (builtin "One Step Simplification" (formula "65"))
                                                               (rule "replace_known_left" (formula "65") (term "0,0,1,0") (ifseqformula "58"))
                                                                (builtin "One Step Simplification" (formula "65"))
                                                               (rule "ifSplit" (formula "65"))
                                                               (branch "if x_10 true"
                                                                   (builtin "One Step Simplification" (formula "66"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "closeFalse" (formula "1"))
                                                               )
                                                               (branch "if x_10 false"
                                                                   (builtin "One Step Simplification" (formula "66"))
                                                                   (builtin "One Step Simplification" (formula "1"))
                                                                  (rule "true_left" (formula "1"))
                                                                  (rule "blockEmpty" (formula "65") (term "1"))
                                                                  (rule "emptyStatement" (formula "65") (term "1"))
                                                                  (rule "blockEmpty" (formula "65") (term "1"))
                                                                  (rule "preincrement" (formula "65") (term "1"))
                                                                  (rule "compound_int_cast_expression" (formula "65") (term "1") (inst "#v=x_2"))
                                                                  (rule "variableDeclarationAssign" (formula "65") (term "1"))
                                                                  (rule "variableDeclaration" (formula "65") (term "1") (newnames "x_11"))
                                                                  (rule "remove_parentheses_right" (formula "65") (term "1"))
                                                                  (rule "assignmentAdditionInt" (formula "65") (term "1"))
                                                                  (branch "Overflow check"
                                                                      (builtin "One Step Simplification" (formula "65"))
                                                                     (rule "expand_inInt" (formula "65"))
                                                                     (rule "replace_int_MIN" (formula "65") (term "0,1"))
                                                                     (rule "replace_int_MAX" (formula "65") (term "1,0"))
                                                                     (rule "polySimp_addComm0" (formula "65") (term "1,1"))
                                                                     (rule "polySimp_addComm0" (formula "65") (term "0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "4") (term "1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "1,1,0,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "0,1,0,1,1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "4") (term "0,0,1,0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "0,0,0,1,0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "0,0,1,0,1,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "4") (term "0,1,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,1,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "65") (term "1"))
                                                                     (rule "mul_literals" (formula "65") (term "1,0,1"))
                                                                     (rule "polySimp_addComm1" (formula "65") (term "0,1"))
                                                                     (rule "add_literals" (formula "65") (term "0,0,1"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "65") (term "0"))
                                                                     (rule "polySimp_mulComm0" (formula "65") (term "1,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "65") (term "1,0,0"))
                                                                     (rule "mul_literals" (formula "65") (term "0,1,0,0"))
                                                                     (rule "polySimp_addAssoc" (formula "65") (term "0,0"))
                                                                     (rule "add_literals" (formula "65") (term "0,0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "1,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "4") (term "1,1,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "4") (term "0,1,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,1,1,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "65") (term "1"))
                                                                     (rule "mul_literals" (formula "65") (term "1,1"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "65") (term "0"))
                                                                     (rule "polySimp_mulLiterals" (formula "65") (term "0,0"))
                                                                     (rule "polySimp_elimOne" (formula "65") (term "0,0"))
                                                                     (rule "inEqSimp_subsumption1" (formula "65") (term "1") (ifseqformula "2"))
                                                                     (rule "leq_literals" (formula "65") (term "0,1"))
                                                                      (builtin "One Step Simplification" (formula "65"))
                                                                     (rule "inEqSimp_leqRight" (formula "65"))
                                                                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                                     (rule "mul_literals" (formula "1") (term "1"))
                                                                     (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                                     (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "4") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "4") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "true_left" (formula "4"))
                                                                     (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "27"))
                                                                     (rule "leq_literals" (formula "12") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "12"))
                                                                     (rule "true_left" (formula "12"))
                                                                     (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "24"))
                                                                     (rule "leq_literals" (formula "23") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "23"))
                                                                     (rule "true_left" (formula "23"))
                                                                     (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "15"))
                                                                     (rule "leq_literals" (formula "17") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "17"))
                                                                     (rule "true_left" (formula "17"))
                                                                     (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                                                     (rule "leq_literals" (formula "3") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "3"))
                                                                     (rule "true_left" (formula "3"))
                                                                     (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcdRightDiv=Z(0(#))"))
                                                                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                                                                     (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,1,0"))
                                                                     (rule "leq_literals" (formula "19") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                                                                     (rule "times_zero_1" (formula "19") (term "1,0,0,0,0"))
                                                                     (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                                                     (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "19") (term "0,0"))
                                                                     (rule "leq_literals" (formula "19") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "19"))
                                                                     (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "19"))
                                                                     (rule "leq_literals" (formula "9") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "9"))
                                                                     (rule "true_left" (formula "9"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "44") (ifseqformula "37"))
                                                                     (rule "polySimp_mulComm0" (formula "44") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "44") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "44"))
                                                                     (rule "polySimp_mulLiterals" (formula "44") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "44") (term "0"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "16"))
                                                                     (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "32") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                                                                     (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "32") (term "0"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "19"))
                                                                     (rule "polySimp_mulAssoc" (formula "21") (term "0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "21") (term "0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "21") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "21") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                                                     (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                                     (rule "elimGcdLeq_antec" (formula "21") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))"))
                                                                     (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,1,0"))
                                                                     (rule "neg_literal" (formula "21") (term "0,0,0,0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,1,0"))
                                                                     (rule "leq_literals" (formula "21") (term "0,0"))
                                                                      (builtin "One Step Simplification" (formula "21"))
                                                                     (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
                                                                     (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                                                     (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                                                                     (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "21") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "21") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "21"))
                                                                     (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "21"))
                                                                     (rule "leq_literals" (formula "8") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "true_left" (formula "8"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "50"))
                                                                     (rule "mul_literals" (formula "35") (term "0,0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                                     (rule "mul_literals" (formula "35") (term "1"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "13"))
                                                                     (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                                                     (rule "mul_literals" (formula "14") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "14") (term "0"))
                                                                     (rule "add_literals" (formula "14") (term "0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                                                     (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "14") (term "0"))
                                                                     (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "21"))
                                                                     (rule "leq_literals" (formula "14") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "14"))
                                                                     (rule "true_left" (formula "14"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "15"))
                                                                     (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "23") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                                                     (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "23") (term "0"))
                                                                     (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "23"))
                                                                     (rule "leq_literals" (formula "8") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "8"))
                                                                     (rule "true_left" (formula "8"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "38"))
                                                                     (rule "polySimp_mulComm0" (formula "51") (term "0,0"))
                                                                     (rule "polySimp_addComm0" (formula "51") (term "0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "51"))
                                                                     (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "51") (term "0"))
                                                                     (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "19"))
                                                                     (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                                     (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                                     (rule "add_literals" (formula "2") (term "0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                     (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "1"))
                                                                     (rule "qeq_literals" (formula "2") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "2"))
                                                                     (rule "closeFalse" (formula "2"))
                                                                  )
                                                                  (branch "Usage"
                                                                      (builtin "One Step Simplification" (formula "65"))
                                                                     (rule "translateJavaAddInt" (formula "65") (term "0,1,0"))
                                                                     (rule "polySimp_addComm0" (formula "65") (term "0,1,0"))
                                                                     (rule "widening_identity_cast_5" (formula "65") (term "1"))
                                                                     (rule "assignment" (formula "65") (term "1"))
                                                                      (builtin "One Step Simplification" (formula "65"))
                                                                     (rule "blockEmpty" (formula "65") (term "1"))
                                                                     (rule "lsContinue" (formula "65") (term "1"))
                                                                      (builtin "One Step Simplification" (formula "65"))
                                                                     (rule "polySimp_mulComm0" (formula "65") (term "0,0"))
                                                                     (rule "polySimp_rightDist" (formula "65") (term "0,0"))
                                                                     (rule "mul_literals" (formula "65") (term "0,0,0"))
                                                                     (rule "precOfInt" (formula "65"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "1"))
                                                                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0,0"))
                                                                     (rule "inEqSimp_ltToLeq" (formula "65") (term "1"))
                                                                     (rule "polySimp_rightDist" (formula "65") (term "1,0,0,1"))
                                                                     (rule "polySimp_mulAssoc" (formula "65") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_mulComm0" (formula "65") (term "0,0,1,0,0,1"))
                                                                     (rule "polySimp_mulLiterals" (formula "65") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_elimOne" (formula "65") (term "0,1,0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "65") (term "0,0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "65") (term "0,1"))
                                                                     (rule "polySimp_addComm1" (formula "65") (term "0,0,1"))
                                                                     (rule "polySimp_pullOutFactor2b" (formula "65") (term "0,1"))
                                                                     (rule "add_literals" (formula "65") (term "1,1,0,1"))
                                                                     (rule "times_zero_1" (formula "65") (term "1,0,1"))
                                                                     (rule "add_zero_right" (formula "65") (term "0,1"))
                                                                     (rule "polySimp_addAssoc" (formula "65") (term "0,1"))
                                                                     (rule "polySimp_addComm1" (formula "65") (term "0,0,1"))
                                                                     (rule "add_literals" (formula "65") (term "0,0,0,1"))
                                                                     (rule "add_zero_left" (formula "65") (term "0,0,1"))
                                                                     (rule "polySimp_pullOutFactor1" (formula "65") (term "0,1"))
                                                                     (rule "add_literals" (formula "65") (term "1,0,1"))
                                                                     (rule "times_zero_1" (formula "65") (term "0,1"))
                                                                     (rule "leq_literals" (formula "65") (term "1"))
                                                                      (builtin "One Step Simplification" (formula "65"))
                                                                     (rule "inEqSimp_leqRight" (formula "65"))
                                                                     (rule "add_zero_right" (formula "1") (term "0"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                                     (rule "polySimp_rightDist" (formula "1") (term "0,1,0"))
                                                                     (rule "mul_literals" (formula "1") (term "0,0,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "1,0,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "1,0,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                                     (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                                     (rule "add_literals" (formula "1") (term "0,0,0"))
                                                                     (rule "add_zero_left" (formula "1") (term "0,0"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "5") (term "1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "1,0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "5") (term "1,1,0,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "0,1,0,1,1,0"))
                                                                     (rule "polySimp_mulAssoc" (formula "5") (term "0,0,1,0,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,1,0,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "0,0,1,0,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "5") (term "0,0,1,0,1,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "5") (term "0,1,1,0"))
                                                                     (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,1,0"))
                                                                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,0"))
                                                                     (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                                                                     (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,0"))
                                                                     (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,0"))
                                                                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                                                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                                                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                                                                     (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "5") (term "1,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "1,1,1,0"))
                                                                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,1,0"))
                                                                     (rule "polySimp_elimOne" (formula "5") (term "1,1,1,1,0"))
                                                                     (rule "polySimp_rightDist" (formula "5") (term "0,1,1,1,0"))
                                                                     (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,1,1,0"))
                                                                     (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
                                                                     (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                                     (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                                     (rule "add_literals" (formula "4") (term "0,0"))
                                                                     (rule "qeq_literals" (formula "4") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "4"))
                                                                     (rule "true_left" (formula "4"))
                                                                     (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "27"))
                                                                     (rule "leq_literals" (formula "12") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "12"))
                                                                     (rule "true_left" (formula "12"))
                                                                     (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "24"))
                                                                     (rule "leq_literals" (formula "23") (term "0"))
                                                                      (builtin "One Step Simplification" (formula "23"))
                                                                     (rule "true_left" (formula "23"))
                                                                     (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                                                                     (rule "andLeft" (formula "2"))
                                                                     (rule "inEqSimp_homoInEq1" (formula "2"))
                                                                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                                     (rule "add_literals" (formula "2") (term "1,1,0"))
                                                                     (rule "times_zero_1" (formula "2") (term "1,0"))
                                                                     (rule "add_literals" (formula "2") (term "0"))
                                                                     (rule "leq_literals" (formula "2"))
                                                                     (rule "closeFalse" (formula "2"))
                                                                  )
                                                               )
                                                            )
                                                         )
                                                         (branch "Null Reference (x_arr_4 = null)"
                                                            (rule "false_right" (formula "64"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")))
                                                            (rule "closeFalse" (formula "1"))
                                                         )
                                                         (branch "Index Out of Bounds (x_arr_4 != null, but x_8 Out of Bounds!)"
                                                            (rule "false_right" (formula "64"))
                                                             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")))
                                                            (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0,0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                            (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                                                            (rule "add_literals" (formula "1") (term "0,0,1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "5") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "1,1,0,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "0,1,0,1,1,0"))
                                                            (rule "polySimp_mulAssoc" (formula "5") (term "0,0,1,0,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,1,0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "0,0,1,0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "0,0,1,0,1,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "5") (term "0,1,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                                                            (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,0"))
                                                            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                            (rule "mul_literals" (formula "1") (term "1,1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "1,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "5") (term "1,1,1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "5") (term "0,1,1,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,1,1,0"))
                                                            (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "28"))
                                                            (rule "leq_literals" (formula "13") (term "0"))
                                                             (builtin "One Step Simplification" (formula "13"))
                                                            (rule "true_left" (formula "13"))
                                                            (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                            (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                            (rule "add_literals" (formula "4") (term "0,0"))
                                                            (rule "qeq_literals" (formula "4") (term "0"))
                                                             (builtin "One Step Simplification" (formula "4"))
                                                            (rule "true_left" (formula "4"))
                                                            (rule "inEqSimp_contradInEq5" (formula "1") (term "1") (ifseqformula "3"))
                                                            (rule "greater_literals" (formula "1") (term "0,0,1"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "mul_literals" (formula "1") (term "1,0,1"))
                                                            (rule "qeq_literals" (formula "1") (term "0,1"))
                                                             (builtin "One Step Simplification" (formula "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "15"))
                                                            (rule "leq_literals" (formula "17") (term "0"))
                                                             (builtin "One Step Simplification" (formula "17"))
                                                            (rule "true_left" (formula "17"))
                                                            (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "23"))
                                                            (rule "leq_literals" (formula "22") (term "0"))
                                                             (builtin "One Step Simplification" (formula "22"))
                                                            (rule "true_left" (formula "22"))
                                                            (rule "elimGcdGeq_antec" (formula "20") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcdRightDiv=Z(0(#))"))
                                                            (rule "leq_literals" (formula "20") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "20"))
                                                            (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                                                            (rule "polySimp_addLiterals" (formula "20") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "20") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                                            (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                            (rule "add_literals" (formula "20") (term "0,0"))
                                                            (rule "leq_literals" (formula "20") (term "0"))
                                                             (builtin "One Step Simplification" (formula "20"))
                                                            (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "20"))
                                                            (rule "leq_literals" (formula "10") (term "0"))
                                                             (builtin "One Step Simplification" (formula "10"))
                                                            (rule "true_left" (formula "10"))
                                                            (rule "inEqSimp_exactShadow3" (formula "51") (ifseqformula "38"))
                                                            (rule "polySimp_mulComm0" (formula "51") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "51") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "51"))
                                                            (rule "polySimp_mulLiterals" (formula "51") (term "0"))
                                                            (rule "polySimp_elimOne" (formula "51") (term "0"))
                                                            (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                                            (rule "polySimp_mulAssoc" (formula "22") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "0,0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "22") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "22") (term "0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                                            (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                            (rule "inEqSimp_contradInEq5" (formula "22") (ifseqformula "2"))
                                                            (rule "greater_literals" (formula "22") (term "0,0"))
                                                             (builtin "One Step Simplification" (formula "22"))
                                                            (rule "andLeft" (formula "22"))
                                                            (rule "polySimp_rightDist" (formula "22") (term "1"))
                                                            (rule "mul_literals" (formula "22") (term "0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "22"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                            (rule "mul_literals" (formula "22") (term "0,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                                            (rule "add_literals" (formula "22") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor0b" (formula "22") (term "0"))
                                                            (rule "add_literals" (formula "22") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "22") (term "1,0"))
                                                            (rule "add_literals" (formula "22") (term "0"))
                                                            (rule "leq_literals" (formula "22"))
                                                            (rule "closeFalse" (formula "22"))
                                                         )
                                                      )
                                                   )
                                                )
                                                (branch "Null Reference (x_arr_2 = null)"
                                                   (rule "false_right" (formula "64"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")))
                                                   (rule "closeFalse" (formula "1"))
                                                )
                                                (branch "Index Out of Bounds (x_arr_2 != null, but x_7 Out of Bounds!)"
                                                   (rule "false_right" (formula "64"))
                                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "62")))
                                                   (rule "inEqSimp_ltToLeq" (formula "2"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0,0"))
                                                   (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "5") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,1,0,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "0,1,0,1,1,0"))
                                                   (rule "polySimp_mulAssoc" (formula "5") (term "0,0,1,0,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,1,0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "0,0,1,0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "0,0,1,0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "0,1,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                                                   (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "1,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "5") (term "1,1,1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "5") (term "0,1,1,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,1,1,0"))
                                                   (rule "inEqSimp_contradInEq5" (formula "1") (term "1") (ifseqformula "3"))
                                                   (rule "greater_literals" (formula "1") (term "0,0,1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,1"))
                                                   (rule "qeq_literals" (formula "1") (term "0,1"))
                                                    (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "25") (ifseqformula "26"))
                                                   (rule "leq_literals" (formula "25") (term "0"))
                                                    (builtin "One Step Simplification" (formula "25"))
                                                   (rule "true_left" (formula "25"))
                                                   (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "17"))
                                                   (rule "leq_literals" (formula "19") (term "0"))
                                                    (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "26"))
                                                   (rule "leq_literals" (formula "13") (term "0"))
                                                    (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                   (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                   (rule "add_literals" (formula "4") (term "0,0"))
                                                   (rule "qeq_literals" (formula "4") (term "0"))
                                                    (builtin "One Step Simplification" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "elimGcdGeq_antec" (formula "20") (inst "elimGcd=Z(2(#))") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcdRightDiv=Z(0(#))"))
                                                   (rule "add_zero_right" (formula "20") (term "0,0,0,1,0"))
                                                   (rule "leq_literals" (formula "20") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                                                   (rule "times_zero_1" (formula "20") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                                                   (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                   (rule "add_literals" (formula "20") (term "0,0"))
                                                   (rule "leq_literals" (formula "20") (term "0"))
                                                    (builtin "One Step Simplification" (formula "20"))
                                                   (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "20"))
                                                   (rule "leq_literals" (formula "10") (term "0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "17"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "24") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                   (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "24"))
                                                   (rule "leq_literals" (formula "10") (term "0"))
                                                    (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                                                   (rule "polySimp_mulAssoc" (formula "21") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "21") (term "0,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "21") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "21") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                                   (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                   (rule "inEqSimp_contradInEq5" (formula "21") (ifseqformula "2"))
                                                   (rule "greater_literals" (formula "21") (term "0,0"))
                                                    (builtin "One Step Simplification" (formula "21"))
                                                   (rule "andLeft" (formula "21"))
                                                   (rule "polySimp_rightDist" (formula "21") (term "1"))
                                                   (rule "mul_literals" (formula "21") (term "0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "21"))
                                                   (rule "polySimp_mulLiterals" (formula "21") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor0b" (formula "21") (term "0"))
                                                   (rule "add_literals" (formula "21") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "21") (term "1,0"))
                                                   (rule "add_literals" (formula "21") (term "0"))
                                                   (rule "leq_literals" (formula "21"))
                                                   (rule "closeFalse" (formula "21"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                 )
                              )
                              (branch "Exceptional Post (align_to_next_block)"
                                  (builtin "One Step Simplification" (formula "42"))
                                  (builtin "One Step Simplification" (formula "48"))
                                 (rule "andLeft" (formula "42"))
                                 (rule "andLeft" (formula "42"))
                                 (rule "notLeft" (formula "42"))
                                 (rule "close" (formula "44") (ifseqformula "43"))
                              )
                              (branch "Pre (align_to_next_block)"
                                  (builtin "One Step Simplification" (formula "47"))
                                 (rule "wellFormedAnon" (formula "47") (term "0"))
                                 (rule "expand_inInt" (formula "47") (term "1"))
                                 (rule "replace_int_MIN" (formula "47") (term "0,1,1"))
                                 (rule "replace_int_MAX" (formula "47") (term "1,0,1"))
                                 (rule "replace_known_left" (formula "47") (term "1,0") (ifseqformula "5"))
                                  (builtin "One Step Simplification" (formula "47"))
                                 (rule "inEqSimp_ltToLeq" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0,0"))
                                 (rule "inEqSimp_commuteLeq" (formula "47") (term "1,1"))
                                 (rule "inEqSimp_homoInEq0" (formula "4") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1,0,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,1,0,1,1,0"))
                                 (rule "polySimp_mulAssoc" (formula "4") (term "0,0,1,0,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "0,0,0,1,0,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0,0,1,0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,1,1,0"))
                                 (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,1,0"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,0,0"))
                                 (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "1,1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "1,1,1,1,0"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,1,1,1,0"))
                                 (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,1,1,0"))
                                 (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "27"))
                                 (rule "leq_literals" (formula "12") (term "0"))
                                  (builtin "One Step Simplification" (formula "12"))
                                 (rule "true_left" (formula "12"))
                                 (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "15"))
                                 (rule "leq_literals" (formula "17") (term "0"))
                                  (builtin "One Step Simplification" (formula "17"))
                                 (rule "true_left" (formula "17"))
                                 (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                  (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "22"))
                                 (rule "leq_literals" (formula "21") (term "0"))
                                  (builtin "One Step Simplification" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcd=Z(2(#))"))
                                 (rule "add_zero_right" (formula "19") (term "0,0,0,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,1,0"))
                                 (rule "leq_literals" (formula "19") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "19") (term "0,0"))
                                 (rule "leq_literals" (formula "19") (term "0"))
                                  (builtin "One Step Simplification" (formula "19"))
                                 (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "19"))
                                 (rule "leq_literals" (formula "9") (term "0"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "wellFormedStoreObject" (formula "42") (term "0"))
                                  (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "40")))
                                 (rule "wellFormedStorePrimitive" (formula "42") (term "0,0"))
                                 (rule "wellFormedStorePrimitive" (formula "42") (term "0,0"))
                                 (rule "wellFormedStorePrimitive" (formula "42") (term "0,0"))
                                 (rule "wellFormedStorePrimitive" (formula "42") (term "0,0"))
                                 (rule "wellFormedCreate" (formula "42") (term "0,0"))
                                 (rule "replace_known_left" (formula "42") (term "0,0") (ifseqformula "6"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "dismissNonSelectedField" (formula "42") (term "0,0"))
                                 (rule "dismissNonSelectedField" (formula "42") (term "0,0"))
                                 (rule "dismissNonSelectedField" (formula "42") (term "0,0"))
                                 (rule "dismissNonSelectedField" (formula "42") (term "0,0"))
                                 (rule "pullOutSelect" (formula "42") (term "0,0") (inst "selectSK=java_lang_Object_created__1"))
                                 (rule "simplifySelectOfCreate" (formula "1"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "39")))
                                 (rule "castDel" (formula "1") (term "1,0"))
                                 (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                                 (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "39"))
                                  (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                 (rule "applyEqReverse" (formula "43") (term "0,0") (ifseqformula "1"))
                                 (rule "hideAuxiliaryEq" (formula "1"))
                                 (rule "replace_known_left" (formula "42") (term "0") (ifseqformula "10"))
                                  (builtin "One Step Simplification" (formula "42"))
                                 (rule "inEqSimp_exactShadow3" (formula "23") (ifseqformula "16"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "23") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "23"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                                 (rule "polySimp_elimOne" (formula "23") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "23"))
                                 (rule "leq_literals" (formula "9") (term "0"))
                                  (builtin "One Step Simplification" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "8"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "16"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "33") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "44") (term "0") (ifseqformula "33"))
                                 (rule "leq_literals" (formula "44") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "44"))
                                 (rule "inEqSimp_geqRight" (formula "44"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_subsumption0" (formula "34") (ifseqformula "1"))
                                 (rule "leq_literals" (formula "34") (term "0"))
                                  (builtin "One Step Simplification" (formula "34"))
                                 (rule "true_left" (formula "34"))
                                 (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "15"))
                                 (rule "polySimp_rightDist" (formula "16") (term "0,0"))
                                 (rule "mul_literals" (formula "16") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "16") (term "0"))
                                 (rule "add_literals" (formula "16") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                 (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                 (rule "polySimp_elimOne" (formula "16") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "16"))
                                 (rule "leq_literals" (formula "10") (term "0"))
                                  (builtin "One Step Simplification" (formula "10"))
                                 (rule "true_left" (formula "10"))
                                 (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "20"))
                                 (rule "polySimp_mulAssoc" (formula "22") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "22") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                 (rule "elimGcdLeq_antec" (formula "22") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcd=Z(2(#))"))
                                 (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0,1,0"))
                                 (rule "neg_literal" (formula "22") (term "0,0,0,0,0,1,0"))
                                 (rule "leq_literals" (formula "22") (term "0,0"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                                 (rule "polySimp_addLiterals" (formula "22") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0"))
                                 (rule "qeq_literals" (formula "22") (term "0"))
                                  (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "22"))
                                 (rule "leq_literals" (formula "15") (term "0"))
                                  (builtin "One Step Simplification" (formula "15"))
                                 (rule "true_left" (formula "15"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "21"))
                                 (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                 (rule "mul_literals" (formula "3") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "add_literals" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "3"))
                                 (rule "leq_literals" (formula "2") (term "0"))
                                  (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "1"))
                                 (rule "polySimp_mulComm0" (formula "33") (term "0,0"))
                                 (rule "polySimp_addComm0" (formula "33") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                                 (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                                 (rule "polySimp_elimOne" (formula "33") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "33") (ifseqformula "32"))
                                 (rule "qeq_literals" (formula "33") (term "0"))
                                  (builtin "One Step Simplification" (formula "33"))
                                 (rule "closeFalse" (formula "33"))
                              )
                           )
                           (branch "Null Reference (x_arr = null)"
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                              (rule "closeFalse" (formula "1"))
                           )
                           (branch "Index Out of Bounds (x_arr != null, but x_4 Out of Bounds!)"
                               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "47")))
                               (builtin "One Step Simplification" (formula "48"))
                              (rule "false_right" (formula "48"))
                              (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0,0"))
                              (rule "inEqSimp_ltToLeq" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                              (rule "add_zero_right" (formula "1") (term "0,0,1"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,1"))
                              (rule "add_literals" (formula "1") (term "0,0,1"))
                              (rule "inEqSimp_homoInEq0" (formula "5") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "5") (term "1,1,0,1,1,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "0,1,0,1,1,0"))
                              (rule "polySimp_mulAssoc" (formula "5") (term "0,0,1,0,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,1,0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "0,0,1,0,1,1,0"))
                              (rule "polySimp_elimOne" (formula "5") (term "0,0,1,0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,1,1,0"))
                              (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                              (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,0"))
                              (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,0"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,1,0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1,1,1,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "1,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,1,0"))
                              (rule "polySimp_elimOne" (formula "5") (term "1,1,1,1,0"))
                              (rule "polySimp_rightDist" (formula "5") (term "0,1,1,1,0"))
                              (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,1,1,0"))
                              (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "17"))
                              (rule "leq_literals" (formula "19") (term "0"))
                               (builtin "One Step Simplification" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "25"))
                              (rule "leq_literals" (formula "24") (term "0"))
                               (builtin "One Step Simplification" (formula "24"))
                              (rule "true_left" (formula "24"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "3"))
                              (rule "qeq_literals" (formula "1") (term "0,1"))
                               (builtin "One Step Simplification" (formula "1"))
                              (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "26"))
                              (rule "leq_literals" (formula "13") (term "0"))
                               (builtin "One Step Simplification" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                              (rule "add_literals" (formula "4") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "4") (term "1,0,0"))
                              (rule "add_zero_right" (formula "4") (term "0,0"))
                              (rule "qeq_literals" (formula "4") (term "0"))
                               (builtin "One Step Simplification" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "elimGcdGeq_antec" (formula "20") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcd=Z(2(#))"))
                              (rule "leq_literals" (formula "20") (term "0,0"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                              (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "20") (term "1,0,0,0,0"))
                              (rule "add_literals" (formula "20") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                              (rule "add_literals" (formula "20") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "20") (term "1,0,0"))
                              (rule "add_zero_right" (formula "20") (term "0,0"))
                              (rule "leq_literals" (formula "20") (term "0"))
                               (builtin "One Step Simplification" (formula "20"))
                              (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "20"))
                              (rule "leq_literals" (formula "10") (term "0"))
                               (builtin "One Step Simplification" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "9"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "2") (term "0"))
                              (rule "add_literals" (formula "2") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                              (rule "polySimp_elimOne" (formula "2") (term "0"))
                              (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "1"))
                              (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                              (rule "mul_literals" (formula "17") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "17") (term "0"))
                              (rule "polySimp_addAssoc" (formula "17") (term "0,0"))
                              (rule "add_literals" (formula "17") (term "0,0,0"))
                              (rule "add_zero_left" (formula "17") (term "0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                              (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                              (rule "polySimp_elimOne" (formula "17") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "17") (ifseqformula "3"))
                              (rule "andLeft" (formula "17"))
                              (rule "inEqSimp_homoInEq1" (formula "17"))
                              (rule "polySimp_pullOutFactor1b" (formula "17") (term "0"))
                              (rule "add_literals" (formula "17") (term "1,1,0"))
                              (rule "times_zero_1" (formula "17") (term "1,0"))
                              (rule "add_zero_right" (formula "17") (term "0"))
                              (rule "leq_literals" (formula "17"))
                              (rule "closeFalse" (formula "17"))
                           )
                        )
                     )
                     (branch "Exceptional Post (align_to_next_block)"
                         (builtin "One Step Simplification" (formula "38"))
                         (builtin "One Step Simplification" (formula "44"))
                        (rule "andLeft" (formula "38"))
                        (rule "andLeft" (formula "38"))
                        (rule "notLeft" (formula "38"))
                        (rule "close" (formula "40") (ifseqformula "39"))
                     )
                     (branch "Pre (align_to_next_block)"
                         (builtin "One Step Simplification" (formula "43"))
                        (rule "wellFormedAnon" (formula "43") (term "0"))
                        (rule "expand_inInt" (formula "43") (term "1"))
                        (rule "replace_int_MAX" (formula "43") (term "1,0,1"))
                        (rule "replace_int_MIN" (formula "43") (term "0,1,1"))
                        (rule "replace_known_left" (formula "43") (term "1,0") (ifseqformula "5"))
                         (builtin "One Step Simplification" (formula "43"))
                        (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "43") (term "1,1"))
                        (rule "inEqSimp_homoInEq0" (formula "4") (term "1,1,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1,0,1,1,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,1,0,1,1,0"))
                        (rule "polySimp_mulAssoc" (formula "4") (term "0,0,1,0,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "0,0,0,1,0,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,0,1,1,0"))
                        (rule "polySimp_elimOne" (formula "4") (term "0,0,1,0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,1,1,0"))
                        (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,1,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
                        (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,0,0"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0,0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,1,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "1,1,1,0"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,1,0"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1,1,1,0"))
                        (rule "polySimp_rightDist" (formula "4") (term "0,1,1,1,0"))
                        (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,1,1,0"))
                        (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "25"))
                        (rule "leq_literals" (formula "24") (term "0"))
                         (builtin "One Step Simplification" (formula "24"))
                        (rule "true_left" (formula "24"))
                        (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "16"))
                        (rule "leq_literals" (formula "18") (term "0"))
                         (builtin "One Step Simplification" (formula "18"))
                        (rule "true_left" (formula "18"))
                        (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                        (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                        (rule "add_literals" (formula "3") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "3") (term "1,0,0"))
                        (rule "add_zero_right" (formula "3") (term "0,0"))
                        (rule "qeq_literals" (formula "3") (term "0"))
                         (builtin "One Step Simplification" (formula "3"))
                        (rule "true_left" (formula "3"))
                        (rule "inEqSimp_subsumption1" (formula "40") (term "1,1") (ifseqformula "32"))
                        (rule "leq_literals" (formula "40") (term "0,1,1"))
                         (builtin "One Step Simplification" (formula "40"))
                        (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "24"))
                        (rule "leq_literals" (formula "11") (term "0"))
                         (builtin "One Step Simplification" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "elimGcdGeq_antec" (formula "19") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcd=Z(2(#))"))
                        (rule "leq_literals" (formula "19") (term "0,0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                        (rule "mul_literals" (formula "19") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "19") (term "0,0"))
                        (rule "add_literals" (formula "19") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "19") (term "1,0,0"))
                        (rule "add_zero_right" (formula "19") (term "0,0"))
                        (rule "leq_literals" (formula "19") (term "0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "19"))
                        (rule "leq_literals" (formula "9") (term "0"))
                         (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "wellFormedStoreObject" (formula "38") (term "0"))
                         (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "36")))
                        (rule "wellFormedStorePrimitive" (formula "38") (term "0,0"))
                        (rule "wellFormedStorePrimitive" (formula "38") (term "0,0"))
                        (rule "wellFormedStorePrimitive" (formula "38") (term "0,0"))
                        (rule "wellFormedStorePrimitive" (formula "38") (term "0,0"))
                        (rule "wellFormedCreate" (formula "38") (term "0,0"))
                        (rule "replace_known_left" (formula "38") (term "0,0") (ifseqformula "6"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "dismissNonSelectedField" (formula "38") (term "0,0"))
                        (rule "dismissNonSelectedField" (formula "38") (term "0,0"))
                        (rule "dismissNonSelectedField" (formula "38") (term "0,0"))
                        (rule "dismissNonSelectedField" (formula "38") (term "0,0"))
                        (rule "pullOutSelect" (formula "38") (term "0,0") (inst "selectSK=java_lang_Object_created__1"))
                        (rule "simplifySelectOfCreate" (formula "1"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "35")))
                        (rule "castDel" (formula "1") (term "1,0"))
                        (rule "sortsDisjointModuloNull" (formula "1") (term "0,0"))
                        (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "35"))
                         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "37")))
                        (rule "applyEqReverse" (formula "39") (term "0,0") (ifseqformula "1"))
                        (rule "hideAuxiliaryEq" (formula "1"))
                        (rule "replace_known_left" (formula "38") (term "0") (ifseqformula "10"))
                         (builtin "One Step Simplification" (formula "38"))
                        (rule "inEqSimp_leqRight" (formula "38"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "mul_literals" (formula "1") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "1"))
                        (rule "leq_literals" (formula "31") (term "0"))
                         (builtin "One Step Simplification" (formula "31"))
                        (rule "true_left" (formula "31"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "9"))
                        (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                        (rule "mul_literals" (formula "2") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "16"))
                        (rule "polySimp_rightDist" (formula "17") (term "0,0"))
                        (rule "mul_literals" (formula "17") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "17") (term "0"))
                        (rule "add_literals" (formula "17") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                        (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                        (rule "polySimp_elimOne" (formula "17") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "17"))
                        (rule "leq_literals" (formula "10") (term "0"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "18"))
                        (rule "polySimp_mulComm0" (formula "25") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "25") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                        (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                        (rule "polySimp_elimOne" (formula "25") (term "0"))
                        (rule "inEqSimp_subsumption0" (formula "10") (ifseqformula "25"))
                        (rule "leq_literals" (formula "10") (term "0"))
                         (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "17"))
                        (rule "polySimp_mulComm0" (formula "33") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "33") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                        (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                        (rule "polySimp_elimOne" (formula "33") (term "0"))
                        (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "20"))
                        (rule "polySimp_mulAssoc" (formula "22") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "22") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                        (rule "elimGcdLeq_antec" (formula "22") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcd=Z(2(#))"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                        (rule "neg_literal" (formula "22") (term "0,0,0,0,0,1,0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,0,1,0"))
                        (rule "leq_literals" (formula "22") (term "0,0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                        (rule "polySimp_addLiterals" (formula "22") (term "0,0,0,0"))
                        (rule "add_literals" (formula "22") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                        (rule "add_literals" (formula "22") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "22") (term "1,0,0"))
                        (rule "add_literals" (formula "22") (term "0,0"))
                        (rule "qeq_literals" (formula "22") (term "0"))
                         (builtin "One Step Simplification" (formula "22"))
                        (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "22"))
                        (rule "leq_literals" (formula "15") (term "0"))
                         (builtin "One Step Simplification" (formula "15"))
                        (rule "true_left" (formula "15"))
                        (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "33"))
                        (rule "polySimp_mulComm0" (formula "32") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "32") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "32"))
                        (rule "polySimp_mulLiterals" (formula "32") (term "0"))
                        (rule "polySimp_elimOne" (formula "32") (term "0"))
                        (rule "inEqSimp_contradInEq1" (formula "32") (ifseqformula "1"))
                        (rule "qeq_literals" (formula "32") (term "0"))
                         (builtin "One Step Simplification" (formula "32"))
                        (rule "closeFalse" (formula "32"))
                     )
                  )
                  (branch "Null Reference (var = null)"
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                     (rule "closeFalse" (formula "1"))
                  )
                  (branch "Index Out of Bounds (var != null, but bucket Out of Bounds!)"
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")))
                      (builtin "One Step Simplification" (formula "44"))
                     (rule "false_right" (formula "44"))
                     (rule "inEqSimp_ltToLeq" (formula "5") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "1") (term "1"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "1") (term "0,0,1"))
                     (rule "inEqSimp_homoInEq0" (formula "5") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "5") (term "1,1,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "0,1,0,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "5") (term "0,0,1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "0,0,0,1,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "0,0,1,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "5") (term "0,0,1,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "5") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "1,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,1,0"))
                     (rule "polySimp_elimOne" (formula "5") (term "1,1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "5") (term "0,1,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "5") (term "0,0,1,1,1,0"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "3"))
                     (rule "qeq_literals" (formula "1") (term "0,1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                     (rule "add_literals" (formula "4") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "qeq_literals" (formula "4") (term "0"))
                      (builtin "One Step Simplification" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "25"))
                     (rule "leq_literals" (formula "24") (term "0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "26"))
                     (rule "leq_literals" (formula "12") (term "0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "15"))
                     (rule "leq_literals" (formula "17") (term "0"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "true_left" (formula "17"))
                     (rule "elimGcdGeq_antec" (formula "20") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcd=Z(2(#))"))
                     (rule "leq_literals" (formula "20") (term "0,0"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "20") (term "1,0,0,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0"))
                     (rule "leq_literals" (formula "20") (term "0"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "20"))
                     (rule "leq_literals" (formula "10") (term "0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "20"))
                     (rule "polySimp_mulAssoc" (formula "22") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "22") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "22") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,0,1,0"))
                     (rule "neg_literal" (formula "22") (term "0,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "1,0,0,0,0,1,0"))
                     (rule "leq_literals" (formula "22") (term "0,0"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "mul_literals" (formula "22") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "22") (term "0,0,0,0"))
                     (rule "add_literals" (formula "22") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "22") (term "0,0"))
                     (rule "add_literals" (formula "22") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "22") (term "1,0,0"))
                     (rule "add_zero_right" (formula "22") (term "0,0"))
                     (rule "qeq_literals" (formula "22") (term "0"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "22"))
                     (rule "leq_literals" (formula "9") (term "0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "14"))
                     (rule "polySimp_rightDist" (formula "15") (term "0,0"))
                     (rule "mul_literals" (formula "15") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0"))
                     (rule "add_literals" (formula "15") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                     (rule "polySimp_elimOne" (formula "15") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "15") (ifseqformula "22"))
                     (rule "leq_literals" (formula "15") (term "0"))
                      (builtin "One Step Simplification" (formula "15"))
                     (rule "true_left" (formula "15"))
                     (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "16"))
                     (rule "polySimp_mulComm0" (formula "33") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "33") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "33"))
                     (rule "polySimp_mulLiterals" (formula "33") (term "0"))
                     (rule "polySimp_elimOne" (formula "33") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "16"))
                     (rule "polySimp_mulComm0" (formula "24") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "24") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                     (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                     (rule "polySimp_elimOne" (formula "24") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "9") (ifseqformula "24"))
                     (rule "leq_literals" (formula "9") (term "0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "true_left" (formula "9"))
                     (rule "inEqSimp_exactShadow3" (formula "12") (ifseqformula "1"))
                     (rule "mul_literals" (formula "12") (term "0,0"))
                     (rule "add_zero_left" (formula "12") (term "0"))
                     (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "1"))
                     (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                     (rule "mul_literals" (formula "14") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                     (rule "polySimp_elimOne" (formula "14") (term "0"))
                     (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "2"))
                     (rule "andLeft" (formula "14"))
                     (rule "inEqSimp_homoInEq1" (formula "14"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "14") (term "0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                     (rule "add_literals" (formula "14") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                     (rule "add_literals" (formula "14") (term "1,1,0"))
                     (rule "times_zero_1" (formula "14") (term "1,0"))
                     (rule "add_zero_right" (formula "14") (term "0"))
                     (rule "leq_literals" (formula "14"))
                     (rule "closeFalse" (formula "14"))
                  )
               )
            )
         )
         (branch "if x_2 false"
             (builtin "One Step Simplification" (formula "39"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "notLeft" (formula "1"))
            (rule "blockBreak" (formula "39") (term "1"))
            (rule "lsBreak" (formula "39") (term "1"))
            (rule "assignment" (formula "39") (term "1"))
             (builtin "One Step Simplification" (formula "39"))
            (rule "methodCallEmpty" (formula "39") (term "1"))
            (rule "blockEmpty" (formula "39") (term "1"))
            (rule "assignment_write_attribute" (formula "39"))
            (branch "Normal Execution (self_25 != null)"
                (builtin "One Step Simplification" (formula "39"))
               (rule "tryEmpty" (formula "39") (term "1"))
               (rule "emptyModality" (formula "39") (term "1"))
               (rule "andRight" (formula "39"))
               (branch "Case 1"
                  (rule "impRight" (formula "39"))
                  (rule "andRight" (formula "40"))
                  (branch "Case 1"
                      (builtin "One Step Simplification" (formula "40"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "inEqSimp_ltRight" (formula "33"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "4") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,1,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,1,0,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "4") (term "0,0,1,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "0,0,0,1,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "0,0,1,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "0,0,1,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0,0,1,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "4") (term "0,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,0,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "4") (term "1,1,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "1,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "4") (term "1,1,1,1,0"))
                     (rule "polySimp_elimOne" (formula "4") (term "1,1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "4") (term "0,1,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,1,1,0"))
                     (rule "inEqSimp_subsumption1" (formula "24") (ifseqformula "25"))
                     (rule "leq_literals" (formula "24") (term "0"))
                      (builtin "One Step Simplification" (formula "24"))
                     (rule "true_left" (formula "24"))
                     (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "16"))
                     (rule "leq_literals" (formula "18") (term "0"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "25"))
                     (rule "leq_literals" (formula "12") (term "0"))
                      (builtin "One Step Simplification" (formula "12"))
                     (rule "true_left" (formula "12"))
                     (rule "elimGcdGeq_antec" (formula "20") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=num_buckets") (inst "elimGcd=Z(2(#))"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "20") (term "0,0"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0"))
                     (rule "leq_literals" (formula "20") (term "0"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "20"))
                     (rule "leq_literals" (formula "10") (term "0"))
                      (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq0" (formula "1"))
                     (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                     (rule "add_literals" (formula "1") (term "1,0"))
                     (rule "times_zero_1" (formula "1") (term "0"))
                     (rule "qeq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "4") (term "0,1,2,1,0,0,0,0,1,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "27") (term "1,1,0,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "4") (term "3,0,0,0,0,0,1,0,0,1,1,0") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "4") (term "1,1,0"))
                     (rule "polySimp_addComm1" (formula "4") (term "0,1,1,0"))
                     (rule "applyEq" (formula "22") (term "0,1") (ifseqformula "2"))
                     (rule "applyEq" (formula "17") (term "0,2,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "4") (term "0,1,2,1,0,0,1,0,1,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "35") (term "3,0,0,0,0,0,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "9") (term "0") (ifseqformula "2"))
                     (rule "applyEq" (formula "35") (term "0,1,2,1,0,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "4") (term "3,0,0,0,0,0,0,1,0,1,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "2"))
                     (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "3"))
                     (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "1,0"))
                     (rule "times_zero_1" (formula "3") (term "0"))
                     (rule "leq_literals" (formula "3"))
                     (rule "true_left" (formula "3"))
                     (rule "applyEq" (formula "18") (term "0") (ifseqformula "2"))
                     (rule "applyEq" (formula "3") (term "3,0,0,0,0,0,0,0,0,1,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "22") (term "0,2,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "12") (term "1,3,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "3") (term "3,0,0,0,0,0,1,0,1,1,0") (ifseqformula "2"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,1,1,0"))
                     (rule "applyEq" (formula "3") (term "0,1,2,1,0,1,0,0,1,0,1,1,0") (ifseqformula "2"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,1,1,0"))
                     (rule "applyEq" (formula "3") (term "0,1,2,1,0,1,0,1,1,0") (ifseqformula "2"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,1,1,0"))
                     (rule "applyEq" (formula "25") (term "3,0,0,0,1,1,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "3") (term "0,1,2,1,0,0,0,0,0,1,0,1,1,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "3") (term "3,0,0,0,0,0,0,0,0,0,1,0,1,1,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "3") (term "0,1,2,1,0,0,1,0,0,0,1,1,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "3") (term "3,0,0,0,0,0,0,1,0,0,0,1,1,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "3") (term "3,0,0,0,0,0,0,0,0,0,0,1,1,0") (ifseqformula "2"))
                     (rule "applyEq" (formula "3") (term "0,1,2,1,0,0,0,0,0,0,1,1,0") (ifseqformula "2"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0,1,1,0"))
                     (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "18"))
                     (rule "polySimp_mulAssoc" (formula "20") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "20") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "20") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                     (rule "elimGcdLeq_antec" (formula "20") (inst "elimGcdRightDiv=Z(3(8(3(6(1(#))))))") (inst "elimGcdLeftDiv=bucket_0") (inst "elimGcd=Z(2(#))"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "20") (term "0,0"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "neg_literal" (formula "20") (term "0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "20") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "20") (term "0,0,0,0"))
                     (rule "add_literals" (formula "20") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0"))
                     (rule "qeq_literals" (formula "20") (term "0"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "20"))
                     (rule "leq_literals" (formula "8") (term "0"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "13"))
                     (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                     (rule "mul_literals" (formula "14") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "14") (term "0"))
                     (rule "add_literals" (formula "14") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                     (rule "polySimp_elimOne" (formula "14") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "14") (ifseqformula "20"))
                     (rule "leq_literals" (formula "14") (term "0"))
                      (builtin "One Step Simplification" (formula "14"))
                     (rule "true_left" (formula "14"))
                     (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "15"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "22") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                     (rule "polySimp_elimOne" (formula "22") (term "0"))
                     (rule "inEqSimp_subsumption0" (formula "8") (ifseqformula "22"))
                     (rule "leq_literals" (formula "8") (term "0"))
                      (builtin "One Step Simplification" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "inEqSimp_and_subsumption2" (formula "25") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "25") (term "0,0,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "25"))
                     (rule "inEqSimp_and_subsumption3" (formula "3") (term "0,0,0"))
                     (rule "leq_literals" (formula "3") (term "0,1,0,0,0,0"))
                      (builtin "One Step Simplification" (formula "3"))
                     (rule "nnf_imp2or" (formula "25") (term "0"))
                     (rule "nnf_imp2or" (formula "3") (term "0"))
                     (rule "nnf_notAnd" (formula "25") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                     (rule "nnf_notAnd" (formula "3") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "3") (term "1,0,0"))
                     (rule "mul_literals" (formula "3") (term "1,0,0,1,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "1,0,0"))
                     (rule "mul_literals" (formula "3") (term "1,1,0,0"))
                     (rule "nnf_notAnd" (formula "25") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,0"))
                     (rule "times_zero_1" (formula "25") (term "1,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "25") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,0"))
                     (rule "mul_literals" (formula "25") (term "1,0,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "25") (term "1,0,0,1,0,0,0"))
                     (rule "add_literals" (formula "25") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "25") (term "1,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "3") (term "0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "3") (term "1,0,0,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0,0,1,0,0,0"))
                     (rule "add_zero_right" (formula "3") (term "0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "3") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "3") (term "1,1,0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0,0,0"))
                     (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "3") (term "0,0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "3") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1,0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "1,0,0,0,0"))
                     (rule "Definition_axiom_for_isSortedSeqTransitive_in_de_wiesler_Functions" (formula "27") (term "0") (inst "i=i") (inst "j=j"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "expand_inInt" (formula "27") (term "1,0,0"))
                     (rule "expand_inInt" (formula "27") (term "1,0,0,1,0"))
                     (rule "replace_int_MIN" (formula "27") (term "0,1,1,0,0"))
                     (rule "replace_int_MAX" (formula "27") (term "1,0,1,0,0"))
                     (rule "replace_int_MIN" (formula "27") (term "0,1,1,0,0,1,0"))
                     (rule "replace_int_MAX" (formula "27") (term "1,0,1,0,0,1,0"))
                     (rule "translateJavaCastInt" (formula "27") (term "1,1,0,1,0"))
                     (rule "translateJavaCastInt" (formula "27") (term "0,1,0,1,0"))
                     (rule "castedGetAny" (formula "27") (term "1,1,0,1,0"))
                     (rule "castedGetAny" (formula "27") (term "0,1,0,1,0"))
                     (rule "lenOfSeqDefEQ" (formula "27") (term "1,1,0,0,0,1,0") (ifseqformula "26"))
                     (rule "polySimp_elimSub" (formula "27") (term "1,1,1,0,0,0,1,0"))
                     (rule "times_zero_2" (formula "27") (term "1,1,1,1,0,0,0,1,0"))
                     (rule "add_zero_right" (formula "27") (term "1,1,1,0,0,0,1,0"))
                     (rule "lenOfSeqDefEQ" (formula "27") (term "1,1,0,0,0") (ifseqformula "26"))
                     (rule "polySimp_elimSub" (formula "27") (term "1,1,1,0,0,0"))
                     (rule "times_zero_2" (formula "27") (term "1,1,1,1,0,0,0"))
                     (rule "add_zero_right" (formula "27") (term "1,1,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "27") (term "1,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "27") (term "1,1,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "27") (term "1,0,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0,1,0,0,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "27") (term "1,0,0,0,1,0,0,1,0,0,0,1,0"))
                     (rule "add_zero_right" (formula "27") (term "0,0,0,1,0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0,1,0,0,1,0,0,0"))
                     (rule "times_zero_2" (formula "27") (term "1,0,0,0,1,0,0,1,0,0,0"))
                     (rule "add_zero_right" (formula "27") (term "0,0,0,1,0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,1,0,0,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "27") (term "1,0,0,1,0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0,0,1,0,0,1,0,0,0"))
                     (rule "mul_literals" (formula "27") (term "1,0,0,1,0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,0"))
                     (rule "inEqSimp_subsumption1" (formula "27") (term "0,1,1,1,0,0,0,1,0") (ifseqformula "1"))
                     (rule "leq_literals" (formula "27") (term "0,0,1,1,1,0,0,0,1,0"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "polySimp_addAssoc" (formula "27") (term "1,1,0,0,0,1,0"))
                     (rule "add_literals" (formula "27") (term "0,1,1,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "27") (term "1,1,0,0,0,1,0"))
                     (rule "inEqSimp_subsumption1" (formula "27") (term "0,1,1,1,0,0,0") (ifseqformula "1"))
                     (rule "leq_literals" (formula "27") (term "0,0,1,1,1,0,0,0"))
                      (builtin "One Step Simplification" (formula "27"))
                     (rule "polySimp_addAssoc" (formula "27") (term "1,1,0,0,0"))
                     (rule "add_literals" (formula "27") (term "0,1,1,0,0,0"))
                     (rule "add_zero_left" (formula "27") (term "1,1,0,0,0"))
                     (rule "getOfSeqDefEQ" (formula "27") (term "1,1,0,1,0") (ifseqformula "26"))
                     (rule "add_zero_right" (formula "27") (term "0,2,0,1,1,1,0,1,0"))
                     (rule "polySimp_elimSub" (formula "27") (term "1,1,0,1,1,0,1,0"))
                     (rule "times_zero_2" (formula "27") (term "1,1,1,0,1,1,0,1,0"))
                     (rule "add_zero_right" (formula "27") (term "1,1,0,1,1,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,1,1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,1,1,0,1,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,1,1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,1,1,0,1,0"))
                     (rule "add_literals" (formula "27") (term "0,0,0,1,0,1,1,0,1,0"))
                     (rule "add_zero_left" (formula "27") (term "0,0,1,0,1,1,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,1,1,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,1,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,1,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,1,0,1,1,0,1,0"))
                     (rule "getOfSeqDefEQ" (formula "27") (term "0,1,0,1,0") (ifseqformula "26"))
                     (rule "add_zero_right" (formula "27") (term "0,2,0,1,0,1,0,1,0"))
                     (rule "polySimp_elimSub" (formula "27") (term "1,1,0,0,1,0,1,0"))
                     (rule "times_zero_2" (formula "27") (term "1,1,1,0,0,1,0,1,0"))
                     (rule "add_zero_right" (formula "27") (term "1,1,0,0,1,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "27") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1,0,1,0"))
                     (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1,0,1,0"))
                     (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1,0,1,0"))
                     (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,1,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0,1,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0,0,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,1,0,1,0"))
                     (rule "Definition_axiom_for_isBlockAligned_in_de_wiesler_Buffers" (formula "23") (term "0"))
                      (builtin "One Step Simplification" (formula "23"))
                     (rule "translateJavaMod" (formula "23") (term "0"))
                     (rule "jmod_axiom" (formula "23") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "1,0"))
                     (rule "polySimp_sepNegMonomial" (formula "23"))
                     (rule "polySimp_mulLiterals" (formula "23") (term "0"))
                     (rule "newSym_eq" (formula "23") (inst "l=l_0") (inst "newSymDef=mul(first_empty_position, Z(0(#)))"))
                     (rule "times_zero_1" (formula "23") (term "1,1"))
                     (rule "add_zero_right" (formula "23") (term "1"))
                     (rule "applyEq" (formula "24") (term "0,0") (ifseqformula "23"))
                     (rule "eqSymm" (formula "24"))
                     (rule "applyEq" (formula "22") (term "1") (ifseqformula "24"))
                     (rule "applyEq" (formula "23") (term "0,0") (ifseqformula "24"))
                     (rule "applyEq" (formula "3") (term "3,0,0,0,0,1,1,1,1,0") (ifseqformula "24"))
                     (rule "inEqSimp_homoInEq1" (formula "3") (term "1,1,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,1,1,0"))
                     (rule "applyEq" (formula "3") (term "3,0,0,0,0,0,1,0,1,0") (ifseqformula "24"))
                     (rule "applyEq" (formula "34") (term "3,0,0,0,0,0") (ifseqformula "24"))
                     (rule "applyEq" (formula "20") (term "0") (ifseqformula "24"))
                     (rule "applyEq" (formula "21") (term "0") (ifseqformula "24"))
                     (rule "applyEq" (formula "3") (term "3,0,0,0,0,0,0,0,1,0") (ifseqformula "24"))
                     (rule "applyEq" (formula "26") (term "3,0,0,1,1,0") (ifseqformula "24"))
                     (rule "applyEq" (formula "3") (term "3,0,0,0,0,1,0,0,1,0,0,1,1,0") (ifseqformula "24"))
                     (rule "polySimp_addComm1" (formula "3") (term "0,1,1,0"))
                     (rule "applyEq" (formula "3") (term "3,0,0,0,0,0,0,0,0,1,0,1,1,0") (ifseqformula "24"))
                     (rule "applyEq" (formula "3") (term "3,0,0,0,0,0,1,0,0,0,1,1,0") (ifseqformula "24"))
                     (rule "applyEq" (formula "3") (term "3,0,0,0,0,0,0,0,0,0,1,1,0") (ifseqformula "24"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0,1,1,0"))
                     (rule "elimGcdLeq_antec" (formula "21") (inst "elimGcdRightDiv=Z(7(0(6(8(8(3(8(#))))))))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                     (rule "leq_literals" (formula "21") (term "0,0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "neg_literal" (formula "21") (term "0,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0"))
                     (rule "mul_literals" (formula "21") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addLiterals" (formula "21") (term "0,0,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "21") (term "0,0"))
                     (rule "add_literals" (formula "21") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,0"))
                     (rule "qeq_literals" (formula "21") (term "0"))
                      (builtin "One Step Simplification" (formula "21"))
                     (rule "elimGcdGeq_antec" (formula "20") (inst "elimGcdRightDiv=Z(0(#))") (inst "elimGcdLeftDiv=l_0") (inst "elimGcd=Z(6(5(2(#))))"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,0,1,0"))
                     (rule "leq_literals" (formula "20") (term "0,0"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0,0,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                     (rule "polySimp_pullOutFactor0b" (formula "20") (term "0,0"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0"))
                     (rule "leq_literals" (formula "20") (term "0"))
                      (builtin "One Step Simplification" (formula "20"))
                     (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "14"))
                     (rule "polySimp_mulAssoc" (formula "22") (term "0,0"))
                     (rule "polySimp_mulComm0" (formula "22") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "22") (term "0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                     (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                     (rule "inEqSimp_subsumption4" (formula "22") (ifseqformula "21"))
                     (rule "greater_literals" (formula "22") (term "0,0"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "mul_literals" (formula "22") (term "0,0"))
                     (rule "leq_literals" (formula "22") (term "0"))
                      (builtin "One Step Simplification" (formula "22"))
                     (rule "true_left" (formula "22"))
                     (rule "nnf_imp2or" (formula "28") (term "0"))
                     (rule "nnf_notAnd" (formula "28") (term "0,0"))
                     (rule "nnf_imp2or" (formula "28") (term "0,1,0"))
                     (rule "nnf_notAnd" (formula "28") (term "0,0,0"))
                     (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,0"))
                     (rule "times_zero_1" (formula "28") (term "1,0,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "28") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,0"))
                     (rule "mul_literals" (formula "28") (term "1,0,0,0,0"))
                     (rule "nnf_notAnd" (formula "28") (term "1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "28") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "28") (term "1,0,0,1,1,0,0"))
                     (rule "add_literals" (formula "28") (term "0,0,1,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "28") (term "1,1,1,0,0"))
                     (rule "inEqSimp_notLeq" (formula "28") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "28") (term "1,0,0,0,1,0,0"))
                     (rule "add_literals" (formula "28") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,1,0,0"))
                     (rule "mul_literals" (formula "28") (term "1,0,1,0,0"))
                     (rule "nnf_notAnd" (formula "28") (term "0,0,1,0"))
                     (rule "nnf_notAnd" (formula "28") (term "0,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,1,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,0,1,0"))
                     (rule "nnf_notAnd" (formula "28") (term "1,0,0,1,0"))
                     (rule "inEqSimp_notLeq" (formula "28") (term "0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "28") (term "1,0,0,0,1,0,0,1,0"))
                     (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,1,0,0,1,0"))
                     (rule "mul_literals" (formula "28") (term "1,0,1,0,0,1,0"))
                     (rule "inEqSimp_notGeq" (formula "28") (term "1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "28") (term "1,0,0,1,1,0,0,1,0"))
                     (rule "add_literals" (formula "28") (term "0,0,1,1,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,1,0,0,1,0"))
                     (rule "mul_literals" (formula "28") (term "1,1,1,0,0,1,0"))
                     (rule "Definition_axiom_for_bucketSize_in_de_wiesler_BucketPointers" (formula "3") (term "0,0,0,1,1,1,0"))
                     (rule "translateJavaSubInt" (formula "3") (term "0,0,0,1,1,1,0"))
                     (rule "translateJavaAddInt" (formula "3") (term "2,0,0,0,0,1,1,1,0"))
                     (rule "polySimp_elimSub" (formula "3") (term "0,0,0,1,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "0,0,1,1,1,0"))
                     (rule "polySimp_addComm0" (formula "3") (term "1,0,0,1,1,1,0"))
                     (rule "polySimp_addComm0" (formula "3") (term "2,1,1,0,0,1,1,1,0"))
                     (rule "polySimp_rightDist" (formula "3") (term "0,0,1,1,1,0"))
                     (rule "polySimp_mulAssoc" (formula "3") (term "0,0,0,1,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "3") (term "0,0,0,0,1,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,1,1,1,0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0,0,0,1,1,1,0"))
                     (rule "Definition_axiom_for_bucketStart_in_de_wiesler_BucketPointers" (formula "26") (term "1,1,0"))
                     (rule "translateJavaCastInt" (formula "26") (term "0,1,1,0"))
                     (rule "eqSymm" (formula "26") (term "1,0"))
                     (rule "castedGetAny" (formula "26") (term "0,0,1,0"))
                     (rule "eqSymm" (formula "26") (term "1,0"))
                     (rule "pullOutSelect" (formula "26") (term "0,0,1,1,0") (inst "selectSK=de_wiesler_BucketPointers_bucket_starts_1"))
                     (rule "simplifySelectOfStore" (formula "26"))
                      (builtin "One Step Simplification" (formula "26"))
                     (rule "castDel" (formula "26") (term "0"))
                     (rule "applyEqReverse" (formula "27") (term "0,0,1,1,0") (ifseqformula "26"))
                     (rule "hideAuxiliaryEq" (formula "26"))
                     (rule "getOfSeqDefEQ" (formula "26") (term "0,1,1,0") (ifseqformula "27"))
                     (rule "add_zero_right" (formula "26") (term "0,2,0,1,0,1,1,0"))
                     (rule "eqSymm" (formula "26") (term "1,0"))
                     (rule "polySimp_elimSub" (formula "26") (term "1,1,0,0,0,1,0"))
                     (rule "times_zero_2" (formula "26") (term "1,1,1,0,0,0,1,0"))
                     (rule "add_zero_right" (formula "26") (term "1,1,0,0,0,1,0"))
                     (rule "inEqSimp_ltToLeq" (formula "26") (term "1,0,0,0,1,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0,0,0,1,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0,0,0,1,0"))
                     (rule "add_literals" (formula "26") (term "0,0,0,1,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "26") (term "0,0,1,0,0,0,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,0,1,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1,0"))
                     (rule "Class_invariant_axiom_for_de_wiesler_BucketPointers" (formula "34"))
                     (rule "notRight" (formula "34"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0"))
                     (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_wiesler_BucketPointers_buffer_1"))
                     (rule "simplifySelectOfAnon" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "32")))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                     (rule "dismissNonSelectedField" (formula "1") (term "0,0,1,0,0"))
                     (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                     (rule "ifEqualsNull" (formula "1"))
                     (rule "elementOfArrayRange" (formula "1") (term "0,0,0,1") (inst "iv=iv"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "pullOutSelect" (formula "1") (term "0,0,0,0") (inst "selectSK=java_lang_Object_created__0"))
                     (rule "applyEq" (formula "2") (term "0,0,1") (ifseqformula "1"))
                     (rule "simplifySelectOfCreate" (formula "1"))
                      (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "33")))
                     (rule "castDel" (formula "1") (term "0"))
                     (rule "applyEqReverse" (formula "2") (term "0,0,0,0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "andLeft" (formula "2"))
                     (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=de_wiesler_BucketPointers_buffer_2"))
                     (rule "simplifySelectOfStore" (formula "1"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "castDel" (formula "1") (term "0"))
                     (rule "applyEqReverse" (formula "2") (term "0") (ifseqformula "1"))
                     (rule "close" (formula "35") (ifseqformula "2"))
                  )
                  (branch "Case 2"
                      (builtin "One Step Simplification" (formula "1"))
                      (builtin "One Step Simplification" (formula "40"))
                     (rule "closeTrue" (formula "40"))
                  )
               )
               (branch "Case 2"
                  (rule "impRight" (formula "39"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
            )
            (branch "Null Reference (self_25 = null)"
               (rule "false_right" (formula "40"))
                (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "36")))
               (rule "closeFalse" (formula "1"))
            )
         )
      )
   )
)
)
}
