\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Thu Jun 02 20:14:26 CEST 2022
[NewSMT]NoTypeHierarchy=false
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[NewSMT]Presburger=false
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:on , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , finalFields-finalFields\\:onHeap , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsCheckingOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INV_TACLET
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_DELAYED
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[NewSMT]sqrtSMTTranslation=SMT
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[NewSMT]identifier=OPEN
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[NewSMT]Axiomatisations=false
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "../src";

\proofObligation "#Proof Obligation Settings
#Thu Jun 02 20:14:26 CEST 2022
contract=de.wiesler.Storage[de.wiesler.Storage\\:\\:createArray(int)].JML normal_behavior operation contract.0
name=de.wiesler.Storage[de.wiesler.Storage\\:\\:createArray(int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Julian" ) (keyVersion "e1a85b31e7"))

(autoModeTime "184")

(branch "dummy ID"
 (builtin "One Step Simplification" (formula "1") (newnames "heapAtPre_0,o,f"))
(rule "expand_inInt" (formula "1") (term "1,0,0,0"))
(rule "replace_int_MIN" (formula "1") (term "0,1,1,0,0,0"))
(rule "replace_int_MAX" (formula "1") (term "1,0,1,0,0,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "inEqSimp_commuteLeq" (formula "3"))
(rule "assignment" (formula "6") (term "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "methodBodyExpand" (formula "6") (term "1") (newnames "heapBefore_createArray,savedHeapBefore_createArray"))
 (builtin "One Step Simplification" (formula "6"))
(rule "returnUnfold" (formula "6") (term "1") (inst "#v0=x_arr"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "x_arr"))
(rule "arrayCreation" (formula "6") (term "1") (inst "#v0=x_arr_1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "x_arr_1"))
(rule "variableDeclarationAssign" (formula "6") (term "1"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "dim0"))
(rule "assignment" (formula "6") (term "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "ifUnfold" (formula "6") (term "1") (inst "#boolv=x"))
(rule "variableDeclaration" (formula "6") (term "1") (newnames "x"))
(rule "less_than_comparison_simple" (formula "6") (term "1"))
 (builtin "One Step Simplification" (formula "6"))
(rule "ifSplit" (formula "6"))
(branch "if x true"
    (builtin "One Step Simplification" (formula "7"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "blockThrow" (formula "7") (term "1"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "throwUnfold" (formula "7") (term "1") (inst "#v0=n"))
   (rule "variableDeclarationAssign" (formula "7") (term "1"))
   (rule "variableDeclaration" (formula "7") (term "1") (newnames "n"))
   (rule "instanceCreationAssignment" (formula "7") (term "1") (inst "#v0=n_1"))
   (rule "variableDeclarationAssign" (formula "7") (term "1"))
   (rule "variableDeclaration" (formula "7") (term "1") (newnames "n_1"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "7") (term "1") (inst "#v0=n_2"))
   (rule "variableDeclaration" (formula "7") (term "1") (newnames "n_2"))
   (rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<createObject>,savedHeapBefore_<createObject>"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "variableDeclaration" (formula "7") (term "1") (newnames "__NEW__"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "7") (term "1") (inst "#v0=n_3"))
   (rule "variableDeclaration" (formula "7") (term "1") (newnames "n_3"))
   (rule "allocateInstance" (formula "7"))
    (builtin "One Step Simplification" (formula "8"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "3")))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "blockEmpty" (formula "10") (term "1"))
   (rule "assignment" (formula "10") (term "1"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_<create>,savedHeapBefore_<create>"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "assignment_write_attribute_this" (formula "10"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "methodCallWithinClass" (formula "10") (term "1"))
   (rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_<prepareEnter>,savedHeapBefore_<prepareEnter>"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "methodCallSuper" (formula "10") (term "1"))
   (rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "methodCallSuper" (formula "10") (term "1"))
   (rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_<prepare>_0,savedHeapBefore_<prepare>_0"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "methodCallSuper" (formula "10") (term "1"))
   (rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_<prepare>_1,savedHeapBefore_<prepare>_1"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "methodCallSuper" (formula "10") (term "1"))
   (rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_<prepare>_2,savedHeapBefore_<prepare>_2"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "methodCallEmpty" (formula "10") (term "1"))
   (rule "blockEmpty" (formula "10") (term "1"))
   (rule "assignment_write_attribute_this" (formula "10"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "assignment_write_attribute_this" (formula "10"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "methodCallEmpty" (formula "10") (term "1"))
   (rule "methodCallEmpty" (formula "10") (term "1"))
   (rule "methodCallEmpty" (formula "10") (term "1"))
   (rule "methodCallEmpty" (formula "10") (term "1"))
   (rule "blockEmpty" (formula "10") (term "1"))
   (rule "methodCallReturnIgnoreResult" (formula "10") (term "1"))
   (rule "methodCallReturn" (formula "10") (term "1"))
   (rule "assignment" (formula "10") (term "1"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "methodCallEmpty" (formula "10") (term "1"))
   (rule "blockEmpty" (formula "10") (term "1"))
   (rule "assignment" (formula "10") (term "1"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_<init>,savedHeapBefore_<init>"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "methodCallSuper" (formula "10") (term "1"))
   (rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_<init>_0,savedHeapBefore_<init>_0"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "methodCallSuper" (formula "10") (term "1"))
   (rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_<init>_1,savedHeapBefore_<init>_1"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "methodCallSuper" (formula "10") (term "1"))
   (rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_<init>_2,savedHeapBefore_<init>_2"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "methodCallSuper" (formula "10") (term "1"))
   (rule "methodBodyExpand" (formula "10") (term "1") (newnames "heapBefore_<init>_3,savedHeapBefore_<init>_3"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "methodCallEmpty" (formula "10") (term "1"))
   (rule "blockEmpty" (formula "10") (term "1"))
   (rule "assignment_write_attribute_this" (formula "10"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "assignment_write_attribute_this" (formula "10"))
    (builtin "One Step Simplification" (formula "10"))
   (rule "methodCallEmpty" (formula "10") (term "1"))
   (rule "methodCallEmpty" (formula "10") (term "1"))
   (rule "methodCallEmpty" (formula "10") (term "1"))
   (rule "methodCallEmpty" (formula "10") (term "1"))
   (rule "blockEmpty" (formula "10") (term "1"))
   (rule "assignment_write_attribute" (formula "10"))
   (branch "Normal Execution (n_1 != null)"
       (builtin "One Step Simplification" (formula "10"))
      (rule "assignment" (formula "10") (term "1"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "methodCallParamThrow" (formula "10") (term "1"))
      (rule "tryCatchThrow" (formula "10") (term "1"))
      (rule "ifElseUnfold" (formula "10") (term "1") (inst "#boolv=x"))
      (rule "variableDeclaration" (formula "10") (term "1") (newnames "x_1"))
      (rule "equality_comparison_simple" (formula "10") (term "1"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "replace_known_right" (formula "10") (term "0,0,1,0") (ifseqformula "9"))
       (builtin "One Step Simplification" (formula "10"))
      (rule "ifElseSplit" (formula "10"))
      (branch "if x_1 true"
          (builtin "One Step Simplification" (formula "11"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
      (branch "if x_1 false"
          (builtin "One Step Simplification" (formula "11"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "elim_double_block" (formula "10") (term "1"))
         (rule "ifElseSplit" (formula "10"))
         (branch "if n instanceof java.lang.Throwable true"
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
            (rule "true_left" (formula "1"))
            (rule "variableDeclaration" (formula "10") (term "1") (newnames "e"))
            (rule "delete_unnecessary_cast" (formula "10") (term "1"))
             (builtin "One Step Simplification" (formula "11"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "assignment" (formula "10") (term "1"))
             (builtin "One Step Simplification" (formula "10"))
            (rule "emptyModality" (formula "10") (term "1"))
            (rule "andRight" (formula "10"))
            (branch
                (builtin "One Step Simplification" (formula "10"))
               (rule "notRight" (formula "10"))
               (rule "inEqSimp_ltToLeq" (formula "3"))
               (rule "times_zero_1" (formula "3") (term "1,0,0"))
               (rule "add_zero_right" (formula "3") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
               (rule "mul_literals" (formula "3") (term "1"))
               (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "3"))
               (rule "leq_literals" (formula "5") (term "0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "7"))
               (rule "leq_literals" (formula "5") (term "0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "3"))
               (rule "qeq_literals" (formula "6") (term "0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "closeFalse" (formula "6"))
            )
            (branch
                (builtin "One Step Simplification" (formula "10") (ifInst ""  (formula "9")))
               (rule "false_right" (formula "10"))
               (rule "inEqSimp_ltToLeq" (formula "2"))
               (rule "times_zero_1" (formula "2") (term "1,0,0"))
               (rule "add_zero_right" (formula "2") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "7"))
               (rule "leq_literals" (formula "5") (term "0"))
                (builtin "One Step Simplification" (formula "5"))
               (rule "true_left" (formula "5"))
               (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "2"))
               (rule "qeq_literals" (formula "6") (term "0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "closeFalse" (formula "6"))
            )
         )
         (branch "if n instanceof java.lang.Throwable false"
             (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
   (branch "Null Reference (n_1 = null)"
      (rule "false_right" (formula "11"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "10")))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "if x false"
    (builtin "One Step Simplification" (formula "7"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "7") (term "1") (inst "#v0=x_arr_2"))
   (rule "variableDeclaration" (formula "7") (term "1") (newnames "x_arr_2"))
   (rule "variableDeclarationAssign" (formula "7") (term "1"))
   (rule "variableDeclaration" (formula "7") (term "1") (newnames "length_1"))
   (rule "assignment" (formula "7") (term "1"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_<createArray>,savedHeapBefore_<createArray>"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "variableDeclaration" (formula "7") (term "1") (newnames "newObject"))
   (rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "7") (term "1") (inst "#v0=x_arr_3"))
   (rule "variableDeclaration" (formula "7") (term "1") (newnames "x_arr_3"))
   (rule "variableDeclarationAssign" (formula "7") (term "1"))
   (rule "variableDeclaration" (formula "7") (term "1") (newnames "length_2"))
   (rule "assignment" (formula "7") (term "1"))
    (builtin "One Step Simplification" (formula "7"))
   (rule "allocateInstanceWithLength" (formula "7"))
    (builtin "One Step Simplification" (formula "8"))
    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "2")))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "notLeft" (formula "1"))
   (rule "blockEmpty" (formula "11") (term "1"))
   (rule "assignment" (formula "11") (term "1"))
    (builtin "One Step Simplification" (formula "11"))
   (rule "arrayLengthIsAShort" (formula "1") (term "0"))
   (rule "expand_inShort" (formula "1"))
   (rule "replace_short_MAX" (formula "1") (term "1,0"))
   (rule "replace_short_MIN" (formula "1") (term "0,1"))
   (rule "andLeft" (formula "1"))
   (rule "inEqSimp_commuteLeq" (formula "2"))
   (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
   (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
   (rule "arrayLengthNotNegative" (formula "3") (term "0"))
   (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
   (rule "methodCall" (formula "13"))
   (branch "Normal Execution (newObject != null )"
      (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_<createArrayHelper>,savedHeapBefore_<createArrayHelper>"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "assignment_write_attribute_this" (formula "13"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "methodCallWithinClass" (formula "13") (term "1"))
      (rule "methodBodyExpand" (formula "13") (term "1") (newnames "heapBefore_<prepare>,savedHeapBefore_<prepare>"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "arrayInitialisation" (formula "13") (term "1"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "polySimp_elimSub" (formula "13") (term "2,1,0,1,0"))
      (rule "mul_literals" (formula "13") (term "1,2,1,0,1,0"))
      (rule "polySimp_addComm0" (formula "13") (term "2,1,0,1,0"))
      (rule "applyEq" (formula "13") (term "1,2,1,0,1,0") (ifseqformula "3"))
      (rule "methodCallEmpty" (formula "13") (term "1"))
      (rule "blockEmpty" (formula "13") (term "1"))
      (rule "assignment_write_attribute_this" (formula "13"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "methodCallReturnIgnoreResult" (formula "13") (term "1"))
      (rule "blockEmpty" (formula "13") (term "1"))
      (rule "methodCallReturn" (formula "13") (term "1"))
      (rule "assignment" (formula "13") (term "1"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "methodCallEmpty" (formula "13") (term "1"))
      (rule "blockEmpty" (formula "13") (term "1"))
      (rule "assignment" (formula "13") (term "1"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "blockEmpty" (formula "13") (term "1"))
      (rule "assignment" (formula "13") (term "1"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "methodCallReturn" (formula "13") (term "1"))
      (rule "assignment" (formula "13") (term "1"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "methodCallEmpty" (formula "13") (term "1"))
      (rule "tryEmpty" (formula "13") (term "1"))
       (builtin "One Step Simplification" (formula "13"))
      (rule "emptyModality" (formula "13") (term "1"))
      (rule "andRight" (formula "13"))
      (branch
          (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "11")))
         (rule "closeTrue" (formula "13"))
      )
      (branch
          (builtin "One Step Simplification" (formula "13"))
         (rule "closeTrue" (formula "13"))
      )
   )
   (branch "Null Reference (newObject = null)"
      (rule "false_right" (formula "14"))
       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "12")))
      (rule "closeFalse" (formula "1"))
   )
)
)
}
